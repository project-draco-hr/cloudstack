{
  _shell=shell;
  _resource=resource;
  _link=null;
  resource.setAgentControl(this);
  String value=_shell.getPersistentProperty(getResourceName(),"id");
  _id=value != null ? Long.parseLong(value) : null;
  s_logger.info("id is " + ((_id != null) ? _id : ""));
  final Map<String,Object> params=PropertiesUtil.toMap(_shell.getProperties());
  for (  Map.Entry<String,Object> cmdLineProp : _shell.getCmdLineProperties().entrySet()) {
    params.put(cmdLineProp.getKey(),cmdLineProp.getValue());
  }
  if (!_resource.configure(getResourceName(),params)) {
    throw new ConfigurationException("Unable to configure " + _resource.getName());
  }
  _connection=new NioClient("Agent",_shell.getHost(),_shell.getPort(),_shell.getWorkers(),this);
  s_logger.debug("Adding shutdown hook");
  Runtime.getRuntime().addShutdownHook(new ShutdownThread(this));
  _ugentTaskPool=new ThreadPoolExecutor(shell.getPingRetries(),2 * shell.getPingRetries(),10,TimeUnit.MINUTES,new SynchronousQueue<Runnable>(),new NamedThreadFactory("UgentTask"));
  _executor=new ThreadPoolExecutor(_shell.getWorkers(),5 * _shell.getWorkers(),1,TimeUnit.DAYS,new LinkedBlockingQueue<Runnable>(),new NamedThreadFactory("agentRequest-Handler"));
  s_logger.info("Agent [id = " + (_id != null ? _id : "new") + " : type = "+ getResourceName()+ " : zone = "+ _shell.getZone()+ " : pod = "+ _shell.getPod()+ " : workers = "+ _shell.getWorkers()+ " : host = "+ _shell.getHost()+ " : port = "+ _shell.getPort());
}
