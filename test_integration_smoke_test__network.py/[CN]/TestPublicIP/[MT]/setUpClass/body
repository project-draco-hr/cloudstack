@classmethod
def setUpClass(cls):
    testClient = super(TestPublicIP, cls).getClsTestClient()
    cls.apiclient = testClient.getApiClient()
    cls.services = testClient.getParsedTestDataConfig()
    cls.domain = get_domain(cls.apiclient)
    cls.zone = get_zone(cls.apiclient, cls.getZoneForTests())
    cls.services['mode'] = cls.zone.networktype
    cls.account = Account.create(cls.apiclient, cls.services['account'], admin=True, domainid=cls.domain.id)
    cls.user = Account.create(cls.apiclient, cls.services['account'], domainid=cls.domain.id)
    cls.services['network']['zoneid'] = cls.zone.id
    cls.network_offering = NetworkOffering.create(cls.apiclient, cls.services['network_offering'])
    cls.network_offering.update(cls.apiclient, state='Enabled')
    cls.services['network']['networkoffering'] = cls.network_offering.id
    cls.account_network = Network.create(cls.apiclient, cls.services['network'], cls.account.name, cls.account.domainid)
    cls.user_network = Network.create(cls.apiclient, cls.services['network'], cls.user.name, cls.user.domainid)
    account_src_nat_ip = PublicIPAddress.create(cls.apiclient, cls.account.name, cls.zone.id, cls.account.domainid)
    user_src_nat_ip = PublicIPAddress.create(cls.apiclient, cls.user.name, cls.zone.id, cls.user.domainid)
    cls._cleanup = [cls.account_network, cls.user_network, cls.account, cls.user, cls.network_offering]
    return
