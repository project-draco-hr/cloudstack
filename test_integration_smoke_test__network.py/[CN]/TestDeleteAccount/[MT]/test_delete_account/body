@attr(tags=['advanced', 'advancedns', 'smoke'])
def test_delete_account(self):
    'Test for delete account'
    self.account.delete(self.apiclient)
    interval = list_configurations(self.apiclient, name='account.cleanup.interval')
    self.assertEqual(isinstance(interval, list), True, 'Check if account.cleanup.interval config present')
    time.sleep(int(interval[0].value))
    try:
        list_lb_reponse = list_lb_rules(self.apiclient, account=self.account.name, domainid=self.account.domainid)
    except cloudstackAPIException:
        self.debug('Port Forwarding Rule is deleted')
    try:
        list_nat_reponse = list_nat_rules(self.apiclient, account=self.account.name, domainid=self.account.domainid)
    except cloudstackAPIException:
        self.debug('NATRule is deleted')
    try:
        routers = list_routers(self.apiclient, account=self.account.name, domainid=self.account.domainid)
        self.assertEqual(routers, None, 'Check routers are properly deleted.')
    except Exception as e:
        raise Exception(('Encountered %s raised while fetching routers for account: %s' % (e, self.account.name)))
    return
