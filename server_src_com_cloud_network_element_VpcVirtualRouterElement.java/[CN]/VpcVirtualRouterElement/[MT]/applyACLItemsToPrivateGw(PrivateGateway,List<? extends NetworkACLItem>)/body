{
  final Network network=_networkDao.findById(gateway.getNetworkId());
  final boolean isPrivateGateway=true;
  final List<DomainRouterVO> routers=_vpcRouterMgr.getVpcRouters(gateway.getVpcId());
  if (routers == null || routers.isEmpty()) {
    s_logger.debug("Virtual router element doesn't need to apply network acl rules on the backend; virtual " + "router doesn't exist in the network " + network.getId());
    return true;
  }
  final DataCenterVO dcVO=_dcDao.findById(network.getDataCenterId());
  final NetworkTopology networkTopology=networkTopologyContext.retrieveNetworkTopology(dcVO);
  boolean result=true;
  for (  final DomainRouterVO domainRouterVO : routers) {
    result=networkTopology.applyNetworkACLs(network,rules,domainRouterVO,isPrivateGateway);
    if (!result) {
      throw new CloudRuntimeException("Failed to apply network acl in network " + network.getId());
    }
  }
  return result;
}
