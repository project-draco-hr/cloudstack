{
  final Long vpcId=network.getVpcId();
  if (vpcId == null) {
    s_logger.trace("Network " + network + " is not associated with any VPC");
    return false;
  }
  final Vpc vpc=_vpcMgr.getActiveVpc(vpcId);
  if (vpc == null) {
    s_logger.warn("Unable to find Enabled VPC by id " + vpcId);
    return false;
  }
  if (vm.getType() == VirtualMachine.Type.User) {
    final Map<VirtualMachineProfile.Param,Object> params=new HashMap<VirtualMachineProfile.Param,Object>(1);
    params.put(VirtualMachineProfile.Param.ReProgramGuestNetworks,true);
    final RouterDeploymentDefinition routerDeploymentDefinition=routerDeploymentDefinitionBuilder.create().setVpc(vpc).setDeployDestination(dest).setAccountOwner(_accountMgr.getAccount(vpc.getAccountId())).setParams(params).build();
    final List<DomainRouterVO> routers=routerDeploymentDefinition.deployVirtualRouter();
    if (routers == null || routers.size() == 0) {
      throw new ResourceUnavailableException("Can't find at least one running router!",DataCenter.class,network.getDataCenterId());
    }
    s_logger.info("Adding VPC routers to Guest Network: " + routers.size() + " to be added!");
    for (    final DomainRouterVO domainRouterVO : routers) {
      if (!_networkMdl.isVmPartOfNetwork(domainRouterVO.getId(),network.getId())) {
        final Map<VirtualMachineProfile.Param,Object> paramsForRouter=new HashMap<VirtualMachineProfile.Param,Object>(1);
        if (network.getState() == State.Setup) {
          paramsForRouter.put(VirtualMachineProfile.Param.ReProgramGuestNetworks,true);
        }
        if (!_vpcRouterMgr.addVpcRouterToGuestNetwork(domainRouterVO,network,false,paramsForRouter)) {
          s_logger.error("Failed to add VPC router " + domainRouterVO + " to guest network "+ network);
        }
 else {
          s_logger.debug("Successfully added VPC router " + domainRouterVO + " to guest network "+ network);
        }
      }
    }
  }
  return true;
}
