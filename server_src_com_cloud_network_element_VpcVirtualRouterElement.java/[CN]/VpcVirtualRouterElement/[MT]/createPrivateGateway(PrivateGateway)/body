{
  boolean result=false;
  if (gateway.getType() != VpcGateway.Type.Private) {
    s_logger.warn("Type of vpc gateway is not " + VpcGateway.Type.Private);
    return result;
  }
  final List<DomainRouterVO> routers=_vpcRouterMgr.getVpcRouters(gateway.getVpcId());
  if (routers == null || routers.isEmpty()) {
    s_logger.debug(getName() + " element doesn't need to create Private gateway on the backend; VPC virtual " + "router doesn't exist in the vpc id="+ gateway.getVpcId());
    result=true;
    return result;
  }
  s_logger.info("Adding VPC routers to Guest Network: " + routers.size() + " to be added!");
  final DataCenterVO dcVO=_dcDao.findById(gateway.getZoneId());
  final NetworkTopology networkTopology=networkTopologyContext.retrieveNetworkTopology(dcVO);
  final Network network=_networkDao.findById(gateway.getNetworkId());
  final boolean isPrivateGateway=true;
  for (  final DomainRouterVO domainRouterVO : routers) {
    if (networkTopology.setupPrivateGateway(gateway,domainRouterVO)) {
      try {
        final List<NetworkACLItemVO> rules=_networkACLItemDao.listByACL(gateway.getNetworkACLId());
        result=networkTopology.applyNetworkACLs(network,rules,domainRouterVO,isPrivateGateway);
        if (!result) {
          throw new CloudRuntimeException("Failed to apply network acl in network " + network.getId());
        }
      }
 catch (      final Exception ex) {
        s_logger.debug("Failed to apply network acl id  " + gateway.getNetworkACLId() + "  on gateway ");
        return result;
      }
    }
  }
  return result;
}
