{
  boolean canHandle=true;
  for (  final Service service : services) {
    if (!canHandle(network,service)) {
      canHandle=false;
      break;
    }
  }
  boolean result=false;
  if (canHandle) {
    final List<DomainRouterVO> routers=_routerDao.listByNetworkAndRole(network.getId(),Role.VIRTUAL_ROUTER);
    if (routers == null || routers.isEmpty()) {
      s_logger.debug(getName() + " element doesn't need to associate ip addresses on the backend; VPC virtual " + "router doesn't exist in the network "+ network.getId());
      return result;
    }
    final DataCenterVO dcVO=_dcDao.findById(network.getDataCenterId());
    final NetworkTopology networkTopology=networkTopologyContext.retrieveNetworkTopology(dcVO);
    for (    final DomainRouterVO domainRouterVO : routers) {
      result=networkTopology.associatePublicIP(network,ipAddress,domainRouterVO);
    }
  }
  return result;
}
