{
  long max=-1;
  ResourceLimitVO limit=_resourceLimitDao.findByOwnerIdAndType(account.getId(),ResourceOwnerType.Account,type);
  if (limit != null) {
    max=limit.getMax().longValue();
  }
 else {
    try {
      if (account.getType() == Account.ACCOUNT_TYPE_PROJECT) {
        if (type == Resource.ResourceType.public_ip) {
          max=Long.parseLong(_configDao.getValue(Config.DefaultMaxProjectPublicIPs.key()));
        }
 else         if (type == ResourceType.snapshot) {
          max=Long.parseLong(_configDao.getValue(Config.DefaultMaxProjectSnapshots.key()));
        }
 else         if (type == ResourceType.template) {
          max=Long.parseLong(_configDao.getValue(Config.DefaultMaxProjectTemplates.key()));
        }
 else         if (type == ResourceType.user_vm) {
          max=Long.parseLong(_configDao.getValue(Config.DefaultMaxProjectUserVms.key()));
        }
 else         if (type == ResourceType.volume) {
          max=Long.parseLong(_configDao.getValue(Config.DefaultMaxProjectVolumes.key()));
        }
 else {
          return -1;
        }
      }
 else {
        if (type == Resource.ResourceType.public_ip) {
          max=Long.parseLong(_configDao.getValue(Config.DefaultMaxAccountPublicIPs.key()));
        }
 else         if (type == ResourceType.snapshot) {
          max=Long.parseLong(_configDao.getValue(Config.DefaultMaxAccountSnapshots.key()));
        }
 else         if (type == ResourceType.template) {
          max=Long.parseLong(_configDao.getValue(Config.DefaultMaxAccountTemplates.key()));
        }
 else         if (type == ResourceType.user_vm) {
          max=Long.parseLong(_configDao.getValue(Config.DefaultMaxAccountUserVms.key()));
        }
 else         if (type == ResourceType.volume) {
          max=Long.parseLong(_configDao.getValue(Config.DefaultMaxAccountVolumes.key()));
        }
 else {
          return -1;
        }
      }
    }
 catch (    NumberFormatException nfe) {
      s_logger.error("Invalid value is set for the default account limit.");
    }
  }
  return max;
}
