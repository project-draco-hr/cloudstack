{
  final long numResources=((count.length == 0) ? 1 : count[0]);
  Project project=null;
  if (_accountMgr.isRootAdmin(account.getId())) {
    return;
  }
  if (account.getType() == Account.ACCOUNT_TYPE_PROJECT) {
    project=_projectDao.findByProjectAccountId(account.getId());
  }
  final Project projectFinal=project;
  Transaction.execute(new TransactionCallbackWithExceptionNoReturn<ResourceAllocationException>(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status) throws ResourceAllocationException {
      Set<Long> rowIdsToLock=_resourceCountDao.listAllRowsToUpdate(account.getId(),ResourceOwnerType.Account,type);
      SearchCriteria<ResourceCountVO> sc=ResourceCountSearch.create();
      sc.setParameters("id",rowIdsToLock.toArray());
      _resourceCountDao.lockRows(sc,null,true);
      long accountLimit=findCorrectResourceLimitForAccount(account,type);
      long potentialCount=_resourceCountDao.getResourceCount(account.getId(),ResourceOwnerType.Account,type) + numResources;
      if (accountLimit != Resource.RESOURCE_UNLIMITED && potentialCount > accountLimit) {
        String message="Maximum number of resources of type '" + type + "' for account name="+ account.getAccountName()+ " in domain id="+ account.getDomainId()+ " has been exceeded.";
        if (projectFinal != null) {
          message="Maximum number of resources of type '" + type + "' for project name="+ projectFinal.getName()+ " in domain id="+ account.getDomainId()+ " has been exceeded.";
        }
        ResourceAllocationException e=new ResourceAllocationException(message,type);
        ;
        s_logger.error(message,e);
        throw e;
      }
      Long domainId=null;
      if (projectFinal != null) {
        domainId=projectFinal.getDomainId();
      }
 else {
        domainId=account.getDomainId();
      }
      while (domainId != null) {
        DomainVO domain=_domainDao.findById(domainId);
        if (domainId != Domain.ROOT_DOMAIN) {
          long domainLimit=findCorrectResourceLimitForDomain(domain,type);
          long domainCount=_resourceCountDao.getResourceCount(domainId,ResourceOwnerType.Domain,type) + numResources;
          if (domainLimit != Resource.RESOURCE_UNLIMITED && domainCount > domainLimit) {
            throw new ResourceAllocationException("Maximum number of resources of type '" + type + "' for domain id="+ domainId+ " has been exceeded.",type);
          }
        }
        domainId=domain.getParent();
      }
    }
  }
);
}
