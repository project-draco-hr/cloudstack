def verify_vsp_network(self, domain_id, network, vpc=None):
    vsd_enterprise = self.vsd.get_enterprise(name=domain_id)
    if vpc:
        ext_network_id = self.get_externalID(vpc.id)
    else:
        ext_network_id = self.get_externalID(network.id)
    ext_subnet_id = self.get_externalID(network.id)
    vsd_domain = self.vsd.get_domain(externalID=ext_network_id)
    vsd_zone = self.vsd.get_zone(externalID=ext_network_id)
    vsd_subnet = self.vsd.get_subnet(externalID=ext_subnet_id)
    self.debug('SHOW ENTERPRISE DATA FORMAT IN VSD')
    self.debug(vsd_enterprise)
    self.assertNotEqual(vsd_enterprise, None, 'VSD Enterprise data format should not be a None type')
    self.debug('SHOW NETWORK DATA FORMAT IN VSD')
    self.debug(vsd_domain)
    self.debug(vsd_zone)
    self.debug(vsd_subnet)
    if vpc:
        self.assertEqual(vsd_domain['description'], ('VPC_' + vpc.name), 'VSD domain description should match VPC name in CloudStack')
        self.assertEqual(vsd_zone['description'], ('VPC_' + vpc.name), 'VSD zone description should match VPC name in CloudStack')
    else:
        self.assertEqual(vsd_domain['description'], network.name, 'VSD domain description should match network name in CloudStack')
        self.assertEqual(vsd_zone['description'], network.name, 'VSD zone description should match network name in CloudStack')
    self.assertEqual(vsd_subnet['description'], network.name, 'VSD subnet description should match network name in CloudStack')
