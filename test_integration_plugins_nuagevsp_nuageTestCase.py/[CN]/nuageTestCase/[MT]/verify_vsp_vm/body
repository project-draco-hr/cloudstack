def verify_vsp_vm(self, vm, stopped=None):
    ext_vm_id = self.get_externalID(vm.id)
    for nic in vm.nic:
        ext_network_id = self.get_externalID(nic.networkid)
        ext_nic_id = self.get_externalID(nic.id)
        vsd_vport = self.vsd.get_vport(subnet_externalID=ext_network_id, vport_externalID=ext_nic_id)
        vsd_vm_interface = self.vsd.get_vm_interface(externalID=ext_nic_id)
        self.debug('SHOW VPORT and VM INTERFACE DATA FORMAT IN VSD')
        self.debug(vsd_vport)
        self.debug(vsd_vm_interface)
        self.assertEqual(vsd_vport['active'], True, 'VSD VM vport should be active')
        self.assertEqual(vsd_vm_interface['IPAddress'], nic.ipaddress, "VSD VM interface IP address should match VM's NIC IP address in CloudStack")
    vsd_vm = self.vsd.get_vm(externalID=ext_vm_id)
    self.debug('SHOW VM DATA FORMAT IN VSD')
    self.debug(vsd_vm)
    if (not self.isSimulator):
        if stopped:
            self.assertEqual(vsd_vm['status'], 'DELETE_PENDING', 'VM state in VSD should be DELETE_PENDING')
        else:
            self.assertEqual(vsd_vm['status'], vm.state.upper(), 'VM state in VSD should match its state in CloudStack')
