def verify_vsd_network(self, domain_id, network, vpc=None):
    self.debug(('Verifying the creation and state of Network - %s in VSD' % network.name))
    vsd_enterprise = self.vsd.get_enterprise(filter=self.get_externalID_filter(domain_id))
    ext_network_filter = (self.get_externalID_filter(vpc.id) if vpc else self.get_externalID_filter(network.id))
    vsd_domain = self.vsd.get_domain(filter=ext_network_filter)
    vsd_zone = self.vsd.get_zone(filter=ext_network_filter)
    vsd_subnet = self.vsd.get_subnet(filter=self.get_externalID_filter(network.id))
    self.assertEqual(vsd_enterprise.name, domain_id, 'VSD enterprise name should match CloudStack domain uuid')
    if vpc:
        self.assertEqual(vsd_domain.description, ('VPC_' + vpc.name), 'VSD domain description should match VPC name in CloudStack')
        self.assertEqual(vsd_zone.description, ('VPC_' + vpc.name), 'VSD zone description should match VPC name in CloudStack')
    else:
        self.assertEqual(vsd_domain.description, network.name, 'VSD domain description should match network name in CloudStack')
        self.assertEqual(vsd_zone.description, network.name, 'VSD zone description should match network name in CloudStack')
    self.assertEqual(vsd_subnet.description, network.name, 'VSD subnet description should match network name in CloudStack')
    self.debug(('Successfully verified the creation and state of Network - %s in VSD' % network.name))
