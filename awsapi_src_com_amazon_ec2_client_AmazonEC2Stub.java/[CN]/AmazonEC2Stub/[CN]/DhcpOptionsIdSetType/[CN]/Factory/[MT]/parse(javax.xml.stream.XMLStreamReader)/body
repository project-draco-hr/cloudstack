{
  DhcpOptionsIdSetType object=new DhcpOptionsIdSetType();
  int event;
  java.lang.String nillableValue=null;
  java.lang.String prefix="";
  java.lang.String namespaceuri="";
  try {
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type") != null) {
      java.lang.String fullTypeName=reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type");
      if (fullTypeName != null) {
        java.lang.String nsPrefix=null;
        if (fullTypeName.indexOf(":") > -1) {
          nsPrefix=fullTypeName.substring(0,fullTypeName.indexOf(":"));
        }
        nsPrefix=nsPrefix == null ? "" : nsPrefix;
        java.lang.String type=fullTypeName.substring(fullTypeName.indexOf(":") + 1);
        if (!"DhcpOptionsIdSetType".equals(type)) {
          java.lang.String nsUri=reader.getNamespaceContext().getNamespaceURI(nsPrefix);
          return (DhcpOptionsIdSetType)ExtensionMapper.getTypeObject(nsUri,type,reader);
        }
      }
    }
    java.util.Vector handledAttributes=new java.util.Vector();
    reader.next();
    java.util.ArrayList list1=new java.util.ArrayList();
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://ec2.amazonaws.com/doc/2010-11-15/","item").equals(reader.getName())) {
      list1.add(DhcpOptionsIdSetItemType.Factory.parse(reader));
      boolean loopDone1=false;
      while (!loopDone1) {
        while (!reader.isEndElement())         reader.next();
        reader.next();
        while (!reader.isStartElement() && !reader.isEndElement())         reader.next();
        if (reader.isEndElement()) {
          loopDone1=true;
        }
 else {
          if (new javax.xml.namespace.QName("http://ec2.amazonaws.com/doc/2010-11-15/","item").equals(reader.getName())) {
            list1.add(DhcpOptionsIdSetItemType.Factory.parse(reader));
          }
 else {
            loopDone1=true;
          }
        }
      }
      object.setItem((DhcpOptionsIdSetItemType[])org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(DhcpOptionsIdSetItemType.class,list1));
    }
 else {
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement())     throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
  }
 catch (  javax.xml.stream.XMLStreamException e) {
    throw new java.lang.Exception(e);
  }
  return object;
}
