{
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateInternetGatewayType".equals(typeName)) {
    return CreateInternetGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RouteTableIdSetType".equals(typeName)) {
    return RouteTableIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateRouteTableType".equals(typeName)) {
    return CreateRouteTableType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachInternetGatewayResponseType".equals(typeName)) {
    return AttachInternetGatewayResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateSnapshotType".equals(typeName)) {
    return CreateSnapshotType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReportInstanceStatusResponseType".equals(typeName)) {
    return ReportInstanceStatusResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "TerminateInstancesType".equals(typeName)) {
    return TerminateInstancesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnGatewayType".equals(typeName)) {
    return VpnGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImagesExecutableBySetType".equals(typeName)) {
    return DescribeImagesExecutableBySetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkAclIdSetItemType".equals(typeName)) {
    return NetworkAclIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeRegionsSetType".equals(typeName)) {
    return DescribeRegionsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteVpnGatewayType".equals(typeName)) {
    return DeleteVpnGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResourceIdSetItemType".equals(typeName)) {
    return ResourceIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVolumesSetItemType".equals(typeName)) {
    return DescribeVolumesSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnTunnelTelemetryType".equals(typeName)) {
    return VpnTunnelTelemetryType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeRegionsResponseType".equals(typeName)) {
    return DescribeRegionsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LicenseIdSetItemType".equals(typeName)) {
    return LicenseIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ExportTaskResponseType".equals(typeName)) {
    return ExportTaskResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateSubnetResponseType".equals(typeName)) {
    return CreateSubnetResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteNetworkAclResponseType".equals(typeName)) {
    return DeleteNetworkAclResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DhcpValueType".equals(typeName)) {
    return DhcpValueType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceIdType".equals(typeName)) {
    return InstanceIdType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SecurityGroupIdSetType".equals(typeName)) {
    return SecurityGroupIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DetachInternetGatewayResponseType".equals(typeName)) {
    return DetachInternetGatewayResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateInstanceExportTaskResponseType".equals(typeName)) {
    return CreateInstanceExportTaskResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachmentSetType".equals(typeName)) {
    return AttachmentSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesSetItemType".equals(typeName)) {
    return DescribeReservedInstancesSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "GetPasswordDataResponseType".equals(typeName)) {
    return GetPasswordDataResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VolumeStatusSetType".equals(typeName)) {
    return VolumeStatusSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVolumePermissionOperationType".equals(typeName)) {
    return CreateVolumePermissionOperationType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "FilterSetType".equals(typeName)) {
    return FilterSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ProductDescriptionSetType".equals(typeName)) {
    return ProductDescriptionSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResetNetworkInterfaceAttributeType".equals(typeName)) {
    return ResetNetworkInterfaceAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportInstanceLaunchSpecificationType".equals(typeName)) {
    return ImportInstanceLaunchSpecificationType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesResponseSetItemType".equals(typeName)) {
    return DescribeReservedInstancesResponseSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportInstanceVolumeDetailSetType".equals(typeName)) {
    return ImportInstanceVolumeDetailSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifyInstanceAttributeType".equals(typeName)) {
    return ModifyInstanceAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RunningInstancesItemType".equals(typeName)) {
    return RunningInstancesItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReplaceNetworkAclEntryResponseType".equals(typeName)) {
    return ReplaceNetworkAclEntryResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportInstanceGroupSetType".equals(typeName)) {
    return ImportInstanceGroupSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeNetworkInterfaceAttributeResponseType".equals(typeName)) {
    return DescribeNetworkInterfaceAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImagesOwnersType".equals(typeName)) {
    return DescribeImagesOwnersType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreatePlacementGroupType".equals(typeName)) {
    return CreatePlacementGroupType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeletePlacementGroupType".equals(typeName)) {
    return DeletePlacementGroupType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateSpotDatafeedSubscriptionResponseType".equals(typeName)) {
    return CreateSpotDatafeedSubscriptionResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateSubnetType".equals(typeName)) {
    return CreateSubnetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResourceIdSetType".equals(typeName)) {
    return ResourceIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AssociateRouteTableType".equals(typeName)) {
    return AssociateRouteTableType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelSpotInstanceRequestsResponseSetItemType".equals(typeName)) {
    return CancelSpotInstanceRequestsResponseSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResetSnapshotAttributeResponseType".equals(typeName)) {
    return ResetSnapshotAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PrivateIpAddressesSetItemRequestType".equals(typeName)) {
    return PrivateIpAddressesSetItemRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotAttributeType".equals(typeName)) {
    return DescribeSnapshotAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "MonitorInstancesSetItemType".equals(typeName)) {
    return MonitorInstancesSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "StopInstancesResponseType".equals(typeName)) {
    return StopInstancesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkAclEntryType".equals(typeName)) {
    return NetworkAclEntryType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RouteSetType".equals(typeName)) {
    return RouteSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteSnapshotResponseType".equals(typeName)) {
    return DeleteSnapshotResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateNetworkAclEntryType".equals(typeName)) {
    return CreateNetworkAclEntryType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotsSetItemResponseType".equals(typeName)) {
    return DescribeSnapshotsSetItemResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceExportTaskResponseType".equals(typeName)) {
    return InstanceExportTaskResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ExportTaskIdSetType".equals(typeName)) {
    return ExportTaskIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribePlacementGroupsResponseType".equals(typeName)) {
    return DescribePlacementGroupsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ProductCodeItemType".equals(typeName)) {
    return ProductCodeItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateSnapshotResponseType".equals(typeName)) {
    return CreateSnapshotResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AssignPrivateIpAddressesSetRequestType".equals(typeName)) {
    return AssignPrivateIpAddressesSetRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateReservedInstancesListingResponseType".equals(typeName)) {
    return CreateReservedInstancesListingResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "BlockDeviceMappingType".equals(typeName)) {
    return BlockDeviceMappingType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VolumeStatusActionItemType".equals(typeName)) {
    return VolumeStatusActionItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LicenseIdSetType".equals(typeName)) {
    return LicenseIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkInterfaceAssociationType".equals(typeName)) {
    return NetworkInterfaceAssociationType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AllocationIdSetItemType".equals(typeName)) {
    return AllocationIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkInterfaceSetType".equals(typeName)) {
    return NetworkInterfaceSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotAttributeResponseType".equals(typeName)) {
    return DescribeSnapshotAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceBlockDeviceMappingResponseItemType".equals(typeName)) {
    return InstanceBlockDeviceMappingResponseItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteVpnConnectionRouteType".equals(typeName)) {
    return DeleteVpnConnectionRouteType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifyNetworkInterfaceAttachmentType".equals(typeName)) {
    return ModifyNetworkInterfaceAttachmentType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstancePlacementType".equals(typeName)) {
    return InstancePlacementType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SpotPlacementRequestType".equals(typeName)) {
    return SpotPlacementRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotsOwnerType".equals(typeName)) {
    return DescribeSnapshotsOwnerType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SpotPriceHistorySetItemType".equals(typeName)) {
    return SpotPriceHistorySetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnConnectionIdSetType".equals(typeName)) {
    return VpnConnectionIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateTagsResponseType".equals(typeName)) {
    return CreateTagsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteSnapshotType".equals(typeName)) {
    return DeleteSnapshotType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelBundleTaskResponseType".equals(typeName)) {
    return CancelBundleTaskResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReplaceRouteResponseType".equals(typeName)) {
    return ReplaceRouteResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DetachNetworkInterfaceResponseType".equals(typeName)) {
    return DetachNetworkInterfaceResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSecurityGroupsType".equals(typeName)) {
    return DescribeSecurityGroupsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeDhcpOptionsResponseType".equals(typeName)) {
    return DescribeDhcpOptionsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesOfferingsResponseSetItemType".equals(typeName)) {
    return DescribeReservedInstancesOfferingsResponseSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AssignPrivateIpAddressesType".equals(typeName)) {
    return AssignPrivateIpAddressesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteNetworkAclEntryType".equals(typeName)) {
    return DeleteNetworkAclEntryType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceCountsSetType".equals(typeName)) {
    return InstanceCountsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceCountsSetItemType".equals(typeName)) {
    return InstanceCountsSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DiskImageType".equals(typeName)) {
    return DiskImageType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RegionItemType".equals(typeName)) {
    return RegionItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkInterfaceIdSetType".equals(typeName)) {
    return NetworkInterfaceIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PurchaseReservedInstancesOfferingResponseType".equals(typeName)) {
    return PurchaseReservedInstancesOfferingResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LicenseSetItemType".equals(typeName)) {
    return LicenseSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceIdSetType".equals(typeName)) {
    return InstanceIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AssignPrivateIpAddressesResponseType".equals(typeName)) {
    return AssignPrivateIpAddressesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteRouteResponseType".equals(typeName)) {
    return DeleteRouteResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RebootInstancesItemType".equals(typeName)) {
    return RebootInstancesItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "EbsBlockDeviceType".equals(typeName)) {
    return EbsBlockDeviceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVolumeStatusType".equals(typeName)) {
    return DescribeVolumeStatusType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteSubnetType".equals(typeName)) {
    return DeleteSubnetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesListingsResponseSetItemType".equals(typeName)) {
    return DescribeReservedInstancesListingsResponseSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RouteType".equals(typeName)) {
    return RouteType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImagesInfoType".equals(typeName)) {
    return DescribeImagesInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImagesType".equals(typeName)) {
    return DescribeImagesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeBundleTasksType".equals(typeName)) {
    return DescribeBundleTasksType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteNetworkInterfaceResponseType".equals(typeName)) {
    return DeleteNetworkInterfaceResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReportInstanceStatusType".equals(typeName)) {
    return ReportInstanceStatusType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeAddressesResponseType".equals(typeName)) {
    return DescribeAddressesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteRouteType".equals(typeName)) {
    return DeleteRouteType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "MonitorInstancesType".equals(typeName)) {
    return MonitorInstancesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSubnetsResponseType".equals(typeName)) {
    return DescribeSubnetsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "TagSetType".equals(typeName)) {
    return TagSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpcType".equals(typeName)) {
    return VpcType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelBundleTaskType".equals(typeName)) {
    return CancelBundleTaskType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PurchaseReservedInstancesOfferingType".equals(typeName)) {
    return PurchaseReservedInstancesOfferingType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DhcpOptionsIdSetType".equals(typeName)) {
    return DhcpOptionsIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReplaceRouteTableAssociationResponseType".equals(typeName)) {
    return ReplaceRouteTableAssociationResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PropagatingVgwSetType".equals(typeName)) {
    return PropagatingVgwSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "TagSetItemType".equals(typeName)) {
    return TagSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkAclAssociationSetType".equals(typeName)) {
    return NetworkAclAssociationSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImageAttributeResponseType".equals(typeName)) {
    return DescribeImageAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReservationSetType".equals(typeName)) {
    return ReservationSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVolumesSetResponseType".equals(typeName)) {
    return DescribeVolumesSetResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SubnetIdSetType".equals(typeName)) {
    return SubnetIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceMonitoringStateType".equals(typeName)) {
    return InstanceMonitoringStateType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeKeyPairsItemType".equals(typeName)) {
    return DescribeKeyPairsItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteInternetGatewayResponseType".equals(typeName)) {
    return DeleteInternetGatewayResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkInterfaceAttachmentType".equals(typeName)) {
    return NetworkInterfaceAttachmentType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResetImageAttributeType".equals(typeName)) {
    return ResetImageAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVpnConnectionType".equals(typeName)) {
    return CreateVpnConnectionType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SpotInstanceStateFaultType".equals(typeName)) {
    return SpotInstanceStateFaultType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeExportTasksType".equals(typeName)) {
    return DescribeExportTasksType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribePlacementGroupsInfoType".equals(typeName)) {
    return DescribePlacementGroupsInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AvailabilityZoneSetType".equals(typeName)) {
    return AvailabilityZoneSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "MonitorInstancesResponseSetItemType".equals(typeName)) {
    return MonitorInstancesResponseSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "EnableVgwRoutePropagationResponseType".equals(typeName)) {
    return EnableVgwRoutePropagationResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VolumeStatusEventsSetType".equals(typeName)) {
    return VolumeStatusEventsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImagesResponseItemType".equals(typeName)) {
    return DescribeImagesResponseItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeConversionTasksType".equals(typeName)) {
    return DescribeConversionTasksType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceTypeSetType".equals(typeName)) {
    return InstanceTypeSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PricingDetailsSetType".equals(typeName)) {
    return PricingDetailsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AssignPrivateIpAddressesSetItemRequestType".equals(typeName)) {
    return AssignPrivateIpAddressesSetItemRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "BundleInstanceS3StorageType".equals(typeName)) {
    return BundleInstanceS3StorageType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteSpotDatafeedSubscriptionType".equals(typeName)) {
    return DeleteSpotDatafeedSubscriptionType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AssociateAddressType".equals(typeName)) {
    return AssociateAddressType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "TerminateInstancesResponseType".equals(typeName)) {
    return TerminateInstancesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ExportToS3TaskResponseType".equals(typeName)) {
    return ExportToS3TaskResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeCustomerGatewaysType".equals(typeName)) {
    return DescribeCustomerGatewaysType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnConnectionType".equals(typeName)) {
    return VpnConnectionType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "IpRangeSetType".equals(typeName)) {
    return IpRangeSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteTagsSetItemType".equals(typeName)) {
    return DeleteTagsSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DisassociateRouteTableType".equals(typeName)) {
    return DisassociateRouteTableType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteSecurityGroupType".equals(typeName)) {
    return DeleteSecurityGroupType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DisassociateAddressType".equals(typeName)) {
    return DisassociateAddressType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SpotInstanceRequestIdSetItemType".equals(typeName)) {
    return SpotInstanceRequestIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeTagsType".equals(typeName)) {
    return DescribeTagsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReportInstanceStatusReasonCodeSetItemType".equals(typeName)) {
    return ReportInstanceStatusReasonCodeSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RequestSpotInstancesResponseType".equals(typeName)) {
    return RequestSpotInstancesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ActivateLicenseResponseType".equals(typeName)) {
    return ActivateLicenseResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportVolumeType".equals(typeName)) {
    return ImportVolumeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeAvailabilityZonesResponseType".equals(typeName)) {
    return DescribeAvailabilityZonesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AuthorizeSecurityGroupEgressResponseType".equals(typeName)) {
    return AuthorizeSecurityGroupEgressResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SubnetType".equals(typeName)) {
    return SubnetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceStateChangeSetType".equals(typeName)) {
    return InstanceStateChangeSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportVolumeTaskDetailsType".equals(typeName)) {
    return ImportVolumeTaskDetailsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "EnableVolumeIOType".equals(typeName)) {
    return EnableVolumeIOType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeRouteTablesResponseType".equals(typeName)) {
    return DescribeRouteTablesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VolumeStatusEventItemType".equals(typeName)) {
    return VolumeStatusEventItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeAddressesResponseItemType".equals(typeName)) {
    return DescribeAddressesResponseItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVpcsResponseType".equals(typeName)) {
    return DescribeVpcsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkAclIdSetType".equals(typeName)) {
    return NetworkAclIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVolumeStatusResponseType".equals(typeName)) {
    return DescribeVolumeStatusResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeNetworkAclsResponseType".equals(typeName)) {
    return DescribeNetworkAclsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeletePlacementGroupResponseType".equals(typeName)) {
    return DeletePlacementGroupResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeregisterImageResponseType".equals(typeName)) {
    return DeregisterImageResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceTypeSetItemType".equals(typeName)) {
    return InstanceTypeSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeInstanceAttributeType".equals(typeName)) {
    return DescribeInstanceAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateSecurityGroupType".equals(typeName)) {
    return CreateSecurityGroupType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteVolumeResponseType".equals(typeName)) {
    return DeleteVolumeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVolumesSetItemResponseType".equals(typeName)) {
    return DescribeVolumesSetItemResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "BundleInstanceType".equals(typeName)) {
    return BundleInstanceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVolumePermissionItemType".equals(typeName)) {
    return CreateVolumePermissionItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteKeyPairResponseType".equals(typeName)) {
    return DeleteKeyPairResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ProductCodeListType".equals(typeName)) {
    return ProductCodeListType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InternetGatewayIdSetItemType".equals(typeName)) {
    return InternetGatewayIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteVpcResponseType".equals(typeName)) {
    return DeleteVpcResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeKeyPairsResponseInfoType".equals(typeName)) {
    return DescribeKeyPairsResponseInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReplaceNetworkAclAssociationType".equals(typeName)) {
    return ReplaceNetworkAclAssociationType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotsOwnersType".equals(typeName)) {
    return DescribeSnapshotsOwnersType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportInstanceGroupItemType".equals(typeName)) {
    return ImportInstanceGroupItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ExportToS3TaskType".equals(typeName)) {
    return ExportToS3TaskType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LicenseCapacitySetItemType".equals(typeName)) {
    return LicenseCapacitySetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportInstanceType".equals(typeName)) {
    return ImportInstanceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImagesOwnerType".equals(typeName)) {
    return DescribeImagesOwnerType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RouteTableAssociationType".equals(typeName)) {
    return RouteTableAssociationType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteVpnConnectionType".equals(typeName)) {
    return DeleteVpnConnectionType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeBundleTasksItemType".equals(typeName)) {
    return DescribeBundleTasksItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RevokeSecurityGroupEgressType".equals(typeName)) {
    return RevokeSecurityGroupEgressType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "IpRangeItemType".equals(typeName)) {
    return IpRangeItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteVpcType".equals(typeName)) {
    return DeleteVpcType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LicenseSetType".equals(typeName)) {
    return LicenseSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PlacementGroupSetType".equals(typeName)) {
    return PlacementGroupSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesResponseSetType".equals(typeName)) {
    return DescribeReservedInstancesResponseSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DetachVpnGatewayResponseType".equals(typeName)) {
    return DetachVpnGatewayResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotsSetItemType".equals(typeName)) {
    return DescribeSnapshotsSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LaunchPermissionItemType".equals(typeName)) {
    return LaunchPermissionItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpcSetType".equals(typeName)) {
    return VpcSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceNetworkInterfaceSetItemRequestType".equals(typeName)) {
    return InstanceNetworkInterfaceSetItemRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelExportTaskType".equals(typeName)) {
    return CancelExportTaskType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVolumeAttributeResponseType".equals(typeName)) {
    return DescribeVolumeAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVpnConnectionRouteType".equals(typeName)) {
    return CreateVpnConnectionRouteType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "UserIdGroupPairSetType".equals(typeName)) {
    return UserIdGroupPairSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceStateChangeType".equals(typeName)) {
    return InstanceStateChangeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateInstanceExportTaskType".equals(typeName)) {
    return CreateInstanceExportTaskType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportInstanceVolumeDetailItemType".equals(typeName)) {
    return ImportInstanceVolumeDetailItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnConnectionOptionsResponseType".equals(typeName)) {
    return VpnConnectionOptionsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteTagsType".equals(typeName)) {
    return DeleteTagsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstancePrivateIpAddressesSetItemType".equals(typeName)) {
    return InstancePrivateIpAddressesSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVolumeResponseType".equals(typeName)) {
    return CreateVolumeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateKeyPairResponseType".equals(typeName)) {
    return CreateKeyPairResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteCustomerGatewayType".equals(typeName)) {
    return DeleteCustomerGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AllocateAddressResponseType".equals(typeName)) {
    return AllocateAddressResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RegionSetType".equals(typeName)) {
    return RegionSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteVpnConnectionResponseType".equals(typeName)) {
    return DeleteVpnConnectionResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PriceScheduleRequestSetType".equals(typeName)) {
    return PriceScheduleRequestSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeExportTasksResponseType".equals(typeName)) {
    return DescribeExportTasksResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ConversionTaskIdItemType".equals(typeName)) {
    return ConversionTaskIdItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachVolumeType".equals(typeName)) {
    return AttachVolumeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AvailabilityZoneMessageType".equals(typeName)) {
    return AvailabilityZoneMessageType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSecurityGroupsSetItemType".equals(typeName)) {
    return DescribeSecurityGroupsSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "BlockDeviceMappingItemType".equals(typeName)) {
    return BlockDeviceMappingItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InternetGatewayType".equals(typeName)) {
    return InternetGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "BundleInstanceTaskStorageType".equals(typeName)) {
    return BundleInstanceTaskStorageType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DiskImageVolumeType".equals(typeName)) {
    return DiskImageVolumeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PriceScheduleSetItemType".equals(typeName)) {
    return PriceScheduleSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PlacementResponseType".equals(typeName)) {
    return PlacementResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PropagatingVgwType".equals(typeName)) {
    return PropagatingVgwType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DiskImageSetType".equals(typeName)) {
    return DiskImageSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeactivateLicenseType".equals(typeName)) {
    return DeactivateLicenseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeNetworkInterfaceAttributeType".equals(typeName)) {
    return DescribeNetworkInterfaceAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnStaticRouteType".equals(typeName)) {
    return VpnStaticRouteType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ConversionTaskSetType".equals(typeName)) {
    return ConversionTaskSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnGatewayIdSetItemType".equals(typeName)) {
    return VpnGatewayIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifyImageAttributeType".equals(typeName)) {
    return ModifyImageAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RunningInstancesSetType".equals(typeName)) {
    return RunningInstancesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RunInstancesResponseType".equals(typeName)) {
    return RunInstancesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "GetConsoleOutputResponseType".equals(typeName)) {
    return GetConsoleOutputResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "StopInstancesType".equals(typeName)) {
    return StopInstancesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DhcpOptionsType".equals(typeName)) {
    return DhcpOptionsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LaunchPermissionListType".equals(typeName)) {
    return LaunchPermissionListType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceStatusType".equals(typeName)) {
    return InstanceStatusType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SecurityGroupIdSetItemType".equals(typeName)) {
    return SecurityGroupIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVpnConnectionsType".equals(typeName)) {
    return DescribeVpnConnectionsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifyInstanceAttributeResponseType".equals(typeName)) {
    return ModifyInstanceAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpcIdSetType".equals(typeName)) {
    return VpcIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceBlockDeviceMappingResponseType".equals(typeName)) {
    return InstanceBlockDeviceMappingResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RevokeSecurityGroupIngressType".equals(typeName)) {
    return RevokeSecurityGroupIngressType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "BundleInstanceTaskErrorType".equals(typeName)) {
    return BundleInstanceTaskErrorType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeKeyPairsResponseItemType".equals(typeName)) {
    return DescribeKeyPairsResponseItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "MonitorInstancesSetType".equals(typeName)) {
    return MonitorInstancesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NullableAttributeValueType".equals(typeName)) {
    return NullableAttributeValueType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "IpPermissionSetType".equals(typeName)) {
    return IpPermissionSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotsSetResponseType".equals(typeName)) {
    return DescribeSnapshotsSetResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteVolumeType".equals(typeName)) {
    return DeleteVolumeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportInstanceResponseType".equals(typeName)) {
    return ImportInstanceResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportKeyPairType".equals(typeName)) {
    return ImportKeyPairType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeKeyPairsType".equals(typeName)) {
    return DescribeKeyPairsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeNetworkAclsType".equals(typeName)) {
    return DescribeNetworkAclsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteRouteTableResponseType".equals(typeName)) {
    return DeleteRouteTableResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateTagsType".equals(typeName)) {
    return CreateTagsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifySnapshotAttributeResponseType".equals(typeName)) {
    return ModifySnapshotAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AvailabilityZoneMessageSetType".equals(typeName)) {
    return AvailabilityZoneMessageSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PlacementGroupInfoType".equals(typeName)) {
    return PlacementGroupInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VolumeStatusDetailsItemType".equals(typeName)) {
    return VolumeStatusDetailsItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVpcResponseType".equals(typeName)) {
    return CreateVpcResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteDhcpOptionsType".equals(typeName)) {
    return DeleteDhcpOptionsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesType".equals(typeName)) {
    return DescribeReservedInstancesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ProductCodesSetType".equals(typeName)) {
    return ProductCodesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SecurityGroupItemType".equals(typeName)) {
    return SecurityGroupItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SpotInstanceRequestSetItemType".equals(typeName)) {
    return SpotInstanceRequestSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeBundleTasksResponseType".equals(typeName)) {
    return DescribeBundleTasksResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DhcpConfigurationItemSetType".equals(typeName)) {
    return DhcpConfigurationItemSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVpcType".equals(typeName)) {
    return CreateVpcType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ExportTaskIdType".equals(typeName)) {
    return ExportTaskIdType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ProductCodesSetItemType".equals(typeName)) {
    return ProductCodesSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceStatusEventsSetType".equals(typeName)) {
    return InstanceStatusEventsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DetachInternetGatewayType".equals(typeName)) {
    return DetachInternetGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateDhcpOptionsResponseType".equals(typeName)) {
    return CreateDhcpOptionsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "GroupItemType".equals(typeName)) {
    return GroupItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateImageType".equals(typeName)) {
    return CreateImageType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateRouteResponseType".equals(typeName)) {
    return CreateRouteResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReplaceRouteType".equals(typeName)) {
    return ReplaceRouteType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResetInstanceAttributeResponseType".equals(typeName)) {
    return ResetInstanceAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RevokeSecurityGroupIngressResponseType".equals(typeName)) {
    return RevokeSecurityGroupIngressResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DiskImageVolumeDescriptionType".equals(typeName)) {
    return DiskImageVolumeDescriptionType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "StartInstancesType".equals(typeName)) {
    return StartInstancesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DhcpConfigurationItemType".equals(typeName)) {
    return DhcpConfigurationItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateInternetGatewayResponseType".equals(typeName)) {
    return CreateInternetGatewayResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VolumeStatusItemType".equals(typeName)) {
    return VolumeStatusItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "FilterType".equals(typeName)) {
    return FilterType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotsRestorableBySetType".equals(typeName)) {
    return DescribeSnapshotsRestorableBySetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesOfferingsResponseSetType".equals(typeName)) {
    return DescribeReservedInstancesOfferingsResponseSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVolumeType".equals(typeName)) {
    return CreateVolumeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVolumesSetType".equals(typeName)) {
    return DescribeVolumesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RebootInstancesResponseType".equals(typeName)) {
    return RebootInstancesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesSetType".equals(typeName)) {
    return DescribeReservedInstancesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSubnetsType".equals(typeName)) {
    return DescribeSubnetsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DiskImageDescriptionType".equals(typeName)) {
    return DiskImageDescriptionType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "UnassignPrivateIpAddressesResponseType".equals(typeName)) {
    return UnassignPrivateIpAddressesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeNetworkInterfacesResponseType".equals(typeName)) {
    return DescribeNetworkInterfacesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesResponseType".equals(typeName)) {
    return DescribeReservedInstancesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VgwTelemetryType".equals(typeName)) {
    return VgwTelemetryType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeAvailabilityZonesType".equals(typeName)) {
    return DescribeAvailabilityZonesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DetachVolumeType".equals(typeName)) {
    return DetachVolumeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportInstanceTaskDetailsType".equals(typeName)) {
    return ImportInstanceTaskDetailsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "MonitorInstancesResponseSetType".equals(typeName)) {
    return MonitorInstancesResponseSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteNetworkAclType".equals(typeName)) {
    return DeleteNetworkAclType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSecurityGroupsResponseType".equals(typeName)) {
    return DescribeSecurityGroupsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CustomerGatewayIdSetType".equals(typeName)) {
    return CustomerGatewayIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReportInstanceStatusReasonCodesSetType".equals(typeName)) {
    return ReportInstanceStatusReasonCodesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachVpnGatewayResponseType".equals(typeName)) {
    return AttachVpnGatewayResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceStatusEventType".equals(typeName)) {
    return InstanceStatusEventType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateReservedInstancesListingType".equals(typeName)) {
    return CreateReservedInstancesListingType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "EnableVolumeIOResponseType".equals(typeName)) {
    return EnableVolumeIOResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceNetworkInterfaceSetItemType".equals(typeName)) {
    return InstanceNetworkInterfaceSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RevokeSecurityGroupEgressResponseType".equals(typeName)) {
    return RevokeSecurityGroupEgressResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelReservedInstancesListingResponseType".equals(typeName)) {
    return CancelReservedInstancesListingResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelConversionTaskType".equals(typeName)) {
    return CancelConversionTaskType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DhcpOptionsIdSetItemType".equals(typeName)) {
    return DhcpOptionsIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "GetPasswordDataType".equals(typeName)) {
    return GetPasswordDataType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InternetGatewaySetType".equals(typeName)) {
    return InternetGatewaySetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReplaceNetworkAclAssociationResponseType".equals(typeName)) {
    return ReplaceNetworkAclAssociationResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeNetworkInterfacesType".equals(typeName)) {
    return DescribeNetworkInterfacesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeAddressesType".equals(typeName)) {
    return DescribeAddressesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CustomerGatewaySetType".equals(typeName)) {
    return CustomerGatewaySetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImagesExecutableByType".equals(typeName)) {
    return DescribeImagesExecutableByType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVpnConnectionRouteResponseType".equals(typeName)) {
    return CreateVpnConnectionRouteResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateKeyPairType".equals(typeName)) {
    return CreateKeyPairType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportKeyPairResponseType".equals(typeName)) {
    return ImportKeyPairResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VolumeStatusDetailsSetType".equals(typeName)) {
    return VolumeStatusDetailsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ConversionTaskIdSetType".equals(typeName)) {
    return ConversionTaskIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PricingDetailsSetItemType".equals(typeName)) {
    return PricingDetailsSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateCustomerGatewayType".equals(typeName)) {
    return CreateCustomerGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeInternetGatewaysResponseType".equals(typeName)) {
    return DescribeInternetGatewaysResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AssociateDhcpOptionsType".equals(typeName)) {
    return AssociateDhcpOptionsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AllocationIdSetType".equals(typeName)) {
    return AllocationIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AuthorizeSecurityGroupEgressType".equals(typeName)) {
    return AuthorizeSecurityGroupEgressType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceNetworkInterfaceSetRequestType".equals(typeName)) {
    return InstanceNetworkInterfaceSetRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeInstancesType".equals(typeName)) {
    return DescribeInstancesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ValueType".equals(typeName)) {
    return ValueType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SpotPriceHistorySetType".equals(typeName)) {
    return SpotPriceHistorySetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachmentSetResponseType".equals(typeName)) {
    return AttachmentSetResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceStatusDetailsSetItemType".equals(typeName)) {
    return InstanceStatusDetailsSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnConnectionIdSetItemType".equals(typeName)) {
    return VpnConnectionIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RunInstancesType".equals(typeName)) {
    return RunInstancesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "BundleInstanceResponseType".equals(typeName)) {
    return BundleInstanceResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteTagsSetType".equals(typeName)) {
    return DeleteTagsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImagesItemType".equals(typeName)) {
    return DescribeImagesItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifyVolumeAttributeResponseType".equals(typeName)) {
    return ModifyVolumeAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteVpnConnectionRouteResponseType".equals(typeName)) {
    return DeleteVpnConnectionRouteResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSpotPriceHistoryType".equals(typeName)) {
    return DescribeSpotPriceHistoryType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteCustomerGatewayResponseType".equals(typeName)) {
    return DeleteCustomerGatewayResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AllocateAddressType".equals(typeName)) {
    return AllocateAddressType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnConnectionOptionsRequestType".equals(typeName)) {
    return VpnConnectionOptionsRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateNetworkInterfaceType".equals(typeName)) {
    return CreateNetworkInterfaceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CustomerGatewayType".equals(typeName)) {
    return CustomerGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeInstanceAttributeResponseType".equals(typeName)) {
    return DescribeInstanceAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LaunchPermissionOperationType".equals(typeName)) {
    return LaunchPermissionOperationType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteTagsResponseType".equals(typeName)) {
    return DeleteTagsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifyNetworkInterfaceAttributeType".equals(typeName)) {
    return ModifyNetworkInterfaceAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkAclEntrySetType".equals(typeName)) {
    return NetworkAclEntrySetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVpcsType".equals(typeName)) {
    return DescribeVpcsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResetNetworkInterfaceAttributeResponseType".equals(typeName)) {
    return ResetNetworkInterfaceAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DetachNetworkInterfaceType".equals(typeName)) {
    return DetachNetworkInterfaceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteSubnetResponseType".equals(typeName)) {
    return DeleteSubnetResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifyImageAttributeResponseType".equals(typeName)) {
    return ModifyImageAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceNetworkInterfaceSetType".equals(typeName)) {
    return InstanceNetworkInterfaceSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "MonitoringInstanceType".equals(typeName)) {
    return MonitoringInstanceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RouteTableAssociationSetType".equals(typeName)) {
    return RouteTableAssociationSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceEbsBlockDeviceType".equals(typeName)) {
    return InstanceEbsBlockDeviceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InternetGatewayAttachmentSetType".equals(typeName)) {
    return InternetGatewayAttachmentSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkInterfaceIdSetItemType".equals(typeName)) {
    return NetworkInterfaceIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateNetworkAclEntryResponseType".equals(typeName)) {
    return CreateNetworkAclEntryResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSecurityGroupsSetType".equals(typeName)) {
    return DescribeSecurityGroupsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceNetworkInterfaceAttachmentType".equals(typeName)) {
    return InstanceNetworkInterfaceAttachmentType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReplaceNetworkAclEntryType".equals(typeName)) {
    return ReplaceNetworkAclEntryType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifySnapshotAttributeType".equals(typeName)) {
    return ModifySnapshotAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "StartInstancesResponseType".equals(typeName)) {
    return StartInstancesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVpnConnectionsResponseType".equals(typeName)) {
    return DescribeVpnConnectionsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachNetworkInterfaceType".equals(typeName)) {
    return AttachNetworkInterfaceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DisableVgwRoutePropagationRequestType".equals(typeName)) {
    return DisableVgwRoutePropagationRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DhcpOptionsSetType".equals(typeName)) {
    return DhcpOptionsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceStatusItemType".equals(typeName)) {
    return InstanceStatusItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AuthorizeSecurityGroupIngressType".equals(typeName)) {
    return AuthorizeSecurityGroupIngressType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "EmptyElementType".equals(typeName)) {
    return EmptyElementType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeDhcpOptionsType".equals(typeName)) {
    return DescribeDhcpOptionsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeactivateLicenseResponseType".equals(typeName)) {
    return DeactivateLicenseResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateImageResponseType".equals(typeName)) {
    return CreateImageResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "IpPermissionType".equals(typeName)) {
    return IpPermissionType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpcIdSetItemType".equals(typeName)) {
    return VpcIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PortRangeType".equals(typeName)) {
    return PortRangeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVpnGatewayResponseType".equals(typeName)) {
    return CreateVpnGatewayResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "MonitorInstancesResponseType".equals(typeName)) {
    return MonitorInstancesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVolumesResponseType".equals(typeName)) {
    return DescribeVolumesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachmentSetItemResponseType".equals(typeName)) {
    return AttachmentSetItemResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeInstancesInfoType".equals(typeName)) {
    return DescribeInstancesInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSpotInstanceRequestsType".equals(typeName)) {
    return DescribeSpotInstanceRequestsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeInternetGatewaysType".equals(typeName)) {
    return DescribeInternetGatewaysType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DhcpValueSetType".equals(typeName)) {
    return DhcpValueSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ConfirmProductInstanceResponseType".equals(typeName)) {
    return ConfirmProductInstanceResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttributeValueType".equals(typeName)) {
    return AttributeValueType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceStatusSetType".equals(typeName)) {
    return InstanceStatusSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateSecurityGroupResponseType".equals(typeName)) {
    return CreateSecurityGroupResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeCustomerGatewaysResponseType".equals(typeName)) {
    return DescribeCustomerGatewaysResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "GroupSetType".equals(typeName)) {
    return GroupSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateRouteType".equals(typeName)) {
    return CreateRouteType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RouteTableSetType".equals(typeName)) {
    return RouteTableSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateNetworkAclType".equals(typeName)) {
    return CreateNetworkAclType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "UserIdGroupPairType".equals(typeName)) {
    return UserIdGroupPairType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceLicenseResponseType".equals(typeName)) {
    return InstanceLicenseResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSecurityGroupsIdSetItemType".equals(typeName)) {
    return DescribeSecurityGroupsIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReservedInstanceLimitPriceType".equals(typeName)) {
    return ReservedInstanceLimitPriceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteDhcpOptionsResponseType".equals(typeName)) {
    return DeleteDhcpOptionsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreatePlacementGroupResponseType".equals(typeName)) {
    return CreatePlacementGroupResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CustomerGatewayIdSetItemType".equals(typeName)) {
    return CustomerGatewayIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotsSetType".equals(typeName)) {
    return DescribeSnapshotsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteNetworkAclEntryResponseType".equals(typeName)) {
    return DeleteNetworkAclEntryResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "UnassignPrivateIpAddressesType".equals(typeName)) {
    return UnassignPrivateIpAddressesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SecurityGroupSetType".equals(typeName)) {
    return SecurityGroupSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesOfferingsSetItemType".equals(typeName)) {
    return DescribeReservedInstancesOfferingsSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PriceScheduleSetType".equals(typeName)) {
    return PriceScheduleSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeInstanceStatusType".equals(typeName)) {
    return DescribeInstanceStatusType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeBundleTasksInfoType".equals(typeName)) {
    return DescribeBundleTasksInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SubnetSetType".equals(typeName)) {
    return SubnetSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeAddressesItemType".equals(typeName)) {
    return DescribeAddressesItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesListingSetItemType".equals(typeName)) {
    return DescribeReservedInstancesListingSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkInterfacePrivateIpAddressesSetType".equals(typeName)) {
    return NetworkInterfacePrivateIpAddressesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceNetworkInterfaceAssociationType".equals(typeName)) {
    return InstanceNetworkInterfaceAssociationType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachNetworkInterfaceResponseType".equals(typeName)) {
    return AttachNetworkInterfaceResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LaunchSpecificationRequestType".equals(typeName)) {
    return LaunchSpecificationRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkAclSetType".equals(typeName)) {
    return NetworkAclSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeInstancesItemType".equals(typeName)) {
    return DescribeInstancesItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateNetworkInterfaceResponseType".equals(typeName)) {
    return CreateNetworkInterfaceResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ActivateLicenseType".equals(typeName)) {
    return ActivateLicenseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeregisterImageType".equals(typeName)) {
    return DeregisterImageType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VolumeStatusInfoType".equals(typeName)) {
    return VolumeStatusInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelConversionTaskResponseType".equals(typeName)) {
    return CancelConversionTaskResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteRouteTableType".equals(typeName)) {
    return DeleteRouteTableType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SpotInstanceRequestIdSetType".equals(typeName)) {
    return SpotInstanceRequestIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceLicenseRequestType".equals(typeName)) {
    return InstanceLicenseRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AuthorizeSecurityGroupIngressResponseType".equals(typeName)) {
    return AuthorizeSecurityGroupIngressResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PriceScheduleRequestSetItemType".equals(typeName)) {
    return PriceScheduleRequestSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "EnableVgwRoutePropagationRequestType".equals(typeName)) {
    return EnableVgwRoutePropagationRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeTagsResponseType".equals(typeName)) {
    return DescribeTagsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeInstancesResponseType".equals(typeName)) {
    return DescribeInstancesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachmentType".equals(typeName)) {
    return AttachmentType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotsType".equals(typeName)) {
    return DescribeSnapshotsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AssociateRouteTableResponseType".equals(typeName)) {
    return AssociateRouteTableResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "UserDataType".equals(typeName)) {
    return UserDataType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribePlacementGroupItemType".equals(typeName)) {
    return DescribePlacementGroupItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeLicensesResponseType".equals(typeName)) {
    return DescribeLicensesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "BundleInstanceTasksSetType".equals(typeName)) {
    return BundleInstanceTasksSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnStaticRoutesSetType".equals(typeName)) {
    return VpnStaticRoutesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteSecurityGroupResponseType".equals(typeName)) {
    return DeleteSecurityGroupResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResetSnapshotAttributeType".equals(typeName)) {
    return ResetSnapshotAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribePlacementGroupsType".equals(typeName)) {
    return DescribePlacementGroupsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesOfferingsType".equals(typeName)) {
    return DescribeReservedInstancesOfferingsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RecurringChargesSetItemType".equals(typeName)) {
    return RecurringChargesSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteVpnGatewayResponseType".equals(typeName)) {
    return DeleteVpnGatewayResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeLicensesType".equals(typeName)) {
    return DescribeLicensesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkInterfaceType".equals(typeName)) {
    return NetworkInterfaceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImagesResponseType".equals(typeName)) {
    return DescribeImagesResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResourceTagSetItemType".equals(typeName)) {
    return ResourceTagSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PlacementRequestType".equals(typeName)) {
    return PlacementRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVpnConnectionResponseType".equals(typeName)) {
    return CreateVpnConnectionResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateNetworkAclResponseType".equals(typeName)) {
    return CreateNetworkAclResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeKeyPairsInfoType".equals(typeName)) {
    return DescribeKeyPairsInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AssociateAddressResponseType".equals(typeName)) {
    return AssociateAddressResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelSpotInstanceRequestsResponseType".equals(typeName)) {
    return CancelSpotInstanceRequestsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LaunchSpecificationResponseType".equals(typeName)) {
    return LaunchSpecificationResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeRouteTablesType".equals(typeName)) {
    return DescribeRouteTablesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReleaseAddressType".equals(typeName)) {
    return ReleaseAddressType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RegisterImageResponseType".equals(typeName)) {
    return RegisterImageResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVpnGatewaysType".equals(typeName)) {
    return DescribeVpnGatewaysType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSecurityGroupsIdSetType".equals(typeName)) {
    return DescribeSecurityGroupsIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelExportTaskResponseType".equals(typeName)) {
    return CancelExportTaskResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesOfferingsSetType".equals(typeName)) {
    return DescribeReservedInstancesOfferingsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ConversionTaskType".equals(typeName)) {
    return ConversionTaskType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ValueSetType".equals(typeName)) {
    return ValueSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceBlockDeviceMappingItemType".equals(typeName)) {
    return InstanceBlockDeviceMappingItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeKeyPairsResponseType".equals(typeName)) {
    return DescribeKeyPairsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "LicenseCapacitySetType".equals(typeName)) {
    return LicenseCapacitySetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RebootInstancesInfoType".equals(typeName)) {
    return RebootInstancesInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkAclAssociationType".equals(typeName)) {
    return NetworkAclAssociationType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotsRestorableByType".equals(typeName)) {
    return DescribeSnapshotsRestorableByType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteSpotDatafeedSubscriptionResponseType".equals(typeName)) {
    return DeleteSpotDatafeedSubscriptionResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RouteTableType".equals(typeName)) {
    return RouteTableType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateCustomerGatewayResponseType".equals(typeName)) {
    return CreateCustomerGatewayResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DiskImageDetailType".equals(typeName)) {
    return DiskImageDetailType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RebootInstancesType".equals(typeName)) {
    return RebootInstancesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVolumeAttributeType".equals(typeName)) {
    return DescribeVolumeAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReplaceRouteTableAssociationType".equals(typeName)) {
    return ReplaceRouteTableAssociationType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesOfferingsResponseType".equals(typeName)) {
    return DescribeReservedInstancesOfferingsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "PrivateIpAddressesSetRequestType".equals(typeName)) {
    return PrivateIpAddressesSetRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteKeyPairType".equals(typeName)) {
    return DeleteKeyPairType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSpotPriceHistoryResponseType".equals(typeName)) {
    return DescribeSpotPriceHistoryResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AvailabilityZoneItemType".equals(typeName)) {
    return AvailabilityZoneItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeRegionsType".equals(typeName)) {
    return DescribeRegionsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AssociateDhcpOptionsResponseType".equals(typeName)) {
    return AssociateDhcpOptionsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnGatewaySetType".equals(typeName)) {
    return VpnGatewaySetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttributeBooleanValueType".equals(typeName)) {
    return AttributeBooleanValueType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceBlockDeviceMappingType".equals(typeName)) {
    return InstanceBlockDeviceMappingType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateSpotDatafeedSubscriptionType".equals(typeName)) {
    return CreateSpotDatafeedSubscriptionType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ExportTaskSetResponseType".equals(typeName)) {
    return ExportTaskSetResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResetInstanceAttributeType".equals(typeName)) {
    return ResetInstanceAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "IamInstanceProfileResponseType".equals(typeName)) {
    return IamInstanceProfileResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstancePrivateIpAddressesSetType".equals(typeName)) {
    return InstancePrivateIpAddressesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelSpotInstanceRequestsType".equals(typeName)) {
    return CancelSpotInstanceRequestsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResetImageAttributeResponseType".equals(typeName)) {
    return ResetImageAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "BundleInstanceTaskType".equals(typeName)) {
    return BundleInstanceTaskType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeAvailabilityZonesSetItemType".equals(typeName)) {
    return DescribeAvailabilityZonesSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesListingsType".equals(typeName)) {
    return DescribeReservedInstancesListingsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DisassociateAddressResponseType".equals(typeName)) {
    return DisassociateAddressResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSpotDatafeedSubscriptionResponseType".equals(typeName)) {
    return DescribeSpotDatafeedSubscriptionResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachVpnGatewayType".equals(typeName)) {
    return AttachVpnGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ResourceTagSetType".equals(typeName)) {
    return ResourceTagSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RegisterImageType".equals(typeName)) {
    return RegisterImageType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesListingsResponseType".equals(typeName)) {
    return DescribeReservedInstancesListingsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelReservedInstancesListingType".equals(typeName)) {
    return CancelReservedInstancesListingType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteInternetGatewayType".equals(typeName)) {
    return DeleteInternetGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkAclType".equals(typeName)) {
    return NetworkAclType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnGatewayIdSetType".equals(typeName)) {
    return VpnGatewayIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NetworkInterfacePrivateIpAddressesSetItemType".equals(typeName)) {
    return NetworkInterfacePrivateIpAddressesSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeAddressesResponseInfoType".equals(typeName)) {
    return DescribeAddressesResponseInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ImportVolumeResponseType".equals(typeName)) {
    return ImportVolumeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "IamInstanceProfileRequestType".equals(typeName)) {
    return IamInstanceProfileRequestType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "IcmpTypeCodeType".equals(typeName)) {
    return IcmpTypeCodeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSpotInstanceRequestsResponseType".equals(typeName)) {
    return DescribeSpotInstanceRequestsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DetachVolumeResponseType".equals(typeName)) {
    return DetachVolumeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ProductDescriptionSetItemType".equals(typeName)) {
    return ProductDescriptionSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVpnGatewayType".equals(typeName)) {
    return CreateVpnGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSpotDatafeedSubscriptionType".equals(typeName)) {
    return DescribeSpotDatafeedSubscriptionType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifyNetworkInterfaceAttributeResponseType".equals(typeName)) {
    return ModifyNetworkInterfaceAttributeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DisassociateRouteTableResponseType".equals(typeName)) {
    return DisassociateRouteTableResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesListingsResponseSetType".equals(typeName)) {
    return DescribeReservedInstancesListingsResponseSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateDhcpOptionsType".equals(typeName)) {
    return CreateDhcpOptionsType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeRegionsSetItemType".equals(typeName)) {
    return DescribeRegionsSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachInternetGatewayType".equals(typeName)) {
    return AttachInternetGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SpotInstanceRequestSetType".equals(typeName)) {
    return SpotInstanceRequestSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeInstanceStatusResponseType".equals(typeName)) {
    return DescribeInstanceStatusResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceStateType".equals(typeName)) {
    return InstanceStateType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RouteTableIdSetItemType".equals(typeName)) {
    return RouteTableIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "AttachVolumeResponseType".equals(typeName)) {
    return AttachVolumeResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InternetGatewayIdSetType".equals(typeName)) {
    return InternetGatewayIdSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeAddressesInfoType".equals(typeName)) {
    return DescribeAddressesInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VpnConnectionSetType".equals(typeName)) {
    return VpnConnectionSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeReservedInstancesListingSetType".equals(typeName)) {
    return DescribeReservedInstancesListingSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "EbsInstanceBlockDeviceMappingResponseType".equals(typeName)) {
    return EbsInstanceBlockDeviceMappingResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeConversionTasksResponseType".equals(typeName)) {
    return DescribeConversionTasksResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateVolumePermissionListType".equals(typeName)) {
    return CreateVolumePermissionListType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImageAttributeType".equals(typeName)) {
    return DescribeImageAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ModifyVolumeAttributeType".equals(typeName)) {
    return ModifyVolumeAttributeType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DeleteNetworkInterfaceType".equals(typeName)) {
    return DeleteNetworkInterfaceType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeSnapshotsResponseType".equals(typeName)) {
    return DescribeSnapshotsResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CancelSpotInstanceRequestsResponseSetType".equals(typeName)) {
    return CancelSpotInstanceRequestsResponseSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVolumesType".equals(typeName)) {
    return DescribeVolumesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RequestSpotInstancesType".equals(typeName)) {
    return RequestSpotInstancesType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "StateReasonType".equals(typeName)) {
    return StateReasonType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeVpnGatewaysResponseType".equals(typeName)) {
    return DescribeVpnGatewaysResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "CreateRouteTableResponseType".equals(typeName)) {
    return CreateRouteTableResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeAvailabilityZonesSetType".equals(typeName)) {
    return DescribeAvailabilityZonesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "VolumeStatusActionsSetType".equals(typeName)) {
    return VolumeStatusActionsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "RecurringChargesSetType".equals(typeName)) {
    return RecurringChargesSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SpotDatafeedSubscriptionType".equals(typeName)) {
    return SpotDatafeedSubscriptionType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReleaseAddressResponseType".equals(typeName)) {
    return ReleaseAddressResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "GetConsoleOutputType".equals(typeName)) {
    return GetConsoleOutputType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "SubnetIdSetItemType".equals(typeName)) {
    return SubnetIdSetItemType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DescribeImagesResponseInfoType".equals(typeName)) {
    return DescribeImagesResponseInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ReservationInfoType".equals(typeName)) {
    return ReservationInfoType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InternetGatewayAttachmentType".equals(typeName)) {
    return InternetGatewayAttachmentType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DisableVgwRoutePropagationResponseType".equals(typeName)) {
    return DisableVgwRoutePropagationResponseType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "NullableAttributeBooleanValueType".equals(typeName)) {
    return NullableAttributeBooleanValueType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "DetachVpnGatewayType".equals(typeName)) {
    return DetachVpnGatewayType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "InstanceStatusDetailsSetType".equals(typeName)) {
    return InstanceStatusDetailsSetType.Factory.parse(reader);
  }
  if ("http://ec2.amazonaws.com/doc/2012-08-15/".equals(namespaceURI) && "ConfirmProductInstanceType".equals(typeName)) {
    return ConfirmProductInstanceType.Factory.parse(reader);
  }
  throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " "+ typeName);
}
