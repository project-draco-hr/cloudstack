{
  org.apache.axis2.context.MessageContext _messageContext=null;
  try {
    org.apache.axis2.client.OperationClient _operationClient=_serviceClient.createClient(_operations[76].getName());
    _operationClient.getOptions().setAction("ModifyInstanceAttribute");
    _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);
    addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
    _messageContext=new org.apache.axis2.context.MessageContext();
    org.apache.axiom.soap.SOAPEnvelope env=null;
    env=toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),modifyInstanceAttribute152,optimizeContent(new javax.xml.namespace.QName("http://ec2.amazonaws.com/doc/2010-11-15/","modifyInstanceAttribute")));
    _serviceClient.addHeadersToEnvelope(env);
    _messageContext.setEnvelope(env);
    _operationClient.addMessageContext(_messageContext);
    _operationClient.execute(true);
    org.apache.axis2.context.MessageContext _returnMessageContext=_operationClient.getMessageContext(org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
    org.apache.axiom.soap.SOAPEnvelope _returnEnv=_returnMessageContext.getEnvelope();
    java.lang.Object object=fromOM(_returnEnv.getBody().getFirstElement(),com.amazon.ec2.client.AmazonEC2Stub.ModifyInstanceAttributeResponse.class,getEnvelopeNamespaces(_returnEnv));
    return (com.amazon.ec2.client.AmazonEC2Stub.ModifyInstanceAttributeResponse)object;
  }
 catch (  org.apache.axis2.AxisFault f) {
    org.apache.axiom.om.OMElement faultElt=f.getDetail();
    if (faultElt != null) {
      if (faultExceptionNameMap.containsKey(faultElt.getQName())) {
        try {
          java.lang.String exceptionClassName=(java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
          java.lang.Class exceptionClass=java.lang.Class.forName(exceptionClassName);
          java.lang.Exception ex=(java.lang.Exception)exceptionClass.newInstance();
          java.lang.String messageClassName=(java.lang.String)faultMessageMap.get(faultElt.getQName());
          java.lang.Class messageClass=java.lang.Class.forName(messageClassName);
          java.lang.Object messageObject=fromOM(faultElt,messageClass,null);
          java.lang.reflect.Method m=exceptionClass.getMethod("setFaultMessage",new java.lang.Class[]{messageClass});
          m.invoke(ex,new java.lang.Object[]{messageObject});
          throw new java.rmi.RemoteException(ex.getMessage(),ex);
        }
 catch (        java.lang.ClassCastException e) {
          throw f;
        }
catch (        java.lang.ClassNotFoundException e) {
          throw f;
        }
catch (        java.lang.NoSuchMethodException e) {
          throw f;
        }
catch (        java.lang.reflect.InvocationTargetException e) {
          throw f;
        }
catch (        java.lang.IllegalAccessException e) {
          throw f;
        }
catch (        java.lang.InstantiationException e) {
          throw f;
        }
      }
 else {
        throw f;
      }
    }
 else {
      throw f;
    }
  }
 finally {
    _messageContext.getTransportOut().getSender().cleanup(_messageContext);
  }
}
