{
  try {
    if (com.amazon.ec2.client.AmazonEC2Stub.RegisterImage.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.RegisterImage.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.RegisterImageResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.RegisterImageResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteTags.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteTags.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteTagsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteTagsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateKeyPair.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateKeyPair.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateKeyPairResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateKeyPairResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.TerminateInstances.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.TerminateInstances.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.TerminateInstancesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.TerminateInstancesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeImageAttribute.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeImageAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeImageAttributeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeImageAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSecurityGroups.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSecurityGroups.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSecurityGroupsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSecurityGroupsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribePlacementGroups.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribePlacementGroups.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribePlacementGroupsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribePlacementGroupsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateVpnConnection.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateVpnConnection.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateVpnConnectionResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateVpnConnectionResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AttachVpnGateway.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AttachVpnGateway.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AttachVpnGatewayResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AttachVpnGatewayResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateVolume.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateVolume.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateVolumeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateVolumeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ReleaseAddress.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ReleaseAddress.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ReleaseAddressResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ReleaseAddressResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeRegions.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeRegions.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeRegionsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeRegionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteSubnet.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteSubnet.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteSubnetResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteSubnetResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeVpcs.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeVpcs.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeVpcsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeVpcsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotPriceHistory.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotPriceHistory.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotPriceHistoryResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotPriceHistoryResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeReservedInstances.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeReservedInstances.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeReservedInstancesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeReservedInstancesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeTags.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeTags.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeTagsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeTagsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ImportVolume.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ImportVolume.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ImportVolumeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ImportVolumeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotDatafeedSubscription.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotDatafeedSubscription.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotDatafeedSubscriptionResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotDatafeedSubscriptionResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeactivateLicense.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeactivateLicense.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeactivateLicenseResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeactivateLicenseResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DetachVolume.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DetachVolume.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DetachVolumeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DetachVolumeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeReservedInstancesOfferings.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeReservedInstancesOfferings.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeReservedInstancesOfferingsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeReservedInstancesOfferingsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeConversionTasks.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeConversionTasks.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeConversionTasksResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeConversionTasksResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteCustomerGateway.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteCustomerGateway.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteCustomerGatewayResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteCustomerGatewayResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeletePlacementGroup.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeletePlacementGroup.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeletePlacementGroupResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeletePlacementGroupResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.RequestSpotInstances.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.RequestSpotInstances.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.RequestSpotInstancesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.RequestSpotInstancesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ConfirmProductInstance.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ConfirmProductInstance.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ConfirmProductInstanceResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ConfirmProductInstanceResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ModifySnapshotAttribute.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ModifySnapshotAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ModifySnapshotAttributeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ModifySnapshotAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.PurchaseReservedInstancesOffering.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.PurchaseReservedInstancesOffering.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.PurchaseReservedInstancesOfferingResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.PurchaseReservedInstancesOfferingResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CancelConversionTask.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CancelConversionTask.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CancelConversionTaskResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CancelConversionTaskResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteVpnConnection.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteVpnConnection.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteVpnConnectionResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteVpnConnectionResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DetachVpnGateway.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DetachVpnGateway.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DetachVpnGatewayResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DetachVpnGatewayResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeCustomerGateways.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeCustomerGateways.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeCustomerGatewaysResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeCustomerGatewaysResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeLicenses.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeLicenses.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeLicensesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeLicensesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.RevokeSecurityGroupIngress.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.RevokeSecurityGroupIngress.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.RevokeSecurityGroupIngressResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.RevokeSecurityGroupIngressResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSubnets.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSubnets.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSubnetsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSubnetsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ResetSnapshotAttribute.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ResetSnapshotAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ResetSnapshotAttributeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ResetSnapshotAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeAddresses.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeAddresses.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeAddressesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeAddressesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateSecurityGroup.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateSecurityGroup.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateSecurityGroupResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateSecurityGroupResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AllocateAddress.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AllocateAddress.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AllocateAddressResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AllocateAddressResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ImportKeyPair.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ImportKeyPair.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ImportKeyPairResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ImportKeyPairResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateTags.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateTags.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateTagsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateTagsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.StartInstances.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.StartInstances.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.StartInstancesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.StartInstancesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeVpnConnections.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeVpnConnections.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeVpnConnectionsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeVpnConnectionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.RebootInstances.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.RebootInstances.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.RebootInstancesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.RebootInstancesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeAvailabilityZones.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeAvailabilityZones.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeAvailabilityZonesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeAvailabilityZonesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.BundleInstance.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.BundleInstance.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.BundleInstanceResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.BundleInstanceResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ActivateLicense.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ActivateLicense.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ActivateLicenseResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ActivateLicenseResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSnapshots.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSnapshots.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSnapshotsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSnapshotsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreatePlacementGroup.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreatePlacementGroup.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreatePlacementGroupResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreatePlacementGroupResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotInstanceRequests.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotInstanceRequests.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotInstanceRequestsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSpotInstanceRequestsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AssociateAddress.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AssociateAddress.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AssociateAddressResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AssociateAddressResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.RunInstances.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.RunInstances.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.RunInstancesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.RunInstancesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteSecurityGroup.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteSecurityGroup.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteSecurityGroupResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteSecurityGroupResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteVpc.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteVpc.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteVpcResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteVpcResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteVolume.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteVolume.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteVolumeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteVolumeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateVpnGateway.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateVpnGateway.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateVpnGatewayResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateVpnGatewayResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ResetInstanceAttribute.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ResetInstanceAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ResetInstanceAttributeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ResetInstanceAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateVpc.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateVpc.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateVpcResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateVpcResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteKeyPair.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteKeyPair.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteKeyPairResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteKeyPairResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.StopInstances.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.StopInstances.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.StopInstancesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.StopInstancesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateImage.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateImage.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateImageResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateImageResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeVolumes.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeVolumes.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeVolumesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeVolumesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeKeyPairs.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeKeyPairs.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeKeyPairsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeKeyPairsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateCustomerGateway.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateCustomerGateway.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateCustomerGatewayResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateCustomerGatewayResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeImages.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeImages.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeImagesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeImagesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateSubnet.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateSubnet.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateSubnetResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateSubnetResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DisassociateAddress.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DisassociateAddress.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DisassociateAddressResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DisassociateAddressResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteVpnGateway.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteVpnGateway.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteVpnGatewayResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteVpnGatewayResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CancelSpotInstanceRequests.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CancelSpotInstanceRequests.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CancelSpotInstanceRequestsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CancelSpotInstanceRequestsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.MonitorInstances.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.MonitorInstances.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.MonitorInstancesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.MonitorInstancesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateSnapshot.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateSnapshot.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateSnapshotResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateSnapshotResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ResetImageAttribute.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ResetImageAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ResetImageAttributeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ResetImageAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AttachVolume.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AttachVolume.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AttachVolumeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AttachVolumeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeInstanceAttribute.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeInstanceAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeInstanceAttributeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeInstanceAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AuthorizeSecurityGroupIngress.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AuthorizeSecurityGroupIngress.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AuthorizeSecurityGroupIngressResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AuthorizeSecurityGroupIngressResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ModifyInstanceAttribute.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ModifyInstanceAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ModifyInstanceAttributeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ModifyInstanceAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSnapshotAttribute.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSnapshotAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeSnapshotAttributeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeSnapshotAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.GetConsoleOutput.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.GetConsoleOutput.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.GetConsoleOutputResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.GetConsoleOutputResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeDhcpOptions.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeDhcpOptions.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeDhcpOptionsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeDhcpOptionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CancelBundleTask.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CancelBundleTask.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CancelBundleTaskResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CancelBundleTaskResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteSnapshot.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteSnapshot.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteSnapshotResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteSnapshotResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateSpotDatafeedSubscription.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateSpotDatafeedSubscription.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateSpotDatafeedSubscriptionResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateSpotDatafeedSubscriptionResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteSpotDatafeedSubscription.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteSpotDatafeedSubscription.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteSpotDatafeedSubscriptionResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteSpotDatafeedSubscriptionResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeregisterImage.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeregisterImage.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeregisterImageResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeregisterImageResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeBundleTasks.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeBundleTasks.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeBundleTasksResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeBundleTasksResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateDhcpOptions.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateDhcpOptions.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.CreateDhcpOptionsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.CreateDhcpOptionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ModifyImageAttribute.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ModifyImageAttribute.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ModifyImageAttributeResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ModifyImageAttributeResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeInstances.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeInstances.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeInstancesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeInstancesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeVpnGateways.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeVpnGateways.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DescribeVpnGatewaysResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DescribeVpnGatewaysResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteDhcpOptions.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteDhcpOptions.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.DeleteDhcpOptionsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.DeleteDhcpOptionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ImportInstance.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ImportInstance.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.ImportInstanceResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.ImportInstanceResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AssociateDhcpOptions.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AssociateDhcpOptions.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.AssociateDhcpOptionsResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.AssociateDhcpOptionsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.UnmonitorInstances.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.UnmonitorInstances.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.UnmonitorInstancesResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.UnmonitorInstancesResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.GetPasswordData.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.GetPasswordData.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.ec2.client.AmazonEC2Stub.GetPasswordDataResponse.class.equals(type)) {
      return com.amazon.ec2.client.AmazonEC2Stub.GetPasswordDataResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
  }
 catch (  java.lang.Exception e) {
    throw org.apache.axis2.AxisFault.makeFault(e);
  }
  return null;
}
