{
  Filter searchFilter=new Filter(NetworkGroupRulesVO.class,"id",true,c.getOffset(),c.getLimit());
  Object accountId=c.getCriteria(Criteria.ACCOUNTID);
  Object domainId=c.getCriteria(Criteria.DOMAINID);
  Object networkGroup=c.getCriteria(Criteria.NETWORKGROUP);
  Object instanceId=c.getCriteria(Criteria.INSTANCEID);
  Object recursive=c.getCriteria(Criteria.ISRECURSIVE);
  Object keyword=c.getCriteria(Criteria.KEYWORD);
  SearchBuilder<NetworkGroupRulesVO> sb=_networkGroupRulesDao.createSearchBuilder();
  sb.and("accountId",sb.entity().getAccountId(),SearchCriteria.Op.EQ);
  sb.and("name",sb.entity().getName(),SearchCriteria.Op.EQ);
  sb.and("domainId",sb.entity().getDomainId(),SearchCriteria.Op.EQ);
  if ((accountId == null) && (instanceId == null) && (domainId != null)&& Boolean.TRUE.equals(recursive)) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId());
  }
  SearchCriteria<NetworkGroupRulesVO> sc=sb.create();
  if (accountId != null) {
    sc.setParameters("accountId",accountId);
    if (networkGroup != null) {
      sc.setParameters("name",networkGroup);
    }
 else     if (keyword != null) {
      SearchCriteria ssc=_networkGroupRulesDao.createSearchCriteria();
      ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
      ssc.addOr("description",SearchCriteria.Op.LIKE,"%" + keyword + "%");
      sc.addAnd("name",SearchCriteria.Op.SC,ssc);
    }
  }
 else   if (instanceId != null) {
    return listNetworkGroupRulesByVM(((Long)instanceId).longValue());
  }
 else   if (domainId != null) {
    if (Boolean.TRUE.equals(recursive)) {
      DomainVO domain=_domainDao.findById((Long)domainId);
      sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
    }
 else {
      sc.setParameters("domainId",domainId);
    }
  }
  return _networkGroupRulesDao.search(sc,searchFilter);
}
