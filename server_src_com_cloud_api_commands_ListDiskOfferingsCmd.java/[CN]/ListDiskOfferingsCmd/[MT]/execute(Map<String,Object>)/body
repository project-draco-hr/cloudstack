{
  Long id=(Long)params.get(BaseCmd.Properties.ID.getName());
  Long domainId=(Long)params.get(BaseCmd.Properties.DOMAIN_ID.getName());
  String name=(String)params.get(BaseCmd.Properties.NAME.getName());
  String keyword=(String)params.get(BaseCmd.Properties.KEYWORD.getName());
  Integer page=(Integer)params.get(BaseCmd.Properties.PAGE.getName());
  Integer pageSize=(Integer)params.get(BaseCmd.Properties.PAGESIZE.getName());
  Long startIndex=Long.valueOf(0);
  int pageSizeNum=50;
  if (pageSize != null) {
    pageSizeNum=pageSize.intValue();
  }
  if (page != null) {
    int pageNum=page.intValue();
    if (pageNum > 0) {
      startIndex=Long.valueOf(pageSizeNum * (pageNum - 1));
    }
  }
  Criteria c=new Criteria("id",Boolean.TRUE,startIndex,Long.valueOf(pageSizeNum));
  if (keyword != null) {
    c.addCriteria(Criteria.KEYWORD,keyword);
  }
 else {
    c.addCriteria(Criteria.ID,id);
    c.addCriteria(Criteria.NAME,name);
    c.addCriteria(Criteria.DOMAINID,domainId);
  }
  List<DiskOfferingVO> offerings=getManagementServer().searchForDiskOfferings(c);
  List<Pair<String,Object>> offeringTags=new ArrayList<Pair<String,Object>>();
  Object[] diskOffTag=new Object[offerings.size()];
  int i=0;
  for (  DiskOfferingVO offering : offerings) {
    List<Pair<String,Object>> offeringData=new ArrayList<Pair<String,Object>>();
    offeringData.add(new Pair<String,Object>(BaseCmd.Properties.ID.getName(),Long.toString(offering.getId())));
    offeringData.add(new Pair<String,Object>(BaseCmd.Properties.DOMAIN_ID.getName(),offering.getDomainId()));
    offeringData.add(new Pair<String,Object>(BaseCmd.Properties.DOMAIN.getName(),getManagementServer().findDomainIdById(offering.getDomainId()).getName()));
    offeringData.add(new Pair<String,Object>(BaseCmd.Properties.NAME.getName(),offering.getName()));
    offeringData.add(new Pair<String,Object>(BaseCmd.Properties.DISPLAY_TEXT.getName(),offering.getDisplayText()));
    offeringData.add(new Pair<String,Object>(BaseCmd.Properties.DISK_SIZE.getName(),offering.getDiskSizeInBytes()));
    offeringData.add(new Pair<String,Object>(BaseCmd.Properties.CREATED.getName(),offering.getCreated()));
    offeringData.add(new Pair<String,Object>(BaseCmd.Properties.TAGS.getName(),offering.getTags()));
    diskOffTag[i++]=offeringData;
  }
  Pair<String,Object> offeringTag=new Pair<String,Object>("diskoffering",diskOffTag);
  offeringTags.add(offeringTag);
  return offeringTags;
}
