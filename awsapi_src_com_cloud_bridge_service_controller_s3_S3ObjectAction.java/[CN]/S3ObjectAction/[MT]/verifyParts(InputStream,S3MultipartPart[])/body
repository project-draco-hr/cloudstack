{
  try {
    DocumentBuilderFactory dbf=DocumentBuilderFactory.newInstance();
    dbf.setNamespaceAware(true);
    DocumentBuilder db=dbf.newDocumentBuilder();
    Document doc=db.parse(is);
    Node parent=null;
    Node contents=null;
    NodeList children=null;
    String temp=null;
    String element=null;
    String eTag=null;
    int lastNumber=-1;
    int partNumber=-1;
    int count=0;
    NodeList nodeSet=doc.getElementsByTagNameNS("http://s3.amazonaws.com/doc/2006-03-01/","Part");
    count=nodeSet.getLength();
    if (0 == count) {
      nodeSet=doc.getElementsByTagName("Part");
      count=nodeSet.getLength();
    }
    if (count != parts.length)     return new OrderedPair<Integer,String>(400,"InvalidPart");
    for (int i=0; i < count; i++) {
      partNumber=-1;
      eTag=null;
      parent=nodeSet.item(i);
      if (null != (children=parent.getChildNodes())) {
        int numChildren=children.getLength();
        for (int j=0; j < numChildren; j++) {
          contents=children.item(j);
          element=contents.getNodeName().trim();
          if (element.endsWith("PartNumber")) {
            temp=contents.getFirstChild().getNodeValue();
            if (null != temp)             partNumber=Integer.parseInt(temp);
          }
 else           if (element.endsWith("ETag")) {
            eTag=contents.getFirstChild().getNodeValue();
          }
        }
      }
      if (lastNumber >= partNumber) {
        return new OrderedPair<Integer,String>(400,"InvalidPartOrder");
      }
      if (partNumber != parts[i].getPartNumber() || eTag == null || !eTag.equalsIgnoreCase("\"" + parts[i].getETag() + "\"")) {
        return new OrderedPair<Integer,String>(400,"InvalidPart");
      }
      lastNumber=partNumber;
    }
    return new OrderedPair<Integer,String>(200,"Success");
  }
 catch (  Exception e) {
    return new OrderedPair<Integer,String>(500,e.toString());
  }
}
