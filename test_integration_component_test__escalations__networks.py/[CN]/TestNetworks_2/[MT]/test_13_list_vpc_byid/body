@attr(tags=['advanced', 'provisioning'])
def test_13_list_vpc_byid(self):
    '\n        @summary: Test List VPC with Id\n        @Steps\n        Step1: Listing all the vpc for a user before creating a vpc\n        Step2: Verifying no VPCs are listed\n        Step3: Creating a vpc\n        Step4: Listing the vpc for a user after creating a vpc\n        Step5: Verifying the list vpc size is increased by 1\n        Step6: Listing the vpc by specifying vpc ID\n        Step7: Verifying the list vpc size is 1\n        Step8: Verifying the details of the vpc\n        '
    list_vpc_before = VPC.list(self.userapiclient)
    self.assertIsNone(list_vpc_before, 'Vpc listed for newly created user')
    list_vpc_offering = VpcOffering.list(self.userapiclient)
    status = validateList(list_vpc_offering)
    self.assertEquals(PASS, status[0], 'list vpc offering is none')
    vpc_created = VPC.create(self.userapiclient, self.test_data['vpc'], list_vpc_offering[0].id, self.zone.id)
    self.assertIsNotNone(vpc_created, 'VPC Creation Failed')
    self.cleanup.append(vpc_created)
    list_vpc_after = VPC.list(self.userapiclient)
    status = validateList(list_vpc_after)
    self.assertEquals(PASS, status[0], 'list VPC not as expected')
    self.assertEquals(1, len(list_vpc_after), 'list VPC not equal as expected')
    list_vpc_byid = VPC.list(self.userapiclient, id=vpc_created.id, listall=self.test_data['listall'])
    status = validateList(list_vpc_byid)
    self.assertEquals(PASS, status[0], 'list VPC not as expected')
    self.assertEquals(1, len(list_vpc_byid), 'list VPC not equal as expected')
    expected_dict = {'cidr': self.test_data['vpc']['cidr'], 'id': vpc_created.id, 'displaytext': vpc_created.displaytext, 'account': self.account.name, 'domain': vpc_created.domain, 'domainid': self.domain.id, 'name': vpc_created.name, }
    actual_dict = {'cidr': str(list_vpc_byid[0].cidr), 'id': list_vpc_byid[0].id, 'displaytext': list_vpc_byid[0].displaytext, 'account': list_vpc_byid[0].account, 'domain': list_vpc_byid[0].domain, 'domainid': list_vpc_byid[0].domainid, 'name': list_vpc_byid[0].name, }
    list_vpc_status = self.__verify_values(expected_dict, actual_dict)
    self.assertEqual(True, list_vpc_status, 'Listed VPC details are not as expected')
    return
