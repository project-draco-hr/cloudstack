{
  long hostId=host.getId();
  HypervisorType hypervisorType=host.getHypervisorType();
  CreateStoragePoolCommand cmd=new CreateStoragePoolCommand(true,storagePool);
  if (HypervisorType.VMware.equals(hypervisorType)) {
    cmd.setCreateDatastore(true);
    Map<String,String> details=new HashMap<String,String>();
    StoragePoolDetailVO storagePoolDetail=_storagePoolDetailsDao.findDetail(storagePool.getId(),SolidFireUtil.DATASTORE_NAME);
    details.put(CreateStoragePoolCommand.DATASTORE_NAME,storagePoolDetail.getValue());
    storagePoolDetail=_storagePoolDetailsDao.findDetail(storagePool.getId(),SolidFireUtil.IQN);
    details.put(CreateStoragePoolCommand.IQN,storagePoolDetail.getValue());
    storagePoolDetail=_storagePoolDetailsDao.findDetail(storagePool.getId(),SolidFireUtil.STORAGE_VIP);
    details.put(CreateStoragePoolCommand.STORAGE_HOST,storagePoolDetail.getValue());
    storagePoolDetail=_storagePoolDetailsDao.findDetail(storagePool.getId(),SolidFireUtil.STORAGE_PORT);
    details.put(CreateStoragePoolCommand.STORAGE_PORT,storagePoolDetail.getValue());
    cmd.setDetails(details);
  }
  Answer answer=_agentMgr.easySend(hostId,cmd);
  if (answer != null && answer.getResult()) {
    return true;
  }
 else {
    _primaryDataStoreDao.expunge(storagePool.getId());
    String msg="";
    if (answer != null) {
      msg="Cannot create storage pool through host '" + hostId + "' due to the following: "+ answer.getDetails();
    }
 else {
      msg="Cannot create storage pool through host '" + hostId + "' due to CreateStoragePoolCommand returns null";
    }
    s_logger.warn(msg);
    throw new CloudRuntimeException(msg);
  }
}
