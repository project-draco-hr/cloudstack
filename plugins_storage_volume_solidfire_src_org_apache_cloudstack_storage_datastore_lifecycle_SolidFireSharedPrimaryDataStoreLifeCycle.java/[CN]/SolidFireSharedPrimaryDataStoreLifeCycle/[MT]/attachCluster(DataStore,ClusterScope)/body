{
  PrimaryDataStoreInfo primaryDataStoreInfo=(PrimaryDataStoreInfo)store;
  List<HostVO> allHosts=_resourceMgr.listAllUpAndEnabledHosts(Host.Type.Routing,primaryDataStoreInfo.getClusterId(),primaryDataStoreInfo.getPodId(),primaryDataStoreInfo.getDataCenterId());
  if (allHosts.isEmpty()) {
    _primaryDataStoreDao.expunge(primaryDataStoreInfo.getId());
    throw new CloudRuntimeException("No host up to associate a storage pool with in cluster " + primaryDataStoreInfo.getClusterId());
  }
  boolean success=false;
  for (  HostVO host : allHosts) {
    success=createStoragePool(host,primaryDataStoreInfo);
    if (success) {
      break;
    }
  }
  if (!success) {
    throw new CloudRuntimeException("Unable to create storage in cluster " + primaryDataStoreInfo.getClusterId());
  }
  List<HostVO> poolHosts=new ArrayList<HostVO>();
  for (  HostVO host : allHosts) {
    try {
      _storageMgr.connectHostToSharedPool(host.getId(),primaryDataStoreInfo.getId());
      poolHosts.add(host);
    }
 catch (    Exception e) {
      s_logger.warn("Unable to establish a connection between " + host + " and "+ primaryDataStoreInfo,e);
    }
  }
  if (poolHosts.isEmpty()) {
    s_logger.warn("No host can access storage pool '" + primaryDataStoreInfo + "' on cluster '"+ primaryDataStoreInfo.getClusterId()+ "'.");
    _primaryDataStoreDao.expunge(primaryDataStoreInfo.getId());
    throw new CloudRuntimeException("Failed to access storage pool");
  }
  _primaryDataStoreHelper.attachCluster(store);
  return true;
}
