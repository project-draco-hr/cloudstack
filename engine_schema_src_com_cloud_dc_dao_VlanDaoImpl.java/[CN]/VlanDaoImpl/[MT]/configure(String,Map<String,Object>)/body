{
  boolean result=super.configure(name,params);
  ZoneTypeAllPodsSearch=createSearchBuilder();
  ZoneTypeAllPodsSearch.and("zoneId",ZoneTypeAllPodsSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  ZoneTypeAllPodsSearch.and("vlanType",ZoneTypeAllPodsSearch.entity().getVlanType(),SearchCriteria.Op.EQ);
  SearchBuilder<PodVlanMapVO> PodVlanSearch=_podVlanMapDao.createSearchBuilder();
  PodVlanSearch.and("podId",PodVlanSearch.entity().getPodId(),SearchCriteria.Op.NNULL);
  ZoneTypeAllPodsSearch.join("vlan",PodVlanSearch,PodVlanSearch.entity().getVlanDbId(),ZoneTypeAllPodsSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  ZoneTypeAllPodsSearch.done();
  PodVlanSearch.done();
  ZoneTypePodSearch=createSearchBuilder();
  ZoneTypePodSearch.and("zoneId",ZoneTypePodSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  ZoneTypePodSearch.and("vlanType",ZoneTypePodSearch.entity().getVlanType(),SearchCriteria.Op.EQ);
  SearchBuilder<PodVlanMapVO> PodVlanSearch2=_podVlanMapDao.createSearchBuilder();
  PodVlanSearch2.and("podId",PodVlanSearch2.entity().getPodId(),SearchCriteria.Op.EQ);
  ZoneTypePodSearch.join("vlan",PodVlanSearch2,PodVlanSearch2.entity().getVlanDbId(),ZoneTypePodSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  PodVlanSearch2.done();
  ZoneTypePodSearch.done();
  ZoneWideNonDedicatedVlanSearch=createSearchBuilder();
  ZoneWideNonDedicatedVlanSearch.and("zoneId",ZoneWideNonDedicatedVlanSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  AccountVlanMapSearch=_accountVlanMapDao.createSearchBuilder();
  AccountVlanMapSearch.and("accountId",AccountVlanMapSearch.entity().getAccountId(),SearchCriteria.Op.NULL);
  ZoneWideNonDedicatedVlanSearch.join("AccountVlanMapSearch",AccountVlanMapSearch,ZoneWideNonDedicatedVlanSearch.entity().getId(),AccountVlanMapSearch.entity().getVlanDbId(),JoinBuilder.JoinType.LEFTOUTER);
  ZoneWideNonDedicatedVlanSearch.done();
  AccountVlanMapSearch.done();
  DedicatedVlanSearch=createSearchBuilder();
  AccountVlanMapSearch=_accountVlanMapDao.createSearchBuilder();
  AccountVlanMapSearch.and("accountId",AccountVlanMapSearch.entity().getAccountId(),SearchCriteria.Op.EQ);
  DedicatedVlanSearch.join("AccountVlanMapSearch",AccountVlanMapSearch,DedicatedVlanSearch.entity().getId(),AccountVlanMapSearch.entity().getVlanDbId(),JoinBuilder.JoinType.LEFTOUTER);
  DedicatedVlanSearch.done();
  AccountVlanMapSearch.done();
  return result;
}
