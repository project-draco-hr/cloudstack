{
  UserVm result;
  try {
    UserContext.current().setEventDetails("Vm Id: " + getEntityId());
    if (getHypervisor() == HypervisorType.BareMetal) {
      result=_bareMetalVmService.startVirtualMachine(this);
    }
 else {
      result=_userVmService.startVirtualMachine(this);
    }
    if (result != null) {
      UserVmResponse response=_responseGenerator.createUserVmResponse("virtualmachine",result).get(0);
      response.setResponseName(getCommandName());
      this.setResponseObject(response);
    }
 else {
      throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to deploy vm");
    }
  }
 catch (  ResourceUnavailableException ex) {
    s_logger.warn("Exception: ",ex);
    throw new ServerApiException(BaseCmd.RESOURCE_UNAVAILABLE_ERROR,ex.getMessage());
  }
catch (  ConcurrentOperationException ex) {
    s_logger.warn("Exception: ",ex);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,ex.getMessage());
  }
catch (  InsufficientCapacityException ex) {
    s_logger.info(ex);
    s_logger.trace(ex);
    throw new ServerApiException(BaseCmd.INSUFFICIENT_CAPACITY_ERROR,ex.getMessage());
  }
}
