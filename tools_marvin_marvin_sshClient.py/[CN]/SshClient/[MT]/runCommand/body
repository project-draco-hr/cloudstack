def runCommand(self, command):
    '\n        @Name: runCommand\n        @Desc: Runs a command over ssh and\n               returns the result along with status code\n        @Input: command to execute\n        @Output: 1: status of command executed.\n                 SUCCESS : If command execution is successful\n                 FAILED    : If command execution has failed\n                 2: stdin,stdout,stderr values of command output\n        '
    ret = {'status': FAILED, 'stdin': None, 'stdout': None, 'stderr': INVALID_INPUT, }
    if ((command is None) or (command == '')):
        return ret
    try:
        try:
            status_check = 1
            (stdin, stdout, stderr) = self.ssh.exec_command(command, timeout=self.timeout)
            if (stdout is not None):
                status_check = stdout.channel.recv_exit_status()
                if (status_check == 0):
                    ret['status'] = SUCCESS
                ret['stdout'] = stdout.readlines()
                if (stderr is not None):
                    ret['stderr'] = stderr.readlines()
        except Exception as e:
            ret['stderr'] = GetDetailExceptionInfo(e)
            self.logger.exception(('SshClient: Exception under runCommand :%s' % GetDetailExceptionInfo(e)))
    finally:
        self.logger.debug((' Host: %s Cmd: %s Output:%s' % (self.host, command, str(ret))))
        return ret
