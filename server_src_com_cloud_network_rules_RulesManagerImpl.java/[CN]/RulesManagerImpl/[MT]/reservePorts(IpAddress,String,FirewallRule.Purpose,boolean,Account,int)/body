{
  final FirewallRuleVO[] rules=new FirewallRuleVO[ports.length];
  Transaction.execute(new TransactionCallbackWithExceptionNoReturn<NetworkRuleConflictException>(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status) throws NetworkRuleConflictException {
      for (int i=0; i < ports.length; i++) {
        rules[i]=new FirewallRuleVO(null,ip.getId(),ports[i],protocol,ip.getAssociatedWithNetworkId(),ip.getAllocatedToAccountId(),ip.getAllocatedInDomainId(),purpose,null,null,null,null);
        rules[i]=_firewallDao.persist(rules[i]);
        if (openFirewall) {
          _firewallMgr.createRuleForAllCidrs(ip.getId(),caller,ports[i],ports[i],protocol,null,null,rules[i].getId(),ip.getAssociatedWithNetworkId());
        }
      }
    }
  }
);
  boolean success=false;
  try {
    for (    FirewallRuleVO newRule : rules) {
      _firewallMgr.detectRulesConflict(newRule);
    }
    success=true;
    return rules;
  }
  finally {
    if (!success) {
      Transaction.execute(new TransactionCallbackNoReturn(){
        @Override public void doInTransactionWithoutResult(        TransactionStatus status){
          for (          FirewallRuleVO newRule : rules) {
            _firewallMgr.removeRule(newRule);
          }
        }
      }
);
    }
  }
}
