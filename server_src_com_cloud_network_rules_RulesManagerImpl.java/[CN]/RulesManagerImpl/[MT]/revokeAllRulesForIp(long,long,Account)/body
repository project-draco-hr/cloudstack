{
  List<FirewallRule> rules=new ArrayList<FirewallRule>();
  List<PortForwardingRuleVO> pfRules=_forwardingDao.listByIpAndNotRevoked(ipId);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Releasing " + pfRules.size() + " port forwarding rules for ip id="+ ipId);
  }
  for (  PortForwardingRuleVO rule : pfRules) {
    revokePortForwardingRuleInternal(rule.getId(),caller,userId,false);
  }
  List<FirewallRuleVO> staticNatRules=_firewallDao.listByIpAndPurposeAndNotRevoked(ipId,Purpose.StaticNat);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Releasing " + staticNatRules.size() + " static nat rules for ip id="+ ipId);
  }
  for (  FirewallRuleVO rule : staticNatRules) {
    revokeStaticNatRuleInternal(rule.getId(),caller,userId,false);
  }
  applyPortForwardingRules(ipId,true,caller);
  applyStaticNatRules(ipId,true,caller);
  rules.addAll(_forwardingDao.listByIpAndNotRevoked(ipId));
  rules.addAll(_firewallDao.listByIpAndPurposeAndNotRevoked(ipId,Purpose.StaticNat));
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Successfully released rules for ip id=" + ipId + " and # of rules now = "+ rules.size());
  }
  return rules.size() == 0;
}
