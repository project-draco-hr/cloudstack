{
  UserContext ctx=UserContext.current();
  Account caller=ctx.getCaller();
  IPAddressVO ipAddress=_ipAddressDao.findById(ipId);
  if (ipAddress == null) {
    throw new InvalidParameterValueException("Unable to find ip address by id " + ipId);
  }
  if (!isSystemVm) {
    UserVmVO vm=_vmDao.findById(vmId);
    if (vm == null) {
      throw new InvalidParameterValueException("Can't enable static nat for the address id=" + ipId + ", invalid virtual machine id specified ("+ vmId+ ").");
    }
    checkIpAndUserVm(ipAddress,vm,caller);
  }
  Long networkId=ipAddress.getAssociatedWithNetworkId();
  if (networkId == null) {
    throw new InvalidParameterValueException("Unable to enable static nat for the ipAddress id=" + ipId + " as ip is not associated with any network");
  }
  Nic guestNic=_networkMgr.getNicInNetwork(vmId,networkId);
  if (guestNic == null) {
    throw new InvalidParameterValueException("Vm doesn't belong to the network " + networkId);
  }
  Network network=_networkMgr.getNetwork(networkId);
  if (!_networkMgr.areServicesSupportedInNetwork(network.getId(),Service.StaticNat)) {
    throw new InvalidParameterValueException("Unable to create static nat rule; StaticNat service is not supported in network id=" + networkId);
  }
  isIpReadyForStaticNat(vmId,ipAddress,caller,ctx.getCallerUserId());
  _networkMgr.checkIpForService(ipAddress,Service.StaticNat);
  ipAddress.setOneToOneNat(true);
  ipAddress.setAssociatedWithVmId(vmId);
  if (_ipAddressDao.update(ipAddress.getId(),ipAddress)) {
    s_logger.trace("Enabling static nat for ip address " + ipAddress + " and vm id="+ vmId+ " on the backend");
    if (applyStaticNatForIp(ipId,false,caller,false)) {
      return true;
    }
 else {
      ipAddress.setOneToOneNat(false);
      ipAddress.setAssociatedWithVmId(null);
      _ipAddressDao.update(ipAddress.getId(),ipAddress);
      s_logger.warn("Failed to enable static nat rule for ip address " + ipId + " on the backend");
      return false;
    }
  }
 else {
    s_logger.warn("Failed to update ip address " + ipAddress + " in the DB as a part of enableStaticNat");
    return false;
  }
}
