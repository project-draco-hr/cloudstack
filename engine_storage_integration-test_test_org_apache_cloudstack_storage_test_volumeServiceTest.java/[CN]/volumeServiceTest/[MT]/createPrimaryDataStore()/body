{
  try {
    PrimaryDataStoreProvider provider=primaryDataStoreProviderMgr.getDataStoreProvider("default primary data store provider");
    primaryDataStoreProviderMgr.configure("primary data store mgr",new HashMap<String,Object>());
    List<PrimaryDataStoreVO> ds=primaryStoreDao.findPoolByName(this.primaryName);
    if (ds.size() >= 1) {
      PrimaryDataStoreVO store=ds.get(0);
      if (store.getRemoved() == null) {
        return provider.getDataStore(store.getId());
      }
    }
    Map<String,String> params=new HashMap<String,String>();
    params.put("url",this.getPrimaryStorageUrl());
    params.put("dcId",dcId.toString());
    params.put("clusterId",clusterId.toString());
    params.put("name",this.primaryName);
    PrimaryDataStoreInfo primaryDataStoreInfo=provider.registerDataStore(params);
    PrimaryDataStoreLifeCycle lc=primaryDataStoreInfo.getLifeCycle();
    ClusterScope scope=new ClusterScope(clusterId,podId,dcId);
    lc.attachCluster(scope);
    return primaryDataStoreInfo;
  }
 catch (  ConfigurationException e) {
    return null;
  }
}
