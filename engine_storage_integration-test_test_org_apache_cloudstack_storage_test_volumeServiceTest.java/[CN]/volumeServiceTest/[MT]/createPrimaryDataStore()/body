{
  try {
    DataStoreProvider provider=dataStoreProviderMgr.getDataStoreProvider("default primary data store provider");
    Map<String,String> params=new HashMap<String,String>();
    params.put("url",this.getPrimaryStorageUrl());
    params.put("dcId",dcId.toString());
    params.put("clusterId",clusterId.toString());
    params.put("name",this.primaryName);
    params.put("roles",DataStoreRole.Primary.toString());
    params.put("uuid",UUID.nameUUIDFromBytes(this.getPrimaryStorageUrl().getBytes()).toString());
    params.put("providerId",String.valueOf(provider.getId()));
    DataStoreLifeCycle lifeCycle=provider.getLifeCycle();
    DataStore store=lifeCycle.initialize(params);
    ClusterScope scope=new ClusterScope(clusterId,podId,dcId);
    lifeCycle.attachCluster(store,scope);
    return null;
  }
 catch (  Exception e) {
    return null;
  }
}
