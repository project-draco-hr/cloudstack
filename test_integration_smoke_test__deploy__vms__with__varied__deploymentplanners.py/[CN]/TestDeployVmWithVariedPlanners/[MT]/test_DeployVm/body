def test_DeployVm(self):
    "\n        Let's start by defining the attributes of our VM that we will be\n        deploying on CloudStack. We will be assuming a single zone is available\n        and is configured and all templates are Ready\n\n        The hardcoded values are used only for brevity.\n        "
    deployVmCmd = deployVirtualMachine.deployVirtualMachineCmd()
    deployVmCmd.zoneid = 1
    deployVmCmd.account = self.acct.account
    deployVmCmd.domainid = self.acct.domainid
    deployVmCmd.templateid = 5
    deployVmCmd.serviceofferingid = self.svcOfferingFirstFitResponse.id
    deployVmResponse = self.apiClient.deployVirtualMachine(deployVmCmd)
    self.debug(('VM %s was deployed in the job %s' % (deployVmResponse.id, deployVmResponse.jobid)))
    listVmCmd = listVirtualMachines.listVirtualMachinesCmd()
    listVmCmd.id = deployVmResponse.id
    listVmResponse = self.apiClient.listVirtualMachines(listVmCmd)
    self.assertNotEqual(len(listVmResponse), 0, 'Check if the list API                             returns a non-empty response')
    vm1 = listVmResponse[0]
    self.assertEqual(vm1.id, deployVmResponse.id, 'Check if the VM returned                          is the same as the one we deployed')
    self.assertEqual(vm1.state, 'Running', 'Check if VM has reached                          a state of running')
    deployVm2Cmd = deployVirtualMachine.deployVirtualMachineCmd()
    deployVm2Cmd.zoneid = 1
    deployVm2Cmd.account = self.acct.account
    deployVm2Cmd.domainid = self.acct.domainid
    deployVm2Cmd.templateid = 5
    deployVm2Cmd.serviceofferingid = self.svcOfferingFirstFitResponse.id
    deployVm2Response = self.apiClient.deployVirtualMachine(deployVm2Cmd)
    self.debug(('VM %s was deployed in the job %s' % (deployVm2Response.id, deployVm2Response.jobid)))
    listVm2Cmd = listVirtualMachines.listVirtualMachinesCmd()
    listVm2Cmd.id = deployVm2Response.id
    listVm2Response = self.apiClient.listVirtualMachines(listVm2Cmd)
    self.assertNotEqual(len(listVm2Response), 0, 'Check if the list API                             returns a non-empty response')
    vm2 = listVm2Response[0]
    self.assertEqual(vm2.id, deployVm2Response.id, 'Check if the VM returned                          is the same as the one we deployed')
    self.assertEqual(vm2.state, 'Running', 'Check if VM has reached                          a state of running')
