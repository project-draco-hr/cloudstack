@attr(tags=['simulator', 'advanced', 'basic', 'sg'])
def test_deployvm_firstfit(self):
    'Test to deploy vm with a first fit offering\n        '
    self.service_offering_firstfit = ServiceOffering.create(self.apiclient, self.services['service_offering'], deploymentplanner='FirstFitPlanner')
    self.virtual_machine = VirtualMachine.create(self.apiclient, self.services['virtual_machine'], accountid=self.account.name, zoneid=self.zone.id, domainid=self.account.domainid, serviceofferingid=self.service_offering_firstfit.id, templateid=self.template.id)
    list_vms = VirtualMachine.list(self.apiclient, id=self.virtual_machine.id)
    self.debug(('Verify listVirtualMachines response for virtual machine: %s' % self.virtual_machine.id))
    self.assertEqual(isinstance(list_vms, list), True, 'List VM response was not a valid list')
    self.assertNotEqual(len(list_vms), 0, 'List VM response was empty')
    vm = list_vms[0]
    self.assertEqual(vm.state, 'Running', msg='VM is not in Running state')
