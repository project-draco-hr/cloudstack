{
  if (s_logger.isInfoEnabled())   s_logger.info("Build message handler cache for " + handlerClz.getName());
synchronized (s_handlerCache) {
    List<Method> handlerList=s_handlerCache.get(handlerClz);
    if (handlerList == null) {
      handlerList=new ArrayList<Method>();
      s_handlerCache.put(handlerClz,handlerList);
      Class<?> clz=handlerClz;
      while (clz != null && clz != Object.class) {
        for (        Method method : clz.getDeclaredMethods()) {
          MessageHandler annotation=method.getAnnotation(MessageHandler.class);
          if (annotation != null) {
            method.setAccessible(true);
            handlerList.add(method);
            if (s_logger.isInfoEnabled())             s_logger.info("Add message handler " + handlerClz.getName() + "."+ method.getName()+ " to cache");
          }
        }
        clz=clz.getSuperclass();
      }
    }
 else {
      if (s_logger.isInfoEnabled())       s_logger.info("Message handler for class " + handlerClz.getName() + " is already in cache");
    }
  }
  if (s_logger.isInfoEnabled())   s_logger.info("Done building message handler cache for " + handlerClz.getName());
}
