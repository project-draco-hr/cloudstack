{
  Method method=getHandlerMethod(work.getClass());
  if (method != null) {
    if (s_logger.isDebugEnabled())     s_logger.debug("Execute VM work job: " + work.getClass().getName() + _gsonLogger.toJson(work));
    Object obj=method.invoke(_target,work);
    if (s_logger.isDebugEnabled())     s_logger.debug("Done executing VM work job: " + work.getClass().getName() + _gsonLogger.toJson(work));
    assert(obj instanceof Pair);
    return (Pair<JobInfo.Status,String>)obj;
  }
 else {
    s_logger.error("Unable to find handler for VM work job: " + work.getClass().getName() + _gsonLogger.toJson(work));
    RuntimeException e=new RuntimeException("Unsupported VM work job: " + work.getClass().getName() + _gsonLogger.toJson(work));
    String exceptionJson=JobSerializerHelper.toSerializedString(e);
    s_logger.error("Serialize exception object into json: " + exceptionJson);
    return new Pair<JobInfo.Status,String>(JobInfo.Status.FAILED,exceptionJson);
  }
}
