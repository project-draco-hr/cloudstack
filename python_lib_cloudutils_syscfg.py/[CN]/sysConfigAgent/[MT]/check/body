def check(self):
    if self.env.debug:
        return True
    if (self.env.agentMode == 'myCloud'):
        if (self.env.distribution.getVersion() != 'Ubuntu'):
            raise CloudInternalException('Need to run myCloud agent on an Ubuntu machine\n')
        elif (self.env.distribution.getRelease() != '10.04'):
            raise CloudInternalException('Need to run myCloud agent on an Ubuntu 10.04\n')
        elif (self.env.distribution.getArch() != 'x86_64'):
            raise CloudInternalException('Need to run myCloud agent on an 64bit machine\n')
        if os.path.exists('/var/lib/libvirt/images'):
            size = (-1)
            try:
                size = int(bash("df -P /var/lib/libvirt/images | tail -1 |awk '{print $4}'").getStdout())
            except:
                pass
            if ((size != (-1)) and (size < ((30 * 1024) * 1024))):
                raise CloudRuntimeException('Need at least 30G free disk space under /var/lib/libvirt/images')
        mem = (-1)
        try:
            mem = int(bash("free -g|grep Mem|awk '{print $2}'").getStdout())
        except:
            pass
        if ((mem != (-1)) and (mem < 1)):
            raise CloudRuntimeException('Need at least 1G memory')
    if (os.geteuid() != 0):
        raise CloudInternalException('Need to execute with root permission\n')
    hostname = bash('hostname -f')
    if (not hostname.isSuccess()):
        raise CloudInternalException('Checking hostname ... [Failed]\nPlease edit /etc/hosts, add a Fully Qualified Domain Name as your hostname\n')
    kvmEnabled = self.svo.isKVMEnabled()
    if (not kvmEnabled):
        raise CloudInternalException('Checking KVM...[Failed]\nPlease enable KVM on this machine\n')
    return True
