{
  Transaction txt=Transaction.currentTxn();
  try {
    txt.start();
    job.setInitMsid(getMsid());
    _jobDao.persist(job);
    txt.commit();
    job.setSyncSource(null);
    scheduleExecution(job,scheduleJobExecutionInContext);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("submit async job-" + job.getId() + ", details: "+ job.toString());
    }
    return job.getId();
  }
 catch (  Exception e) {
    txt.rollback();
    String errMsg="Unable to schedule async job for command " + job.getCmd() + ", unexpected exception.";
    s_logger.warn(errMsg,e);
    throw new CloudRuntimeException(errMsg);
  }
}
