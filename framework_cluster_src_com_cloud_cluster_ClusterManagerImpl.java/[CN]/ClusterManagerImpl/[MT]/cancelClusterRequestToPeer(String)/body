{
  final List<ClusterServiceRequestPdu> candidates=new ArrayList<ClusterServiceRequestPdu>();
synchronized (_outgoingPdusWaitingForAck) {
    for (    final Map.Entry<Long,ClusterServiceRequestPdu> entry : _outgoingPdusWaitingForAck.entrySet()) {
      if (entry.getValue().getDestPeer().equalsIgnoreCase(strPeer)) {
        candidates.add(entry.getValue());
      }
    }
    for (    final ClusterServiceRequestPdu pdu : candidates) {
      _outgoingPdusWaitingForAck.remove(pdu.getSequenceId());
    }
  }
  for (  final ClusterServiceRequestPdu pdu : candidates) {
    logger.warn("Cancel cluster request PDU to peer: " + strPeer + ", pdu: "+ pdu.getJsonPackage());
synchronized (pdu) {
      pdu.notifyAll();
    }
  }
}
