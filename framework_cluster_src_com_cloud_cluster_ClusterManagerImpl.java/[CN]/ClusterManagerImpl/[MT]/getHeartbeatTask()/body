{
  return new ManagedContextRunnable(){
    @Override protected void runInContext(){
      TransactionLegacy txn=TransactionLegacy.open("ClusterHeartbeat");
      try {
        Profiler profiler=new Profiler();
        Profiler profilerHeartbeatUpdate=new Profiler();
        Profiler profilerPeerScan=new Profiler();
        try {
          profiler.start();
          profilerHeartbeatUpdate.start();
          txn.transitToUserManagedConnection(getHeartbeatConnection());
          if (s_logger.isTraceEnabled()) {
            s_logger.trace("Cluster manager heartbeat update, id:" + _mshostId);
          }
          _mshostDao.update(_mshostId,_runId,DateUtil.currentGMTTime());
          profilerHeartbeatUpdate.stop();
          profilerPeerScan.start();
          if (s_logger.isTraceEnabled()) {
            s_logger.trace("Cluster manager peer-scan, id:" + _mshostId);
          }
          if (!_peerScanInited) {
            _peerScanInited=true;
            initPeerScan();
          }
          peerScan();
          profilerPeerScan.stop();
        }
  finally {
          profiler.stop();
          if (profiler.getDuration() >= HeartbeatInterval.value()) {
            if (s_logger.isDebugEnabled())             s_logger.debug("Management server heartbeat takes too long to finish. profiler: " + profiler.toString() + ", profilerHeartbeatUpdate: "+ profilerHeartbeatUpdate.toString()+ ", profilerPeerScan: "+ profilerPeerScan.toString());
          }
        }
      }
 catch (      CloudRuntimeException e) {
        s_logger.error("Runtime DB exception ",e.getCause());
        if (e.getCause() instanceof ClusterInvalidSessionException) {
          s_logger.error("Invalid cluster session found, fence it");
          queueNotification(new ClusterManagerMessage(ClusterManagerMessage.MessageType.nodeIsolated));
        }
        if (isRootCauseConnectionRelated(e.getCause())) {
          invalidHeartbeatConnection();
        }
      }
catch (      ActiveFencingException e) {
        queueNotification(new ClusterManagerMessage(ClusterManagerMessage.MessageType.nodeIsolated));
      }
catch (      Throwable e) {
        s_logger.error("Unexpected exception in cluster heartbeat",e);
        if (isRootCauseConnectionRelated(e.getCause())) {
          invalidHeartbeatConnection();
        }
      }
 finally {
        txn.transitToAutoManagedConnection(TransactionLegacy.CLOUD_DB);
        txn.close("ClusterHeartbeat");
      }
    }
  }
;
}
