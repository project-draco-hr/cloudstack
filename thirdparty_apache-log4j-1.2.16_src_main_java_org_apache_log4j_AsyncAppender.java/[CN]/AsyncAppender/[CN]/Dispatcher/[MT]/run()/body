{
  boolean isActive=true;
  try {
    while (isActive) {
      LoggingEvent[] events=null;
synchronized (buffer) {
        int bufferSize=buffer.size();
        isActive=!parent.closed;
        while ((bufferSize == 0) && isActive) {
          buffer.wait();
          bufferSize=buffer.size();
          isActive=!parent.closed;
        }
        if (bufferSize > 0) {
          events=new LoggingEvent[bufferSize + discardMap.size()];
          buffer.toArray(events);
          int index=bufferSize;
          for (Iterator iter=discardMap.values().iterator(); iter.hasNext(); ) {
            events[index++]=((DiscardSummary)iter.next()).createEvent();
          }
          buffer.clear();
          discardMap.clear();
          buffer.notifyAll();
        }
      }
      if (events != null) {
        for (int i=0; i < events.length; i++) {
synchronized (appenders) {
            appenders.appendLoopOnAppenders(events[i]);
          }
        }
      }
    }
  }
 catch (  InterruptedException ex) {
    Thread.currentThread().interrupt();
  }
}
