def __init__(self):
    'the id of the network offering'
    self.id = None
    'availability of the network offering'
    self.availability = None
    'true if network offering is ip conserve mode enabled'
    self.conservemode = None
    'the date this network offering was created'
    self.created = None
    'additional key/value details tied with network offering'
    self.details = None
    'an alternate display text of the network offering.'
    self.displaytext = None
    'true if network offering supports persistent networks, false otherwise'
    self.egressdefaultpolicy = None
    'true if network offering can be used by VPC networks only'
    self.forvpc = None
    'guest type of the network offering, can be Shared or Isolated'
    self.guestiptype = None
    'true if network offering is default, false otherwise'
    self.isdefault = None
    'true if network offering supports persistent networks, false otherwise'
    self.ispersistent = None
    'maximum number of concurrents connections to be handled by lb'
    self.maxconnections = None
    'the name of the network offering'
    self.name = None
    'data transfer rate in megabits per second allowed.'
    self.networkrate = None
    'the ID of the service offering used by virtual router provider'
    self.serviceofferingid = None
    'true if network offering supports specifying ip ranges, false otherwise'
    self.specifyipranges = None
    'true if network offering supports vlans, false otherwise'
    self.specifyvlan = None
    'state of the network offering. Can be Disabled/Enabled/Inactive'
    self.state = None
    'the tags for the network offering'
    self.tags = None
    'the traffic type for the network offering, supported types are Public, Management, Control, Guest, Vlan or Storage.'
    self.traffictype = None
    'the list of supported services'
    self.service = []
