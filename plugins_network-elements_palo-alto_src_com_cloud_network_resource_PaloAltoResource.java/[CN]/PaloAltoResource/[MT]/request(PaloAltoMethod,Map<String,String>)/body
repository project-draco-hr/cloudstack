{
  if (method != PaloAltoMethod.GET && method != PaloAltoMethod.POST) {
    throw new ExecutionException("Invalid http method used to access the Palo Alto API.");
  }
  String responseBody="";
  String debug_msg="Palo Alto Request\n";
  if (method == PaloAltoMethod.GET) {
    String queryString="?";
    for (    String key : params.keySet()) {
      if (!queryString.equals("?")) {
        queryString=queryString + "&";
      }
      try {
        queryString=queryString + key + "="+ URLEncoder.encode(params.get(key),"UTF-8");
      }
 catch (      UnsupportedEncodingException e) {
        throw new ExecutionException(e.getMessage());
      }
    }
    if (_key != null) {
      queryString=queryString + "&key=" + _key;
    }
    try {
      debug_msg=debug_msg + "GET request: https://" + _ip+ _apiUri+ URLDecoder.decode(queryString,"UTF-8")+ "\n";
    }
 catch (    UnsupportedEncodingException e) {
      debug_msg=debug_msg + "GET request: https://" + _ip+ _apiUri+ queryString+ "\n";
    }
    HttpGet get_request=new HttpGet("https://" + _ip + _apiUri+ queryString);
    ResponseHandler<String> responseHandler=new BasicResponseHandler();
    try {
      responseBody=_httpclient.execute(get_request,responseHandler);
    }
 catch (    IOException e) {
      throw new ExecutionException(e.getMessage());
    }
  }
  if (method == PaloAltoMethod.POST) {
    List<NameValuePair> nvps=new ArrayList<NameValuePair>();
    for (    String key : params.keySet()) {
      nvps.add(new BasicNameValuePair(key,params.get(key)));
    }
    if (_key != null) {
      nvps.add(new BasicNameValuePair("key",_key));
    }
    debug_msg=debug_msg + "POST request: https://" + _ip+ _apiUri+ "\n";
    for (    NameValuePair nvp : nvps) {
      debug_msg=debug_msg + "param: " + nvp.getName()+ ", "+ nvp.getValue()+ "\n";
    }
    HttpPost post_request=new HttpPost("https://" + _ip + _apiUri);
    try {
      post_request.setEntity(new UrlEncodedFormEntity(nvps,HTTP.UTF_8));
    }
 catch (    UnsupportedEncodingException e) {
      throw new ExecutionException(e.getMessage());
    }
    ResponseHandler<String> responseHandler=new BasicResponseHandler();
    try {
      responseBody=_httpclient.execute(post_request,responseHandler);
    }
 catch (    IOException e) {
      throw new ExecutionException(e.getMessage());
    }
  }
  debug_msg=debug_msg + prettyFormat(responseBody);
  debug_msg=debug_msg + "\n" + responseBody.replace("\"","\\\"")+ "\n\n";
  return responseBody;
}
