{
  String job_id;
  String job_response=request(method,params);
  Document doc=getDocument(job_response);
  XPath xpath=XPathFactory.newInstance().newXPath();
  try {
    XPathExpression expr=xpath.compile("/response[@status='success']/result/job/text()");
    job_id=(String)expr.evaluate(doc,XPathConstants.STRING);
  }
 catch (  XPathExpressionException e) {
    throw new ExecutionException(e.getCause().getMessage());
  }
  if (job_id.length() > 0) {
    boolean finished=false;
    Map<String,String> job_params=new HashMap<String,String>();
    job_params.put("type","op");
    job_params.put("cmd","<show><jobs><id>" + job_id + "</id></jobs></show>");
    while (!finished) {
      String job_status;
      String response=request(PaloAltoMethod.GET,job_params);
      Document job_doc=getDocument(response);
      XPath job_xpath=XPathFactory.newInstance().newXPath();
      try {
        XPathExpression expr=job_xpath.compile("/response[@status='success']/result/job/status/text()");
        job_status=(String)expr.evaluate(job_doc,XPathConstants.STRING);
      }
 catch (      XPathExpressionException e) {
        throw new ExecutionException(e.getCause().getMessage());
      }
      if (job_status.equals("FIN")) {
        finished=true;
        String job_result;
        try {
          XPathExpression expr=job_xpath.compile("/response[@status='success']/result/job/result/text()");
          job_result=(String)expr.evaluate(job_doc,XPathConstants.STRING);
        }
 catch (        XPathExpressionException e) {
          throw new ExecutionException(e.getCause().getMessage());
        }
        if (!job_result.equals("OK")) {
          NodeList job_details;
          try {
            XPathExpression expr=job_xpath.compile("/response[@status='success']/result/job/details/line");
            job_details=(NodeList)expr.evaluate(job_doc,XPathConstants.NODESET);
          }
 catch (          XPathExpressionException e) {
            throw new ExecutionException(e.getCause().getMessage());
          }
          String error="";
          for (int i=0; i < job_details.getLength(); i++) {
            error=error + job_details.item(i).getTextContent() + "\n";
          }
          throw new ExecutionException(error);
        }
        return response;
      }
 else {
        try {
          Thread.sleep(2000);
        }
 catch (        InterruptedException e) {
        }
      }
    }
  }
 else {
    return job_response;
  }
  return null;
}
