{
  NaElement xi2;
  String[] splitLunName=lunName.split("-");
  String[] returnVal=new String[3];
  if (splitLunName.length != 2)   throw new InvalidParameterValueException("The lun id is malformed");
  String lunIdStr=splitLunName[1];
  Long lId=new Long(lunIdStr);
  LunVO lun=_lunDao.findById(lId);
  if (lun == null)   throw new InvalidParameterValueException("Cannot find LUN " + lunName);
  NetappVolumeVO vol=_volumeDao.findById(lun.getVolumeId());
  returnVal[0]=lunIdStr;
  returnVal[1]=lun.getTargetIqn();
  returnVal[2]=vol.getIpAddress();
  NaServer s=null;
  try {
    s=getServer(vol.getIpAddress(),vol.getUsername(),vol.getPassword());
    if (s_logger.isDebugEnabled())     s_logger.debug("Request --> associateLun " + ":serverIp:" + vol.getIpAddress());
    xi2=new NaElement("igroup-add");
    xi2.addNewChild("force","true");
    xi2.addNewChild("initiator",guestIqn);
    xi2.addNewChild("initiator-group-name",lunName);
    s.invokeElem(xi2);
    return returnVal;
  }
 catch (  UnknownHostException uhe) {
    s_logger.warn("Unable to associate LUN ",uhe);
    throw new ServerException("Unable to associate LUN",uhe);
  }
catch (  NaAPIFailedException naf) {
    if (naf.getErrno() == 9008) {
      return returnVal;
    }
    s_logger.warn("Unable to associate LUN ",naf);
    throw new ServerException("Unable to associate LUN",naf);
  }
catch (  NaException nae) {
    s_logger.warn("Unable to associate LUN ",nae);
    throw new ServerException("Unable to associate LUN",nae);
  }
catch (  IOException ioe) {
    s_logger.warn("Unable to associate LUN ",ioe);
    throw new ServerException("Unable to associate LUN",ioe);
  }
 finally {
    if (s != null)     s.close();
  }
}
