{
  VMInstanceVO vmVO=_vmDao.findById(vm.getId());
  NetworkVO networkVO=_networkDao.findById(network.getId());
  ReservationContext context=new ReservationContextImpl(null,null,_accountMgr.getActiveUser(User.UID_SYSTEM),_accountMgr.getAccount(Account.ACCOUNT_ID_SYSTEM));
  VirtualMachineProfileImpl<VMInstanceVO> vmProfile=new VirtualMachineProfileImpl<VMInstanceVO>(vmVO,null,null,null,null);
  DataCenter dc=_configMgr.getZone(network.getDataCenterId());
  Host host=_hostDao.findById(vm.getHostId());
  DeployDestination dest=new DeployDestination(dc,null,null,host);
  s_logger.debug("Adding vm " + vm + " to network "+ network);
  Transaction txn=Transaction.currentTxn();
  txn.start();
  NicProfile nic=_networkMgr.allocateNic(null,network,false,100,vmProfile).first();
  s_logger.debug("Nic is allocated successfully for vm " + vm + " in network "+ network);
  nic=_networkMgr.prepareNic(vmProfile,dest,context,nic.getId(),networkVO);
  s_logger.debug("Nic is prepared successfully for vm " + vm + " in network "+ network);
  txn.commit();
  HypervisorGuru hvGuru=_hvGuruMgr.getGuru(vmProfile.getVirtualMachine().getHypervisorType());
  VirtualMachineTO vmTO=hvGuru.implement(vmProfile);
  NicTO nicTO=hvGuru.toNicTO(nic);
  VirtualMachineGuru<VMInstanceVO> vmGuru=getVmGuru(vmVO);
  if (vmGuru.plugNic(network,nicTO,vmTO,context,dest)) {
    s_logger.debug("Nic is plugged successfully for vm " + vm + " in network "+ network+ ". Vm  is a part of network now");
    return true;
  }
 else {
    s_logger.warn("Failed to plug nic to the vm " + vm + " in network "+ network);
    return false;
  }
}
