{
  if (vm == null || vm.getRemoved() != null) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Unable to find vm or vm is destroyed: " + vm);
    }
    return true;
  }
  if (!this.advanceStop(vm,false,caller,account)) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Unable to stop the VM so we can't expunge it.");
    }
  }
  try {
    if (!stateTransitTo(vm,VirtualMachine.Event.ExpungeOperation,vm.getHostId())) {
      s_logger.debug("Unable to destroy the vm because it is not in the correct state: " + vm);
      return false;
    }
  }
 catch (  NoTransitionException e) {
    s_logger.debug("Unable to destroy the vm because it is not in the correct state: " + vm);
    return false;
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Destroying vm " + vm);
  }
  VirtualMachineProfile<T> profile=new VirtualMachineProfileImpl<T>(vm);
  s_logger.debug("Cleaning up NICS");
  _networkMgr.cleanupNics(profile);
  this.volumeMgr.cleanupVolumes(vm.getId());
  VirtualMachineGuru<T> guru=getVmGuru(vm);
  guru.finalizeExpunge(vm);
  _uservmDetailsDao.deleteDetails(vm.getId());
  HypervisorGuru hvGuru=_hvGuruMgr.getGuru(vm.getHypervisorType());
  List<Command> finalizeExpungeCommands=hvGuru.finalizeExpunge(vm);
  if (finalizeExpungeCommands != null && finalizeExpungeCommands.size() > 0) {
    Long hostId=vm.getHostId() != null ? vm.getHostId() : vm.getLastHostId();
    if (hostId != null) {
      Commands cmds=new Commands(OnError.Stop);
      for (      Command command : finalizeExpungeCommands) {
        cmds.addCommand(command);
      }
      _agentMgr.send(hostId,cmds);
      if (!cmds.isSuccessful()) {
        for (        Answer answer : cmds.getAnswers()) {
          if (answer != null && !answer.getResult()) {
            s_logger.warn("Failed to expunge vm due to: " + answer.getDetails());
            break;
          }
        }
        return false;
      }
    }
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Expunged " + vm);
  }
  return true;
}
