{
  _name=name;
  ComponentLocator locator=ComponentLocator.getCurrentLocator();
  ConfigurationDao configDao=locator.getDao(ConfigurationDao.class);
  Map<String,String> params=configDao.getConfiguration(xmlParams);
  _retry=NumbersUtil.parseInt(params.get(Config.StartRetry.key()),10);
  ReservationContextImpl.setComponents(_userDao,_domainDao,_accountDao);
  VirtualMachineProfileImpl.setComponents(_offeringDao,_templateDao,_accountDao);
  _cancelWait=NumbersUtil.parseLong(params.get(Config.VmOpCancelInterval.key()),3600);
  _cleanupWait=NumbersUtil.parseLong(params.get(Config.VmOpCleanupWait.key()),3600);
  _cleanupInterval=NumbersUtil.parseLong(params.get(Config.VmOpCleanupInterval.key()),86400) * 1000;
  _opWaitInterval=NumbersUtil.parseLong(params.get(Config.VmOpWaitInterval.key()),120) * 1000;
  _lockStateRetry=NumbersUtil.parseInt(params.get(Config.VmOpLockStateRetry.key()),5);
  _operationTimeout=NumbersUtil.parseInt(params.get(Config.Wait.key()),1800) * 2;
  _executor=Executors.newScheduledThreadPool(1,new NamedThreadFactory("Vm-Operations-Cleanup"));
  _nodeId=_clusterMgr.getId();
  _agentMgr.registerForHostEvents(this,true,true,true);
  return true;
}
