{
  VirtualMachineGuru<T> vmGuru=getVmGuru(vm);
  long vmId=vm.getId();
  vm=vmGuru.findById(vmId);
  try {
    stateTransitTo(vm,VirtualMachine.Event.StorageMigrationRequested,null);
  }
 catch (  NoTransitionException e) {
    s_logger.debug("Unable to migrate vm: " + e.toString());
    throw new CloudRuntimeException("Unable to migrate vm: " + e.toString());
  }
  VirtualMachineProfile<VMInstanceVO> profile=new VirtualMachineProfileImpl<VMInstanceVO>(vm);
  boolean migrationResult=false;
  try {
    migrationResult=_storageMgr.StorageMigration(profile,destPool);
    if (migrationResult) {
      if (vm.getPodIdToDeployIn() != destPool.getPodId()) {
        DataCenterDeployment plan=new DataCenterDeployment(vm.getDataCenterIdToDeployIn(),destPool.getPodId(),null,null,null,null);
        VirtualMachineProfileImpl<T> vmProfile=new VirtualMachineProfileImpl<T>(vm,null,null,null,null);
        _networkMgr.reallocate(vmProfile,plan);
      }
      vm.setLastHostId(null);
      vm.setPodId(destPool.getPodId());
    }
 else {
      s_logger.debug("Storage migration failed");
    }
  }
 catch (  ConcurrentOperationException e) {
    s_logger.debug("Failed to migration: " + e.toString());
    throw new CloudRuntimeException("Failed to migration: " + e.toString());
  }
catch (  InsufficientVirtualNetworkCapcityException e) {
    s_logger.debug("Failed to migration: " + e.toString());
    throw new CloudRuntimeException("Failed to migration: " + e.toString());
  }
catch (  InsufficientAddressCapacityException e) {
    s_logger.debug("Failed to migration: " + e.toString());
    throw new CloudRuntimeException("Failed to migration: " + e.toString());
  }
catch (  InsufficientCapacityException e) {
    s_logger.debug("Failed to migration: " + e.toString());
    throw new CloudRuntimeException("Failed to migration: " + e.toString());
  }
 finally {
    try {
      stateTransitTo(vm,VirtualMachine.Event.AgentReportStopped,null);
    }
 catch (    NoTransitionException e) {
      s_logger.debug("Failed to change vm state: " + e.toString());
      throw new CloudRuntimeException("Failed to change vm state: " + e.toString());
    }
  }
  return vm;
}
