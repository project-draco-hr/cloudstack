{
  List<NicVO> nicList=_nicsDao.listByVmId(vm.getId());
  List<NicVO> copyOfnicList=new ArrayList<NicVO>(nicList);
  for (  NicVO nic : nicList) {
    Network network=_networkDao.findById(nic.getNetworkId());
    DhcpServiceProvider dhcpServiceProvider=_networkMgr.getDhcpServiceProvider(network);
    Map<Network.Capability,String> capabilities=dhcpServiceProvider.getCapabilities().get(Network.Service.Dhcp);
    String supportsMultipleSubnets=capabilities.get(Network.Capability.DhcpAccrossMultipleSubnets);
    if ((supportsMultipleSubnets != null && Boolean.valueOf(supportsMultipleSubnets) && network.getTrafficType() == Networks.TrafficType.Guest && network.getGuestType() == Network.GuestType.Shared)) {
      if (_nicsDao.listByNetworkIdTypeAndGatewayAndBroadcastUri(nic.getNetworkId(),VirtualMachine.Type.User,nic.getGateway(),nic.getBroadcastUri()).size() > 1) {
        copyOfnicList.remove(nic);
      }
    }
 else {
      copyOfnicList.remove(nic);
    }
  }
  return copyOfnicList;
}
