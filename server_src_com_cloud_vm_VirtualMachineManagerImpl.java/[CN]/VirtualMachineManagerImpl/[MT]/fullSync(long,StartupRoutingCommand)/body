{
  Commands commands=new Commands(OnError.Continue);
  Map<Long,AgentVmInfo> infos=convertToInfos(startup.getVmStates());
  if (startup.isPoolSync()) {
    long hId=0;
    Host host=_hostDao.findById(hostId);
    long clusterId=host.getClusterId();
    final List<? extends VMInstanceVO> vms=_vmDao.listByClusterId(clusterId);
    s_logger.debug("Found " + vms.size() + " VMs for cluster "+ clusterId);
    for (    VMInstanceVO vm : vms) {
      AgentVmInfo info=infos.remove(vm.getId());
      VMInstanceVO castedVm=null;
      if (info == null) {
        info=new AgentVmInfo(vm.getInstanceName(),getVmGuru(vm),vm,State.Stopped);
        hId=0;
        castedVm=info.guru.findById(vm.getId());
      }
 else {
        castedVm=info.vm;
        String host_guid=info.getHost();
        host=_resourceMgr.findHostByGuid(host_guid);
        if (host == null) {
          infos.put(vm.getId(),info);
          continue;
        }
        hId=host.getId();
        HypervisorGuru hvGuru=_hvGuruMgr.getGuru(castedVm.getHypervisorType());
        Command command=compareState(hId,castedVm,info,true,hvGuru.trackVmHostChange());
        if (command != null) {
          commands.addCommand(command);
        }
      }
    }
    for (    final AgentVmInfo left : infos.values()) {
      s_logger.warn("Stopping a VM that we have no record of: " + left.name);
      commands.addCommand(cleanup(left.name));
    }
  }
 else {
    final List<? extends VMInstanceVO> vms=_vmDao.listByHostId(hostId);
    s_logger.debug("Found " + vms.size() + " VMs for host "+ hostId);
    for (    VMInstanceVO vm : vms) {
      AgentVmInfo info=infos.remove(vm.getId());
      VMInstanceVO castedVm=null;
      if (info == null) {
        info=new AgentVmInfo(vm.getInstanceName(),getVmGuru(vm),vm,State.Stopped);
        castedVm=info.guru.findById(vm.getId());
      }
 else {
        castedVm=info.vm;
      }
      HypervisorGuru hvGuru=_hvGuruMgr.getGuru(castedVm.getHypervisorType());
      Command command=compareState(hostId,castedVm,info,true,hvGuru.trackVmHostChange());
      if (command != null) {
        commands.addCommand(command);
      }
    }
    for (    final AgentVmInfo left : infos.values()) {
      boolean found=false;
      for (      VirtualMachineGuru<? extends VMInstanceVO> vmGuru : _vmGurus.values()) {
        VMInstanceVO vm=vmGuru.findByName(left.name);
        if (vm != null) {
          found=true;
          HypervisorGuru hvGuru=_hvGuruMgr.getGuru(vm.getHypervisorType());
          if (hvGuru.trackVmHostChange()) {
            Command command=compareState(hostId,vm,left,true,true);
            if (command != null) {
              commands.addCommand(command);
            }
          }
 else {
            s_logger.warn("Stopping a VM,  VM " + left.name + " migrate from Host "+ vm.getHostId()+ " to Host "+ hostId);
            commands.addCommand(cleanup(left.name));
          }
          break;
        }
      }
      if (!found) {
        s_logger.warn("Stopping a VM that we have no record of: " + left.name);
        commands.addCommand(cleanup(left.name));
      }
    }
  }
  return commands;
}
