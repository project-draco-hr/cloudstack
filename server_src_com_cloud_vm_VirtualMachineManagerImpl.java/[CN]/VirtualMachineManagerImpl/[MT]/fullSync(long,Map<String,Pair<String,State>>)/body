{
  if (newStates == null)   return;
  Map<Long,AgentVmInfo> infos=convertToInfos(newStates);
  Set<VMInstanceVO> set_vms=Collections.synchronizedSet(new HashSet<VMInstanceVO>());
  set_vms.addAll(_vmDao.listByClusterId(clusterId));
  set_vms.addAll(_vmDao.listLHByClusterId(clusterId));
  for (  VMInstanceVO vm : set_vms) {
    if (vm.isRemoved() || vm.getState() == State.Destroyed || vm.getState() == State.Expunging)     continue;
    AgentVmInfo info=infos.remove(vm.getId());
    VMInstanceVO castedVm=null;
    if ((info == null && (vm.getState() == State.Running || vm.getState() == State.Starting)) || (info != null && (info.state == State.Running && vm.getState() == State.Starting))) {
      s_logger.info("Found vm " + vm.getInstanceName() + " in inconsistent state. "+ vm.getState()+ " on CS while "+ (info == null ? "Stopped" : "Running")+ " on agent");
      info=new AgentVmInfo(vm.getInstanceName(),getVmGuru(vm),vm,State.Stopped);
      vm.setState(State.Running);
      _vmDao.persist(vm);
      castedVm=info.guru.findById(vm.getId());
      try {
        Host host=_hostDao.findByGuid(info.getHostUuid());
        long hostId=host == null ? (vm.getHostId() == null ? vm.getLastHostId() : vm.getHostId()) : host.getId();
        HypervisorGuru hvGuru=_hvGuruMgr.getGuru(castedVm.getHypervisorType());
        Command command=compareState(hostId,castedVm,info,true,hvGuru.trackVmHostChange());
        if (command != null) {
          Answer answer=_agentMgr.send(hostId,command);
          if (!answer.getResult()) {
            s_logger.warn("Failed to update state of the VM due to " + answer.getDetails());
          }
        }
      }
 catch (      Exception e) {
        s_logger.warn("Unable to update state of the VM due to exception " + e.getMessage());
        e.printStackTrace();
      }
    }
 else     if (info != null && vm.getState() == State.Running) {
      Host host=_hostDao.findByGuid(info.getHostUuid());
      if (host != null && (vm.getHostId() == null || host.getId() != vm.getHostId())) {
        s_logger.info("Found vm " + vm.getInstanceName() + " with inconsistent host in db, new host is "+ host.getId());
        try {
          stateTransitTo(vm,VirtualMachine.Event.AgentReportMigrated,host.getId());
        }
 catch (        NoTransitionException e) {
          s_logger.warn(e.getMessage());
        }
      }
    }
  }
  for (  final AgentVmInfo left : infos.values()) {
    if (VirtualMachineName.isValidVmName(left.name))     continue;
    try {
      Host host=_hostDao.findByGuid(left.getHostUuid());
      if (host != null) {
        s_logger.warn("Stopping a VM which we do not have any record of " + left.name);
        Answer answer=_agentMgr.send(host.getId(),cleanup(left.name));
        if (!answer.getResult()) {
          s_logger.warn("Unable to stop a VM due to " + answer.getDetails());
        }
      }
    }
 catch (    Exception e) {
      s_logger.warn("Unable to stop a VM due to " + e.getMessage());
    }
  }
}
