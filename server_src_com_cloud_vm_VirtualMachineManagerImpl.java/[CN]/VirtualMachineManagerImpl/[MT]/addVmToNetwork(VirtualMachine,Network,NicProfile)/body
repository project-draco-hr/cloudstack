{
  s_logger.debug("Adding vm " + vm + " to network "+ network);
  VMInstanceVO vmVO=_vmDao.findById(vm.getId());
  NetworkVO networkVO=_networkDao.findById(network.getId());
  ReservationContext context=new ReservationContextImpl(null,null,_accountMgr.getActiveUser(User.UID_SYSTEM),_accountMgr.getAccount(Account.ACCOUNT_ID_SYSTEM));
  VirtualMachineProfileImpl<VMInstanceVO> vmProfile=new VirtualMachineProfileImpl<VMInstanceVO>(vmVO,null,null,null,null);
  DataCenter dc=_configMgr.getZone(network.getDataCenterId());
  Host host=_hostDao.findById(vm.getHostId());
  DeployDestination dest=new DeployDestination(dc,null,null,host);
  NicProfile nic=null;
  String broadcastUri=null;
  if (requested != null && requested.getBroadCastUri() != null) {
    broadcastUri=requested.getBroadCastUri().toString();
    NicVO nicVO=_nicsDao.findByInstanceIdNetworkIdAndBroadcastUri(network.getId(),vm.getId(),broadcastUri);
    if (nicVO != null) {
      nic=_networkMgr.getNicProfile(vm,network.getId());
    }
  }
  if (nic == null) {
    s_logger.debug("Allocating nic for the " + vm + " in network "+ network);
    int deviceId=_nicsDao.countNics(vm.getId());
    nic=_networkMgr.allocateNic(requested,network,false,deviceId,vmProfile).first();
    if (nic == null) {
      throw new CloudRuntimeException("Failed to allocate nic for vm " + vm + " in network "+ network);
    }
    s_logger.debug("Nic is allocated successfully for vm " + vm + " in network "+ network);
    nic=_networkMgr.prepareNic(vmProfile,dest,context,nic.getId(),networkVO);
    s_logger.debug("Nic is prepared successfully for vm " + vm + " in network "+ network);
  }
  HypervisorGuru hvGuru=_hvGuruMgr.getGuru(vmProfile.getVirtualMachine().getHypervisorType());
  VirtualMachineTO vmTO=hvGuru.implement(vmProfile);
  NicTO nicTO=toNicTO(nic,vmProfile.getVirtualMachine().getHypervisorType());
  VirtualMachineGuru<VMInstanceVO> vmGuru=getVmGuru(vmVO);
  s_logger.debug("Plugging nic for vm " + vm + " in network "+ network);
  if (vmGuru.plugNic(network,nicTO,vmTO,context,dest)) {
    s_logger.debug("Nic is plugged successfully for vm " + vm + " in network "+ network+ ". Vm  is a part of network now");
    return nic;
  }
 else {
    s_logger.warn("Failed to plug nic to the vm " + vm + " in network "+ network);
    return null;
  }
}
