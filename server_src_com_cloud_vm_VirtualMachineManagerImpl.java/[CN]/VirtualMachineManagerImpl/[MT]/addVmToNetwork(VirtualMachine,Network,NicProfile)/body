{
  s_logger.debug("Adding vm " + vm + " to network "+ network+ "; requested nic profile "+ requested);
  VMInstanceVO vmVO;
  if (vm.getType() == VirtualMachine.Type.User) {
    vmVO=_userVmDao.findById(vm.getId());
  }
 else {
    vmVO=_vmDao.findById(vm.getId());
  }
  ReservationContext context=new ReservationContextImpl(null,null,_accountMgr.getActiveUser(User.UID_SYSTEM),_accountMgr.getAccount(Account.ACCOUNT_ID_SYSTEM));
  VirtualMachineProfileImpl<VMInstanceVO> vmProfile=new VirtualMachineProfileImpl<VMInstanceVO>(vmVO,null,null,null,null);
  DataCenter dc=_configMgr.getZone(network.getDataCenterId());
  Host host=_hostDao.findById(vm.getHostId());
  DeployDestination dest=new DeployDestination(dc,null,null,host);
  if (vm.getState() == State.Running) {
    NicProfile nic=_networkMgr.createNicForVm(network,requested,context,vmProfile,true);
    HypervisorGuru hvGuru=_hvGuruMgr.getGuru(vmProfile.getVirtualMachine().getHypervisorType());
    VirtualMachineTO vmTO=hvGuru.implement(vmProfile);
    NicTO nicTO=toNicTO(nic,vmProfile.getVirtualMachine().getHypervisorType());
    VirtualMachineGuru<VMInstanceVO> vmGuru=getVmGuru(vmVO);
    s_logger.debug("Plugging nic for vm " + vm + " in network "+ network);
    if (vmGuru.plugNic(network,nicTO,vmTO,context,dest)) {
      s_logger.debug("Nic is plugged successfully for vm " + vm + " in network "+ network+ ". Vm  is a part of network now");
      return nic;
    }
 else {
      s_logger.warn("Failed to plug nic to the vm " + vm + " in network "+ network);
      return null;
    }
  }
 else   if (vm.getState() == State.Stopped) {
    return _networkMgr.createNicForVm(network,requested,context,vmProfile,false);
  }
 else {
    s_logger.warn("Unable to add vm " + vm + " to network  "+ network);
    throw new ResourceUnavailableException("Unable to add vm " + vm + " to network, is not in the right state",DataCenter.class,vm.getDataCenterIdToDeployIn());
  }
}
