{
  if (!userVmData.isInitialized()) {
    userVmData.setAccountId(rs.getLong("account.id"));
    userVmData.setAccountName(rs.getString("account.account_name"));
    userVmData.setDomainName(rs.getString("domain.name"));
    long grp_id=rs.getLong("instance_group.id");
    if (grp_id > 0) {
      userVmData.setGroupId(grp_id);
      userVmData.setGroup(rs.getString("instance_group.name"));
    }
    userVmData.setZoneId(rs.getLong("data_center.id"));
    userVmData.setZoneName(rs.getString("data_center.name"));
    userVmData.setHostId(rs.getLong("host.id"));
    userVmData.setHostName(rs.getString("host.name"));
    long template_id=rs.getLong("vm_template.id");
    if (template_id > 0) {
      userVmData.setTemplateId(template_id);
      userVmData.setTemplateName(rs.getString("vm_template.name"));
      userVmData.setTemplateDisplayText(rs.getString("vm_template.display_text"));
      userVmData.setPasswordEnabled(rs.getBoolean("vm_template.enable_password"));
    }
 else {
      userVmData.setTemplateId(-1L);
      userVmData.setTemplateName("ISO Boot");
      userVmData.setTemplateDisplayText("ISO Boot");
      userVmData.setPasswordEnabled(false);
    }
    long iso_id=rs.getLong("iso.id");
    if (iso_id > 0) {
      userVmData.setIsoId(iso_id);
      userVmData.setIsoName(rs.getString("iso.name"));
    }
    userVmData.setServiceOfferingId(rs.getLong("service_offering.id"));
    userVmData.setServiceOfferingName(rs.getString("disk_offering.name"));
    userVmData.setCpuNumber(rs.getInt("service_offering.cpu"));
    userVmData.setCpuSpeed(rs.getInt("service_offering.speed"));
    userVmData.setMemory(rs.getInt("service_offering.ram_size"));
    long vol_id=rs.getLong("volumes.id");
    if (vol_id > 0) {
      userVmData.setRootDeviceId(rs.getLong("volumes.device_id"));
      userVmData.setRootDeviceType(rs.getString("volumes.volume_type"));
      long pool_id=rs.getLong("storage_pool.id");
      if (pool_id > 0) {
        userVmData.setRootDeviceType(rs.getString("storage_pool.pool_type"));
      }
 else {
        userVmData.setRootDeviceType("Not created");
      }
    }
    userVmData.setInitialized();
  }
  Long securityGroupId=rs.getLong("security_group.id");
  if (securityGroupId != null && securityGroupId.longValue() != 0) {
    SecurityGroupData resp=userVmData.newSecurityGroupData();
    resp.setId(rs.getLong("security_group.id"));
    resp.setName(rs.getString("security_group.name"));
    resp.setDescription(rs.getString("security_group.description"));
    resp.setObjectName("securitygroup");
    userVmData.addSecurityGroup(resp);
  }
  long nic_id=rs.getLong("nics.id");
  if (nic_id > 0) {
    NicData nicResponse=userVmData.newNicData();
    nicResponse.setId(nic_id);
    nicResponse.setIpaddress(rs.getString("nics.ip4_address"));
    nicResponse.setGateway(rs.getString("nics.gateway"));
    nicResponse.setNetmask(rs.getString("nics.netmask"));
    nicResponse.setNetworkid(rs.getLong("nics.network_id"));
    nicResponse.setMacAddress(rs.getString("nics.mac_address"));
    int account_type=rs.getInt("account.type");
    if (account_type == Account.ACCOUNT_TYPE_ADMIN) {
      nicResponse.setBroadcastUri(rs.getString("nics.broadcast_uri"));
      nicResponse.setIsolationUri(rs.getString("nics.isolation_uri"));
    }
    nicResponse.setTrafficType(rs.getString("networks.traffic_type"));
    nicResponse.setType(rs.getString("networks.guest_type"));
    nicResponse.setIsDefault(rs.getBoolean("nics.default_nic"));
    nicResponse.setObjectName("nic");
    userVmData.addNic(nicResponse);
  }
  long publicIpId=rs.getLong("user_ip_address.id");
  if (publicIpId > 0) {
    userVmData.setPublicIpId(publicIpId);
    userVmData.setPublicIp(rs.getString("user_ip_address.public_ip_address"));
  }
  return userVmData;
}
