{
  Transaction txn=Transaction.currentTxn();
  List<VMTemplateVO> permittedTemplates=new ArrayList<VMTemplateVO>();
  PreparedStatement pstmt=null;
  try {
    String sql=LIST_PERMITTED_TEMPLATES;
    pstmt=txn.prepareAutoCloseStatement(sql);
    pstmt.setLong(1,accountId);
    ResultSet rs=pstmt.executeQuery();
    while (rs.next()) {
      long id=rs.getLong(1);
      String uniqueName=rs.getString(2);
      String name=rs.getString(3);
      boolean isPublic=rs.getBoolean(4);
      String value=rs.getString(5);
      ImageFormat format=ImageFormat.valueOf(value);
      String filesystem=rs.getString(6);
      boolean requiresHVM=rs.getBoolean(7);
      int bits=rs.getInt(8);
      String url=rs.getString(9);
      String createdTS=rs.getString(10);
      long templateAccountId=rs.getLong(11);
      String checksum=rs.getString(12);
      String displayText=rs.getString(13);
      boolean enablePassword=rs.getBoolean(14);
      long guestOSId=rs.getLong(15);
      boolean featured=rs.getBoolean(16);
      Date createdDate=null;
      if (createdTS != null) {
        createdDate=DateUtil.parseDateString(s_gmtTimeZone,createdTS);
      }
      if (isPublic) {
        continue;
      }
      VMTemplateVO template=new VMTemplateVO(id,uniqueName,name,format,isPublic,featured,FileSystem.valueOf(filesystem),url,createdDate,requiresHVM,bits,templateAccountId,checksum,displayText,enablePassword,guestOSId,true);
      permittedTemplates.add(template);
    }
  }
 catch (  Exception e) {
    s_logger.warn("Error listing permitted templates",e);
  }
  return permittedTemplates;
}
