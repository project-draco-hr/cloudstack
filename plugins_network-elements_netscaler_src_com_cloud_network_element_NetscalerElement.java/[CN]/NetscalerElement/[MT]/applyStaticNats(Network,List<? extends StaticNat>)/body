{
  if (!canHandle(config,Service.StaticNat)) {
    return false;
  }
  boolean multiNetScalerDeployment=Boolean.valueOf(_configDao.getValue(Config.EIPWithMultipleNetScalersEnabled.key()));
  try {
    if (!multiNetScalerDeployment) {
      String errMsg;
      ExternalLoadBalancerDeviceVO lbDevice=getExternalLoadBalancerForNetwork(config);
      if (lbDevice == null) {
        try {
          lbDevice=allocateLoadBalancerForNetwork(config);
        }
 catch (        Exception e) {
          errMsg="Could not allocate a NetSclaer load balancer for configuring static NAT rules due to" + e.getMessage();
          s_logger.error(errMsg);
          throw new ResourceUnavailableException(errMsg,this.getClass(),0);
        }
      }
      if (!isNetscalerDevice(lbDevice.getDeviceName())) {
        errMsg="There are no NetScaler load balancer assigned for this network. So NetScaler element will not be handling the static nat rules.";
        s_logger.error(errMsg);
        throw new ResourceUnavailableException(errMsg,this.getClass(),0);
      }
      SetStaticNatRulesAnswer answer=null;
      List<StaticNatRuleTO> rulesTO=null;
      if (rules != null) {
        rulesTO=new ArrayList<StaticNatRuleTO>();
        for (        StaticNat rule : rules) {
          IpAddress sourceIp=_networkMgr.getIp(rule.getSourceIpAddressId());
          StaticNatRuleTO ruleTO=new StaticNatRuleTO(0,sourceIp.getAddress().addr(),null,null,rule.getDestIpAddress(),null,null,null,rule.isForRevoke(),false);
          rulesTO.add(ruleTO);
        }
      }
      SetStaticNatRulesCommand cmd=new SetStaticNatRulesCommand(rulesTO);
      answer=(SetStaticNatRulesAnswer)_agentMgr.send(lbDevice.getHostId(),cmd);
      if (answer == null) {
        return false;
      }
 else {
        return answer.getResult();
      }
    }
 else {
      if (rules != null) {
        for (        StaticNat rule : rules) {
          ExternalLoadBalancerDeviceVO lbDevice=getNetScalerForEIP(rule);
          if (lbDevice == null) {
            String errMsg="There is no NetScaler device configured to perform EIP to guest IP address: " + rule.getDestIpAddress();
            s_logger.error(errMsg);
            throw new ResourceUnavailableException(errMsg,this.getClass(),0);
          }
          List<StaticNatRuleTO> rulesTO=new ArrayList<StaticNatRuleTO>();
          IpAddress sourceIp=_networkMgr.getIp(rule.getSourceIpAddressId());
          StaticNatRuleTO ruleTO=new StaticNatRuleTO(0,sourceIp.getAddress().addr(),null,null,rule.getDestIpAddress(),null,null,null,rule.isForRevoke(),false);
          rulesTO.add(ruleTO);
          SetStaticNatRulesCommand cmd=new SetStaticNatRulesCommand(rulesTO);
          SetStaticNatRulesAnswer answer=(SetStaticNatRulesAnswer)_agentMgr.send(lbDevice.getHostId(),cmd);
          if (answer == null) {
            String errMsg="Failed to configure INAT rule on NetScaler device " + lbDevice.getHostId();
            s_logger.error(errMsg);
            throw new ResourceUnavailableException(errMsg,this.getClass(),0);
          }
        }
        return true;
      }
    }
    return true;
  }
 catch (  Exception e) {
    s_logger.error("Failed to configure StaticNat rule due to " + e.getMessage());
    return false;
  }
}
