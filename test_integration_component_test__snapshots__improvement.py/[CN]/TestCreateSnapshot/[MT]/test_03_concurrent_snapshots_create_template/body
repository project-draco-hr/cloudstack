@attr(speed='slow')
@attr(tags=['advanced', 'advancedns'])
@attr(configuration='concurrent.snapshots.threshold.perhost')
def test_03_concurrent_snapshots_create_template(self):
    'Test while parent concurrent snapshot job in progress,create\n            template from completed snapshot\n\n            1.Configure the concurrent.snapshots.threshold.perhost=3\n            2.Deploy a Linux VM using default CentOS template, use small\n            service offering, disk offering\n            3.Perform snapshot on root disk of this newly created VMs(10 vms)\n            4.while parent concurrent snapshot job in progress,create template\n            from completed snapshot'
    self.debug('Create virtual machine and snapshot on ROOT disk')
    self.create_Snapshot_VM()
    self.debug('Verify whether snapshots were created properly or not?')
    self.verify_Snapshots()
    self.debug(('Fetch the list of snapshots belong to account: %s' % self.account.name))
    snapshots = self.get_Snapshots_For_Account(self.account.name, self.account.domainid)
    jobs = []
    for snapshot in snapshots:
        self.debug(('Create a template from snapshot: %s' % snapshot.name))
        jobs.append(self.create_Template_from_Snapshot(snapshot))
    self.testClient.submitCmdsAndWait(jobs)
    self.debug('Verifying if templates are created properly or not?')
    templates = Template.list(self.apiclient, templatefilter=self.services['template']['templatefilter'], account=self.account.name, domainid=self.account.domainid, listall=True)
    self.assertNotEqual(templates, None, 'Check if result exists in list item call')
    for template in templates:
        self.assertEqual(template.isready, True, 'Check new template state in list templates call')
    self.debug('Test completed successfully.')
    return
