{
  SearchCriteria<StoragePoolVO> sc=_storagePoolDao.createSearchCriteria();
  List<StoragePoolVO> pools=new ArrayList<StoragePoolVO>();
  if (zoneId != null) {
    sc.addAnd("dataCenterId",SearchCriteria.Op.EQ,zoneId);
  }
  if (podId != null) {
    sc.addAnd("podId",SearchCriteria.Op.EQ,podId);
  }
  if (clusterId != null) {
    sc.addAnd("clusterId",SearchCriteria.Op.EQ,clusterId);
  }
  if (poolId != null) {
    sc.addAnd("hostOrPoolId",SearchCriteria.Op.EQ,poolId);
  }
  if (poolId != null) {
    pools.add(_storagePoolDao.findById(poolId));
  }
 else {
    pools=_storagePoolDao.search(sc,null);
  }
  CapacityVO capacity=new CapacityVO(poolId,zoneId,podId,clusterId,0,0,Capacity.CAPACITY_TYPE_STORAGE);
  for (  StoragePoolVO PrimaryDataStoreVO : pools) {
    StorageStats stats=ApiDBUtils.getStoragePoolStatistics(PrimaryDataStoreVO.getId());
    if (stats == null) {
      continue;
    }
    capacity.setUsedCapacity(stats.getByteUsed() + capacity.getUsedCapacity());
    capacity.setTotalCapacity(stats.getCapacityBytes() + capacity.getTotalCapacity());
  }
  return capacity;
}
