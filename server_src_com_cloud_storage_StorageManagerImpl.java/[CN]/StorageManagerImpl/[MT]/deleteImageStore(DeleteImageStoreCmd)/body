{
  final long storeId=cmd.getId();
  ImageStoreVO store=_imageStoreDao.findById(storeId);
  if (store == null) {
    throw new InvalidParameterValueException("Image store with id " + storeId + " doesn't exist");
  }
  _accountMgr.checkAccessAndSpecifyAuthority(CallContext.current().getCallingAccount(),store.getDataCenterId());
  List<SnapshotDataStoreVO> snapshots=_snapshotStoreDao.listByStoreId(storeId,DataStoreRole.Image);
  if (snapshots != null && snapshots.size() > 0) {
    throw new InvalidParameterValueException("Cannot delete image store with active snapshots backup!");
  }
  List<VolumeDataStoreVO> volumes=_volumeStoreDao.listByStoreId(storeId);
  if (volumes != null && volumes.size() > 0) {
    throw new InvalidParameterValueException("Cannot delete image store with active volumes backup!");
  }
  List<TemplateJoinVO> templates=_templateViewDao.listActiveTemplates(storeId);
  if (templates != null && templates.size() > 0) {
    throw new InvalidParameterValueException("Cannot delete image store with active templates backup!");
  }
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      _imageStoreDetailsDao.deleteDetails(storeId);
      _snapshotStoreDao.deletePrimaryRecordsForStore(storeId,DataStoreRole.Image);
      _volumeStoreDao.deletePrimaryRecordsForStore(storeId);
      _templateStoreDao.deletePrimaryRecordsForStore(storeId);
      _imageStoreDao.remove(storeId);
    }
  }
);
  return true;
}
