{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Creating volume: " + toBeCreated);
  }
  DiskProfile diskProfile=new DiskProfile(toBeCreated,offering,vm.getHypervisorType());
  VMTemplateVO template=null;
  if (toBeCreated.getTemplateId() != null) {
    template=_templateDao.findById(toBeCreated.getTemplateId());
  }
  if (dest.getStorageForDisks() != null) {
    StoragePool pool=dest.getStorageForDisks().get(toBeCreated);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Trying to create in " + pool);
    }
    toBeCreated.setPoolId(pool.getId());
    try {
      stateTransitTo(toBeCreated,Volume.Event.OperationRetry);
    }
 catch (    NoTransitionException e) {
      throw new CloudRuntimeException("Unable to retry a create operation on volume " + toBeCreated);
    }
    CreateCommand cmd=null;
    VMTemplateStoragePoolVO tmpltStoredOn=null;
    for (int i=0; i < 2; i++) {
      if (template != null && template.getFormat() != Storage.ImageFormat.ISO) {
        tmpltStoredOn=_tmpltMgr.prepareTemplateForCreate(template,pool);
        if (tmpltStoredOn == null) {
          s_logger.debug("Cannot use this pool " + pool + " because we can't propagate template "+ template);
          return null;
        }
        cmd=new CreateCommand(diskProfile,tmpltStoredOn.getLocalDownloadPath(),new StorageFilerTO(pool));
      }
 else {
        if (template != null && Storage.ImageFormat.ISO == template.getFormat()) {
          VMTemplateHostVO tmpltHostOn=_tmpltMgr.prepareISOForCreate(template,pool);
          if (tmpltHostOn == null) {
            throw new CloudRuntimeException("Did not find ISO in secondry storage in zone " + pool.getDataCenterId());
          }
        }
        cmd=new CreateCommand(diskProfile,new StorageFilerTO(pool));
      }
      long[] hostIdsToTryFirst={dest.getHost().getId()};
      Answer answer=sendToPool(pool,hostIdsToTryFirst,cmd);
      if (answer.getResult()) {
        CreateAnswer createAnswer=(CreateAnswer)answer;
        return new Pair<VolumeTO,StoragePool>(createAnswer.getVolume(),pool);
      }
 else {
        if (tmpltStoredOn != null && (answer instanceof CreateAnswer) && ((CreateAnswer)answer).templateReloadRequested()) {
          if (!_tmpltMgr.resetTemplateDownloadStateOnPool(tmpltStoredOn.getId())) {
            break;
          }
        }
 else {
          break;
        }
      }
    }
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Unable to create volume " + toBeCreated);
  }
  return null;
}
