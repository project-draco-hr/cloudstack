{
  Account account=UserContext.current().getCaller();
  Long volumeId=cmd.getId();
  boolean isAdmin;
  if (account == null) {
    isAdmin=true;
  }
 else {
    isAdmin=isAdmin(account.getType());
  }
  VolumeVO volume=_volsDao.findById(volumeId);
  if (volume == null) {
    throw new InvalidParameterValueException("Unable to find volume with ID: " + volumeId);
  }
  if (!isAdmin) {
    if (account.getId() != volume.getAccountId()) {
      throw new InvalidParameterValueException("Unable to find volume with ID: " + volumeId + " for account: "+ account.getAccountName());
    }
  }
 else   if ((account != null) && !_domainDao.isChildDomain(account.getDomainId(),volume.getDomainId())) {
    throw new PermissionDeniedException("Unable to delete volume with id " + volumeId + ", permission denied.");
  }
  if (!isAdmin) {
    if (account.getId() != volume.getAccountId()) {
      throw new InvalidParameterValueException("Unable to find volume with ID: " + volumeId + " for account: "+ account.getAccountName());
    }
  }
 else   if ((account != null) && !_domainDao.isChildDomain(account.getDomainId(),volume.getDomainId())) {
    throw new PermissionDeniedException("Unable to delete volume with id " + volumeId + ", permission denied.");
  }
  if (volume.getInstanceId() != null) {
    throw new InvalidParameterValueException("Please specify a volume that is not attached to any VM.");
  }
  if (volume.getState() != Volume.State.Destroy) {
    destroyVolume(volume);
  }
  try {
    expungeVolume(volume);
  }
 catch (  Exception e) {
    s_logger.warn("Failed to expunge volume:",e);
    return false;
  }
  return true;
}
