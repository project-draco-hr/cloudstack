{
  String providerName=cmd.getProviderName();
  DataStoreProvider storeProvider=_dataStoreProviderMgr.getDataStoreProvider(providerName);
  if (storeProvider == null) {
    storeProvider=_dataStoreProviderMgr.getDefaultImageDataStoreProvider();
    if (storeProvider == null) {
      throw new InvalidParameterValueException("can't find image store provider: " + providerName);
    }
  }
  Long dcId=cmd.getZoneId();
  String url=cmd.getUrl();
  Map details=cmd.getDetails();
  ScopeType scopeType=null;
  String scope=cmd.getScope();
  if (scope != null) {
    try {
      scopeType=Enum.valueOf(ScopeType.class,scope.toUpperCase());
    }
 catch (    Exception e) {
      throw new InvalidParameterValueException("invalid scope" + scope);
    }
  }
  if (scopeType == ScopeType.ZONE && dcId == null) {
    throw new InvalidParameterValueException("zone id can't be null, if scope is zone");
  }
  if (dcId != null) {
    DataCenterVO zone=_dcDao.findById(dcId);
    if (zone == null) {
      throw new InvalidParameterValueException("Can't find zone by id " + dcId);
    }
    Account account=UserContext.current().getCaller();
    if (Grouping.AllocationState.Disabled == zone.getAllocationState() && !_accountMgr.isRootAdmin(account.getType())) {
      PermissionDeniedException ex=new PermissionDeniedException("Cannot perform this operation, Zone with specified id is currently disabled");
      ex.addProxyObject(zone,dcId,"dcId");
      throw ex;
    }
  }
  Map<String,Object> params=new HashMap<String,Object>();
  params.put("zoneId",dcId);
  params.put("url",cmd.getUrl());
  params.put("name",cmd.getUrl());
  params.put("details",details);
  params.put("scope",scopeType);
  params.put("providerName",storeProvider.getName());
  DataStoreLifeCycle lifeCycle=storeProvider.getDataStoreLifeCycle();
  DataStore store=null;
  try {
    store=lifeCycle.initialize(params);
  }
 catch (  Exception e) {
    s_logger.debug("Failed to add data store",e);
    throw new CloudRuntimeException("Failed to add data store",e);
  }
  return (ImageStore)_dataStoreMgr.getDataStore(store.getId(),DataStoreRole.Image);
}
