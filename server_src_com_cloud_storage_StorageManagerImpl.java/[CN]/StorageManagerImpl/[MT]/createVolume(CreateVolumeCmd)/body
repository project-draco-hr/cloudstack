{
  VolumeVO volume=_volsDao.findById(cmd.getEntityId());
  Long userId=UserContext.current().getUserId();
  if (cmd.getSnapshotId() != null) {
    return createVolumeFromSnapshot(volume,cmd.getSnapshotId(),cmd.getStartEventId());
  }
 else {
    DataCenterVO dc=_dcDao.findById(cmd.getZoneId());
    DiskOfferingVO diskOffering=_diskOfferingDao.findById(cmd.getDiskOfferingId());
    long sizeMB=diskOffering.getDiskSize();
    EventVO event=new EventVO();
    event.setAccountId(volume.getAccountId());
    event.setUserId(userId);
    event.setType(EventTypes.EVENT_VOLUME_CREATE);
    event.setStartId(cmd.getStartEventId());
    _accountMgr.incrementResourceCount(volume.getAccountId(),ResourceType.volume);
    VolumeVO volForUpdate=_volsDao.createForUpdate();
    volForUpdate.setSourceId(diskOffering.getId());
    volForUpdate.setSourceType(SourceType.DiskOffering);
    volForUpdate.setStatus(AsyncInstanceCreateStatus.Created);
    _volsDao.update(volume.getId(),volForUpdate);
    String eventParams="id=" + volume.getId() + "\ndoId="+ diskOffering.getId()+ "\ntId="+ -1+ "\ndcId="+ dc.getId()+ "\nsize="+ sizeMB;
    event.setLevel(EventVO.LEVEL_INFO);
    event.setDescription("Created volume: " + volume.getName() + " with size: "+ sizeMB+ " MB");
    event.setParameters(eventParams);
    event.setState(Event.State.Completed);
    _eventDao.persist(event);
  }
  return _volsDao.findById(volume.getId());
}
