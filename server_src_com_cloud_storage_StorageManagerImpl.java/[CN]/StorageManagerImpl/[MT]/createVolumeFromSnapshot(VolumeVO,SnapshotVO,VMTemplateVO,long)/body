{
  VolumeVO createdVolume=null;
  Long volumeId=null;
  String volumeFolder=null;
  Account account=_accountDao.findById(volume.getAccountId());
  final HashSet<StoragePool> poolsToAvoid=new HashSet<StoragePool>();
  StoragePoolVO pool=null;
  boolean success=false;
  Set<Long> podsToAvoid=new HashSet<Long>();
  Pair<HostPodVO,Long> pod=null;
  String volumeUUID=null;
  String details=null;
  DiskOfferingVO diskOffering=_diskOfferingDao.findById(volume.getDiskOfferingId());
  DataCenterVO dc=_dcDao.findById(volume.getDataCenterId());
  DiskProfile dskCh=createDiskCharacteristics(volume,template,dc,diskOffering);
  int retry=0;
  while ((pod=_agentMgr.findPod(null,null,dc,account.getId(),podsToAvoid)) != null) {
    podsToAvoid.add(pod.first().getId());
    while ((pool=findStoragePool(dskCh,dc,pod.first(),null,null,null,null,poolsToAvoid)) != null) {
      poolsToAvoid.add(pool);
      volumeFolder=pool.getPath();
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Attempting to create volume from snapshotId: " + snapshot.getId() + " on storage pool "+ pool.getName());
      }
      Pair<String,String> volumeDetails=createVDIFromSnapshot(UserContext.current().getUserId(),snapshot,pool);
      volumeUUID=volumeDetails.first();
      details=volumeDetails.second();
      if (volumeUUID != null) {
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Volume with UUID " + volumeUUID + " was created on storage pool "+ pool.getName());
        }
        success=true;
        break;
      }
 else {
        retry++;
        if (retry >= 3) {
          _volsDao.expunge(volumeId);
          String msg="Unable to create volume from snapshot " + snapshot.getId() + " after retrying 3 times, due to "+ details;
          s_logger.debug(msg);
          throw new CloudRuntimeException(msg);
        }
      }
      s_logger.warn("Unable to create volume on pool " + pool.getName() + ", reason: "+ details);
    }
    if (success) {
      break;
    }
  }
  if (!success) {
    _volsDao.expunge(volumeId);
    String msg="Unable to create volume from snapshot " + snapshot.getId() + " due to "+ details;
    s_logger.debug(msg);
    throw new CloudRuntimeException(msg);
  }
  Transaction txn=Transaction.currentTxn();
  txn.start();
  createdVolume=_volsDao.findById(volumeId);
  if (success) {
    _accountMgr.incrementResourceCount(account.getId(),ResourceType.volume);
    createdVolume.setStatus(AsyncInstanceCreateStatus.Created);
    createdVolume.setPodId(pod.first().getId());
    createdVolume.setPoolId(pool.getId());
    createdVolume.setPoolType(pool.getPoolType());
    createdVolume.setFolder(volumeFolder);
    createdVolume.setPath(volumeUUID);
    createdVolume.setDomainId(account.getDomainId());
    createdVolume.setState(Volume.State.Ready);
  }
 else {
    createdVolume.setStatus(AsyncInstanceCreateStatus.Corrupted);
    createdVolume.setDestroyed(true);
  }
  _volsDao.update(volumeId,createdVolume);
  txn.commit();
  return new Pair<VolumeVO,String>(createdVolume,details);
}
