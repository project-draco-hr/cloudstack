{
  try {
    List<DataStore> imageStores=this.dataStoreMgr.getImageStoresByScope(new ZoneScope(null));
    for (    DataStore store : imageStores) {
      try {
        long storeId=store.getId();
        List<TemplateDataStoreVO> destroyedTemplateStoreVOs=this._templateStoreDao.listDestroyed(storeId);
        s_logger.debug("Secondary storage garbage collector found " + destroyedTemplateStoreVOs.size() + " templates to cleanup on template_store_ref for store: "+ store.getName());
        for (        TemplateDataStoreVO destroyedTemplateStoreVO : destroyedTemplateStoreVOs) {
          if (s_logger.isDebugEnabled()) {
            s_logger.debug("Deleting template store DB entry: " + destroyedTemplateStoreVO);
          }
          _templateStoreDao.remove(destroyedTemplateStoreVO.getId());
        }
      }
 catch (      Exception e) {
        s_logger.warn("problem cleaning up templates in template_store_ref for store: " + store.getName(),e);
      }
    }
    for (    DataStore store : imageStores) {
      try {
        List<SnapshotDataStoreVO> destroyedSnapshotStoreVOs=_snapshotStoreDao.listDestroyed(store.getId());
        s_logger.debug("Secondary storage garbage collector found " + destroyedSnapshotStoreVOs.size() + " snapshots to cleanup on snapshot_store_ref for store: "+ store.getName());
        for (        SnapshotDataStoreVO destroyedSnapshotStoreVO : destroyedSnapshotStoreVOs) {
          SnapshotInfo snap=snapshotFactory.getSnapshot(destroyedSnapshotStoreVO.getSnapshotId(),store);
          if (snap.getChild() != null) {
            s_logger.debug("Skip snapshot on store: " + destroyedSnapshotStoreVO + " , because it has child");
            continue;
          }
          if (s_logger.isDebugEnabled()) {
            s_logger.debug("Deleting snapshot store DB entry: " + destroyedSnapshotStoreVO);
          }
          _snapshotStoreDao.remove(destroyedSnapshotStoreVO.getId());
        }
      }
 catch (      Exception e2) {
        s_logger.warn("problem cleaning up snapshots in snapshot_store_ref for store: " + store.getName(),e2);
      }
    }
    for (    DataStore store : imageStores) {
      try {
        List<VolumeDataStoreVO> destroyedStoreVOs=_volumeStoreDao.listDestroyed(store.getId());
        s_logger.debug("Secondary storage garbage collector found " + destroyedStoreVOs.size() + " volumes to cleanup on volume_store_ref for store: "+ store.getName());
        for (        VolumeDataStoreVO destroyedStoreVO : destroyedStoreVOs) {
          if (s_logger.isDebugEnabled()) {
            s_logger.debug("Deleting volume store DB entry: " + destroyedStoreVO);
          }
          _volumeStoreDao.remove(destroyedStoreVO.getId());
        }
      }
 catch (      Exception e2) {
        s_logger.warn("problem cleaning up volumes in volume_store_ref for store: " + store.getName(),e2);
      }
    }
  }
 catch (  Exception e3) {
    s_logger.warn("problem cleaning up secondary storage DB entries. ",e3);
  }
}
