{
  SearchCriteria<Long> sc=UpHostsInPoolSearch.create();
  sc.setParameters("pool",pool.getId());
  sc.setJoinParameters("hosts","status",Status.Up);
  List<Long> hostIds=_storagePoolHostDao.customSearch(sc,null);
  Collections.shuffle(hostIds);
  if (hostIdsToTryFirst != null) {
    for (int i=hostIdsToTryFirst.length - 1; i >= 0; i--) {
      if (hostIds.remove(hostIdsToTryFirst[i])) {
        hostIds.add(0,hostIdsToTryFirst[i]);
      }
    }
  }
  if (hostIdsToAvoid != null) {
    hostIds.removeAll(hostIdsToAvoid);
  }
  for (  Long hostId : hostIds) {
    try {
      return new Pair<Long,Answer[]>(hostId,_agentMgr.send(hostId,cmds));
    }
 catch (    AgentUnavailableException e) {
      s_logger.debug("Unable to send storage pool command to " + pool,e);
    }
catch (    OperationTimedoutException e) {
      s_logger.debug("Unable to send storage pool command to " + pool,e);
    }
  }
  throw new StorageUnavailableException("Unable to send command to the pool ",pool.getId());
}
