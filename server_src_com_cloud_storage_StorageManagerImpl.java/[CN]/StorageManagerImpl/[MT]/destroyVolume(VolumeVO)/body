{
  try {
    if (!stateTransitTo(volume,Volume.Event.DestroyRequested)) {
      throw new ConcurrentOperationException("Failed to transit to destroyed state");
    }
  }
 catch (  NoTransitionException e) {
    s_logger.debug("Unable to destoy the volume: " + e.toString());
    return false;
  }
  long volumeId=volume.getId();
  _snapshotMgr.deletePoliciesForVolume(volumeId);
  Long instanceId=volume.getInstanceId();
  VMInstanceVO vmInstance=null;
  if (instanceId != null) {
    vmInstance=_vmInstanceDao.findById(instanceId);
  }
  if (instanceId == null || (vmInstance.getType().equals(VirtualMachine.Type.User))) {
    _resourceLimitMgr.decrementResourceCount(volume.getAccountId(),ResourceType.volume);
    UsageEventVO usageEvent=new UsageEventVO(EventTypes.EVENT_VOLUME_DELETE,volume.getAccountId(),volume.getDataCenterId(),volume.getId(),volume.getName());
    _usageEventDao.persist(usageEvent);
  }
  try {
    if (!stateTransitTo(volume,Volume.Event.OperationSucceeded)) {
      throw new ConcurrentOperationException("Failed to transit state");
    }
  }
 catch (  NoTransitionException e) {
    s_logger.debug("Unable to change volume state: " + e.toString());
    return false;
  }
  return true;
}
