{
  _accountMgr.checkAccess(caller,null,true,_accountMgr.getActiveAccountById(ownerId));
  _resourceLimitMgr.checkResourceLimit(_accountMgr.getAccount(ownerId),ResourceType.volume);
  DataCenterVO zone=_dcDao.findById(zoneId);
  if (zone == null) {
    throw new InvalidParameterValueException("Unable to find zone by id " + zoneId);
  }
  if (Grouping.AllocationState.Disabled == zone.getAllocationState() && !_accountMgr.isRootAdmin(caller.getType())) {
    throw new PermissionDeniedException("Cannot perform this operation, Zone is currently disabled: " + zoneId);
  }
  if (url.toLowerCase().contains("file://")) {
    throw new InvalidParameterValueException("File:// type urls are currently unsupported");
  }
  ImageFormat imgfmt=ImageFormat.valueOf(format.toUpperCase());
  if (imgfmt == null) {
    throw new IllegalArgumentException("Image format is incorrect " + format + ". Supported formats are "+ EnumUtils.listValues(ImageFormat.values()));
  }
  String userSpecifiedName=volumeName;
  if (userSpecifiedName == null) {
    userSpecifiedName=getRandomVolumeName();
  }
  if ((!url.toLowerCase().endsWith("vhd")) && (!url.toLowerCase().endsWith("vhd.zip")) && (!url.toLowerCase().endsWith("vhd.bz2"))&& (!url.toLowerCase().endsWith("vhd.gz"))&& (!url.toLowerCase().endsWith("qcow2"))&& (!url.toLowerCase().endsWith("qcow2.zip"))&& (!url.toLowerCase().endsWith("qcow2.bz2"))&& (!url.toLowerCase().endsWith("qcow2.gz"))&& (!url.toLowerCase().endsWith("ova"))&& (!url.toLowerCase().endsWith("ova.zip"))&& (!url.toLowerCase().endsWith("ova.bz2"))&& (!url.toLowerCase().endsWith("ova.gz"))&& (!url.toLowerCase().endsWith("img"))&& (!url.toLowerCase().endsWith("raw"))) {
    throw new InvalidParameterValueException("Please specify a valid " + format.toLowerCase());
  }
  if ((format.equalsIgnoreCase("vhd") && (!url.toLowerCase().endsWith("vhd") && !url.toLowerCase().endsWith("vhd.zip") && !url.toLowerCase().endsWith("vhd.bz2")&& !url.toLowerCase().endsWith("vhd.gz"))) || (format.equalsIgnoreCase("qcow2") && (!url.toLowerCase().endsWith("qcow2") && !url.toLowerCase().endsWith("qcow2.zip") && !url.toLowerCase().endsWith("qcow2.bz2")&& !url.toLowerCase().endsWith("qcow2.gz"))) || (format.equalsIgnoreCase("ova") && (!url.toLowerCase().endsWith("ova") && !url.toLowerCase().endsWith("ova.zip") && !url.toLowerCase().endsWith("ova.bz2")&& !url.toLowerCase().endsWith("ova.gz")))|| (format.equalsIgnoreCase("raw") && (!url.toLowerCase().endsWith("img") && !url.toLowerCase().endsWith("raw")))) {
    throw new InvalidParameterValueException("Please specify a valid URL. URL:" + url + " is an invalid for the format "+ format.toLowerCase());
  }
  validateUrl(url);
  return false;
}
