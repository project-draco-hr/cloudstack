{
  EventVO event=new EventVO();
  event.setUserId(UserContext.current().getUserId());
  event.setAccountId(volume.getAccountId());
  event.setType(EventTypes.EVENT_VOLUME_CREATE);
  event.setState(Event.State.Started);
  event.setStartId(startEventId);
  event.setDescription("Creating volume from snapshot with id: " + snapshotId);
  _eventDao.persist(event);
  VolumeVO createdVolume=null;
  String details=null;
  Long volumeId=null;
  SnapshotVO snapshot=_snapshotDao.findById(snapshotId);
  Long origVolumeId=snapshot.getVolumeId();
  VolumeVO originalVolume=_volsDao.findById(origVolumeId);
  VMTemplateVO template=null;
  if (originalVolume != null) {
    template=_templateDao.findById(originalVolume.getTemplateId());
  }
  DataCenterVO dc=_dcDao.findById(originalVolume.getDataCenterId());
  Pair<VolumeVO,String> volumeDetails=createVolumeFromSnapshot(volume,snapshot,template,originalVolume.getSize());
  createdVolume=volumeDetails.first();
  if (createdVolume != null) {
    volumeId=createdVolume.getId();
  }
  details=volumeDetails.second();
  Transaction txn=Transaction.currentTxn();
  txn.start();
  long templateId=-1;
  long diskOfferingId=-1;
  if (originalVolume.getTemplateId() != null) {
    templateId=originalVolume.getTemplateId();
  }
  diskOfferingId=originalVolume.getDiskOfferingId();
  long sizeMB=createdVolume.getSize() / (1024 * 1024);
  String poolName=_storagePoolDao.findById(createdVolume.getPoolId()).getName();
  String eventParams="id=" + volumeId + "\ndoId="+ diskOfferingId+ "\ntId="+ templateId+ "\ndcId="+ originalVolume.getDataCenterId()+ "\nsize="+ sizeMB;
  event=new EventVO();
  event.setAccountId(volume.getAccountId());
  event.setUserId(UserContext.current().getUserId());
  event.setType(EventTypes.EVENT_VOLUME_CREATE);
  event.setParameters(eventParams);
  event.setStartId(startEventId);
  event.setState(Event.State.Completed);
  if (createdVolume.getPath() != null) {
    event.setDescription("Created volume: " + createdVolume.getName() + " with size: "+ sizeMB+ " MB in pool: "+ poolName+ " from snapshot id: "+ snapshotId);
    event.setLevel(EventVO.LEVEL_INFO);
  }
 else {
    details="CreateVolume From Snapshot for snapshotId: " + snapshotId + " failed at the backend, reason "+ details;
    event.setDescription(details);
    event.setLevel(EventVO.LEVEL_ERROR);
  }
  _eventDao.persist(event);
  txn.commit();
  return createdVolume;
}
