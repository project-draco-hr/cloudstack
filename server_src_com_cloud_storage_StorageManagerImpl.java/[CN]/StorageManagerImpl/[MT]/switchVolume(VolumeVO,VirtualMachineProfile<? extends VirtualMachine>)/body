{
  Transaction txn=Transaction.currentTxn();
  try {
    txn.start();
    _volsDao.update(existingVolume,Volume.Event.Destroy);
    Long templateIdToUse=null;
    Long volTemplateId=existingVolume.getTemplateId();
    long vmTemplateId=vm.getTemplateId();
    if (volTemplateId != null && volTemplateId.longValue() != vmTemplateId) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("switchVolume: Old Volume's templateId: " + volTemplateId + " does not match the VM's templateId: "+ vmTemplateId+ ", updating templateId in the new Volume");
      }
      templateIdToUse=vmTemplateId;
    }
    VolumeVO newVolume=allocateDuplicateVolume(existingVolume,templateIdToUse);
    txn.commit();
    return newVolume;
  }
 catch (  ConcurrentOperationException e) {
    throw new StorageUnavailableException("Unable to duplicate the volume " + existingVolume,existingVolume.getPoolId(),e);
  }
}
