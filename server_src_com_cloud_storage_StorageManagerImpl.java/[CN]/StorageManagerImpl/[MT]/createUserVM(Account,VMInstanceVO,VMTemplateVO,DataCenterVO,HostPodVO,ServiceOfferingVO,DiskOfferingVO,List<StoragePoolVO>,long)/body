{
  List<VolumeVO> volumes=create(account,vm,template,dc,pod,offering,diskOffering,avoids,size);
  if (volumes == null || volumes.size() == 0) {
    throw new CloudRuntimeException("Unable to create volume for " + vm.getHostName());
  }
  for (  VolumeVO v : volumes) {
    try {
      v.setAttached(new Date());
      _volsDao.update(v.getId(),v);
    }
 catch (    Exception e) {
      s_logger.warn("Error updating the attached value for volume " + v.getId() + ":"+ e);
    }
    long templateId=-1;
    long doId=v.getDiskOfferingId();
    if (v.getVolumeType() == VolumeType.ROOT && Storage.ImageFormat.ISO != template.getFormat()) {
      templateId=template.getId();
      doId=-1;
    }
    long volumeId=v.getId();
    long sizeMB=v.getSize() / (1024 * 1024);
    String eventParams="id=" + volumeId + "\ndoId="+ doId+ "\ntId="+ templateId+ "\ndcId="+ dc.getId()+ "\nsize="+ sizeMB;
    EventVO event=new EventVO();
    event.setAccountId(account.getId());
    event.setUserId(1L);
    event.setType(EventTypes.EVENT_VOLUME_CREATE);
    event.setParameters(eventParams);
    event.setDescription("Created volume: " + v.getName() + " with size: "+ sizeMB+ " MB");
    _eventDao.persist(event);
  }
  return volumes.get(0).getPoolId();
}
