@attr(tags=['advancedns'])
def test_03_delete_lb_rule(self):
    'Test delete LB rule\n        '
    self.debug('Deleting existing load balancing rule')
    self.lb_rule.delete(self.apiclient)
    self.debug('SSH into Netscaler to verify other resources are deleted')
    try:
        ssh_client = SshClient(self.testdata['configurableData']['netscaler']['ipaddress'], self.testdata['configurableData']['netscaler']['port'], self.testdata['configurableData']['netscaler']['username'], self.testdata['configurableData']['netscaler']['password'])
        cmd = ('show lb vserver Cloud-VirtualServer-%s-%s' % (self.public_ip.ipaddress.ipaddress, self.lb_rule.publicport))
        self.debug(('command: %s' % cmd))
        res = ssh_client.execute(cmd)
        result = str(res)
        self.debug(('Output: %s' % result))
        self.assertEqual(result.count('ERROR: No such resource'), 1, 'Virtual server should get deleted after removing LB rule')
        cmd = 'show ip'
        self.debug(('command: %s' % cmd))
        res = ssh_client.execute(cmd)
        result = str(res)
        self.debug(('Output: %s' % result))
        self.assertEqual(result.count(self.public_ip.ipaddress.ipaddress), 0, 'Virtual server should get deleted after removing LB rule')
    except Exception as e:
        self.fail(('SSH Access failed for %s: %s' % (self.testdata['configurableData']['netscaler']['ipaddress'], e)))
    return
