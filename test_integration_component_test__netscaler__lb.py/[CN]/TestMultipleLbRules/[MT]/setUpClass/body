@classmethod
def setUpClass(cls):
    cls._cleanup = []
    cls.testClient = super(TestMultipleLbRules, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.testdata = cls.testClient.getParsedTestDataConfig()
    cls.domain = get_domain(cls.api_client)
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.template = get_template(cls.api_client, cls.zone.id, cls.testdata['ostype'])
    cls.testdata['lbrule']['publicport'] = 22
    cls.testdata['configurableData']['netscaler']['lbdevicededicated'] = False
    try:
        cls.netscaler = add_netscaler(cls.api_client, cls.zone.id, cls.testdata['configurableData']['netscaler'])
        cls._cleanup.append(cls.netscaler)
        cls.network_offering = NetworkOffering.create(cls.api_client, cls.testdata['nw_off_isolated_netscaler'], conservemode=True)
        cls.network_offering.update(cls.api_client, state='Enabled')
        cls.testdata['small']['zoneid'] = cls.zone.id
        cls.testdata['small']['template'] = cls.template.id
        cls.service_offering = ServiceOffering.create(cls.api_client, cls.testdata['service_offering'])
    except Exception as e:
        cls.tearDownClass()
        raise Exception(('Warning: Exception in setUpClass: %s' % e))
    return
