def get_modulus(self, min, prefer, max):
    bitsizes = self.pack.keys()
    bitsizes.sort()
    if (len(bitsizes) == 0):
        raise SSHException('no moduli available')
    good = (-1)
    for b in bitsizes:
        if ((b >= prefer) and (b < max) and ((b < good) or (good == (-1)))):
            good = b
    if (good == (-1)):
        for b in bitsizes:
            if ((b >= min) and (b < max) and (b > good)):
                good = b
    if (good == (-1)):
        good = bitsizes[0]
        if (min > good):
            good = bitsizes[(-1)]
    n = _roll_random(self.randpool, len(self.pack[good]))
    return self.pack[good][n]
