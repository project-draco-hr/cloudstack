def _roll_random(rpool, n):
    'returns a random # from 0 to N-1'
    bits = util.bit_length((n - 1))
    bytes = ((bits + 7) // 8)
    hbyte_mask = (pow(2, (bits % 8)) - 1)
    while True:
        x = rpool.get_bytes(bytes)
        if (hbyte_mask > 0):
            x = (chr((ord(x[0]) & hbyte_mask)) + x[1:])
        num = util.inflate_long(x, 1)
        if (num < n):
            break
    return num
