{
  Long policyId=(Long)params.get(BaseCmd.Properties.ID.getName());
  String policyIds=(String)params.get(BaseCmd.Properties.IDS.getName());
  Long userId=(Long)params.get(BaseCmd.Properties.USER_ID.getName());
  if (userId == null) {
    userId=Long.valueOf(1);
  }
  if ((policyId == null) && (policyIds == null)) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"No policy id (or list off ids) specified.");
  }
  List<Long> policyIdList=new ArrayList<Long>();
  if (policyId != null) {
    policyIdList.add(policyId);
  }
 else   if (policyIds != null) {
    StringTokenizer st=new StringTokenizer(policyIds,",");
    while (st.hasMoreTokens()) {
      String token=st.nextToken();
      try {
        Long nextId=Long.parseLong(token);
        policyIdList.add(nextId);
      }
 catch (      NumberFormatException nfe) {
        throw new ServerApiException(BaseCmd.PARAM_ERROR,"The policy id " + token + " is not a valid parameter.");
      }
    }
  }
  ManagementServer managementServer=getManagementServer();
  for (  Long policy : policyIdList) {
    SnapshotPolicyVO snapshotPolicyVO=managementServer.findSnapshotPolicyById(policy);
    if (snapshotPolicyVO == null) {
      throw new ServerApiException(BaseCmd.PARAM_ERROR,"Policy id given: " + policy + " does not exist");
    }
    VolumeVO volume=managementServer.findVolumeById(snapshotPolicyVO.getVolumeId());
    if (volume == null) {
      throw new ServerApiException(BaseCmd.PARAM_ERROR,"Policy id given: " + policy + " does not belong to a valid volume");
    }
    checkAccountPermissions(params,volume.getAccountId(),volume.getDomainId(),"volume",volume.getId());
  }
  try {
    boolean success=true;
    if (policyIdList.size() > 0) {
      success=managementServer.deleteSnapshotPolicies(userId,policyIdList);
    }
    List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.SUCCESS.getName(),Boolean.valueOf(success).toString()));
    return returnValues;
  }
 catch (  InvalidParameterValueException ex) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Error deleting snapshot policy: " + ex.getMessage());
  }
}
