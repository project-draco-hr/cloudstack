{
  StringBuilder sb=new StringBuilder();
  NmsRequest nmsRequest=new NmsRequest(object,method,params);
  if (logger.isDebugEnabled()) {
    logger.debug(nmsRequest);
  }
  final Gson gson=new Gson();
  String jsonRequest=gson.toJson(nmsRequest);
  StringEntity input=new StringEntity(jsonRequest,ContentType.APPLICATION_JSON);
  HttpPost postRequest=new HttpPost(nmsUrl.toString());
  postRequest.setEntity(input);
  DefaultHttpClient httpClient=getClient();
  try {
    HttpResponse response=httpClient.execute(postRequest);
    final int status=response.getStatusLine().getStatusCode();
    if (!isSuccess(status)) {
      throw new CloudRuntimeException("Failed on JSON-RPC API call. HTTP error code = " + status);
    }
    try (BufferedReader buffer=new BufferedReader(new InputStreamReader(response.getEntity().getContent()))){
      String tmp;
      while ((tmp=buffer.readLine()) != null) {
        sb.append(tmp);
      }
    }
 catch (    IOException ex) {
      throw new CloudRuntimeException(ex.getMessage());
    }
  }
 catch (  ClientProtocolException ex) {
    throw new CloudRuntimeException(ex.getMessage());
  }
catch (  IOException ex) {
    throw new CloudRuntimeException(ex.getMessage());
  }
 finally {
    if (httpClient != null) {
      try {
        httpClient.getConnectionManager().shutdown();
      }
 catch (      Exception t) {
        logger.debug(t.getMessage());
      }
    }
  }
  String responseString=sb.toString();
  if (logger.isDebugEnabled()) {
    logger.debug("NexentaStor Appliance response: " + responseString);
  }
  NmsResponse nmsResponse=(NmsResponse)gson.fromJson(responseString,responseClass);
  if (nmsResponse.getError() != null) {
    throw new CloudRuntimeException(nmsResponse.getError().getMesssage());
  }
  return nmsResponse;
}
