{
  List<AclGroupPolicyMapVO> policyGrpMap=_aclGroupPolicyMapDao.listByGroupId(groupId);
  if (policyGrpMap == null || policyGrpMap.size() == 0) {
    return new ArrayList<AclPolicy>();
  }
  List<Long> policyIds=new ArrayList<Long>();
  for (  AclGroupPolicyMapVO pg : policyGrpMap) {
    policyIds.add(pg.getAclPolicyId());
  }
  SearchBuilder<AclPolicyPermissionVO> permSb=_policyPermissionDao.createSearchBuilder();
  permSb.and("isRecursive",permSb.entity().isRecursive(),Op.EQ);
  SearchBuilder<AclPolicyVO> sb=_aclPolicyDao.createSearchBuilder();
  sb.and("ids",sb.entity().getId(),Op.IN);
  sb.join("recursivePerm",permSb,sb.entity().getId(),permSb.entity().getAclPolicyId(),JoinBuilder.JoinType.INNER);
  SearchCriteria<AclPolicyVO> sc=sb.create();
  sc.setParameters("ids",policyIds.toArray(new Object[policyIds.size()]));
  sc.setJoinParameters("recursivePerm","isRecursive",true);
  @SuppressWarnings("rawtypes") List policies=_aclPolicyDao.customSearch(sc,null);
  return policies;
}
