{
  SearchBuilder<IAMGroupAccountMapVO> groupSB=_aclGroupAccountMapDao.createSearchBuilder();
  groupSB.and("account",groupSB.entity().getAccountId(),Op.EQ);
  GenericSearchBuilder<IAMGroupPolicyMapVO,Long> policySB=_aclGroupPolicyMapDao.createSearchBuilder(Long.class);
  policySB.selectFields(policySB.entity().getAclPolicyId());
  policySB.join("accountgroupjoin",groupSB,groupSB.entity().getAclGroupId(),policySB.entity().getAclGroupId(),JoinType.INNER);
  policySB.done();
  SearchCriteria<Long> policySc=policySB.create();
  policySc.setJoinParameters("accountgroupjoin","account",accountId);
  List<Long> policyIds=_aclGroupPolicyMapDao.customSearch(policySc,null);
  List<IAMAccountPolicyMapVO> acctPolicies=_aclAccountPolicyMapDao.listByAccountId(accountId);
  for (  IAMAccountPolicyMapVO p : acctPolicies) {
    policyIds.add(p.getIAMPolicyId());
  }
  if (policyIds.size() == 0) {
    return new ArrayList<IAMPolicy>();
  }
  SearchBuilder<IAMPolicyVO> sb=_aclPolicyDao.createSearchBuilder();
  sb.and("ids",sb.entity().getId(),Op.IN);
  SearchCriteria<IAMPolicyVO> sc=sb.create();
  sc.setParameters("ids",policyIds.toArray(new Object[policyIds.size()]));
  @SuppressWarnings("rawtypes") List policies=_aclPolicyDao.customSearch(sc,null);
  return policies;
}
