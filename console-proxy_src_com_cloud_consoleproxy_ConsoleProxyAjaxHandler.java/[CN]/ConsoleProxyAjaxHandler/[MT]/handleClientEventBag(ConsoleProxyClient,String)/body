{
  if (s_logger.isTraceEnabled())   s_logger.trace("Handle event bag, event bag: " + requestData);
  int start=requestData.indexOf("=");
  if (start < 0)   start=0;
 else   if (start > 0)   start++;
  String data=URLDecoder.decode(requestData.substring(start));
  String[] tokens=data.split("\\|");
  if (tokens != null && tokens.length > 0) {
    int count=0;
    try {
      count=Integer.parseInt(tokens[0]);
      int parsePos=1;
      int type, event, x, y, code, modifiers;
      for (int i=0; i < count; i++) {
        type=Integer.parseInt(tokens[parsePos++]);
        if (type == 1) {
          event=Integer.parseInt(tokens[parsePos++]);
          x=Integer.parseInt(tokens[parsePos++]);
          y=Integer.parseInt(tokens[parsePos++]);
          code=Integer.parseInt(tokens[parsePos++]);
          modifiers=Integer.parseInt(tokens[parsePos++]);
          Map<String,String> queryMap=new HashMap<String,String>();
          queryMap.put("event",String.valueOf(event));
          queryMap.put("x",String.valueOf(x));
          queryMap.put("y",String.valueOf(y));
          queryMap.put("code",String.valueOf(code));
          queryMap.put("modifier",String.valueOf(modifiers));
          handleClientEvent(viewer,event,queryMap);
        }
 else {
          event=Integer.parseInt(tokens[parsePos++]);
          code=Integer.parseInt(tokens[parsePos++]);
          modifiers=Integer.parseInt(tokens[parsePos++]);
          Map<String,String> queryMap=new HashMap<String,String>();
          queryMap.put("event",String.valueOf(event));
          queryMap.put("code",String.valueOf(code));
          queryMap.put("modifier",String.valueOf(modifiers));
          handleClientEvent(viewer,event,queryMap);
        }
      }
    }
 catch (    NumberFormatException e) {
      s_logger.warn("Exception in handle client event bag: " + data + ", ",e);
    }
catch (    Exception e) {
      s_logger.warn("Exception in handle client event bag: " + data + ", ",e);
    }
catch (    OutOfMemoryError e) {
      s_logger.error("Unrecoverable OutOfMemory Error, exit and let it be re-launched");
      System.exit(1);
    }
  }
}
