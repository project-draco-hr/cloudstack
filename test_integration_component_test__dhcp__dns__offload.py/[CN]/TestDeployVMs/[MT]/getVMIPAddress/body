def getVMIPAddress(self, id):
    '\n        This method retrieves the IP address from a deployed vm.\n        '
    params = ['externaldhcp.vmip.retrieval.interval', 'externaldhcp.vmip.max.retry']
    offload_params = {}
    for param in params:
        configs = Configurations.list(self.apiclient, name=param)
        self.assertEqual(validateList(configs)[0], PASS, 'List config returned invalid response')
        config = configs[0]
        offload_params[param] = config
    max_wait = (int(offload_params[params[0]].value) * int(offload_params[params[1]].value))
    wait = 0
    status = 0
    while (wait <= max_wait):
        vm_res = VirtualMachine.list(self.apiclient, id=id)
        self.assertEqual(validateList(vm_res)[0], PASS, 'vm list returned invalid response')
        for nic in vm_res[0].nic:
            if (nic.type == 'Shared'):
                if (nic.ipaddress is None):
                    time.sleep(int(offload_params[params[0]].value))
                    wait += int(offload_params[params[0]].value)
                    status = 0
                    break
                else:
                    status = 1
            else:
                continue
        if (status == 1):
            self.debug('CS has retrieved the vm ip address from the hypervisor')
            break
    return [status, vm_res[0].nic[0].ipaddress]
