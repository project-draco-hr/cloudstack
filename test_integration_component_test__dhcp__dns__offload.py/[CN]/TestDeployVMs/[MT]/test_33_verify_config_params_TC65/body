@attr(tags=['advanced'], required_hardware='True')
def test_33_verify_config_params_TC65(self):
    '\n        #@desc: Validate external dhcp config parameters against invalid values\n        #1.Generate random values using special characters, strings and numbers\n        #2.Try to update the config params with those values.\n        #3.Verify that invalid values are not allowed\n        '
    params = ['externaldhcp.vmip.retrieval.interval', 'externaldhcp.vmip.max.retry', 'externaldhcp.vmipFetch.threadPool.max']
    for param in params:
        random_num = ''.join((random.choice(((string.digits + string.punctuation) + string.ascii_letters)) for _ in range(3)))
        try:
            Configurations.update(self.apiclient, name=param, value=random_num)
            self.fail('FAIL:{} takes invalid value'.format(param))
        except Exception as e:
            self.debug(('Success: Updating dhcp config params with invalid values is not allowed                           and throws following message: %s' % e))
    return
