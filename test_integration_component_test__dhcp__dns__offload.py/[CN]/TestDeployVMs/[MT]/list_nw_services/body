@classmethod
def list_nw_services(cls, nw_id, nw_off_id):
    '\n        Verify network services in a network. List of services supported should be as per the\n        network offering with which it has been created.\n        return True if created network and network offering has same services else False\n        '
    nw_response = Network.list(cls.api_client, id=nw_id)
    assert (validateList(nw_response)[0] == PASS), 'list networks returned invalid response'
    nw_services = [service.name for service in nw_response[0].service]
    nw_off_res = NetworkOffering.list(cls.api_client, id=nw_off_id)
    assert (validateList(nw_off_res)[0] == PASS), 'list network offerings returned invalid response'
    nw_off_services = [service.name for service in nw_off_res[0].service]
    if ((len(nw_services) == len(nw_off_services)) and (len(nw_services) == 0)):
        return True
    elif (len(nw_services) != len(nw_off_services)):
        return False
    for srv in nw_services:
        if (srv not in nw_off_services):
            return False
    return True
