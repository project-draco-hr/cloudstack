{
  Long routerId=(Long)params.get(BaseCmd.Properties.ID.getName());
  Account account=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  DomainRouterVO router=getManagementServer().findDomainRouterById(routerId);
  if (router == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find a domain router with id " + routerId);
  }
  if ((account != null) && !getManagementServer().isChildDomain(account.getDomainId(),router.getDomainId())) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Invalid domain router id (" + routerId + ") given, unable to stop router.");
  }
  long jobId=getManagementServer().stopRouterAsync(routerId.longValue());
  if (jobId == 0) {
    s_logger.warn("Unable to schedule async-job for StopRouter comamnd");
  }
 else {
    if (s_logger.isDebugEnabled())     s_logger.debug("StopRouter command has been accepted, job id: " + jobId);
  }
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  returnValues.add(new Pair<String,Object>(BaseCmd.Properties.JOB_ID.getName(),Long.valueOf(jobId)));
  return returnValues;
}
