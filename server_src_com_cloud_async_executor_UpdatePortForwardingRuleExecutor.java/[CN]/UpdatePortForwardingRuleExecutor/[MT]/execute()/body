{
  if (getSyncSource() == null) {
    Gson gson=GsonHelper.getBuilder().create();
    AsyncJobManager asyncMgr=getAsyncJobMgr();
    AsyncJobVO job=getJob();
    CreateOrUpdateRuleParam param=gson.fromJson(job.getCmdInfo(),CreateOrUpdateRuleParam.class);
    ManagementServer ms=asyncMgr.getExecutorContext().getManagementServer();
    IPAddressVO ipAddr=ms.findIPAddressById(param.getAddress());
    DomainRouterVO router=ms.findDomainRouterBy(ipAddr.getAccountId(),ipAddr.getDataCenterId());
    asyncMgr.syncAsyncJobExecution(job.getId(),"Router",router.getId());
    return true;
  }
 else {
    Gson gson=GsonHelper.getBuilder().create();
    AsyncJobManager asyncMgr=getAsyncJobMgr();
    AsyncJobVO job=getJob();
    CreateOrUpdateRuleParam param=gson.fromJson(job.getCmdInfo(),CreateOrUpdateRuleParam.class);
    ManagementServer ms=asyncMgr.getExecutorContext().getManagementServer();
    try {
      FirewallRuleVO fwRule=ms.updatePortForwardingRule(param.getUserId(),param.getAddress(),param.getPrivateIpAddress(),param.getPort(),param.getPrivatePort(),param.getProtocol());
      if (fwRule != null) {
        getAsyncJobMgr().completeAsyncJob(job.getId(),AsyncJobResult.STATUS_SUCCEEDED,0,composeResultObject(ms,fwRule));
      }
 else {
        getAsyncJobMgr().completeAsyncJob(job.getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"Internal error updating forwarding rule for address " + param.getAddress());
      }
    }
 catch (    Exception ex) {
      s_logger.error("Unhandled exception updating port forwarding rule",ex);
      getAsyncJobMgr().completeAsyncJob(job.getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"Internal error updating forwarding rule for address " + param.getAddress());
    }
    return true;
  }
}
