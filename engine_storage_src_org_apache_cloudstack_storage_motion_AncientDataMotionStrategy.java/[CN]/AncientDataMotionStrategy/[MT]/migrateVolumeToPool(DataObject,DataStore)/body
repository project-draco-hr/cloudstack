{
  VolumeInfo volume=(VolumeInfo)srcData;
  Long instanceId=volume.getInstanceId();
  StoragePool destPool=(StoragePool)this.dataStoreMgr.getDataStore(destStore.getId(),DataStoreRole.Primary);
  MigrateVolumeAnswer answer=null;
  VMInstanceVO vmInstance=null;
  if (instanceId != null) {
    vmInstance=instanceDao.findById(instanceId);
  }
  Long hostId=null;
  if (vmInstance != null) {
    hostId=vmInstance.getHostId();
  }
  try {
    if (hostId != null) {
      MigrateVolumeCommand command=new MigrateVolumeCommand(volume.getId(),volume.getPath(),destPool);
      answer=(MigrateVolumeAnswer)this.agentMgr.send(hostId,command);
    }
  }
 catch (  OperationTimedoutException e) {
    s_logger.error("Operation timed out on storage motion for volume " + volume,e);
    throw new CloudRuntimeException("Failed to live migrate volume " + volume + " to storage pool "+ destPool,e);
  }
catch (  AgentUnavailableException e) {
    s_logger.error("Agent unavailable exception while doing storage motion for volume " + volume,e);
    throw new CloudRuntimeException("Failed to live migrate volume " + volume + " to storage pool "+ destPool,e);
  }
  if (answer == null || !answer.getResult()) {
    throw new CloudRuntimeException("Failed to migrate volume " + volume + " to storage pool "+ destPool);
  }
 else {
    VolumeVO volumeVo=this.volDao.findById(volume.getId());
    Long oldPoolId=volume.getPoolId();
    volumeVo.setPath(answer.getVolumePath());
    volumeVo.setFolder(destPool.getPath());
    volumeVo.setPodId(destPool.getPodId());
    volumeVo.setPoolId(destPool.getId());
    volumeVo.setLastPoolId(oldPoolId);
    this.volDao.update(volume.getId(),volumeVo);
  }
  return answer;
}
