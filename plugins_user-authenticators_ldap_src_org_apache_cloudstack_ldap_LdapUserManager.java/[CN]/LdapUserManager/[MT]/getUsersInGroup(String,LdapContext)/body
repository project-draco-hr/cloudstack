{
  String attributeName=_ldapConfiguration.getGroupUniqueMemeberAttribute();
  final SearchControls controls=new SearchControls();
  controls.setSearchScope(_ldapConfiguration.getScope());
  controls.setReturningAttributes(new String[]{attributeName});
  NamingEnumeration<SearchResult> result=context.search(_ldapConfiguration.getBaseDn(),generateGroupSearchFilter(groupName),controls);
  final List<LdapUser> users=new ArrayList<LdapUser>();
  if (result.hasMoreElements()) {
    Attribute attribute=result.nextElement().getAttributes().get(attributeName);
    NamingEnumeration<?> values=attribute.getAll();
    while (values.hasMoreElements()) {
      String userdn=String.valueOf(values.nextElement());
      try {
        users.add(getUserForDn(userdn,context));
      }
 catch (      NamingException e) {
        s_logger.info("Userdn: " + userdn + " Not Found:: Exception message: "+ e.getMessage());
      }
    }
  }
  Collections.sort(users);
  return users;
}
