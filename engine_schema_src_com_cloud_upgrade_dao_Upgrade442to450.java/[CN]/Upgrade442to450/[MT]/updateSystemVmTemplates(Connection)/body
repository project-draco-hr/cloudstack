{
  s_logger.debug("Updating System Vm template IDs");
  Set<Hypervisor.HypervisorType> hypervisorsListInUse=new HashSet<Hypervisor.HypervisorType>();
  try (PreparedStatement pstmt=conn.prepareStatement("select distinct(hypervisor_type) from `cloud`.`cluster` where removed is null");ResultSet rs=pstmt.executeQuery()){
    while (rs.next()) {
switch (Hypervisor.HypervisorType.getType(rs.getString(1))) {
case XenServer:
        hypervisorsListInUse.add(Hypervisor.HypervisorType.XenServer);
      break;
case KVM:
    hypervisorsListInUse.add(Hypervisor.HypervisorType.KVM);
  break;
case VMware:
hypervisorsListInUse.add(Hypervisor.HypervisorType.VMware);
break;
case Hyperv:
hypervisorsListInUse.add(Hypervisor.HypervisorType.Hyperv);
break;
case LXC:
hypervisorsListInUse.add(Hypervisor.HypervisorType.LXC);
break;
default :
break;
}
}
}
 catch (SQLException e) {
s_logger.error("updateSystemVmTemplates:Exception while getting hypervisor types from clusters: " + e.getMessage());
throw new CloudRuntimeException("updateSystemVmTemplates:Exception while getting hypervisor types from clusters",e);
}
Map<Hypervisor.HypervisorType,String> NewTemplateNameList=new HashMap<Hypervisor.HypervisorType,String>(){
{
put(Hypervisor.HypervisorType.XenServer,"systemvm-xenserver-4.5");
put(Hypervisor.HypervisorType.VMware,"systemvm-vmware-4.5");
put(Hypervisor.HypervisorType.KVM,"systemvm-kvm-4.5");
put(Hypervisor.HypervisorType.LXC,"systemvm-lxc-4.5");
put(Hypervisor.HypervisorType.Hyperv,"systemvm-hyperv-4.5");
}
}
;
Map<Hypervisor.HypervisorType,String> routerTemplateConfigurationNames=new HashMap<Hypervisor.HypervisorType,String>(){
{
put(Hypervisor.HypervisorType.XenServer,"router.template.xen");
put(Hypervisor.HypervisorType.VMware,"router.template.vmware");
put(Hypervisor.HypervisorType.KVM,"router.template.kvm");
put(Hypervisor.HypervisorType.LXC,"router.template.lxc");
put(Hypervisor.HypervisorType.Hyperv,"router.template.hyperv");
}
}
;
Map<Hypervisor.HypervisorType,String> newTemplateUrl=new HashMap<Hypervisor.HypervisorType,String>(){
{
put(Hypervisor.HypervisorType.XenServer,"http://download.cloud.com/templates/4.5/systemvm64template-4.5-xen.vhd.bz2");
put(Hypervisor.HypervisorType.VMware,"http://download.cloud.com/templates/4.5/systemvm64template-4.5-vmware.ova");
put(Hypervisor.HypervisorType.KVM,"http://download.cloud.com/templates/4.5/systemvm64template-4.5-kvm.qcow2.bz2");
put(Hypervisor.HypervisorType.LXC,"http://download.cloud.com/templates/4.5/systemvm64template-4.5-kvm.qcow2.bz2");
put(Hypervisor.HypervisorType.Hyperv,"http://download.cloud.com/templates/4.5/systemvm64template-4.5-hyperv.vhd.zip");
}
}
;
Map<Hypervisor.HypervisorType,String> newTemplateChecksum=new HashMap<Hypervisor.HypervisorType,String>(){
{
put(Hypervisor.HypervisorType.XenServer,"2b15ab4401c2d655264732d3fc600241");
put(Hypervisor.HypervisorType.VMware,"3106a79a4ce66cd7f6a7c50e93f2db57");
put(Hypervisor.HypervisorType.KVM,"aa9f501fecd3de1daeb9e2f357f6f002");
put(Hypervisor.HypervisorType.LXC,"aa9f501fecd3de1daeb9e2f357f6f002");
put(Hypervisor.HypervisorType.Hyperv,"70bd30ea02ee9ed67d2c6b85c179cee9");
}
}
;
for (Map.Entry<Hypervisor.HypervisorType,String> hypervisorAndTemplateName : NewTemplateNameList.entrySet()) {
s_logger.debug("Updating " + hypervisorAndTemplateName.getKey() + " System Vms");
try (PreparedStatement pstmt=conn.prepareStatement("select id from `cloud`.`vm_template` where name = ? and removed is null order by id desc limit 1")){
long templateId=-1;
pstmt.setString(1,hypervisorAndTemplateName.getValue());
try (ResultSet rs=pstmt.executeQuery()){
if (rs.next()) {
templateId=rs.getLong(1);
}
}
 catch (SQLException e) {
s_logger.error("updateSystemVmTemplates:Exception while getting ids of templates: " + e.getMessage());
throw new CloudRuntimeException("updateSystemVmTemplates:Exception while getting ids of templates",e);
}
if (templateId != -1) {
try (PreparedStatement templ_type_pstmt=conn.prepareStatement("update `cloud`.`vm_template` set type='SYSTEM' where id = ?")){
templ_type_pstmt.setLong(1,templateId);
templ_type_pstmt.executeUpdate();
}
 catch (SQLException e) {
s_logger.error("updateSystemVmTemplates:Exception while updating template with id " + templateId + " to be marked as 'system': "+ e.getMessage());
throw new CloudRuntimeException("updateSystemVmTemplates:Exception while updating template with id " + templateId + " to be marked as 'system'",e);
}
try (PreparedStatement update_templ_id_pstmt=conn.prepareStatement("update `cloud`.`vm_instance` set vm_template_id = ? where type <> 'User' and hypervisor_type = ?")){
update_templ_id_pstmt.setLong(1,templateId);
update_templ_id_pstmt.setString(2,hypervisorAndTemplateName.getKey().toString());
update_templ_id_pstmt.executeUpdate();
}
 catch (Exception e) {
s_logger.error("updateSystemVmTemplates:Exception while setting template for " + hypervisorAndTemplateName.getKey().toString() + " to "+ templateId+ ": "+ e.getMessage());
throw new CloudRuntimeException("updateSystemVmTemplates:Exception while setting template for " + hypervisorAndTemplateName.getKey().toString() + " to "+ templateId,e);
}
try (PreparedStatement update_pstmt=conn.prepareStatement("UPDATE `cloud`.`configuration` SET value = ? WHERE name = ?")){
update_pstmt.setString(1,hypervisorAndTemplateName.getValue());
update_pstmt.setString(2,routerTemplateConfigurationNames.get(hypervisorAndTemplateName.getKey()));
update_pstmt.executeUpdate();
}
 catch (SQLException e) {
s_logger.error("updateSystemVmTemplates:Exception while setting " + routerTemplateConfigurationNames.get(hypervisorAndTemplateName.getKey()) + " to "+ hypervisorAndTemplateName.getValue()+ ": "+ e.getMessage());
throw new CloudRuntimeException("updateSystemVmTemplates:Exception while setting " + routerTemplateConfigurationNames.get(hypervisorAndTemplateName.getKey()) + " to "+ hypervisorAndTemplateName.getValue(),e);
}
}
 else {
if (hypervisorsListInUse.contains(hypervisorAndTemplateName.getKey())) {
throw new CloudRuntimeException("4.5.0 " + hypervisorAndTemplateName.getKey() + " SystemVm template not found. Cannot upgrade system Vms");
}
 else {
s_logger.warn("4.5.0 " + hypervisorAndTemplateName.getKey() + " SystemVm template not found. "+ hypervisorAndTemplateName.getKey()+ " hypervisor is not used, so not failing upgrade");
try (PreparedStatement update_templ_url_pstmt=conn.prepareStatement("UPDATE `cloud`.`vm_template` SET url = ? , checksum = ? WHERE hypervisor_type = ? AND type = 'SYSTEM' AND removed is null order by id desc limit 1")){
update_templ_url_pstmt.setString(1,newTemplateUrl.get(hypervisorAndTemplateName.getKey()));
update_templ_url_pstmt.setString(2,newTemplateChecksum.get(hypervisorAndTemplateName.getKey()));
update_templ_url_pstmt.setString(3,hypervisorAndTemplateName.getKey().toString());
update_templ_url_pstmt.executeUpdate();
}
 catch (SQLException e) {
s_logger.error("updateSystemVmTemplates:Exception while updating 'url' and 'checksum' for hypervisor type " + hypervisorAndTemplateName.getKey().toString() + ": "+ e.getMessage());
throw new CloudRuntimeException("updateSystemVmTemplates:Exception while updating 'url' and 'checksum' for hypervisor type " + hypervisorAndTemplateName.getKey().toString(),e);
}
}
}
}
 catch (SQLException e) {
s_logger.error("updateSystemVmTemplates:Exception while getting ids of templates: " + e.getMessage());
throw new CloudRuntimeException("updateSystemVmTemplates:Exception while getting ids of templates",e);
}
}
s_logger.debug("Updating System Vm Template IDs Complete");
}
