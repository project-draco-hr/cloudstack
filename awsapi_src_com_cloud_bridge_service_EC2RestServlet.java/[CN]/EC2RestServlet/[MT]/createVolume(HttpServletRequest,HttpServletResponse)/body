{
  EC2CreateVolume EC2request=new EC2CreateVolume();
  String[] zoneName=request.getParameterValues("AvailabilityZone");
  if (null != zoneName && 0 < zoneName.length)   EC2request.setZoneName(zoneName[0]);
 else {
    response.sendError(530,"Missing AvailabilityZone parameter");
    return;
  }
  String[] size=request.getParameterValues("Size");
  String[] snapshotId=request.getParameterValues("SnapshotId");
  boolean useSnapshot=false;
  boolean useSize=false;
  if (null != size && 0 < size.length)   useSize=true;
  if (snapshotId != null && snapshotId.length != 0)   useSnapshot=true;
  if (useSize && !useSnapshot) {
    EC2request.setSize(size[0]);
  }
 else   if (useSnapshot && !useSize) {
    EC2request.setSnapshotId(snapshotId[0]);
  }
 else   if (useSize && useSnapshot) {
    response.sendError(530,"Size and SnapshotId parameters are mutually exclusive");
    return;
  }
 else {
    response.sendError(530,"Size or SnapshotId has to be specified");
    return;
  }
  CreateVolumeResponse EC2response=EC2SoapServiceImpl.toCreateVolumeResponse(ServiceProvider.getInstance().getEC2Engine().createVolume(EC2request));
  serializeResponse(response,EC2response);
}
