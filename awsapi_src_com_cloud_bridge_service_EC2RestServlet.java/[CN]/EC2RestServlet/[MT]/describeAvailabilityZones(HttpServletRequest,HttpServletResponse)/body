{
  EC2DescribeAvailabilityZones EC2request=new EC2DescribeAvailabilityZones();
  Enumeration<?> names=request.getParameterNames();
  while (names.hasMoreElements()) {
    String key=(String)names.nextElement();
    if (key.startsWith("ZoneName")) {
      String[] value=request.getParameterValues(key);
      if (null != value && 0 < value.length)       EC2request.addZone(value[0]);
    }
  }
  EC2Filter[] filterSet=extractFilters(request);
  if (filterSet != null) {
    EC2AvailabilityZonesFilterSet afs=new EC2AvailabilityZonesFilterSet();
    for (int i=0; i < filterSet.length; i++) {
      afs.addFilter(filterSet[i]);
    }
    EC2request.setFilterSet(afs);
  }
  DescribeAvailabilityZonesResponse EC2response=EC2SoapServiceImpl.toDescribeAvailabilityZonesResponse(ServiceProvider.getInstance().getEC2Engine().describeAvailabilityZones(EC2request));
  serializeResponse(response,EC2response);
}
