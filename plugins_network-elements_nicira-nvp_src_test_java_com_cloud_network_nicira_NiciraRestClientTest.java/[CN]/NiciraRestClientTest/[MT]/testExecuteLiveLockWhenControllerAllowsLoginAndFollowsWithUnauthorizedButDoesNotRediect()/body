{
  when(mockResponse.getStatusLine()).thenReturn(HTTP_401_STATUSLINE).thenReturn(HTTP_200_STATUSLINE).thenReturn(HTTP_401_STATUSLINE).thenReturn(HTTP_200_STATUSLINE).thenReturn(HTTP_401_STATUSLINE).thenReturn(HTTP_200_STATUSLINE).thenReturn(HTTP_401_STATUSLINE).thenReturn(HTTP_200_STATUSLINE).thenReturn(HTTP_401_STATUSLINE);
  when(httpClient.execute(eq(HTTP_HOST),HttpRequestMatcher.eq(request),eq(httpClientContext))).thenReturn(mockResponse).thenReturn(mockResponse).thenReturn(mockResponse).thenReturn(mockResponse).thenReturn(mockResponse);
  when(httpClient.execute(eq(HTTP_HOST),HttpRequestMatcher.eq(loginRequest),eq(httpClientContext))).thenReturn(mockResponse).thenReturn(mockResponse).thenReturn(mockResponse).thenReturn(mockResponse);
  final NiciraRestClient client=spy(NiciraRestClient.create().client(httpClient).clientContext(httpClientContext).hostname(LOCALHOST).username(ADMIN).password(ADMIN_PASSWORD).loginUrl(LOGIN_PATH).executionLimit(2).build());
  try {
    client.execute(request);
    fail("Execution count should have been maxed out");
  }
 catch (  final CloudstackRESTException e) {
    assertThat(e.getMessage(),containsString("Reached max executions limit of "));
  }
}
