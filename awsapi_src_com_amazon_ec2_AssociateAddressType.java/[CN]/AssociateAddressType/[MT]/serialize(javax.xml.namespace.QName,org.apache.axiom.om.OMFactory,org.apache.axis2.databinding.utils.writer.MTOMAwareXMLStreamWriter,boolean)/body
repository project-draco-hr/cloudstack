{
  java.lang.String prefix=null;
  java.lang.String namespace=null;
  prefix=parentQName.getPrefix();
  namespace=parentQName.getNamespaceURI();
  if ((namespace != null) && (namespace.trim().length() > 0)) {
    java.lang.String writerPrefix=xmlWriter.getPrefix(namespace);
    if (writerPrefix != null) {
      xmlWriter.writeStartElement(namespace,parentQName.getLocalPart());
    }
 else {
      if (prefix == null) {
        prefix=generatePrefix(namespace);
      }
      xmlWriter.writeStartElement(prefix,parentQName.getLocalPart(),namespace);
      xmlWriter.writeNamespace(prefix,namespace);
      xmlWriter.setPrefix(prefix,namespace);
    }
  }
 else {
    xmlWriter.writeStartElement(parentQName.getLocalPart());
  }
  if (serializeType) {
    java.lang.String namespacePrefix=registerPrefix(xmlWriter,"http://ec2.amazonaws.com/doc/2012-08-15/");
    if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)) {
      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",namespacePrefix + ":AssociateAddressType",xmlWriter);
    }
 else {
      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type","AssociateAddressType",xmlWriter);
    }
  }
  if (localAssociateAddressTypeChoice_type0 == null) {
    throw new org.apache.axis2.databinding.ADBException("AssociateAddressTypeChoice_type0 cannot be null!!");
  }
  localAssociateAddressTypeChoice_type0.serialize(null,factory,xmlWriter);
  if (localAssociateAddressTypeChoice_type1 == null) {
    throw new org.apache.axis2.databinding.ADBException("AssociateAddressTypeChoice_type1 cannot be null!!");
  }
  localAssociateAddressTypeChoice_type1.serialize(null,factory,xmlWriter);
  if (localPrivateIpAddressTracker) {
    namespace="http://ec2.amazonaws.com/doc/2012-08-15/";
    if (!namespace.equals("")) {
      prefix=xmlWriter.getPrefix(namespace);
      if (prefix == null) {
        prefix=generatePrefix(namespace);
        xmlWriter.writeStartElement(prefix,"privateIpAddress",namespace);
        xmlWriter.writeNamespace(prefix,namespace);
        xmlWriter.setPrefix(prefix,namespace);
      }
 else {
        xmlWriter.writeStartElement(namespace,"privateIpAddress");
      }
    }
 else {
      xmlWriter.writeStartElement("privateIpAddress");
    }
    if (localPrivateIpAddress == null) {
      throw new org.apache.axis2.databinding.ADBException("privateIpAddress cannot be null!!");
    }
 else {
      xmlWriter.writeCharacters(localPrivateIpAddress);
    }
    xmlWriter.writeEndElement();
  }
  if (localAllowReassociationTracker) {
    namespace="http://ec2.amazonaws.com/doc/2012-08-15/";
    if (!namespace.equals("")) {
      prefix=xmlWriter.getPrefix(namespace);
      if (prefix == null) {
        prefix=generatePrefix(namespace);
        xmlWriter.writeStartElement(prefix,"allowReassociation",namespace);
        xmlWriter.writeNamespace(prefix,namespace);
        xmlWriter.setPrefix(prefix,namespace);
      }
 else {
        xmlWriter.writeStartElement(namespace,"allowReassociation");
      }
    }
 else {
      xmlWriter.writeStartElement("allowReassociation");
    }
    if (false) {
      throw new org.apache.axis2.databinding.ADBException("allowReassociation cannot be null!!");
    }
 else {
      xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAllowReassociation));
    }
    xmlWriter.writeEndElement();
  }
  xmlWriter.writeEndElement();
}
