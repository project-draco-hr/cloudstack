@attr(tags=['smoke', 'advanced'], required_hardware='true')
def test_03_vpc_internallb_haproxy_stats_on_all_interfaces(self):
    " Test to verify access to loadbalancer haproxy admin stats page\n            when global setting network.loadbalancer.haproxy.stats.visibility is set to 'all'\n            with credentials from global setting network.loadbalancer.haproxy.stats.auth\n            using the uri from global setting network.loadbalancer.haproxy.stats.uri.\n\n            It uses a Single Router VPC\n        "
    self.logger.debug('Starting test_03_vpc_internallb_haproxy_stats_on_all_interfaces')
    self.logger.debug('Creating a VPC offering..')
    vpc_offering = VpcOffering.create(self.apiclient, self.services['vpc_offering'])
    self.logger.debug('Enabling the VPC offering created')
    vpc_offering.update(self.apiclient, state='Enabled')
    self.execute_internallb_haproxy_tests(vpc_offering)
