@attr(tags=['smoke', 'advanced'], required_hardware='true')
def test_04_rvpc_internallb_haproxy_stats_on_all_interfaces(self):
    " Test to verify access to loadbalancer haproxy admin stats page\n            when global setting network.loadbalancer.haproxy.stats.visibility is set to 'all'\n            with credentials from global setting network.loadbalancer.haproxy.stats.auth\n            using the uri from global setting network.loadbalancer.haproxy.stats.uri.\n\n            It uses a Redundant Routers VPC\n        "
    self.logger.debug('Starting test_04_rvpc_internallb_haproxy_stats_on_all_interfaces')
    self.logger.debug('Creating a Redundant VPC offering..')
    redundant_vpc_offering = VpcOffering.create(self.apiclient, self.services['redundant_vpc_offering'])
    self.logger.debug('Enabling the Redundant VPC offering created')
    redundant_vpc_offering.update(self.apiclient, state='Enabled')
    self.execute_internallb_haproxy_tests(redundant_vpc_offering)
