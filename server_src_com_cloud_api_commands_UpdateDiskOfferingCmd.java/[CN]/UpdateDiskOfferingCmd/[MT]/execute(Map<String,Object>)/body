{
  Long id=(Long)params.get(BaseCmd.Properties.ID.getName());
  String name=(String)params.get(BaseCmd.Properties.NAME.getName());
  String displayText=(String)params.get(BaseCmd.Properties.DISPLAY_TEXT.getName());
  Long userId=(Long)params.get(BaseCmd.Properties.USER_ID.getName());
  String tags=(String)params.get(BaseCmd.Properties.TAGS.getName());
  Boolean editSOResult=false;
  if (userId == null) {
    userId=Long.valueOf(User.UID_SYSTEM);
  }
  DiskOfferingVO offering=getManagementServer().findDiskOfferingById(id);
  if (offering == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find disk offering " + id);
  }
  try {
    getManagementServer().updateDiskOffering(userId,id,name,displayText,tags);
  }
 catch (  Exception ex) {
    s_logger.error("Exception updating disk offering",ex);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to update disk offering " + id + ":  internal error.");
  }
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  returnValues.add(new Pair<String,Object>(BaseCmd.Properties.SUCCESS.getName(),Boolean.TRUE));
  return returnValues;
}
