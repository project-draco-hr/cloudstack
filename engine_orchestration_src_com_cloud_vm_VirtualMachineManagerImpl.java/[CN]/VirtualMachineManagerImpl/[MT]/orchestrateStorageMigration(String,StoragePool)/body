{
  final VMInstanceVO vm=_vmDao.findByUuid(vmUuid);
  final Long srchostId=vm.getHostId() != null ? vm.getHostId() : vm.getLastHostId();
  final HostVO srcHost=_hostDao.findById(srchostId);
  final Long srcClusterId=srcHost.getClusterId();
  try {
    stateTransitTo(vm,VirtualMachine.Event.StorageMigrationRequested,null);
  }
 catch (  final NoTransitionException e) {
    logger.debug("Unable to migrate vm: " + e.toString());
    throw new CloudRuntimeException("Unable to migrate vm: " + e.toString());
  }
  final VirtualMachineProfile profile=new VirtualMachineProfileImpl(vm);
  boolean migrationResult=false;
  try {
    migrationResult=volumeMgr.storageMigration(profile,destPool);
    if (migrationResult) {
      if (!vm.getPodIdToDeployIn().equals(destPool.getPodId())) {
        final DataCenterDeployment plan=new DataCenterDeployment(vm.getDataCenterId(),destPool.getPodId(),null,null,null,null);
        final VirtualMachineProfileImpl vmProfile=new VirtualMachineProfileImpl(vm,null,null,null,null);
        _networkMgr.reallocate(vmProfile,plan);
      }
      vm.setLastHostId(null);
      vm.setPodIdToDeployIn(destPool.getPodId());
      if (vm.getHypervisorType().equals(HypervisorType.VMware)) {
        final Long destClusterId=destPool.getClusterId();
        if (srcClusterId != null && destClusterId != null && !srcClusterId.equals(destClusterId)) {
          final String srcDcName=_clusterDetailsDao.getVmwareDcName(srcClusterId);
          final String destDcName=_clusterDetailsDao.getVmwareDcName(destClusterId);
          if (srcDcName != null && destDcName != null && !srcDcName.equals(destDcName)) {
            logger.debug("Since VM's storage was successfully migrated across VMware Datacenters, unregistering VM: " + vm.getInstanceName() + " from source host: "+ srcHost.getId());
            final UnregisterVMCommand uvc=new UnregisterVMCommand(vm.getInstanceName());
            uvc.setCleanupVmFiles(true);
            try {
              _agentMgr.send(srcHost.getId(),uvc);
            }
 catch (            final Exception e) {
              throw new CloudRuntimeException("Failed to unregister VM: " + vm.getInstanceName() + " from source host: "+ srcHost.getId()+ " after successfully migrating VM's storage across VMware Datacenters");
            }
          }
        }
      }
    }
 else {
      logger.debug("Storage migration failed");
    }
  }
 catch (  final ConcurrentOperationException e) {
    logger.debug("Failed to migration: " + e.toString());
    throw new CloudRuntimeException("Failed to migration: " + e.toString());
  }
catch (  final InsufficientVirtualNetworkCapacityException e) {
    logger.debug("Failed to migration: " + e.toString());
    throw new CloudRuntimeException("Failed to migration: " + e.toString());
  }
catch (  final InsufficientAddressCapacityException e) {
    logger.debug("Failed to migration: " + e.toString());
    throw new CloudRuntimeException("Failed to migration: " + e.toString());
  }
catch (  final InsufficientCapacityException e) {
    logger.debug("Failed to migration: " + e.toString());
    throw new CloudRuntimeException("Failed to migration: " + e.toString());
  }
catch (  final StorageUnavailableException e) {
    logger.debug("Failed to migration: " + e.toString());
    throw new CloudRuntimeException("Failed to migration: " + e.toString());
  }
 finally {
    try {
      stateTransitTo(vm,VirtualMachine.Event.AgentReportStopped,null);
    }
 catch (    final NoTransitionException e) {
      logger.debug("Failed to change vm state: " + e.toString());
      throw new CloudRuntimeException("Failed to change vm state: " + e.toString());
    }
  }
}
