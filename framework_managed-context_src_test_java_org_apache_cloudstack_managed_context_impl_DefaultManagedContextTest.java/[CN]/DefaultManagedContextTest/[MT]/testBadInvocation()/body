{
  final List<Object> touch=new ArrayList<Object>();
  context.registerListener(new ManagedContextListener<Object>(){
    @Override public Object onEnterContext(    boolean reentry){
      touch.add("enter");
      return "hi";
    }
    @Override public void onLeaveContext(    Object data,    boolean reentry){
      touch.add("leave");
      assertEquals("hi",data);
    }
  }
);
  context.registerListener(new ManagedContextListener<Object>(){
    @Override public Object onEnterContext(    boolean reentry){
      touch.add("enter1");
      return "hi1";
    }
    @Override public void onLeaveContext(    Object data,    boolean reentry){
      touch.add("leave1");
      assertEquals("hi1",data);
    }
  }
);
  try {
    context.callWithContext(new Callable<Integer>(){
      @Override public Integer call() throws Exception {
        throw new RuntimeException("I'm a failure");
      }
    }
).intValue();
    fail();
  }
 catch (  Throwable t) {
    assertTrue(t.getMessage(),t instanceof RuntimeException);
    assertEquals("I'm a failure",t.getMessage());
  }
  assertEquals("enter",touch.get(0));
  assertEquals("enter1",touch.get(1));
  assertEquals("leave1",touch.get(2));
  assertEquals("leave",touch.get(3));
}
