{
  s_logger.debug("External load balancer devices stats collector is running...");
  for (  DataCenterVO zone : _dcDao.listAll()) {
    List<DomainRouterVO> domainRoutersInZone=_routerDao.listByDataCenter(zone.getId());
    if (domainRoutersInZone == null) {
      continue;
    }
    for (    DomainRouterVO domainRouter : domainRoutersInZone) {
      long accountId=domainRouter.getAccountId();
      long zoneId=zone.getId();
      List<NetworkVO> networksForAccount=_networkDao.listBy(accountId,zoneId,Network.GuestType.Isolated);
      if (networksForAccount == null) {
        continue;
      }
      for (      NetworkVO network : networksForAccount) {
        if (!_networkMgr.networkIsConfiguredForExternalNetworking(zoneId,network.getId())) {
          s_logger.debug("Network " + network.getId() + " is not configured for external networking, so skipping usage check.");
          continue;
        }
        ExternalLoadBalancerDeviceVO lbDeviceVO=getExternalLoadBalancerForNetwork(network);
        if (lbDeviceVO == null) {
          continue;
        }
        HostVO externalLoadBalancer=_hostDao.findById(lbDeviceVO.getHostId());
        ExternalNetworkResourceUsageCommand cmd=new ExternalNetworkResourceUsageCommand();
        ExternalNetworkResourceUsageAnswer lbAnswer=null;
        if (externalLoadBalancer != null) {
          lbAnswer=(ExternalNetworkResourceUsageAnswer)_agentMgr.easySend(externalLoadBalancer.getId(),cmd);
          if (lbAnswer == null || !lbAnswer.getResult()) {
            String details=(lbAnswer != null) ? lbAnswer.getDetails() : "details unavailable";
            String msg="Unable to get external load balancer stats for " + zone.getName() + " due to: "+ details+ ".";
            s_logger.error(msg);
          }
        }
        AccountVO account=_accountDao.findById(accountId);
        if (account == null) {
          s_logger.debug("Skipping stats update for account with ID " + accountId);
          continue;
        }
        if (!manageStatsEntries(true,accountId,zoneId,network,externalLoadBalancer,lbAnswer)) {
          continue;
        }
        manageStatsEntries(false,accountId,zoneId,network,externalLoadBalancer,lbAnswer);
      }
    }
  }
}
