{
  Host host=super.allocateTo(vm,offering,type,dc,pod,clusterId,template,avoid);
  if (host != null) {
    return host;
  }
  s_logger.debug("First fit was unable to find a host");
  VirtualMachine.Type vmType=vm.getType();
  if (vmType == VirtualMachine.Type.User) {
    s_logger.debug("vm is not a system vm so let's just return null");
    return null;
  }
  List<PodCluster> pcs=_agentMgr.listByDataCenter(dc.getId());
  Set<Pair<Long,Long>> avoidPcs=new HashSet<Pair<Long,Long>>();
  for (  Host h : avoid) {
    avoidPcs.add(new Pair<Long,Long>(h.getPodId(),h.getClusterId()));
  }
  for (  Pair<Long,Long> pcId : avoidPcs) {
    s_logger.debug("Removing " + pcId + " from the list of available pods");
    pcs.remove(new PodCluster(new HostPodVO(pcId.first()),pcId.second() != null ? new ClusterVO(pcId.second()) : null));
  }
  for (  PodCluster p : pcs) {
    clusterId=p.getCluster() == null ? null : p.getCluster().getId();
    host=super.allocateTo(vm,offering,type,dc,p.getPod(),clusterId,template,avoid);
    if (host != null) {
      return host;
    }
  }
  s_logger.debug("Unable to find any available pods at all!");
  return null;
}
