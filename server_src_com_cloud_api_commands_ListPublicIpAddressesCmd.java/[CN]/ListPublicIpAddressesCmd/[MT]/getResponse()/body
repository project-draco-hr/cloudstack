{
  List<IPAddressVO> ipAddresses=(List<IPAddressVO>)getResponseObject();
  List<IPAddressResponse> response=new ArrayList<IPAddressResponse>();
  for (  IPAddressVO ipAddress : ipAddresses) {
    VlanVO vlan=getManagementServer().findVlanById(ipAddress.getVlanDbId());
    boolean forVirtualNetworks=vlan.getVlanType().equals(VlanType.VirtualNetwork);
    IPAddressResponse ipResponse=new IPAddressResponse();
    ipResponse.setIpAddress(ipAddress.getAddress());
    if (ipAddress.getAllocated() != null) {
      ipResponse.setAllocated(ipAddress.getAllocated());
    }
    ipResponse.setZoneId(ipAddress.getDataCenterId());
    ipResponse.setZoneName(getManagementServer().findDataCenterById(ipAddress.getDataCenterId()).getName());
    ipResponse.setSourceNat(ipAddress.isSourceNat());
    Account accountTemp=getManagementServer().findAccountById(ipAddress.getAccountId());
    if (accountTemp != null) {
      ipResponse.setAccountName(accountTemp.getAccountName());
      ipResponse.setDomainId(accountTemp.getDomainId());
      ipResponse.setDomainName(getManagementServer().findDomainIdById(accountTemp.getDomainId()).getName());
    }
    ipResponse.setForVirtualNetwork(forVirtualNetworks);
    Account account=(Account)UserContext.current().getAccountObject();
    if ((account == null) || isAdmin(account.getType())) {
      ipResponse.setVlanId(ipAddress.getVlanDbId());
      ipResponse.setVlanName(getManagementServer().findVlanById(ipAddress.getVlanDbId()).getVlanId());
    }
    response.add(ipResponse);
  }
  return SerializerHelper.toSerializedString(response);
}
