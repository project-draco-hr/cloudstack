def __init__(self):
    if os.path.exists(self.config_file):
        config = self.read_config()
    else:
        for key in self.config_fields.keys():
            setattr(self, key, self.config_fields[key])
        config = self.write_config()
        print 'Set your apikey, secretkey, host, port, prompt, color, log_file, history_file using the set command!'
    for key in self.config_fields.keys():
        try:
            setattr(self, key, config.get('CLI', key))
        except Exception:
            print ('Please fix `%s` config in %s' % (key, self.config_file))
            sys.exit()
    self.prompt += ' '
    logging.basicConfig(filename=self.log_file, level=logging.DEBUG, format=log_fmt)
    cmd.Cmd.__init__(self)
    if (not os.path.exists(self.config_file)):
        config = self.write_config()
    try:
        if os.path.exists(self.history_file):
            readline.read_history_file(self.history_file)
        atexit.register(readline.write_history_file, self.history_file)
    except IOError:
        print 'Error: history support'
