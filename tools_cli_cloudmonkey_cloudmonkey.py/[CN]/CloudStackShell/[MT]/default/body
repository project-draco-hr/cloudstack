def default(self, args):
    args = args.split(' ')
    api_name = args[0]
    try:
        api_cmd_str = ('%sCmd' % api_name)
        api_rsp_str = ('%sResponse' % api_name)
        api_mod = self.get_api_module(api_name, [api_cmd_str, api_rsp_str])
        api_cmd = getattr(api_mod, api_cmd_str)
        api_rsp = getattr(api_mod, api_rsp_str)
    except AttributeError as e:
        self.print_shell(('Error: API %s not found!' % e))
        return
    command = api_cmd()
    response = api_rsp()
    args_dict = dict((map((lambda x: x.split('=')), args[1:])[x] for x in range((len(args) - 1))))
    for attribute in dir(command):
        if (attribute in args_dict):
            setattr(command, attribute, args_dict[attribute])
    result = self.make_request(command, response)
    try:
        self.print_result(result, response, api_mod)
    except Exception as e:
        self.print_shell('\xf0\x9f\x99\x88  Error on parsing and printing', e)
