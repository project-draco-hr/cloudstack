def __init__(self, pname):
    self.program_name = pname
    self.config_options = read_config(self.get_attr, self.set_attr)
    self.loadcache()
    self.prompt = (self.prompt.strip() + ' ')
    logging.basicConfig(filename=self.log_file, level=logging.DEBUG, format=log_fmt)
    logger.debug(('Loaded config fields:\n%s' % map((lambda x: ('%s=%s' % (x, getattr(self, x)))), self.config_options)))
    cmd.Cmd.__init__(self)
    try:
        if os.path.exists(self.history_file):
            readline.read_history_file(self.history_file)
        atexit.register(readline.write_history_file, self.history_file)
    except IOError:
        monkeyprint('Error: history support')
