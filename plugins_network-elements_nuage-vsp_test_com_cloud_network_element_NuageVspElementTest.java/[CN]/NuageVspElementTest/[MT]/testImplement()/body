{
  final Network network=mock(Network.class);
  when(network.getBroadcastDomainType()).thenReturn(BroadcastDomainType.Vsp);
  when(network.getId()).thenReturn(NETWORK_ID);
  when(network.getVpcId()).thenReturn(null);
  when(network.getBroadcastUri()).thenReturn(new URI(""));
  when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);
  when(network.getDomainId()).thenReturn(NETWORK_ID);
  when(_networkModel.isProviderForNetwork(Provider.NuageVsp,NETWORK_ID)).thenReturn(true);
  when(_networkServiceMapDao.canProviderSupportServiceInNetwork(NETWORK_ID,Service.Connectivity,Provider.NuageVsp)).thenReturn(true);
  final NetworkOffering offering=mock(NetworkOffering.class);
  when(offering.getId()).thenReturn(NETWORK_ID);
  when(offering.getTrafficType()).thenReturn(TrafficType.Guest);
  when(offering.getGuestType()).thenReturn(GuestType.Isolated);
  DeployDestination deployDest=mock(DeployDestination.class);
  final DomainVO dom=mock(DomainVO.class);
  when(dom.getName()).thenReturn("domain");
  when(_domainDao.findById(NETWORK_ID)).thenReturn(dom);
  final Account acc=mock(Account.class);
  when(acc.getAccountName()).thenReturn("accountname");
  final ReservationContext context=mock(ReservationContext.class);
  when(context.getDomain()).thenReturn(dom);
  when(context.getAccount()).thenReturn(acc);
  final HostVO host=mock(HostVO.class);
  when(host.getId()).thenReturn(NETWORK_ID);
  final NuageVspDeviceVO nuageVspDevice=mock(NuageVspDeviceVO.class);
  when(nuageVspDevice.getHostId()).thenReturn(NETWORK_ID);
  when(_nuageVspDao.listByPhysicalNetwork(NETWORK_ID)).thenReturn(Arrays.asList(new NuageVspDeviceVO[]{nuageVspDevice}));
  when(_hostDao.findById(NETWORK_ID)).thenReturn(host);
  when(_firewallRulesDao.listByNetworkPurposeTrafficType(NETWORK_ID,FirewallRule.Purpose.Firewall,FirewallRule.TrafficType.Ingress)).thenReturn(new ArrayList<FirewallRuleVO>());
  when(_firewallRulesDao.listByNetworkPurposeTrafficType(NETWORK_ID,FirewallRule.Purpose.Firewall,FirewallRule.TrafficType.Egress)).thenReturn(new ArrayList<FirewallRuleVO>());
  when(_ipAddressDao.listStaticNatPublicIps(NETWORK_ID)).thenReturn(new ArrayList<IPAddressVO>());
  when(_nuageVspManager.getDnsDetails(network)).thenReturn(new ArrayList<String>());
  assertTrue(_nuageVspElement.implement(network,offering,deployDest,context));
}
