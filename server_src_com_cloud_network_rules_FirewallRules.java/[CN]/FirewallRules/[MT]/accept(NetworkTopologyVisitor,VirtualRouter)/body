{
  _router=router;
  _purpose=_rules.get(0).getPurpose();
  if (_purpose == Purpose.LoadBalancing) {
    LoadBalancerDao loadBalancerDao=visitor.getVirtualNetworkApplianceFactory().getLoadBalancerDao();
    final List<LoadBalancerVO> lbs=loadBalancerDao.listByNetworkIdAndScheme(_network.getId(),Scheme.Public);
    _loadbalancingRules=new ArrayList<LoadBalancingRule>();
    LoadBalancingRulesManager lbMgr=visitor.getVirtualNetworkApplianceFactory().getLbMgr();
    NetworkModel networkModel=visitor.getVirtualNetworkApplianceFactory().getNetworkModel();
    for (    final LoadBalancerVO lb : lbs) {
      final List<LbDestination> dstList=lbMgr.getExistingDestinations(lb.getId());
      final List<LbStickinessPolicy> policyList=lbMgr.getStickinessPolicies(lb.getId());
      final List<LbHealthCheckPolicy> hcPolicyList=lbMgr.getHealthCheckPolicies(lb.getId());
      final LbSslCert sslCert=lbMgr.getLbSslCert(lb.getId());
      final Ip sourceIp=networkModel.getPublicIpAddress(lb.getSourceIpAddressId()).getAddress();
      final LoadBalancingRule loadBalancing=new LoadBalancingRule(lb,dstList,policyList,hcPolicyList,sourceIp,sslCert,lb.getLbProtocol());
      _loadbalancingRules.add(loadBalancing);
    }
  }
  return visitor.visit(this);
}
