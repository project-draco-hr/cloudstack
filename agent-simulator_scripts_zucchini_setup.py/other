'\n############################################################\n# zucchini uses local storage, before setting up make sure\n#     * xen.public.network.device is set\n#     * use.local.storage and systemvm.use.local.storage are true\n#     * optionally turn off stats collectors\n#     * expunge.delay and expunge.interval are 60s\n#     * ping.interval is around 3m\n#     * turn off dns updates to entire zone, network.dns.basiczone.update=pod\n#     * capacity.skipcounting.hours=0\n#     * direct.agent.load.size=1000\n#     * security groups are enabled\n#\n#   This script will only setup an approximate number of hosts. To achieve the ratio\n#   of 5:2:6 hosts the total number of hosts is brought close to a number divisible\n#   by 13. So if 4000 hosts are added, you might see only 3900 come up\n#   \n#   10 hosts per pod @ 1 host per cluster in a single zone\n#   \n#   Each pod has a /25, so 128 addresses. I think we reserved 5 IP addresses for system VMs in each pod. \n#   Then we had something like 60 addresses for hosts and 60 addresses for VMs.\n\n#Environment\n#1. Approximately 10 hosts per pod. \n#2. Only 3 host tags. \n#3. With in each pod, the host tags are the same. Homogenous Pods\n#4. The ratio of hosts for the three tags should be 5/2/6\n#5. In simulator.properties, workers=1\n############################################################\n'
from optparse import OptionParser
from configGenerator import *
import random
if (__name__ == '__main__'):
    parser = OptionParser()
    parser.add_option('-n', '--number-of-agents', action='store', dest='agents', help='number of agents in the deployment')
    parser.add_option('-g', '--enable-security-groups', dest='sgenabled', help='specify if security groups are to be enabled', default=False, action='store_true')
    parser.add_option('-o', '--output', action='store', default='./z.cfg', dest='output', help='the path where the json config file generated')
    parser.add_option('-d', '--dbnode', dest='dbnode', help='hostname/ip of the database node', action='store')
    parser.add_option('-m', '--mshost', dest='mshost', help='hostname/ip of management server', action='store')
    parser.add_option('-r', '--randomize', dest='randomize', help='randomize the distribution of tags (hetergenous clusters)', action='store_true', default=False)
    (opts, args) = parser.parse_args()
    mandatories = ['agents']
    for m in mandatories:
        if (not opts.__dict__[m]):
            print 'mandatory option missing'
    cfg = describeZucchiniResources(int(opts.agents), opts.dbnode, opts.mshost, opts.randomize, opts.sgenabled)
    generate_setup_config(cfg, opts.output)
