{
  AllFieldSearch=createSearchBuilder();
  AllFieldSearch.and("name",AllFieldSearch.entity().getName(),SearchCriteria.Op.EQ);
  AllFieldSearch.and("uuid",AllFieldSearch.entity().getUuid(),SearchCriteria.Op.EQ);
  AllFieldSearch.and("datacenterId",AllFieldSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  AllFieldSearch.and("hostAddress",AllFieldSearch.entity().getHostAddress(),SearchCriteria.Op.EQ);
  AllFieldSearch.and("status",AllFieldSearch.entity().getStatus(),SearchCriteria.Op.EQ);
  AllFieldSearch.and("path",AllFieldSearch.entity().getPath(),SearchCriteria.Op.EQ);
  AllFieldSearch.and("podId",AllFieldSearch.entity().getPodId(),Op.EQ);
  AllFieldSearch.done();
  DcPodSearch=createSearchBuilder();
  DcPodSearch.and("datacenterId",DcPodSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  DcPodSearch.and().op("nullpod",DcPodSearch.entity().getPodId(),SearchCriteria.Op.NULL);
  DcPodSearch.or("podId",DcPodSearch.entity().getPodId(),SearchCriteria.Op.EQ);
  DcPodSearch.cp();
  DcPodSearch.and().op("nullcluster",DcPodSearch.entity().getClusterId(),SearchCriteria.Op.NULL);
  DcPodSearch.or("cluster",DcPodSearch.entity().getClusterId(),SearchCriteria.Op.EQ);
  DcPodSearch.cp();
  DcPodSearch.done();
  DcPodAnyClusterSearch=createSearchBuilder();
  DcPodAnyClusterSearch.and("datacenterId",DcPodAnyClusterSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  DcPodAnyClusterSearch.and().op("nullpod",DcPodAnyClusterSearch.entity().getPodId(),SearchCriteria.Op.NULL);
  DcPodAnyClusterSearch.or("podId",DcPodAnyClusterSearch.entity().getPodId(),SearchCriteria.Op.EQ);
  DcPodAnyClusterSearch.cp();
  DcPodAnyClusterSearch.done();
  DeleteLvmSearch=createSearchBuilder();
  DeleteLvmSearch.and("ids",DeleteLvmSearch.entity().getId(),SearchCriteria.Op.IN);
  DeleteLvmSearch.and().op("LVM",DeleteLvmSearch.entity().getPoolType(),SearchCriteria.Op.EQ);
  DeleteLvmSearch.or("Filesystem",DeleteLvmSearch.entity().getPoolType(),SearchCriteria.Op.EQ);
  DeleteLvmSearch.cp();
  DeleteLvmSearch.done();
  StatusCountSearch=createSearchBuilder(Long.class);
  StatusCountSearch.and("status",StatusCountSearch.entity().getStatus(),SearchCriteria.Op.IN);
  StatusCountSearch.select(null,Func.COUNT,null);
  StatusCountSearch.done();
  _detailsDao=ComponentLocator.inject(StoragePoolDetailsDaoImpl.class);
}
