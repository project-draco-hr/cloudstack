{
  assert(dvSwitchMor != null);
  Map<Integer,HypervisorHostHelper.PvlanType> result=new HashMap<Integer,HypervisorHostHelper.PvlanType>();
  VMwareDVSConfigInfo configinfo=(VMwareDVSConfigInfo)_context.getVimClient().getDynamicProperty(dvSwitchMor,"config");
  List<VMwareDVSPvlanMapEntry> pvlanconfig=null;
  pvlanconfig=configinfo.getPvlanConfig();
  if (null == pvlanconfig || 0 == pvlanconfig.size()) {
    return result;
  }
  for (  VMwareDVSPvlanMapEntry mapEntry : pvlanconfig) {
    int entryVlanid=mapEntry.getPrimaryVlanId();
    int entryPvlanid=mapEntry.getSecondaryVlanId();
    if (entryVlanid == entryPvlanid) {
      if (vlanid == entryVlanid) {
        result.put(vlanid,HypervisorHostHelper.PvlanType.valueOf(mapEntry.getPvlanType()));
      }
 else       if ((vlanid != secondaryvlanid) && secondaryvlanid == entryVlanid) {
        result.put(secondaryvlanid,HypervisorHostHelper.PvlanType.valueOf(mapEntry.getPvlanType()));
      }
    }
 else {
      if (vlanid == entryVlanid) {
        result.put(vlanid,HypervisorHostHelper.PvlanType.promiscuous);
      }
 else       if (vlanid == entryPvlanid) {
        result.put(vlanid,HypervisorHostHelper.PvlanType.valueOf(mapEntry.getPvlanType()));
      }
      if ((vlanid != secondaryvlanid) && secondaryvlanid == entryVlanid) {
        result.put(secondaryvlanid,HypervisorHostHelper.PvlanType.promiscuous);
      }
 else       if (secondaryvlanid == entryPvlanid) {
        result.put(secondaryvlanid,HypervisorHostHelper.PvlanType.valueOf(mapEntry.getPvlanType()));
      }
    }
    if (result.containsKey(vlanid) && result.get(vlanid) != HypervisorHostHelper.PvlanType.promiscuous)     return result;
    if (result.containsKey(vlanid) && result.containsKey(secondaryvlanid))     return result;
  }
  return result;
}
