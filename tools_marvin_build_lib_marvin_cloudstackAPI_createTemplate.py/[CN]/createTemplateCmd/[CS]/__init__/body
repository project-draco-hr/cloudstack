def __init__(self):
    self.isAsync = 'true'
    'the display text of the template. This is usually used for display purposes.'
    'Required'
    self.displaytext = None
    'the name of the template'
    'Required'
    self.name = None
    'the ID of the OS Type that best represents the OS of this template.'
    'Required'
    self.ostypeid = None
    '32 or 64 bit'
    self.bits = None
    'Template details in key/value pairs.'
    self.details = []
    'true if template contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory'
    self.isdynamicallyscalable = None
    'true if this template is a featured template, false otherwise'
    self.isfeatured = None
    'true if this template is a public template, false otherwise'
    self.ispublic = None
    'true if the template supports the password reset feature; default is false'
    self.passwordenabled = None
    'true if the template requres HVM, false otherwise'
    self.requireshvm = None
    'the ID of the snapshot the template is being created from. Either this parameter, or volumeId has to be passed in'
    self.snapshotid = None
    'the tag for this template.'
    self.templatetag = None
    'Optional, only for baremetal hypervisor. The directory name where template stored on CIFS server'
    self.url = None
    'Optional, VM ID. If this presents, it is going to create a baremetal template for VM this ID refers to. This is only for VM whose hypervisor type is BareMetal'
    self.virtualmachineid = None
    'the ID of the disk volume the template is being created from. Either this parameter, or snapshotId has to be passed in'
    self.volumeid = None
    self.required = ['displaytext', 'name', 'ostypeid']
