{
  try {
    if (lbProtocol == null) {
      lbProtocol="TCP";
    }
 else     if (lbProtocol.equals(NetUtils.TCP_PROTO)) {
      lbProtocol="TCP";
    }
 else     if (lbProtocol.equals(NetUtils.UDP_PROTO)) {
      lbProtocol="UDP";
    }
 else {
      throw new ExecutionException("Got invalid protocol: " + lbProtocol);
    }
    if (lbMethod.equals("roundrobin")) {
      lbMethod="ROUNDROBIN";
    }
 else     if (lbMethod.equals("leastconn")) {
      lbMethod="LEASTCONNECTION";
    }
 else {
      throw new ExecutionException("Got invalid load balancing algorithm: " + lbMethod);
    }
    boolean vserverExisis=false;
    lbvserver vserver=getVirtualServerIfExisits(virtualServerName);
    if (vserver == null) {
      vserver=new lbvserver();
    }
 else {
      vserverExisis=true;
    }
    vserver.set_name(virtualServerName);
    vserver.set_ipv46(srcIp);
    vserver.set_port(srcPort);
    vserver.set_servicetype(lbProtocol);
    vserver.set_lbmethod(lbMethod);
    if (vserverExisis) {
      apiCallResult=lbvserver.update(_netscalerService,vserver);
    }
 else {
      apiCallResult=lbvserver.add(_netscalerService,vserver);
    }
    if (apiCallResult.errorcode != 0) {
      throw new ExecutionException("Failed to create new virtual server:" + virtualServerName + " due to "+ apiCallResult.message);
    }
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Created load balancing virtual server " + virtualServerName + " on the Netscaler device");
    }
  }
 catch (  nitro_exception e) {
    if (e.getErrorCode() != NitroError.NS_RESOURCE_EXISTS) {
      throw new ExecutionException("Failed to create new virtual server:" + virtualServerName + " due to "+ e.getMessage());
    }
  }
catch (  Exception e) {
    throw new ExecutionException("Failed to create new virtual server:" + virtualServerName + " due to "+ e.getMessage());
  }
}
