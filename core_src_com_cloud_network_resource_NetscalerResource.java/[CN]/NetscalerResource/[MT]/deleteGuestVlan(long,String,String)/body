{
  org.apache.axis.types.UnsignedInt result;
  try {
    if (nsVlanExists(vlanTag)) {
      deleteServersInGuestVlan(vlanTag,vlanSelfIp,vlanNetmask);
      vlan_interface_binding vlanIfBinding=new vlan_interface_binding();
      vlanIfBinding.set_id(vlanTag);
      vlanIfBinding.set_ifnum(_privateInterface);
      vlanIfBinding.set_tagged(true);
      apiCallResult=vlan_interface_binding.delete(_netscalerService,vlanIfBinding);
      if (apiCallResult.errorcode != 0) {
        throw new ExecutionException("Failed to unbind vlan:" + vlanTag + " with the private interface due to "+ apiCallResult.message);
      }
      vlan_nsip_binding vlanSnipBinding=new vlan_nsip_binding();
      vlanSnipBinding.set_netmask(vlanNetmask);
      vlanSnipBinding.set_ipaddress(vlanSelfIp);
      vlanSnipBinding.set_id(vlanTag);
      apiCallResult=vlan_nsip_binding.delete(_netscalerService,vlanSnipBinding);
      if (apiCallResult.errorcode != 0) {
        throw new ExecutionException("Failed to unbind vlan:" + vlanTag + " with the subnet due to "+ apiCallResult.message);
      }
      nsip subnetIp=nsip.get(_netscalerService,vlanSelfIp);
      apiCallResult=nsip.delete(_netscalerService,subnetIp);
      if (apiCallResult.errorcode != 0) {
        throw new ExecutionException("Failed to remove subnet ip:" + vlanTag + " to the subnet due to"+ apiCallResult.message);
      }
      apiCallResult=com.citrix.netscaler.nitro.resource.config.network.vlan.delete(_netscalerService,vlanTag);
      if (apiCallResult.errorcode != 0) {
        throw new ExecutionException("Failed to remove vlan with tag:" + vlanTag + "due to"+ apiCallResult.message);
      }
    }
  }
 catch (  nitro_exception e) {
    throw new ExecutionException("Failed to delete guest vlan network on the Netscaler device due to " + e.getMessage());
  }
catch (  Exception e) {
    throw new ExecutionException("Failed to delete guest vlan network on the Netscaler device due to " + e.getMessage());
  }
}
