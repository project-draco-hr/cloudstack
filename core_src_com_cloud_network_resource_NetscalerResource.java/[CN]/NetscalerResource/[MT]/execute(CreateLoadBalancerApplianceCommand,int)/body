{
  if (!_isSdx) {
    return Answer.createUnsupportedCommandAnswer(cmd);
  }
  try {
    String vpxName="Cloud-VPX-" + cmd.getLoadBalancerIP();
    String username="admin";
    String password="admin";
    ns ns_obj=new ns();
    ns_obj.set_name(vpxName);
    ns_obj.set_ip_address(cmd.getLoadBalancerIP());
    ns_obj.set_netmask(cmd.getNetmask());
    ns_obj.set_gateway(cmd.getGateway());
    ns_obj.set_username(username);
    ns_obj.set_password(password);
    ns_obj.set_feature_license("Standard");
    ns_obj.set_memory_total(new Double(2048));
    ns_obj.set_throughput(new Double(1000));
    ns_obj.set_pps(new Double(1000000));
    ns_obj.set_nsroot_profile("NS_nsroot_profile");
    ns_obj.set_number_of_ssl_cores(0);
    ns_obj.set_image_name("NSVPX-XEN-9.3-52.4_nc.xva");
    String publicIf=_publicInterface;
    String privateIf=_privateInterface;
    if (publicIf.equals("10/1") || privateIf.equals("10/1")) {
      ns_obj.set_if_10_1(new Boolean(true));
    }
    if (publicIf.equals("10/2") || privateIf.equals("10/2")) {
      ns_obj.set_if_10_2(new Boolean(true));
    }
    if (publicIf.equals("10/3") || privateIf.equals("10/3")) {
      ns_obj.set_if_10_3(new Boolean(true));
    }
    if (publicIf.equals("10/4") || privateIf.equals("10/4")) {
      ns_obj.set_if_10_4(new Boolean(true));
    }
    if (publicIf.equals("10/5") || privateIf.equals("10/5")) {
      ns_obj.set_if_10_5(new Boolean(true));
    }
    if (publicIf.equals("10/6") || privateIf.equals("10/6")) {
      ns_obj.set_if_10_6(new Boolean(true));
    }
    if (publicIf.equals("10/7") || privateIf.equals("10/7")) {
      ns_obj.set_if_10_7(new Boolean(true));
    }
    if (publicIf.equals("10/8") || privateIf.equals("10/8")) {
      ns_obj.set_if_10_8(new Boolean(true));
    }
    ns newVpx=ns.add(_netscalerSdxService,ns_obj);
    if (newVpx == null) {
      new Answer(cmd,new ExecutionException("Failed to create VPX instance on the netscaler SDX device " + _ip));
    }
    long startTick=System.currentTimeMillis();
    long startWaitMilliSeconds=600000;
    while (!newVpx.get_ns_state().equalsIgnoreCase("up") && System.currentTimeMillis() - startTick < startWaitMilliSeconds) {
      try {
        Thread.sleep(10000);
      }
 catch (      InterruptedException e) {
      }
      ns refreshNsObj=new ns();
      refreshNsObj.set_id(newVpx.get_id());
      newVpx=ns.get(_netscalerSdxService,refreshNsObj);
    }
    if (!newVpx.get_ns_state().equalsIgnoreCase("up")) {
      return new Answer(cmd,new ExecutionException("Failed to start VPX instance " + vpxName + " created on the netscaler SDX device "+ _ip));
    }
    startTick=System.currentTimeMillis();
    boolean nsServiceUp=false;
    long nsServiceWaitMilliSeconds=60000;
    while (System.currentTimeMillis() - startTick < nsServiceWaitMilliSeconds) {
      try {
        nitro_service _netscalerService=new nitro_service(cmd.getLoadBalancerIP(),"https");
        _netscalerService.set_credential(username,password);
        _netscalerService.set_timeout(_timeout);
        apiCallResult=_netscalerService.login();
        if (apiCallResult.errorcode == 0) {
          nsServiceUp=true;
          break;
        }
      }
 catch (      Exception e) {
        Thread.sleep(10000);
        continue;
      }
    }
    if (!nsServiceUp) {
      return new Answer(cmd,new ExecutionException("Failed to create VPX instance " + vpxName + " on the netscaler SDX device "+ _ip));
    }
    if (s_logger.isInfoEnabled()) {
      s_logger.info("Successfully provisioned VPX instance " + vpxName + " on the Netscaler SDX device "+ _ip);
    }
    int publicIfnum=Integer.parseInt(_publicInterface.substring(_publicInterface.lastIndexOf("/") + 1));
    int privateIfnum=Integer.parseInt(_privateInterface.substring(_privateInterface.lastIndexOf("/") + 1));
    if (publicIfnum == privateIfnum) {
      publicIf="10/1";
      privateIf="10/1";
    }
 else     if (publicIfnum > privateIfnum) {
      privateIf="10/1";
      publicIf="10/2";
    }
 else {
      publicIf="10/1";
      privateIf="10/2";
    }
    return new CreateLoadBalancerApplianceAnswer(cmd,true,"provisioned VPX instance","NetscalerVPXLoadBalancer","Netscaler",new NetscalerResource(),publicIf,privateIf,_username,_password);
  }
 catch (  Exception e) {
    if (shouldRetry(numRetries)) {
      return retry(cmd,numRetries);
    }
    return new CreateLoadBalancerApplianceAnswer(cmd,false,"failed to provisioned VPX instance due to " + e.getMessage(),null,null,null,null,null,null,null);
  }
}
