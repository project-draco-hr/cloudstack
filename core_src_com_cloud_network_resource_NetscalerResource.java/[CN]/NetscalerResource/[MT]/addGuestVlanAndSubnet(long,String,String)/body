{
  try {
    if (!nsVlanExists(vlanTag)) {
      vlan vlanObj=new vlan();
      vlanObj.set_id(vlanTag);
      apiCallResult=vlan.add(_netscalerService,vlanObj);
      if (apiCallResult.errorcode != 0) {
        throw new ExecutionException("Failed to add new vlan with tag:" + vlanTag + "due to"+ apiCallResult.message);
      }
      nsip selfIp=new nsip();
      selfIp.set_ipaddress(vlanSelfIp);
      selfIp.set_netmask(vlanNetmask);
      selfIp.set_type("SNIP");
      apiCallResult=nsip.add(_netscalerService,selfIp);
      if (apiCallResult.errorcode != 0) {
        throw new ExecutionException("Failed to add new self-ip due to " + apiCallResult.message);
      }
      vlan_nsip_binding ipVlanBinding=new vlan_nsip_binding();
      ipVlanBinding.set_id(vlanTag);
      ipVlanBinding.set_ipaddress(vlanSelfIp);
      ipVlanBinding.set_netmask(vlanNetmask);
      apiCallResult=vlan_nsip_binding.add(_netscalerService,ipVlanBinding);
      if (apiCallResult.errorcode != 0) {
        throw new ExecutionException("Failed to bind vlan with tag:" + vlanTag + " to the subnet due to"+ apiCallResult.message);
      }
      vlan_interface_binding vlanBinding=new vlan_interface_binding();
      vlanBinding.set_ifnum(_privateInterface);
      vlanBinding.set_tagged(true);
      vlanBinding.set_id(vlanTag);
      apiCallResult=vlan_interface_binding.add(_netscalerService,vlanBinding);
      if (apiCallResult.errorcode != 0) {
        throw new ExecutionException("Failed to bind vlan with tag:" + vlanTag + " with the interface "+ _privateInterface+ " due to "+ apiCallResult.message);
      }
    }
 else {
      throw new ExecutionException("Failed to configure Netscaler device for vlan with tag " + vlanTag + " as vlan already exisits");
    }
  }
 catch (  nitro_exception e) {
    throw new ExecutionException("Failed to implement guest network on the Netscaler device");
  }
catch (  Exception e) {
    throw new ExecutionException("Failed to implement guest network on the Netscaler device");
  }
}
