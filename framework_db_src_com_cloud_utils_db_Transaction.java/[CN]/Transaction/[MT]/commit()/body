{
  if (!_txn) {
    s_logger.warn("txn: Commit called when it is not a transaction: " + buildName());
    return false;
  }
  Iterator<StackElement> it=_stack.iterator();
  while (it.hasNext()) {
    StackElement st=it.next();
    if (st.type == START_TXN) {
      it.remove();
      break;
    }
  }
  if (hasTxnInStack()) {
    if (s_logger.isTraceEnabled()) {
      s_logger.trace("txn: Not committing because transaction started elsewhere: " + buildName() + " / "+ toString());
    }
    return false;
  }
  _txn=false;
  try {
    if (_conn != null) {
      _conn.commit();
      s_logger.trace("txn: DB Changes committed. Time = " + (System.currentTimeMillis() - _txnTime));
      clearLockTimes();
      closeConnection();
    }
    return true;
  }
 catch (  final SQLException e) {
    rollbackTransaction();
    throw new CloudRuntimeException("Unable to commit or close the connection. ",e);
  }
}
