{
  if (verbose)   System.out.println("[" + this + "] INFO: Received buf #"+ (packetNumber)+ " "+ buf+ ".");
  if (buf == null)   return;
  if (packetNumber >= bufs.length)   throw new AssertionError("[" + this + "] Incoming buffer #"+ packetNumber+ " is not expected. Number of expected buffers: "+ bufs.length+ ", unexpected buffer: "+ buf+ ".");
  ByteBuffer expectedBuf=bufs[packetNumber];
  if (!Arrays.equals(expectedBuf.toByteArray(),buf.toByteArray())) {
    dump(buf,expectedBuf);
    throw new AssertionError("[" + this + "] Incoming buffer #"+ packetNumber+ " is not equal to expected buffer.\n  Actual bufer: "+ buf+ ",\n  expected buffer: "+ expectedBuf+ ".");
  }
  Set<String> metadataKeys=expectedBuf.getMetadataKeys();
  if (metadataKeys.size() > 0) {
    for (    String key : metadataKeys) {
      Object expectedValue=expectedBuf.getMetadata(key);
      Object actualValue=buf.getMetadata(key);
      if (actualValue == null)       throw new AssertionError("[" + this + "] Incoming buffer #"+ packetNumber+ " is not equal to expected buffer in metadata for key \""+ key+ "\".\n  Actual metadata value: "+ actualValue+ ",\n  expected value: \""+ expectedValue+ "\".");
      if (!expectedValue.equals(actualValue))       throw new AssertionError("[" + this + "] Incoming buffer #"+ packetNumber+ " is not equal to expected buffer in metadata for key \""+ key+ "\".\n  Actual metadata value: \""+ actualValue+ "\",\n  expected value: \""+ expectedValue+ "\".");
    }
  }
  if (verbose)   System.out.println("[" + this + "] INFO: buffers are equal.");
  packetNumber++;
  buf.unref();
}
