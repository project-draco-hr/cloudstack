{
  System.out.println("Migrating 2.1 configuration variables...");
  System.out.print("Are you migrating from 2.0 Premium Edition? (yes/no): ");
  String answer=readInput();
  if (answer != null && answer.equalsIgnoreCase("yes")) {
    _isPremium=true;
  }
  List<String> categories=Config.getCategories();
  for (  String category : categories) {
    if (!_isPremium && category.equals("Premium")) {
      continue;
    }
    List<Config> configs=Config.getConfigs(category);
    for (    Config c : configs) {
      String name=c.key();
      if (_configDao.getValue(name) != null) {
        continue;
      }
      String instance="DEFAULT";
      String component=c.getComponent();
      String value=c.getDefaultValue();
      String description=c.getDescription();
      ConfigurationVO configVO=new ConfigurationVO(category,instance,component,name,value,description);
      _configDao.persist(configVO);
    }
    if (_isPremium) {
      _configDao.update("network.type","vlan");
      _configDao.update("hypervisor.type","xenserver");
      _configDao.update("secondary.storage.vm","true");
      _configDao.update("secstorage.encrypt.copy","true");
      _configDao.update("secstorage.secure.copy.cert","realhostip");
    }
    boolean externalIpAlloator=Boolean.parseBoolean(_configDao.getValue("direct.attach.network.externalIpAllocator.enabled"));
    String hyperVisor=_configDao.getValue("hypervisor.type");
    if (hyperVisor.equalsIgnoreCase("KVM") && !externalIpAlloator) {
      _configDao.update("direct.attach.network.externalIpAllocator.enabled","true");
    }
    String mountParent=getMountParent();
    if (mountParent != null) {
      _configDao.update("mount.parent",mountParent);
    }
    if (_configDao.getValue("host") == null) {
      String hostIpAdr=getHost();
      if (hostIpAdr != null) {
        _configDao.update("host",hostIpAdr);
      }
    }
    updateSSOKey();
  }
  System.out.println("Migrating 2.1 configuration done");
}
