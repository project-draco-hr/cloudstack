{
  System.out.println("Migrating service offering...");
  long seq=getServiceOfferingStartSequence();
  List<ServiceOffering20VO> oldServiceOfferings=_serviceOffering20Dao.listAll();
  for (  ServiceOffering20VO so20 : oldServiceOfferings) {
    ServiceOffering21VO so21=new ServiceOffering21VO(so20.getName(),so20.getCpu(),so20.getRamSize(),so20.getSpeed(),so20.getRateMbps(),so20.getMulticastRateMbps(),so20.getOfferHA(),so20.getDisplayText(),so20.getGuestIpType(),so20.getUseLocalStorage(),false,null);
    so21.setId(seq++);
    so21.setDiskSize(0);
    so21=_serviceOffering21Dao.persist(so21);
    if (so20.getId().longValue() != so21.getId().longValue()) {
      updateServiceOfferingReferences(so20.getId().longValue(),so21.getId().longValue());
    }
  }
  boolean useLocalStorage=Boolean.parseBoolean(_configDao.getValue(Config.SystemVMUseLocalStorage.key()));
  int proxyRamSize=NumbersUtil.parseInt(_configDao.getValue(Config.ConsoleProxyRamSize.key()),ConsoleProxyManager.DEFAULT_PROXY_VM_RAMSIZE);
  ServiceOffering21VO soConsoleProxy=new ServiceOffering21VO("Fake Offering For DomP",1,proxyRamSize,0,0,0,false,null,NetworkOffering.GuestIpType.Virtualized,useLocalStorage,true,null);
  soConsoleProxy.setId(seq++);
  soConsoleProxy.setUniqueName("Cloud.com-ConsoleProxy");
  soConsoleProxy=_serviceOffering21Dao.persist(soConsoleProxy);
  _consoleProxyServiceOfferingId=soConsoleProxy.getId();
  int secStorageVmRamSize=NumbersUtil.parseInt(_configDao.getValue(Config.SecStorageVmRamSize.key()),SecondaryStorageVmManager.DEFAULT_SS_VM_RAMSIZE);
  ServiceOffering21VO soSecondaryVm=new ServiceOffering21VO("Fake Offering For Secondary Storage VM",1,secStorageVmRamSize,0,0,0,false,null,NetworkOffering.GuestIpType.Virtualized,useLocalStorage,true,null);
  soSecondaryVm.setId(seq++);
  soSecondaryVm.setUniqueName("Cloud.com-SecondaryStorage");
  soSecondaryVm=_serviceOffering21Dao.persist(soSecondaryVm);
  _secStorageServiceOfferingId=soSecondaryVm.getId();
  int routerRamSize=NumbersUtil.parseInt(_configDao.getValue("router.ram.size"),128);
  ServiceOffering21VO soDomainRouter=new ServiceOffering21VO("Fake Offering For DomR",1,routerRamSize,0,0,0,false,null,NetworkOffering.GuestIpType.Virtualized,useLocalStorage,true,null);
  soDomainRouter.setId(seq++);
  soDomainRouter.setUniqueName("Cloud.Com-SoftwareRouter");
  soDomainRouter=_serviceOffering21Dao.persist(soDomainRouter);
  _domRServiceOfferingId=soDomainRouter.getId();
  System.out.println("Service offering has been migrated to 2.1 format");
}
