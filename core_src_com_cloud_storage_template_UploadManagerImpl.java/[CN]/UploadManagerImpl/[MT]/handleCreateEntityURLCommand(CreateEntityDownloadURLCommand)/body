{
  boolean isApacheUp=checkAndStartApache();
  if (!isApacheUp) {
    String errorString="Error in starting Apache server ";
    s_logger.error(errorString);
    return new CreateEntityDownloadURLAnswer(errorString,CreateEntityDownloadURLAnswer.RESULT_FAILURE);
  }
  String extractDir="/var/www/html/userdata/";
  Script command=new Script("mkdir",s_logger);
  command.add("-p");
  command.add(extractDir);
  String result=command.execute();
  if (result != null) {
    String errorString="Error in creating directory =" + result;
    s_logger.error(errorString);
    return new CreateEntityDownloadURLAnswer(errorString,CreateEntityDownloadURLAnswer.RESULT_FAILURE);
  }
  String uuid=cmd.getExtractLinkUUID();
  command=new Script("touch",s_logger);
  command.add(extractDir + uuid);
  result=command.execute();
  if (result != null) {
    String errorString="Error in creating file " + uuid + " ,error: "+ result;
    s_logger.warn(errorString);
    return new CreateEntityDownloadURLAnswer(errorString,CreateEntityDownloadURLAnswer.RESULT_FAILURE);
  }
  cmd.getInstallPath();
  command=new Script("/bin/bash",s_logger);
  command.add("-c");
  command.add("ln -sf " + extractMountPoint + File.separator+ cmd.getInstallPath()+ " "+ extractDir+ uuid);
  result=command.execute();
  if (result != null) {
    String errorString="Error in linking  err=" + result;
    s_logger.error(errorString);
    return new CreateEntityDownloadURLAnswer(errorString,CreateEntityDownloadURLAnswer.RESULT_FAILURE);
  }
  return new CreateEntityDownloadURLAnswer("",CreateEntityDownloadURLAnswer.RESULT_SUCCESS);
}
