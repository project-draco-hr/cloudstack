{
  try {
    UserContext.current().setEventDetails("Volume Id: " + getId());
    Long uploadId=_mgr.extractVolume(this);
    if (uploadId != null) {
      Upload uploadInfo=_entityMgr.findById(Upload.class,uploadId);
      ExtractResponse response=new ExtractResponse();
      response.setResponseName(getCommandName());
      response.setObjectName("volume");
      response.setId(id);
      response.setName(_entityMgr.findById(Volume.class,id).getName());
      response.setZoneId(zoneId);
      response.setZoneName(_entityMgr.findById(DataCenter.class,zoneId).getName());
      response.setMode(mode);
      response.setUploadId(uploadId);
      response.setState(uploadInfo.getUploadState().toString());
      response.setAccountId(getEntityOwnerId());
      response.setUrl(uploadInfo.getUploadUrl().replaceAll("/","%2F"));
      this.setResponseObject(response);
    }
 else {
      throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to extract volume");
    }
  }
 catch (  URISyntaxException ex) {
    s_logger.info(ex);
    throw new ServerApiException(BaseCmd.PARAM_ERROR,ex.getMessage());
  }
}
