def MigrateVmWithVolume(self, vm, destinationHost, volumes, pools):
    '\n        This method is used to migrate a vm and its volumes using migrate virtual machine with volume API\n        INPUTS:\n               1. vm -> virtual machine object\n               2. destinationHost -> the host to which VM will be migrated\n               3. volumes -> list of volumes which are to be migrated\n               4. pools -> list of destination pools\n    '
    vol_pool_map = {}
    for (vol, pool) in zip(volumes, pools):
        vol_pool_map.update({vol.id: pool.id, })
    vm.migrate_vm_with_volume(self.apiclient, hostid=destinationHost.id, migrateto=vol_pool_map)
    vm.getState(self.apiclient, 'Running')
    migrated_vm_response = list_virtual_machines(self.apiclient, id=vm.id)
    self.assertEqual(isinstance(migrated_vm_response, list), True, 'Check list virtual machines response for valid list')
    self.assertEqual(migrated_vm_response[0].hostid, destinationHost.id, 'VM did not migrate to a specified host')
    for (vol, pool) in zip(volumes, pools):
        migrated_volume_response = list_volumes(self.apiclient, virtualmachineid=migrated_vm_response[0].id, name=vol.name, listall=True)
        self.assertEqual(isinstance(migrated_volume_response, list), True, 'Check list virtual machines response for valid list')
        self.assertEqual(migrated_volume_response[0].storageid, pool.id, 'Volume did not migrate to a specified pool')
        self.assertEqual(str(migrated_volume_response[0].state).lower(), 'ready', 'Check migrated volume is in Ready state')
        '\n        #Take VM snapshot to check data integrity\n        try :\n            vm_snapshot = VmSnapshot.create(self.apiclient, vmid = migrated_vm_response[0].id)\n        except Exception as e:\n            raise Exception("Warning: Exception during VM snapshot creation : %s" % e)\n\n        #Delete the snapshot\n        try :\n            VmSnapshot.deleteVMSnapshot(self.apiclient, vmsnapshotid = vm_snapshot.id)\n        except Exception as e:\n            raise Exception("Warning: Exception during VM snapshot creation : %s" % e)\n        '
        return migrated_vm_response[0]
