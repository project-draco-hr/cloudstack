def createChecksum(self, virtual_machine, disk, disk_type):
    ' Write data on the disk and return the md5 checksum'
    random_data_0 = random_gen(size=100)
    m = hashlib.md5()
    m.update(random_data_0)
    checksum_random_data_0 = m.hexdigest()
    try:
        ssh_client = SshClient(virtual_machine.ssh_ip, virtual_machine.ssh_port, virtual_machine.username, virtual_machine.password)
    except Exception as e:
        self.fail(('SSH failed for VM: %s' % e))
    self.debug(('Formatting volume: %s to ext3' % disk.id))
    format_volume_to_ext3(ssh_client, self.testdata['volume_write_path'][virtual_machine.hypervisor][disk_type])
    cmds = ['fdisk -l', ('mkdir -p %s' % self.testdata['data_write_paths']['mount_dir']), ('mount -t ext3 %s1 %s' % (self.testdata['volume_write_path'][virtual_machine.hypervisor][disk_type], self.testdata['data_write_paths']['mount_dir'])), ('mkdir -p %s/%s/%s ' % (self.testdata['data_write_paths']['mount_dir'], self.testdata['data_write_paths']['sub_dir'], self.testdata['data_write_paths']['sub_lvl_dir1'])), ('echo %s > %s/%s/%s/%s' % (random_data_0, self.testdata['data_write_paths']['mount_dir'], self.testdata['data_write_paths']['sub_dir'], self.testdata['data_write_paths']['sub_lvl_dir1'], self.testdata['data_write_paths']['random_data'])), ('cat %s/%s/%s/%s' % (self.testdata['data_write_paths']['mount_dir'], self.testdata['data_write_paths']['sub_dir'], self.testdata['data_write_paths']['sub_lvl_dir1'], self.testdata['data_write_paths']['random_data']))]
    for c in cmds:
        self.debug(('Command: %s' % c))
        result = ssh_client.execute(c)
        self.debug(result)
    cmds = [('umount %s' % self.testdata['data_write_paths']['mount_dir'])]
    for c in cmds:
        self.debug(('Command: %s' % c))
        ssh_client.execute(c)
    return checksum_random_data_0
