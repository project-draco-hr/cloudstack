def compareChecksum(self, original_checksum, disk_type, virt_machine=None, disk=None, new_vm=False):
    '\n    Create md5 checksum of the data present on the disk and compare\n    it with the given checksum\n    '
    if ((disk_type == 'datadiskdevice_1') and new_vm):
        new_virtual_machine = VirtualMachine.create(self.userapiclient, self.testdata['small'], templateid=self.template.id, accountid=self.account.name, domainid=self.account.domainid, serviceofferingid=self.service_offering_cluster1.id, zoneid=self.zone.id, mode=self.zone.networktype)
        new_virtual_machine.start(self.userapiclient)
        self.debug(('Attaching volume: %s to VM: %s' % (disk.id, new_virtual_machine.id)))
        new_virtual_machine.attach_volume(self.apiclient, disk)
        self.debug(('Rebooting : %s' % new_virtual_machine.id))
        new_virtual_machine.reboot(self.apiclient)
    else:
        new_virtual_machine = virt_machine
        if (new_virtual_machine.state != 'Running'):
            new_virtual_machine.start(self.userapiclient)
    try:
        self.debug(('SSH into (Public IP: ) %s ' % new_virtual_machine.ssh_ip))
        ssh = SshClient(new_virtual_machine.ssh_ip, new_virtual_machine.ssh_port, new_virtual_machine.username, new_virtual_machine.password)
    except Exception as e:
        self.fail(('SSH access failed for VM: %s, Exception: %s' % (new_virtual_machine.ipaddress, e)))
    cmds = ['blkid', 'fdisk -l', ('mkdir -p %s' % self.testdata['data_write_paths']['mount_dir']), ('mount -t ext3 %s1 %s' % (self.testdata['volume_write_path'][new_virtual_machine.hypervisor][disk_type], self.testdata['data_write_paths']['mount_dir']))]
    for c in cmds:
        self.debug(('Command: %s' % c))
        result = ssh.execute(c)
        self.debug(result)
    returned_data_0 = ssh.execute(('cat %s/%s/%s/%s' % (self.testdata['data_write_paths']['mount_dir'], self.testdata['data_write_paths']['sub_dir'], self.testdata['data_write_paths']['sub_lvl_dir1'], self.testdata['data_write_paths']['random_data'])))
    n = hashlib.md5()
    n.update(returned_data_0[0])
    checksum_returned_data_0 = n.hexdigest()
    self.debug(('returned_data_0: %s' % returned_data_0[0]))
    self.assertEqual(original_checksum, checksum_returned_data_0, 'Cheskum does not match with checksum of original data')
    cmds = [('umount %s' % self.testdata['data_write_paths']['mount_dir'])]
    for c in cmds:
        self.debug(('Command: %s' % c))
        ssh.execute(c)
    if new_vm:
        new_virtual_machine.detach_volume(self.apiclient, disk)
        new_virtual_machine.delete(self.apiclient)
    return
