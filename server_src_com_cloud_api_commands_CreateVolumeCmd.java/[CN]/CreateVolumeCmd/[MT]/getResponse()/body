{
  VolumeVO volume=(VolumeVO)getResponseObject();
  VolumeResponse response=new VolumeResponse();
  response.setId(volume.getId());
  response.setName(param.getName());
  response.setVolumeType(volume.getVolumeType().toString());
  response.setSize(volume.getSize());
  response.setCreated(volume.getCreated());
  response.setState(volume.getStatus().toString());
  response.setAccountName(ggetManagementServer().findAccountById(volume.getAccountId()).getAccountName());
  response.setDomainId(volume.getDomainId());
  response.setDiskOfferingId(volume.getDiskOfferingId());
  if (volume.getDiskOfferingId() != null) {
    response.setDiskOfferingName(getManagementServer().findDiskOfferingById(volume.getDiskOfferingId()).getName());
    response.setDiskOfferingDisplayText(getManagementServer().findDiskOfferingById(volume.getDiskOfferingId()).getDisplayText());
  }
  response.setDomain(getManagementServer().findDomainIdById(volume.getDomainId()).getName());
  response.setStorageType("shared");
  if (volume.getPoolId() != null)   response.setStorage(getManagementServer().findPoolById(volume.getPoolId()).getName());
  response.setZoneId(volume.getDataCenterId());
  response.setZoneName(getManagementServer().getDataCenterBy(volume.getDataCenterId()).getName());
  return SerializerHelper.toSerializedString(response);
}
