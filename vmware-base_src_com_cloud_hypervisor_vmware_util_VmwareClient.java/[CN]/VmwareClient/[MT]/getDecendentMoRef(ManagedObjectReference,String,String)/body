{
  if (name == null || name.length() == 0) {
    return null;
  }
  PropertySpec pSpec=new PropertySpec();
  pSpec.setType(type);
  pSpec.setAll(false);
  pSpec.getPathSet().add(name);
  ObjectSpec oSpec=new ObjectSpec();
  oSpec.setObj(root);
  oSpec.setSkip(false);
  oSpec.getSelectSet().addAll(buildFullTraversal());
  PropertyFilterSpec spec=new PropertyFilterSpec();
  spec.getPropSet().add(pSpec);
  spec.getObjectSet().add(oSpec);
  List<PropertyFilterSpec> specArr=new ArrayList<PropertyFilterSpec>();
  specArr.add(spec);
  List<ObjectContent> ocary=vimPort.retrieveProperties(propCollectorRef,specArr);
  if (ocary == null || ocary.size() == 0) {
    return null;
  }
  for (  ObjectContent oc : ocary) {
    ManagedObjectReference mor=oc.getObj();
    List<DynamicProperty> propary=oc.getPropSet();
    if (type == null || type.equals(mor.getType())) {
      if (propary.size() > 0) {
        String propval=(String)propary.get(0).getVal();
        if (propval != null && name.equals(propval))         return mor;
      }
    }
  }
  return null;
}
