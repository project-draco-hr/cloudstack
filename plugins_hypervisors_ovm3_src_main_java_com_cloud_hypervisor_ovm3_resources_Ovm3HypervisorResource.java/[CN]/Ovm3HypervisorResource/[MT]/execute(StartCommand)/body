{
  VirtualMachineTO vmSpec=cmd.getVirtualMachine();
  String vmName=vmSpec.getName();
  State state=State.Stopped;
  Xen xen=new Xen(c);
  try {
    hypervisorsupport.setVmStateStarting(vmName);
    Xen.Vm vm=xen.getVmConfig();
    vm.setVmCpus(vmSpec.getCpus());
    vm.setVmMemory(vmSpec.getMinRam() / 1024 / 1024);
    vm.setVmUuid(UUID.nameUUIDFromBytes(vmSpec.getName().getBytes(Charset.defaultCharset())).toString());
    vm.setVmName(vmName);
    String domType=guesttypes.getOvm3GuestType(vmSpec.getOs());
    if (domType == null || domType.isEmpty()) {
      domType="default";
      LOGGER.debug("VM Virt type missing setting to: " + domType);
    }
 else {
      LOGGER.debug("VM Virt type set to " + domType + " for "+ vmSpec.getOs());
    }
    vm.setVmDomainType(domType);
    if (vmSpec.getBootloader() == BootloaderType.CD) {
      LOGGER.warn("CD booting is not supported");
    }
    vmsupport.createVbds(vm,vmSpec);
    if (vmSpec.getType() != VirtualMachine.Type.User) {
      hypervisornetwork.configureNetworking();
      vm.setVmExtra(vmSpec.getBootArgs().replace(" ","%"));
      String svmPath=configuration.getAgentOvmRepoPath() + "/" + ovmObject.deDash(vm.getPrimaryPoolUuid())+ "/ISOs";
      String svmIso=svmPath + "/" + storagepool.getSystemVMPatchIsoFile().getName();
      vm.addIso(svmIso);
    }
    vmsupport.createVifs(vm,vmSpec);
    vm.setupVifs();
    vm.setVnc("0.0.0.0",vmSpec.getVncPassword());
    xen.createVm(ovmObject.deDash(vm.getPrimaryPoolUuid()),vm.getVmUuid());
    xen.startVm(ovmObject.deDash(vm.getPrimaryPoolUuid()),vm.getVmUuid());
    state=State.Running;
    if (vmSpec.getType() != VirtualMachine.Type.User) {
      String controlIp=null;
      for (      NicTO nic : vmSpec.getNics()) {
        if (nic.getType() == TrafficType.Control) {
          controlIp=nic.getIp();
        }
      }
      for (int count=0; count < 60; count++) {
        CloudstackPlugin cSp=new CloudstackPlugin(c);
        if (hypervisorsupport.getVmState(vmName) == null && count > 1) {
          String msg="VM " + vmName + " went missing on "+ configuration.getAgentHostname()+ ", returning stopped";
          LOGGER.debug(msg);
          state=State.Stopped;
          return new StartAnswer(cmd,msg);
        }
        try {
          Boolean res=cSp.domrCheckSsh(controlIp);
          LOGGER.debug("connected to " + controlIp + " on attempt "+ count+ " result: "+ res);
          if (res) {
            break;
          }
        }
 catch (        Exception x) {
          LOGGER.trace("unable to connect to " + controlIp + " on attempt "+ count+ " "+ x.getMessage(),x);
        }
        Thread.sleep(5000);
      }
    }
    if (configuration.getAgentInOvm3Pool() && configuration.getAgentInOvm3Cluster()) {
      xen.configureVmHa(ovmObject.deDash(vm.getPrimaryPoolUuid()),vm.getVmUuid(),true);
    }
    state=State.Running;
    return new StartAnswer(cmd);
  }
 catch (  Exception e) {
    LOGGER.debug("Start vm " + vmName + " failed",e);
    state=State.Stopped;
    return new StartAnswer(cmd,e.getMessage());
  }
 finally {
    hypervisorsupport.setVmState(vmName,state);
  }
}
