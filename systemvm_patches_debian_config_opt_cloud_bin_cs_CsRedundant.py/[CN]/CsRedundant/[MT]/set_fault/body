def set_fault(self):
    ' Set fault mode on this router '
    if (not self.cl.is_redundant()):
        logging.error('Set fault called on non-redundant router')
        return
    logging.info('Router switched to fault mode')
    ads = [o for o in self.address.get_ips() if o.needs_vrrp()]
    for o in ads:
        CsHelper.execute(('ifconfig %s down' % o.get_device()))
    cmd = ('%s -C %s' % (self.CONNTRACKD_BIN, self.CONNTRACKD_CONFIG))
    CsHelper.execute(('%s -s' % cmd))
    CsHelper.service('ipsec', 'stop')
    CsHelper.service('xl2tpd', 'stop')
    CsHelper.service('cloud-passwd-srvr', 'stop')
    CsHelper.service('dnsmasq', 'stop')
    cl.dbag['config']['redundant_master'] = 'false'
    cl.save()
