{
  int error=0;
  Element rootElement=this.getInputFile().get(0).getDocumentElement();
  NodeList commandLst=rootElement.getElementsByTagName("command");
  for (int i=0; i < commandLst.getLength(); i++) {
    Node fstNode=commandLst.item(i);
    Element fstElmnt=(Element)fstNode;
    ApiCommand api=new ApiCommand(fstElmnt,this.getParam(),this.getCommands());
    api.sendCommand(this.getClient(),null);
    if ((api.getResponseType() != ResponseType.ERROR) && (api.getResponseCode() == 200)) {
      s_logger.error("Test case " + api.getTestCaseInfo() + " failed. Command that was supposed to fail, passed. The command was sent with the following url "+ api.getUrl());
      error++;
    }
 else     if ((api.getResponseType() != ResponseType.ERROR) && (api.getResponseCode() == 200)) {
      if (api.getResponseType() == ResponseType.EMPTY) {
        if (api.isEmpty() == true) {
          s_logger.info("Test case " + api.getTestCaseInfo() + " passed");
        }
 else {
          s_logger.error("Test case " + api.getTestCaseInfo() + " failed. Empty response was expected. Command was sent with url "+ api.getUrl());
        }
      }
 else {
        if (api.isEmpty() != false)         s_logger.error("Test case " + api.getTestCaseInfo() + " failed. Non-empty response was expected. Command was sent with url "+ api.getUrl());
 else {
          if (api.setParam(this.getParam()) == false) {
            s_logger.error("Exiting the test...Command " + api.getName() + " didn't return parameters needed for the future use. The command was sent with url "+ api.getUrl());
            return false;
          }
 else           if (api.getTestCaseInfo() != null) {
            s_logger.info("Test case " + api.getTestCaseInfo() + " passed");
          }
        }
      }
    }
 else     if ((api.getResponseType() != ResponseType.ERROR) && (api.getResponseCode() != 200)) {
      s_logger.error("Test case " + api.getTestCaseInfo() + " failed . Command was sent with url  "+ api.getUrl());
      if (api.getRequired() == true) {
        s_logger.info("The command is required for the future use, so exiging");
        return false;
      }
      error++;
    }
 else     if (api.getTestCaseInfo() != null) {
      s_logger.info("Test case " + api.getTestCaseInfo() + " passed");
    }
  }
  if (error != 0)   return false;
 else   return true;
}
