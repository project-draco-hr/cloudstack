{
  if ((networkIds != null || ipAddress != null || getIp6Address() != null) && ipToNetworkList != null) {
    throw new InvalidParameterValueException("NetworkIds and ipAddress can't be specified along with ipToNetworkMap parameter");
  }
  LinkedHashMap<Long,IpAddresses> ipToNetworkMap=null;
  if (ipToNetworkList != null && !ipToNetworkList.isEmpty()) {
    ipToNetworkMap=new LinkedHashMap<Long,IpAddresses>();
    Collection ipsCollection=ipToNetworkList.values();
    Iterator iter=ipsCollection.iterator();
    while (iter.hasNext()) {
      HashMap<String,String> ips=(HashMap<String,String>)iter.next();
      Long networkId;
      Network network=_networkService.getNetwork(ips.get("networkid"));
      if (network != null) {
        networkId=network.getId();
      }
 else {
        try {
          networkId=Long.parseLong(ips.get("networkid"));
        }
 catch (        NumberFormatException e) {
          throw new InvalidParameterValueException("Unable to translate and find entity with networkId: " + ips.get("networkid"));
        }
      }
      String requestedIp=ips.get("ip");
      String requestedIpv6=ips.get("ipv6");
      if (requestedIpv6 != null) {
        requestedIpv6=NetUtils.standardizeIp6Address(requestedIpv6);
      }
      IpAddresses addrs=new IpAddresses(requestedIp,requestedIpv6);
      ipToNetworkMap.put(networkId,addrs);
    }
  }
  return ipToNetworkMap;
}
