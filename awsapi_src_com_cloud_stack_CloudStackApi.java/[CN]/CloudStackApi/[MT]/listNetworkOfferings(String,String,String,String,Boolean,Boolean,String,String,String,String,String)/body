{
  CloudStackCommand cmd=new CloudStackCommand(ApiConstants.LIST_NETWORK_OFFERINGS);
  if (cmd != null) {
    if (availability != null)     cmd.setParam(ApiConstants.AVAILABILITY,availability);
    if (displayText != null)     cmd.setParam(ApiConstants.DISPLAY_TEXT,displayText);
    if (guestIpType != null)     cmd.setParam(ApiConstants.GUEST_IP_TYPE,guestIpType);
    if (id != null)     cmd.setParam(ApiConstants.ID,id);
    if (isDefault != null)     cmd.setParam(ApiConstants.IS_DEFAULT,isDefault.toString());
    if (isShared != null)     cmd.setParam(ApiConstants.IS_SHARED,isShared.toString());
    if (keyWord != null)     cmd.setParam(ApiConstants.KEYWORD,keyWord);
    if (name != null)     cmd.setParam(ApiConstants.NAME,name);
    if (specifyVLan != null)     cmd.setParam(ApiConstants.SPECIFY_VLAN,specifyVLan);
    if (trafficType != null)     cmd.setParam(ApiConstants.TRAFFIC_TYPE,trafficType);
    if (zoneId != null)     cmd.setParam(ApiConstants.ZONE_ID,zoneId);
  }
  return _client.listCall(cmd,apiKey,secretKey,ApiConstants.LIST_NETWORK_OFFERINGS_RESPONSE,ApiConstants.NETWORK_OFFERING,new TypeToken<List<CloudStackNetworkOffering>>(){
  }
.getType());
}
