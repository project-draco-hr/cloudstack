{
  Mockito.when(configDao.getValue(Config.PublishActionEvent.key())).thenReturn("true");
  PowerMockito.mockStatic(ComponentContext.class);
  Mockito.when(ComponentContext.getComponent(EventBus.class)).thenReturn(eventBus);
  Mockito.when(eventDao.persist(Mockito.any(EventVO.class))).thenAnswer(new Answer<EventVO>(){
    @Override public EventVO answer(    InvocationOnMock invocation) throws Throwable {
      EventVO event=(EventVO)invocation.getArguments()[0];
      Field id=event.getClass().getDeclaredField("id");
      id.setAccessible(true);
      id.set(event,EVENT_ID);
      return event;
    }
  }
);
  Mockito.doAnswer(new Answer<Void>(){
    @Override public Void answer(    InvocationOnMock invocation) throws Throwable {
      Event event=(Event)invocation.getArguments()[0];
      publishedEvents.add(event);
      return null;
    }
  }
).when(eventBus).publish(Mockito.any(Event.class));
}
