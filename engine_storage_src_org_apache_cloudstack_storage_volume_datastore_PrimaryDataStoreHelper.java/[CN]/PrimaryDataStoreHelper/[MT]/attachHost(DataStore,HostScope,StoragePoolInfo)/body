{
  StoragePoolHostVO poolHost=storagePoolHostDao.findByPoolHost(store.getId(),scope.getScopeId());
  if (poolHost == null) {
    poolHost=new StoragePoolHostVO(store.getId(),scope.getScopeId(),existingInfo.getLocalPath());
    storagePoolHostDao.persist(poolHost);
  }
  StoragePoolVO pool=this.dataStoreDao.findById(store.getId());
  pool.setScope(scope.getScopeType());
  pool.setUsedBytes(existingInfo.getCapacityBytes() - existingInfo.getAvailableBytes());
  pool.setCapacityBytes(existingInfo.getCapacityBytes());
  pool.setStatus(StoragePoolStatus.Up);
  this.dataStoreDao.update(pool.getId(),pool);
  this.storageMgr.createCapacityEntry(pool,Capacity.CAPACITY_TYPE_LOCAL_STORAGE,pool.getUsedBytes());
  return dataStoreMgr.getDataStore(pool.getId(),DataStoreRole.Primary);
}
