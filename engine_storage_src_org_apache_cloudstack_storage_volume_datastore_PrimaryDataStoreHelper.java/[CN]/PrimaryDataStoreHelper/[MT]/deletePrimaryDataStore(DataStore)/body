{
  List<StoragePoolHostVO> hostPoolRecords=this.storagePoolHostDao.listByPoolId(store.getId());
  StoragePoolVO poolVO=this.dataStoreDao.findById(store.getId());
  Transaction txn=Transaction.currentTxn();
  txn.start();
  for (  StoragePoolHostVO host : hostPoolRecords) {
    storagePoolHostDao.deleteStoragePoolHostDetails(host.getHostId(),host.getPoolId());
  }
  poolVO.setUuid(null);
  this.dataStoreDao.update(poolVO.getId(),poolVO);
  dataStoreDao.remove(poolVO.getId());
  deletePoolStats(poolVO.getId());
  this._capacityDao.removeBy(Capacity.CAPACITY_TYPE_STORAGE_ALLOCATED,null,null,null,poolVO.getId());
  txn.commit();
  s_logger.debug("Storage pool id=" + poolVO.getId() + " is removed successfully");
  return true;
}
