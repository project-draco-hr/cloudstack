{
  boolean routerLock=false;
  DomainRouterVO router=_routerDao.findBy(accountId,dcId);
  long routerId=router.getId();
  Transaction txn=Transaction.currentTxn();
  try {
    txn.start();
    router=_routerDao.acquire(routerId);
    if (router == null) {
      throw new InternalErrorException("Unable to lock up the router:" + routerId);
    }
    routerLock=true;
    List<UserVmVO> userVms=_vmDao.listByAccountAndDataCenter(accountId,dcId);
    Set<Long> allPossibleIps=NetUtils.getAllIpsFromCidr(router.getGuestIpAddress(),NetUtils.getCidrSize(router.getGuestNetmask()));
    Set<Long> usedIps=new TreeSet<Long>();
    for (    UserVmVO vm : userVms) {
      if (vm.getGuestIpAddress() != null) {
        usedIps.add(NetUtils.ip2Long(vm.getGuestIpAddress()));
      }
    }
    if (usedIps.size() != 0) {
      allPossibleIps.removeAll(usedIps);
    }
    if (allPossibleIps.isEmpty()) {
      return null;
    }
    Iterator<Long> iterator=allPossibleIps.iterator();
    long ipAddress=iterator.next().longValue();
    String ipAddressStr=NetUtils.long2Ip(ipAddress);
    userVm.setGuestIpAddress(ipAddressStr);
    userVm.setGuestNetmask(router.getGuestNetmask());
    String vmMacAddress=NetUtils.long2Mac((NetUtils.mac2Long(router.getGuestMacAddress()) & 0xffffffff0000L) | (ipAddress & 0xffff));
    userVm.setGuestMacAddress(vmMacAddress);
    _vmDao.update(userVm.getId(),userVm);
    if (routerLock) {
      _routerDao.release(routerId);
      routerLock=false;
    }
    txn.commit();
    return ipAddressStr;
  }
  finally {
    if (routerLock) {
      _routerDao.release(routerId);
    }
  }
}
