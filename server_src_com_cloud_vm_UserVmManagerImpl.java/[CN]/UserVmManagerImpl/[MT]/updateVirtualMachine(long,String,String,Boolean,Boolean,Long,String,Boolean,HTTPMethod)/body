{
  UserVmVO vm=_vmDao.findById(id);
  if (vm == null) {
    throw new CloudRuntimeException("Unable to find virual machine with id " + id);
  }
  if (vm.getState() == State.Error || vm.getState() == State.Expunging) {
    s_logger.error("vm is not in the right state: " + id);
    throw new InvalidParameterValueException("Vm with id " + id + " is not in the right state");
  }
  if (displayName == null) {
    displayName=vm.getDisplayName();
  }
  if (ha == null) {
    ha=vm.isHaEnabled();
  }
  ServiceOffering offering=_serviceOfferingDao.findById(vm.getServiceOfferingId());
  if (!offering.getOfferHA() && ha) {
    throw new InvalidParameterValueException("Can't enable ha for the vm as it's created from the Service offering having HA disabled");
  }
  if (isDisplayVmEnabled == null) {
    isDisplayVmEnabled=vm.isDisplayVm();
  }
  boolean updateUserdata=false;
  if (userData != null) {
    userData=userData.replace("\\n","");
    validateUserData(userData,httpMethod);
    updateUserdata=true;
  }
 else {
    userData=vm.getUserData();
  }
  if (isDynamicallyScalable == null) {
    isDynamicallyScalable=vm.isDynamicallyScalable();
  }
  if (osTypeId == null) {
    osTypeId=vm.getGuestOSId();
  }
  if (group != null) {
    addInstanceToGroup(id,group);
  }
  if (isDynamicallyScalable == null) {
    isDynamicallyScalable=vm.isDynamicallyScalable();
  }
  _vmDao.updateVM(id,displayName,ha,osTypeId,userData,isDisplayVmEnabled,isDynamicallyScalable);
  if (updateUserdata) {
    boolean result=updateUserDataInternal(_vmDao.findById(id));
    if (result) {
      s_logger.debug("User data successfully updated for vm id=" + id);
    }
 else {
      throw new CloudRuntimeException("Failed to reset userdata for the virtual machine ");
    }
  }
  return _vmDao.findById(id);
}
