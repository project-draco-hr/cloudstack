{
  if (customParameters.size() != 0) {
    if (serviceOffering.getCpu() == null) {
      String cpuNumber=customParameters.get(UsageEventVO.DynamicParameters.cpuNumber.name());
      if ((cpuNumber == null) || (NumbersUtil.parseInt(cpuNumber,-1) <= 0)) {
        throw new InvalidParameterValueException("Invalid cpu cores value, specify a value between 1 and 2147483647");
      }
    }
 else     if (customParameters.containsKey(UsageEventVO.DynamicParameters.cpuNumber.name())) {
      throw new InvalidParameterValueException("The cpu cores of this offering id:" + serviceOffering.getId() + " is not customizable. This is predefined in the template.");
    }
    if (serviceOffering.getSpeed() == null) {
      String cpuSpeed=customParameters.get(UsageEventVO.DynamicParameters.cpuSpeed.name());
      if ((cpuSpeed == null) || (NumbersUtil.parseInt(cpuSpeed,-1) <= 0)) {
        throw new InvalidParameterValueException("Invalid cpu speed value, specify a value between 1 and 2147483647");
      }
    }
 else     if (customParameters.containsKey(UsageEventVO.DynamicParameters.cpuSpeed.name())) {
      throw new InvalidParameterValueException("The cpu speed of this offering id:" + serviceOffering.getId() + " is not customizable. This is predefined in the template.");
    }
    if (serviceOffering.getRamSize() == null) {
      String memory=customParameters.get(UsageEventVO.DynamicParameters.memory.name());
      if (memory == null || (NumbersUtil.parseInt(memory,-1) < 32)) {
        throw new InvalidParameterValueException("Invalid memory value, specify a value between 32 and 2147483647 MB");
      }
    }
 else     if (customParameters.containsKey(UsageEventVO.DynamicParameters.memory.name())) {
      throw new InvalidParameterValueException("The memory of this offering id:" + serviceOffering.getId() + " is not customizable. This is predefined in the template.");
    }
  }
 else {
    throw new InvalidParameterValueException("Need to specify custom parameter values cpu, cpu speed and memory when using custom offering");
  }
}
