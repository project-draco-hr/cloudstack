{
  SnapshotVO createdSnapshot=null;
  VolumeVO volume=_volsDao.lock(volumeId,true);
  Long id=null;
  String timeString=DateUtil.getDateDisplayString(DateUtil.GMT_TIMEZONE,new Date(),DateUtil.YYYYMMDD_FORMAT);
  String snapshotName=volume.getName() + "_" + timeString;
  SnapshotType snapshotType=SnapshotType.TEMPLATE;
  SnapshotVO snapshot=new SnapshotVO(volume.getAccountId(),volume.getId(),null,snapshotName,(short)snapshotType.ordinal(),snapshotType.name());
  snapshot=_snapshotDao.persist(snapshot);
  id=snapshot.getId();
  ManageSnapshotCommand cmd=new ManageSnapshotCommand(ManageSnapshotCommand.CREATE_SNAPSHOT,id,volume.getPath(),snapshotName,null);
  String basicErrMsg="Failed to create snapshot for volume: " + volume.getId();
  ManageSnapshotAnswer answer=(ManageSnapshotAnswer)_storageMgr.sendToHostsOnStoragePool(volume.getPoolId(),cmd,basicErrMsg);
  if ((answer != null) && answer.getResult()) {
    Transaction txn=Transaction.currentTxn();
    txn.start();
    createdSnapshot=_snapshotDao.findById(id);
    createdSnapshot.setPath(answer.getSnapshotPath());
    createdSnapshot.setStatus(Snapshot.Status.CreatedOnPrimary);
    _snapshotDao.update(id,createdSnapshot);
    txn.commit();
  }
 else {
    if (answer != null) {
      s_logger.error(answer.getDetails());
    }
    Transaction txn=Transaction.currentTxn();
    txn.start();
    createdSnapshot=_snapshotDao.findById(id);
    _snapshotDao.delete(id);
    txn.commit();
    createdSnapshot=null;
  }
  return createdSnapshot;
}
