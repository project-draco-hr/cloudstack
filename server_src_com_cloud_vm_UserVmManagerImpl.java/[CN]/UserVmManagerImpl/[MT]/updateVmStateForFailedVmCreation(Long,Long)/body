{
  UserVmVO vm=_vmDao.findById(vmId);
  if (vm != null) {
    if (vm.getState().equals(State.Stopped)) {
      s_logger.debug("Destroying vm " + vm + " as it failed to create on Host with Id:"+ hostId);
      try {
        _itMgr.stateTransitTo(vm,VirtualMachine.Event.OperationFailedToError,null);
      }
 catch (      NoTransitionException e1) {
        s_logger.warn(e1.getMessage());
      }
      List<VolumeVO> volumesForThisVm=_volsDao.findUsableVolumesForInstance(vm.getId());
      for (      VolumeVO volume : volumesForThisVm) {
        if (volume.getState() != Volume.State.Destroy) {
          volumeMgr.destroyVolume(volume);
        }
      }
      String msg="Failed to deploy Vm with Id: " + vmId + ", on Host with Id: "+ hostId;
      _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_USERVM,vm.getDataCenterId(),vm.getPodIdToDeployIn(),msg,msg);
      ServiceOfferingVO offering=_serviceOfferingDao.findById(vm.getId(),vm.getServiceOfferingId());
      resourceCountDecrement(vm.getAccountId(),new Long(offering.getCpu()),new Long(offering.getRamSize()));
    }
  }
}
