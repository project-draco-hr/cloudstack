{
  Long userId=UserContext.current().getUserId();
  if (userId == null) {
    userId=User.UID_SYSTEM;
  }
  Long volumeId=command.getVolumeId();
  Long snapshotId=command.getSnapshotId();
  SnapshotVO snapshot=null;
  if (snapshotId != null) {
    snapshot=_snapshotDao.findById(snapshotId);
    volumeId=snapshot.getVolumeId();
  }
 else {
    snapshot=createTemplateSnapshot(userId,volumeId);
    snapshotId=snapshot.getId();
  }
  VolumeVO volume=_volsDao.findById(volumeId);
  if (snapshotId == null && !_storageMgr.volumeInactive(volume)) {
    String msg="Unable to create private template for volume: " + volume.getName() + "; volume is attached to a non-stopped VM.";
    if (s_logger.isInfoEnabled()) {
      s_logger.info(msg);
    }
    throw new InternalErrorException(msg);
  }
  VMTemplateVO privateTemplate=null;
  long templateId=command.getId();
  if (snapshotId != null) {
    volume=_volsDao.findById(volumeId);
    StringBuilder userFolder=new StringBuilder();
    Formatter userFolderFormat=new Formatter(userFolder);
    userFolderFormat.format("u%06d",snapshot.getAccountId());
    String uniqueName=getRandomPrivateTemplateName();
    String name=command.getTemplateName();
    long zoneId=volume.getDataCenterId();
    HostVO secondaryStorageHost=_storageMgr.getSecondaryStorageHost(zoneId);
    String secondaryStorageURL=_storageMgr.getSecondaryStorageURL(zoneId);
    if (secondaryStorageHost == null || secondaryStorageURL == null) {
      s_logger.warn("Did not find the secondary storage URL in the database.");
      return null;
    }
    Command cmd=null;
    String backupSnapshotUUID=snapshot.getBackupSnapshotId();
    if (backupSnapshotUUID != null) {
      Long dcId=volume.getDataCenterId();
      Long accountId=volume.getAccountId();
      String origTemplateInstallPath=null;
      Long origTemplateId=volume.getTemplateId();
      if (origTemplateId != null) {
        VMTemplateHostVO vmTemplateHostVO=_templateHostDao.findByHostTemplate(secondaryStorageHost.getId(),origTemplateId);
        origTemplateInstallPath=vmTemplateHostVO.getInstallPath();
      }
      cmd=new CreatePrivateTemplateFromSnapshotCommand(_storageMgr.getPrimaryStorageNameLabel(volume),secondaryStorageURL,dcId,accountId,volumeId,backupSnapshotUUID,snapshot.getName(),origTemplateInstallPath,templateId,name);
    }
 else {
      cmd=new CreatePrivateTemplateCommand(secondaryStorageURL,templateId,volume.getAccountId(),name,uniqueName,_storageMgr.getPrimaryStorageNameLabel(volume),snapshot.getPath(),snapshot.getName(),userFolder.toString());
    }
    String basicErrMsg="Failed to create template from snapshot: " + snapshot.getName();
    CreatePrivateTemplateAnswer answer=(CreatePrivateTemplateAnswer)_storageMgr.sendToHostsOnStoragePool(volume.getPoolId(),cmd,basicErrMsg);
    if ((answer != null) && answer.getResult()) {
      privateTemplate=_templateDao.findById(templateId);
      Long origTemplateId=volume.getTemplateId();
      VMTemplateVO origTemplate=null;
      if (origTemplateId != null) {
        origTemplate=_templateDao.findById(origTemplateId);
      }
      if ((origTemplate != null) && !Storage.ImageFormat.ISO.equals(origTemplate.getFormat())) {
        privateTemplate.setFileSystem(origTemplate.getFileSystem());
        privateTemplate.setRequiresHvm(origTemplate.requiresHvm());
        privateTemplate.setBits(origTemplate.getBits());
      }
 else {
        privateTemplate.setFileSystem(Storage.FileSystem.Unknown);
        privateTemplate.setRequiresHvm(true);
        privateTemplate.setBits(64);
      }
      String answerUniqueName=answer.getUniqueName();
      if (answerUniqueName != null) {
        privateTemplate.setUniqueName(answerUniqueName);
      }
 else {
        privateTemplate.setUniqueName(uniqueName);
      }
      ImageFormat format=answer.getImageFormat();
      if (format != null) {
        privateTemplate.setFormat(format);
      }
 else {
        privateTemplate.setFormat(ImageFormat.RAW);
      }
      _templateDao.update(templateId,privateTemplate);
      _templateDao.addTemplateToZone(privateTemplate,zoneId);
      VMTemplateHostVO templateHostVO=new VMTemplateHostVO(secondaryStorageHost.getId(),templateId);
      templateHostVO.setDownloadPercent(100);
      templateHostVO.setDownloadState(Status.DOWNLOADED);
      templateHostVO.setInstallPath(answer.getPath());
      templateHostVO.setLastUpdated(new Date());
      templateHostVO.setSize(answer.getVirtualSize());
      _templateHostDao.persist(templateHostVO);
      _accountMgr.incrementResourceCount(volume.getAccountId(),ResourceType.template);
    }
 else {
      _templateDao.remove(templateId);
    }
  }
  return privateTemplate;
}
