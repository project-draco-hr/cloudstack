{
  Account caller=CallContext.current().getCallingAccount();
  Long userId=caller.getId();
  UserVmVO vm=_vmDao.findById(vmId);
  if (vm == null) {
    InvalidParameterValueException ex=new InvalidParameterValueException("Unable to find a virtual machine with specified vmId");
    ex.addProxyObject(String.valueOf(vmId),"vmId");
    throw ex;
  }
  if (vm.getRemoved() != null) {
    s_logger.trace("Vm id=" + vmId + " is already expunged");
    return vm;
  }
  if (!(vm.getState() == State.Destroyed || vm.getState() == State.Expunging || vm.getState() == State.Error)) {
    CloudRuntimeException ex=new CloudRuntimeException("Please destroy vm with specified vmId before expunge");
    ex.addProxyObject(String.valueOf(vmId),"vmId");
    throw ex;
  }
  if (!_accountMgr.isAdmin(userId) && !AllowUserExpungeRecoverVm.valueIn(userId)) {
    throw new PermissionDeniedException("Expunging a vm can only be done by an Admin. Or when the allow.user.expunge.recover.vm key is set.");
  }
  boolean status;
  status=expunge(vm,userId,caller);
  if (status) {
    return _vmDao.findByIdIncludingRemoved(vmId);
  }
 else {
    CloudRuntimeException ex=new CloudRuntimeException("Failed to expunge vm with specified vmId");
    ex.addProxyObject(String.valueOf(vmId),"vmId");
    throw ex;
  }
}
