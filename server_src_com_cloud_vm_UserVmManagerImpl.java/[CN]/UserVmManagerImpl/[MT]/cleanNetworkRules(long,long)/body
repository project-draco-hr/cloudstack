{
  UserVmVO vm=_vmDao.findById(instanceId);
  String guestIpAddr=vm.getGuestIpAddress();
  long accountId=vm.getAccountId();
  List<LoadBalancerVMMapVO> loadBalancerMappings=_loadBalancerVMMapDao.listByInstanceId(vm.getId());
  for (  LoadBalancerVMMapVO loadBalancerMapping : loadBalancerMappings) {
    List<FirewallRuleVO> lbRules=_rulesDao.listByLoadBalancerId(loadBalancerMapping.getLoadBalancerId());
    FirewallRuleVO targetLbRule=null;
    for (    FirewallRuleVO lbRule : lbRules) {
      if (lbRule.getPrivateIpAddress().equals(guestIpAddr)) {
        targetLbRule=lbRule;
        targetLbRule.setEnabled(false);
        break;
      }
    }
    if (targetLbRule != null) {
      String ipAddress=targetLbRule.getPublicIpAddress();
      DomainRouterVO router=_routerDao.findById(vm.getDomainRouterId());
      _networkMgr.updateFirewallRules(ipAddress,lbRules,router);
      _rulesDao.remove(targetLbRule.getId());
      _loadBalancerVMMapDao.remove(loadBalancerMapping.getId());
      EventVO lbRuleEvent=new EventVO();
      lbRuleEvent.setUserId(userId);
      lbRuleEvent.setAccountId(accountId);
      lbRuleEvent.setType(EventTypes.EVENT_NET_RULE_DELETE);
      lbRuleEvent.setDescription("deleted load balancer rule [" + targetLbRule.getPublicIpAddress() + ":"+ targetLbRule.getPublicPort()+ "]->["+ targetLbRule.getPrivateIpAddress()+ ":"+ targetLbRule.getPrivatePort()+ "]"+ " "+ targetLbRule.getAlgorithm());
      lbRuleEvent.setLevel(EventVO.LEVEL_INFO);
      _eventDao.persist(lbRuleEvent);
    }
  }
}
