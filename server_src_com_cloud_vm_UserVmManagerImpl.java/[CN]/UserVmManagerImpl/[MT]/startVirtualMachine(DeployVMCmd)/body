{
  long vmId=cmd.getEntityId();
  UserVmVO vm=_vmDao.findById(vmId);
  Map<String,String> vmDetails=_vmDetailsDao.findDetails(vm.getId());
  VMTemplateVO template=_templateDao.findById(vm.getTemplateId());
  String password="saved_password";
  if (template.getEnablePassword()) {
    password=generateRandomPassword();
  }
  if (password == null || password.equals("") || (!validPassword(password))) {
    throw new InvalidParameterValueException("A valid password for this virtual machine was not provided.");
  }
  vm.setPassword(password);
  if (vm.getSSHPublicKey() != null && password != null && !password.equals("saved_password")) {
    String encryptedPasswd=RSAHelper.encryptWithSSHPublicKey(vm.getSSHPublicKey(),password);
    if (encryptedPasswd == null)     throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Error encrypting password");
    vmDetails.put("Encrypted.Password",encryptedPasswd);
    _vmDetailsDao.persist(vm.getId(),vmDetails);
  }
  long userId=UserContext.current().getCallerUserId();
  UserVO caller=_userDao.findById(userId);
  AccountVO owner=_accountDao.findById(vm.getAccountId());
  try {
    vm=_itMgr.start(vm,null,caller,owner,cmd.getHypervisor());
  }
  finally {
    updateVmStateForFailedVmCreation(vm.getId());
  }
  vm.setPassword(password);
  return vm;
}
