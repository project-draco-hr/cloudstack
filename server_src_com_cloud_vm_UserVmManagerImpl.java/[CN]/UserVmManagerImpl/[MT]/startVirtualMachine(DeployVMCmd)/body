{
  long vmId=cmd.getEntityId();
  UserVmVO vm=_vmDao.findById(vmId);
  _vmDao.loadDetails(vm);
  VMTemplateVO template=_templateDao.findById(vm.getTemplateId());
  String password="saved_password";
  if (template.getEnablePassword()) {
    password=generateRandomPassword();
  }
  if (password == null || password.equals("") || (!validPassword(password))) {
    throw new InvalidParameterValueException("A valid password for this virtual machine was not provided.");
  }
  vm.setPassword(password);
  String sshPublicKey=vm.getDetail("SSH.PublicKey");
  if (sshPublicKey != null && !sshPublicKey.equals("") && password != null && !password.equals("saved_password")) {
    String encryptedPasswd=RSAHelper.encryptWithSSHPublicKey(sshPublicKey,password);
    if (encryptedPasswd == null)     throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Error encrypting password");
    vm.setDetail("Encrypted.Password",encryptedPasswd);
    _vmDao.saveDetails(vm);
  }
  long userId=UserContext.current().getCallerUserId();
  UserVO caller=_userDao.findById(userId);
  AccountVO owner=_accountDao.findById(vm.getAccountId());
  try {
    vm=_itMgr.start(vm,null,caller,owner);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    updateVmStateForFailedVmCreation(vm.getId());
  }
  vm.setPassword(password);
  return vm;
}
