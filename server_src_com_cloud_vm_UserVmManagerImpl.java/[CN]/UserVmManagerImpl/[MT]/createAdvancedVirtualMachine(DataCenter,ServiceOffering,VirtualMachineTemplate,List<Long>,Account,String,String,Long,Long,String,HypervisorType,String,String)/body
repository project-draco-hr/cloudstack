{
  Account caller=UserContext.current().getCaller();
  List<NetworkVO> networkList=new ArrayList<NetworkVO>();
  _accountMgr.checkAccess(caller,owner);
  if (networkIdList == null || networkIdList.isEmpty()) {
    List<NetworkVO> networks=_networkDao.listByOwner(owner.getId());
    NetworkVO guestVirtualNetwork=null;
    for (    NetworkVO network : networks) {
      if (!network.isShared() && network.getTrafficType() == TrafficType.Guest && network.getGuestType() == GuestIpType.Virtual) {
        guestVirtualNetwork=network;
        break;
      }
    }
    if (guestVirtualNetwork == null) {
      throw new InvalidParameterValueException("Unable to find Guest Virtual network for account id=" + owner.getId() + "; please specify networkId(s)");
    }
    networkList.add(guestVirtualNetwork);
  }
 else {
    for (    Long networkId : networkIdList) {
      NetworkVO network=_networkDao.findById(networkId);
      if (network == null) {
        throw new InvalidParameterValueException("Unable to find network by id " + networkIdList.get(0).longValue());
      }
      if (!network.isShared()) {
        List<NetworkVO> networkMap=_networkDao.listBy(owner.getId(),network.getId());
        if (networkMap == null || networkMap.isEmpty()) {
          throw new PermissionDeniedException("Unable to create a vm using network with id " + network.getId() + ", permission denied");
        }
      }
      networkList.add(network);
    }
  }
  return createVirtualMachine(zone,serviceOffering,template,hostName,displayName,caller,diskOfferingId,diskSize,networkList,null,group,userData,sshKeyPair,hypervisor,caller);
}
