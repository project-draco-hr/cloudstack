{
  UserVmVO vm=_vmDao.findById(vmId);
  if (vm == null || vm.getState() == State.Destroyed || vm.getState() == State.Expunging || vm.getRemoved() != null) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Unable to find vm or vm is destroyed: " + vmId);
    }
    return true;
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Destroying vm " + vmId);
  }
  long startEventId=EventUtils.saveStartedEvent(userId,vm.getAccountId(),EventTypes.EVENT_VM_STOP,"stopping Vm with Id: " + vmId);
  if (!stop(userId,vm)) {
    s_logger.error("Unable to stop vm so we can't destroy it: " + vmId);
    EventUtils.saveEvent(userId,vm.getAccountId(),EventVO.LEVEL_ERROR,EventTypes.EVENT_VM_STOP,"Error stopping VM instance : " + vmId,startEventId);
    return false;
  }
 else {
    EventUtils.saveEvent(userId,vm.getAccountId(),EventVO.LEVEL_INFO,EventTypes.EVENT_VM_STOP,"Successfully stopped VM instance : " + vmId,startEventId);
  }
  Transaction txn=Transaction.currentTxn();
  txn.start();
  _accountMgr.decrementResourceCount(vm.getAccountId(),ResourceType.user_vm);
  if (!destroy(vm)) {
    return false;
  }
  UsageEventVO usageEvent=new UsageEventVO(EventTypes.EVENT_VM_DESTROY,vm.getAccountId(),vm.getDataCenterId(),vm.getId(),vm.getName(),vm.getServiceOfferingId(),vm.getTemplateId(),null);
  _usageEventDao.persist(usageEvent);
  cleanNetworkRules(userId,vmId);
  List<VolumeVO> volumes=_volsDao.findByInstance(vmId);
  for (  VolumeVO volume : volumes) {
    _storageMgr.destroyVolume(volume);
  }
  txn.commit();
  return true;
}
