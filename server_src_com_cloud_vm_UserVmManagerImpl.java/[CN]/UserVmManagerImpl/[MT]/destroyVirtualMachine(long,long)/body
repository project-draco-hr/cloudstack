{
  UserVmVO vm=_vmDao.findById(vmId);
  if (vm == null || vm.getState() == State.Destroyed || vm.getState() == State.Expunging || vm.getRemoved() != null) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Unable to find vm or vm is destroyed: " + vmId);
    }
    return true;
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Destroying vm " + vmId);
  }
  if (!stop(userId,vm,0)) {
    s_logger.error("Unable to stop vm so we can't destroy it: " + vmId);
    return false;
  }
  Transaction txn=Transaction.currentTxn();
  txn.start();
  EventVO event=new EventVO();
  event.setUserId(userId);
  event.setAccountId(vm.getAccountId());
  event.setType(EventTypes.EVENT_VM_DESTROY);
  event.setParameters("id=" + vm.getId() + "\nvmName="+ vm.getName()+ "\nsoId="+ vm.getServiceOfferingId()+ "\ntId="+ vm.getTemplateId()+ "\ndcId="+ vm.getDataCenterId());
  if (!vm.getName().equals(vm.getDisplayName())) {
    event.setDescription("Successfully destroyed VM instance : " + vm.getName() + "("+ vm.getDisplayName()+ ")");
  }
 else {
    event.setDescription("Successfully destroyed VM instance : " + vm.getName());
  }
  _eventDao.persist(event);
  _accountMgr.decrementResourceCount(vm.getAccountId(),ResourceType.user_vm);
  if (!destroy(vm)) {
    return false;
  }
  cleanNetworkRules(userId,vmId);
  List<VolumeVO> volumes=_volsDao.findByInstance(vmId);
  for (  VolumeVO volume : volumes) {
    _storageMgr.destroyVolume(volume);
  }
  txn.commit();
  return true;
}
