{
  Account account=UserContext.current().getCaller();
  Long userId=UserContext.current().getCallerUserId();
  UserVmVO vm=_vmDao.findById(vmId);
  if (vm == null) {
    throw new InvalidParameterValueException("Unable to find a virtual machine with id " + vmId);
  }
  userId=accountAndUserValidation(vmId,account,userId,vm);
  User caller=_userDao.findById(userId);
  boolean status;
  State vmState=vm.getState();
  try {
    status=_itMgr.destroy(vm,caller,account);
  }
 catch (  OperationTimedoutException e) {
    throw new CloudRuntimeException("Unable to destroy " + vm,e);
  }
  if (status) {
    List<VolumeVO> volumes=_volsDao.findByInstance(vmId);
    for (    VolumeVO volume : volumes) {
      if (volume.getVolumeType().equals(Volume.Type.ROOT)) {
        UsageEventVO usageEvent=new UsageEventVO(EventTypes.EVENT_VOLUME_DELETE,volume.getAccountId(),volume.getDataCenterId(),volume.getId(),volume.getName());
        _usageEventDao.persist(usageEvent);
      }
    }
    if (vmState != State.Error) {
      _accountMgr.decrementResourceCount(vm.getAccountId(),ResourceType.user_vm);
    }
    return _vmDao.findById(vmId);
  }
 else {
    throw new CloudRuntimeException("Failed to destroy vm with id " + vmId);
  }
}
