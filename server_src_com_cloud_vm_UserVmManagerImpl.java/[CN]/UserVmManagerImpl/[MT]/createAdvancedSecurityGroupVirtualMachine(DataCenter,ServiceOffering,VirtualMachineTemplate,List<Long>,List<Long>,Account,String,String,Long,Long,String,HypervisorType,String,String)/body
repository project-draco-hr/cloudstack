{
  Account caller=UserContext.current().getCaller();
  List<NetworkVO> networkList=new ArrayList<NetworkVO>();
  _accountMgr.checkAccess(caller,owner);
  if (networkIdList == null || networkIdList.isEmpty()) {
    NetworkVO networkWithSecurityGroup=_networkMgr.getNetworkWithSecurityGroupEnabled(zone.getId());
    if (networkWithSecurityGroup == null) {
      throw new InvalidParameterValueException("No network with security enabled is found in zone id=" + zone.getId());
    }
    networkList.add(networkWithSecurityGroup);
  }
 else   if (securityGroupIdList != null && !securityGroupIdList.isEmpty()) {
    if (networkIdList.size() > 1) {
      throw new InvalidParameterValueException("Only support one network per VM if security group enabled");
    }
    NetworkVO network=_networkDao.findById(networkIdList.get(0).longValue());
    if (network == null) {
      throw new InvalidParameterValueException("Unable to find network by id " + networkIdList.get(0).longValue());
    }
    if (!network.isSecurityGroupEnabled()) {
      throw new InvalidParameterValueException("Network is not security group enabled: " + network.getId());
    }
    networkList.add(network);
  }
 else {
    for (    Long networkId : networkIdList) {
      NetworkVO network=_networkDao.findById(networkId);
      if (network == null) {
        throw new InvalidParameterValueException("Unable to find network by id " + networkIdList.get(0).longValue());
      }
      if (network.isSecurityGroupEnabled() && networkIdList.size() > 1) {
        throw new InvalidParameterValueException("Can't create a vm with multiple networks one of which is Security Group enabled");
      }
      if (network.getTrafficType() != TrafficType.Guest || network.getGuestType() != GuestIpType.Direct || (network.getIsShared() && !network.isSecurityGroupEnabled())) {
        throw new InvalidParameterValueException("Can specify only Direct Guest Account specific networks when deploy vm in Security Group enabled zone");
      }
      if (!network.getIsShared()) {
        List<NetworkVO> networkMap=_networkDao.listBy(owner.getId(),network.getId());
        if (networkMap == null || networkMap.isEmpty()) {
          throw new PermissionDeniedException("Unable to create a vm using network with id " + network.getId() + ", permission denied");
        }
      }
      networkList.add(network);
    }
  }
  return createVirtualMachine(zone,serviceOffering,template,hostName,displayName,owner,diskOfferingId,diskSize,networkList,securityGroupIdList,group,userData,sshKeyPair,hypervisor,caller);
}
