{
  Account caller=UserContext.current().getCaller();
  Long vmId=cmd.getId();
  UserVmVO userVm=_vmDao.findById(cmd.getId());
  _vmDao.loadDetails(userVm);
  if (userVm == null) {
    throw new InvalidParameterValueException("unable to find a virtual machine with id " + cmd.getId());
  }
  VMTemplateVO template=_templateDao.findByIdIncludingRemoved(userVm.getTemplateId());
  if (template == null || !template.getEnablePassword()) {
    throw new InvalidParameterValueException("Fail to reset password for the virtual machine, the template is not password enabled");
  }
  if (userVm.getState() == State.Error || userVm.getState() == State.Expunging) {
    s_logger.error("vm is not in the right state: " + vmId);
    throw new InvalidParameterValueException("Vm with id " + vmId + " is not in the right state");
  }
  _accountMgr.checkAccess(caller,null,userVm);
  boolean result=resetVMPasswordInternal(cmd,password);
  if (result) {
    userVm.setPassword(password);
    String sshPublicKey=userVm.getDetail("SSH.PublicKey");
    if (sshPublicKey != null && !sshPublicKey.equals("") && password != null && !password.equals("saved_password")) {
      String encryptedPasswd=RSAHelper.encryptWithSSHPublicKey(sshPublicKey,password);
      if (encryptedPasswd == null) {
        throw new CloudRuntimeException("Error encrypting password");
      }
      userVm.setDetail("Encrypted.Password",encryptedPasswd);
      _vmDao.saveDetails(userVm);
    }
  }
  return userVm;
}
