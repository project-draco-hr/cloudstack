{
  Account caller=UserContext.current().getCaller();
  if (caller.getType() != Account.ACCOUNT_TYPE_ADMIN) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Caller is not a root admin, permission denied to migrate the VM");
    }
    throw new PermissionDeniedException("No permission to migrate VM, Only Root Admin can migrate a VM!");
  }
  VMInstanceVO vm=_vmInstanceDao.findById(vmId);
  if (vm == null) {
    throw new InvalidParameterValueException("Unable to find the VM by id=" + vmId);
  }
  if (vm.getState() != State.Stopped) {
    throw new InvalidParameterValueException("VM is not Stopped, unable to migrate the vm " + vm);
  }
  if (vm.getType() != VirtualMachine.Type.User) {
    throw new InvalidParameterValueException("can only do storage migration on user vm");
  }
  List<VolumeVO> vols=_volsDao.findByInstance(vm.getId());
  if (vols.size() > 1) {
    throw new InvalidParameterValueException("Data disks attached to the vm, can not migrate. Need to dettach data disks at first");
  }
  HypervisorType destHypervisorType=_clusterDao.findById(destPool.getClusterId()).getHypervisorType();
  if (vm.getHypervisorType() != destHypervisorType) {
    throw new InvalidParameterValueException("hypervisor is not compatible: dest: " + destHypervisorType.toString() + ", vm: "+ vm.getHypervisorType().toString());
  }
  VMInstanceVO migratedVm=_itMgr.storageMigration(vm,destPool);
  return migratedVm;
}
