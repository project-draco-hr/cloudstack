{
  String displayName=cmd.getDisplayName();
  String group=cmd.getGroup();
  Boolean ha=cmd.getHaEnable();
  Long id=cmd.getId();
  Account account=(Account)UserContext.current().getAccountObject();
  Long userId=UserContext.current().getUserId();
  UserVmVO vmInstance=null;
  try {
    vmInstance=_vmDao.findById(id.longValue());
  }
 catch (  Exception ex1) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"unable to find virtual machine by id");
  }
  if (vmInstance == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find virtual machine with id " + id);
  }
  userId=accountAndUserValidation(id,account,userId,vmInstance);
  if (group == null) {
    group=vmInstance.getGroup();
  }
  if (displayName == null) {
    displayName=vmInstance.getDisplayName();
  }
  if (ha == null) {
    ha=vmInstance.isHaEnabled();
  }
  long accountId=vmInstance.getAccountId();
  UserVmVO vm=_vmDao.findById(id);
  if (vm == null) {
    throw new CloudRuntimeException("Unable to find virual machine with id " + id);
  }
  boolean haEnabled=vm.isHaEnabled();
  _vmDao.updateVM(id,displayName,group,ha);
  if (haEnabled != ha) {
    String description=null;
    String type=null;
    if (ha) {
      description="Successfully enabled HA for virtual machine " + vm.getName();
      type=EventTypes.EVENT_VM_ENABLE_HA;
    }
 else {
      description="Successfully disabled HA for virtual machine " + vm.getName();
      type=EventTypes.EVENT_VM_DISABLE_HA;
    }
    EventUtils.saveEvent(userId,accountId,EventVO.LEVEL_INFO,type,description,null);
  }
}
