{
  String displayName=cmd.getDisplayName();
  String group=cmd.getGroup();
  Boolean ha=cmd.getHaEnable();
  Boolean isDisplayVmEnabled=cmd.getDisplayVm();
  Long id=cmd.getId();
  Long osTypeId=cmd.getOsTypeId();
  String userData=cmd.getUserData();
  Boolean isDynamicallyScalable=cmd.isDynamicallyScalable();
  Account caller=CallContext.current().getCallingAccount();
  UserVmVO vmInstance=_vmDao.findById(id.longValue());
  if (vmInstance == null) {
    throw new InvalidParameterValueException("unable to find virtual machine with id " + id);
  }
  _accountMgr.checkAccess(CallContext.current().getCallingAccount(),null,true,vmInstance);
  if (isDisplayVmEnabled != null && isDisplayVmEnabled != vmInstance.isDisplayVm()) {
    if (!_accountMgr.isRootAdmin(caller.getType())) {
      throw new PermissionDeniedException("Cannot update parameter displayvm, only admin permitted ");
    }
    ServiceOffering offering=_serviceOfferingDao.findByIdIncludingRemoved(vmInstance.getServiceOfferingId());
    _resourceLimitMgr.changeResourceCount(vmInstance.getAccountId(),ResourceType.user_vm,isDisplayVmEnabled);
    _resourceLimitMgr.changeResourceCount(vmInstance.getAccountId(),ResourceType.cpu,isDisplayVmEnabled,new Long(offering.getCpu()));
    _resourceLimitMgr.changeResourceCount(vmInstance.getAccountId(),ResourceType.memory,isDisplayVmEnabled,new Long(offering.getRamSize()));
  }
  return updateVirtualMachine(id,displayName,group,ha,isDisplayVmEnabled,osTypeId,userData,isDynamicallyScalable,cmd.getHttpMethod(),cmd.getCustomId());
}
