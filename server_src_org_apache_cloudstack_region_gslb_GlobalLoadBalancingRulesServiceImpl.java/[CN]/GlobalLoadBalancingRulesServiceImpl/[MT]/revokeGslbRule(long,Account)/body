{
  final GlobalLoadBalancerRuleVO gslbRule=_gslbRuleDao.findById(gslbRuleId);
  if (gslbRule == null) {
    throw new InvalidParameterValueException("Invalid global load balancer rule id: " + gslbRuleId);
  }
  _accountMgr.checkAccess(caller,SecurityChecker.AccessType.OperateEntry,gslbRule);
  if (gslbRule.getState() == com.cloud.region.ha.GlobalLoadBalancerRule.State.Staged) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Rule Id: " + gslbRuleId + " is still in Staged state so just removing it.");
    }
    _gslbRuleDao.remove(gslbRuleId);
    UsageEventUtils.publishUsageEvent(EventTypes.EVENT_GLOBAL_LOAD_BALANCER_DELETE,gslbRule.getAccountId(),0,gslbRule.getId(),gslbRule.getName(),GlobalLoadBalancerRule.class.getName(),gslbRule.getUuid());
    return;
  }
 else   if (gslbRule.getState() == GlobalLoadBalancerRule.State.Add || gslbRule.getState() == GlobalLoadBalancerRule.State.Active) {
    gslbRule.setState(GlobalLoadBalancerRule.State.Revoke);
    _gslbRuleDao.update(gslbRuleId,gslbRule);
  }
  final List<GlobalLoadBalancerLbRuleMapVO> gslbLbMapVos=Transaction.execute(new TransactionCallback<List<GlobalLoadBalancerLbRuleMapVO>>(){
    @Override public List<GlobalLoadBalancerLbRuleMapVO> doInTransaction(    TransactionStatus status){
      List<GlobalLoadBalancerLbRuleMapVO> gslbLbMapVos=_gslbLbMapDao.listByGslbRuleId(gslbRuleId);
      if (gslbLbMapVos != null) {
        for (        GlobalLoadBalancerLbRuleMapVO gslbLbMap : gslbLbMapVos) {
          gslbLbMap.setRevoke(true);
          _gslbLbMapDao.update(gslbLbMap.getId(),gslbLbMap);
        }
      }
      return gslbLbMapVos;
    }
  }
);
  boolean success=false;
  try {
    if (gslbLbMapVos != null) {
      applyGlobalLoadBalancerRuleConfig(gslbRuleId,true);
    }
    success=true;
  }
 catch (  ResourceUnavailableException e) {
    throw new CloudRuntimeException("Failed to update the gloabal load balancer");
  }
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      if (gslbLbMapVos != null) {
        for (        GlobalLoadBalancerLbRuleMapVO gslbLbMap : gslbLbMapVos) {
          _gslbLbMapDao.remove(gslbLbMap.getId());
        }
      }
      _gslbRuleDao.remove(gslbRuleId);
      UsageEventUtils.publishUsageEvent(EventTypes.EVENT_GLOBAL_LOAD_BALANCER_DELETE,gslbRule.getAccountId(),0,gslbRule.getId(),gslbRule.getName(),GlobalLoadBalancerRule.class.getName(),gslbRule.getUuid());
    }
  }
);
}
