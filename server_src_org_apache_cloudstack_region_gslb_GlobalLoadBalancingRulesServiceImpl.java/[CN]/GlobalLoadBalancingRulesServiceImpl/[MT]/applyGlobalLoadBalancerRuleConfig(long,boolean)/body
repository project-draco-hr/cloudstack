{
  GlobalLoadBalancerRuleVO gslbRule=_gslbRuleDao.findById(gslbRuleId);
  assert(gslbRule != null);
  String lbMethod=gslbRule.getAlgorithm();
  String persistenceMethod=gslbRule.getPersistence();
  String serviceType=gslbRule.getServiceType();
  String domainName=gslbRule.getGslbDomain();
  String providerDnsName=_globalConfigDao.getValue(Config.CloudDnsName.key());
  String gslbFqdn=domainName + "." + providerDnsName;
  GlobalLoadBalancerConfigCommand gslbConfigCmd=new GlobalLoadBalancerConfigCommand(gslbFqdn,lbMethod,persistenceMethod,serviceType,gslbRuleId,revoke);
  List<Pair<Long,Long>> gslbSiteIds=new ArrayList<Pair<Long,Long>>();
  Map<Long,SiteLoadBalancerConfig> zoneSiteLoadbalancerMap=new HashMap<Long,SiteLoadBalancerConfig>();
  List<GlobalLoadBalancerLbRuleMapVO> gslbLbMapVos=_gslbLbMapDao.listByGslbRuleId(gslbRuleId);
  assert(gslbLbMapVos != null && !gslbLbMapVos.isEmpty());
  for (  GlobalLoadBalancerLbRuleMapVO gslbLbMapVo : gslbLbMapVos) {
    LoadBalancerVO loadBalancer=_lbDao.findById(gslbLbMapVo.getLoadBalancerId());
    Network network=_networkDao.findById(loadBalancer.getNetworkId());
    long dataCenterId=network.getDataCenterId();
    long physicalNetworkId=network.getPhysicalNetworkId();
    gslbSiteIds.add(new Pair<Long,Long>(dataCenterId,physicalNetworkId));
    IPAddressVO ip=_ipAddressDao.findById(loadBalancer.getSourceIpAddressId());
    SiteLoadBalancerConfig siteLb=new SiteLoadBalancerConfig(gslbLbMapVo.isRevoke(),serviceType,ip.getAddress().addr(),Integer.toString(loadBalancer.getDefaultPortStart()),dataCenterId);
    siteLb.setGslbProviderPublicIp(_gslbProvider.getZoneGslbProviderPublicIp(dataCenterId,physicalNetworkId));
    siteLb.setGslbProviderPrivateIp(_gslbProvider.getZoneGslbProviderPrivateIp(dataCenterId,physicalNetworkId));
    siteLb.setWeight(gslbLbMapVo.getWeight());
    zoneSiteLoadbalancerMap.put(network.getDataCenterId(),siteLb);
  }
  for (  Pair<Long,Long> zoneId : gslbSiteIds) {
    List<SiteLoadBalancerConfig> slbs=new ArrayList<SiteLoadBalancerConfig>();
    for (    Pair<Long,Long> innerLoopZoneId : gslbSiteIds) {
      SiteLoadBalancerConfig siteLb=zoneSiteLoadbalancerMap.get(innerLoopZoneId.first());
      siteLb.setLocal(zoneId.first() == innerLoopZoneId.first());
      slbs.add(siteLb);
    }
    gslbConfigCmd.setSiteLoadBalancers(slbs);
    try {
      _gslbProvider.applyGlobalLoadBalancerRule(zoneId.first(),zoneId.second(),gslbConfigCmd);
    }
 catch (    ResourceUnavailableException e) {
      String msg="Failed to configure GSLB rule in the zone " + zoneId.first() + " due to "+ e.getMessage();
      s_logger.warn(msg);
      throw new CloudRuntimeException(msg);
    }
  }
  return true;
}
