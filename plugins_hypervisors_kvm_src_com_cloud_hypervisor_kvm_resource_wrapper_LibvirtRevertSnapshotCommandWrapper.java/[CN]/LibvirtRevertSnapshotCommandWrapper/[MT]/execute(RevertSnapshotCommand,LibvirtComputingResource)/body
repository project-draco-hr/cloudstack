{
  SnapshotObjectTO snapshot=command.getData();
  VolumeObjectTO volume=snapshot.getVolume();
  PrimaryDataStoreTO primaryStore=(PrimaryDataStoreTO)volume.getDataStore();
  DataStoreTO snapshotImageStore=snapshot.getDataStore();
  if (!(snapshotImageStore instanceof NfsTO)) {
    return new Answer(command,false,"revert snapshot on object storage is not implemented yet");
  }
  NfsTO nfsImageStore=(NfsTO)snapshotImageStore;
  String secondaryStoragePoolUrl=nfsImageStore.getUrl();
  String volumePath=volume.getPath();
  String snapshotPath=null;
  String snapshotRelPath=null;
  KVMStoragePool secondaryStoragePool=null;
  try {
    final KVMStoragePoolManager storagePoolMgr=libvirtComputingResource.getStoragePoolMgr();
    secondaryStoragePool=storagePoolMgr.getStoragePoolByURI(secondaryStoragePoolUrl);
    String ssPmountPath=secondaryStoragePool.getLocalPath();
    snapshotRelPath=snapshot.getPath();
    snapshotPath=ssPmountPath + File.separator + snapshotRelPath;
    KVMPhysicalDisk snapshotDisk=storagePoolMgr.getPhysicalDisk(primaryStore.getPoolType(),primaryStore.getUuid(),volumePath);
    KVMStoragePool primaryPool=snapshotDisk.getPool();
    if (primaryPool.getType() == StoragePoolType.RBD) {
      return new Answer(command,false,"revert snapshot to RBD is not implemented yet");
    }
 else {
      Script cmd=new Script(libvirtComputingResource.manageSnapshotPath(),libvirtComputingResource.getCmdsTimeout(),s_logger);
      cmd.add("-v",snapshotPath);
      cmd.add("-n",snapshotDisk.getName());
      cmd.add("-p",snapshotDisk.getPath());
      String result=cmd.execute();
      if (result != null) {
        s_logger.debug("Failed to revert snaptshot: " + result);
        return new Answer(command,false,result);
      }
    }
    return new Answer(command,true,"RevertSnapshotCommand executes successfully");
  }
 catch (  CloudRuntimeException e) {
    return new Answer(command,false,e.toString());
  }
}
