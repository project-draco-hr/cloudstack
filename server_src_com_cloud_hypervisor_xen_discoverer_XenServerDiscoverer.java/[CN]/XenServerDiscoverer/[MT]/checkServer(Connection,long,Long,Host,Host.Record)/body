{
  String prodVersion=record.softwareVersion.get("product_version");
  String xapiVersion=record.softwareVersion.get("xapi");
  String xenVersion=record.softwareVersion.get("xen");
  String prodBrand=record.softwareVersion.get("product_brand");
  if (!prodBrand.equals("XenServer")) {
    String msg="Do not support product brand " + prodBrand;
    _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,msg,msg);
    s_logger.debug(msg);
    throw new RuntimeException(msg);
  }
  if (Version.compare(_minProductVersion,prodVersion) > 0) {
    String msg="Unable to add host " + record.address + " because the product version "+ prodVersion+ " is lower than the minimum "+ _minProductVersion;
    _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,msg,msg);
    s_logger.debug(msg);
    return false;
  }
  if (_maxProductVersion != null && Version.compare(prodVersion,_maxProductVersion) > 0) {
    String msg="Unable to add host " + record.address + " because the product version "+ prodVersion+ " is higher than the maximum "+ _maxProductVersion;
    _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,msg,msg);
    s_logger.debug(msg);
    return false;
  }
  if (Version.compare(_minXenVersion,xenVersion) > 0) {
    String msg="Unable to add host " + record.address + " because the xen version "+ xenVersion+ " is lower than the minimum "+ _minXenVersion;
    _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,msg,msg);
    s_logger.debug(msg);
    return false;
  }
  if (_maxXenVersion != null && Version.compare(xenVersion,_maxXenVersion) > 0) {
    String msg="Unable to add host " + record.address + " because the xen version "+ xenVersion+ " is higher than the maximum "+ _maxXenVersion;
    _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,msg,msg);
    s_logger.debug(msg);
    return false;
  }
  if (Version.compare(_minXapiVersion,xapiVersion) > 0) {
    String msg="Unable to add host " + record.address + " because the xapi version "+ xapiVersion+ " is lower than the minimum "+ _minXapiVersion;
    _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,msg,msg);
    s_logger.debug(msg);
    return false;
  }
  if (_maxXapiVersion != null && Version.compare(xapiVersion,_maxXapiVersion) > 0) {
    String msg="Unable to add host " + record.address + " because the xapi version "+ xapiVersion+ " is higher than the maximum "+ _maxXapiVersion;
    _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,msg,msg);
    s_logger.debug(msg);
    return false;
  }
  if (Version.compare(prodVersion,_minProductVersion) >= 0)   return true;
  Set<Ternary<String,String,Boolean>> required=new HashSet<Ternary<String,String,Boolean>>(_requiredPatches.size());
  for (  Pair<String,String> req : _requiredPatches) {
    required.add(new Ternary<String,String,Boolean>(req.first(),req.second(),false));
  }
  try {
    Set<HostPatch> patches=host.getPatches(conn);
    if (patches != null) {
      for (      HostPatch patch : patches) {
        HostPatch.Record hpr=patch.getRecord(conn);
        PoolPatch.Record ppr=hpr.poolPatch.getRecord(conn);
        for (        Ternary<String,String,Boolean> req : required) {
          if (hpr.nameLabel != null && hpr.nameLabel.contains(req.first()) && hpr.version != null && hpr.version.contains(req.second())) {
            req.third(true);
            break;
          }
          if (ppr.nameLabel != null && ppr.nameLabel.contains(req.first()) && ppr.version != null && ppr.version.contains(req.second())) {
            req.third(true);
            break;
          }
        }
      }
    }
    for (    Ternary<String,String,Boolean> req : required) {
      if (!req.third()) {
        String msg="Unable to add host " + record.address + " because unable to find the following patch: "+ req.first()+ " version "+ req.second();
        s_logger.warn(msg);
        _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,msg,msg);
        return false;
      }
    }
  }
 catch (  XenAPIException e) {
    s_logger.warn("Unable to add " + record.address,e);
    _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,"Unable to add " + record.address,"Error is " + e.getMessage());
    return false;
  }
catch (  XmlRpcException e) {
    s_logger.warn("Unable to add " + record.address,e);
    _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,"Unable to add " + record.address,"Error is " + e.getMessage());
    return false;
  }
  return true;
}
