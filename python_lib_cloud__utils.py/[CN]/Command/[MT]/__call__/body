def __call__(self, *args, **kwargs):
    cmd = (self.__get_recursive_name() + list(args))
    kwargs = dict(kwargs)
    if ('stdout' not in kwargs):
        kwargs['stdout'] = subprocess.PIPE
    if ('stderr' not in kwargs):
        kwargs['stderr'] = subprocess.PIPE
    popen = subprocess.Popen(cmd, **kwargs)
    m = popen.communicate()
    ret = popen.wait()
    if ret:
        e = CalledProcessError(ret, cmd)
        (e.stdout, e.stderr) = m
        raise e


    class CommandOutput:

        def __init__(self, stdout, stderr):
            self.stdout = stdout
            self.stderr = stderr
    return CommandOutput(*m)
