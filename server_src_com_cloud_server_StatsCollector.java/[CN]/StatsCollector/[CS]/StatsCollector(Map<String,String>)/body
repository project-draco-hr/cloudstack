{
  ComponentLocator locator=ComponentLocator.getLocator(ManagementServer.Name);
  _agentMgr=locator.getManager(AgentManager.class);
  _userVmMgr=locator.getManager(UserVmManager.class);
  _hostDao=locator.getDao(HostDao.class);
  _userVmDao=locator.getDao(UserVmDao.class);
  _volsDao=locator.getDao(VolumeDao.class);
  _capacityDao=locator.getDao(CapacityDao.class);
  _storagePoolDao=locator.getDao(StoragePoolDao.class);
  _storageManager=locator.getManager(StorageManager.class);
  _storagePoolHostDao=locator.getDao(StoragePoolHostDao.class);
  _executor=Executors.newScheduledThreadPool(3,new NamedThreadFactory("StatsCollector"));
  hostStatsInterval=NumbersUtil.parseLong(configs.get("host.stats.interval"),60000L);
  hostAndVmStatsInterval=NumbersUtil.parseLong(configs.get("vm.stats.interval"),60000L);
  storageStatsInterval=NumbersUtil.parseLong(configs.get("storage.stats.interval"),60000L);
  volumeStatsInterval=NumbersUtil.parseLong(configs.get("volume.stats.interval"),-1L);
  if (hostStatsInterval > 0) {
    _executor.scheduleWithFixedDelay(new HostCollector(),15000L,hostStatsInterval,TimeUnit.MILLISECONDS);
  }
  if (hostAndVmStatsInterval > 0) {
    _executor.scheduleWithFixedDelay(new VmStatsCollector(),15000L,hostAndVmStatsInterval,TimeUnit.MILLISECONDS);
  }
  if (storageStatsInterval > 0) {
    _executor.scheduleWithFixedDelay(new StorageCollector(),15000L,storageStatsInterval,TimeUnit.MILLISECONDS);
  }
  if (volumeStatsInterval > 0) {
    _executor.scheduleWithFixedDelay(new VolumeCollector(),15000L,volumeStatsInterval,TimeUnit.MILLISECONDS);
  }
 else {
    s_logger.info("Disabling volume stats collector");
  }
}
