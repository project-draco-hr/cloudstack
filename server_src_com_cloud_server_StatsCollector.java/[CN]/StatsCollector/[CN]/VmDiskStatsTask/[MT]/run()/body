{
  Transaction txn=Transaction.open(Transaction.CLOUD_DB);
  try {
    txn.start();
    SearchCriteria<HostVO> sc=_hostDao.createSearchCriteria();
    sc.addAnd("status",SearchCriteria.Op.EQ,Status.Up.toString());
    sc.addAnd("resourceState",SearchCriteria.Op.NIN,ResourceState.Maintenance,ResourceState.PrepareForMaintenance,ResourceState.ErrorInMaintenance);
    sc.addAnd("type",SearchCriteria.Op.EQ,Host.Type.Routing.toString());
    List<HostVO> hosts=_hostDao.search(sc,null);
    for (    HostVO host : hosts) {
      List<UserVmVO> vms=_userVmDao.listRunningByHostId(host.getId());
      List<Long> vmIds=new ArrayList<Long>();
      for (      UserVmVO vm : vms) {
        if (vm.getType() == VirtualMachine.Type.User)         vmIds.add(vm.getId());
      }
      HashMap<Long,List<VmDiskStatsEntry>> vmDiskStatsById=_userVmMgr.getVmDiskStatistics(host.getId(),host.getName(),vmIds);
      if (vmDiskStatsById == null)       continue;
      Set<Long> vmIdSet=vmDiskStatsById.keySet();
      for (      Long vmId : vmIdSet) {
        List<VmDiskStatsEntry> vmDiskStats=vmDiskStatsById.get(vmId);
        if (vmDiskStats == null)         continue;
        UserVmVO userVm=_userVmDao.findById(vmId);
        for (        VmDiskStatsEntry vmDiskStat : vmDiskStats) {
          SearchCriteria<VolumeVO> sc_volume=_volsDao.createSearchCriteria();
          sc_volume.addAnd("path",SearchCriteria.Op.EQ,vmDiskStat.getPath());
          VolumeVO volume=_volsDao.search(sc_volume,null).get(0);
          VmDiskStatisticsVO previousVmDiskStats=_vmDiskStatsDao.findBy(userVm.getAccountId(),userVm.getDataCenterId(),vmId,volume.getId());
          VmDiskStatisticsVO vmDiskStat_lock=_vmDiskStatsDao.lock(userVm.getAccountId(),userVm.getDataCenterId(),vmId,volume.getId());
          if ((vmDiskStat.getBytesRead() == 0) && (vmDiskStat.getBytesWrite() == 0) && (vmDiskStat.getIORead() == 0)&& (vmDiskStat.getIOWrite() == 0)) {
            s_logger.debug("IO/bytes read and write are all 0. Not updating vm_disk_statistics");
            continue;
          }
          if (vmDiskStat_lock == null) {
            s_logger.warn("unable to find vm disk stats from host for account: " + userVm.getAccountId() + " with vmId: "+ userVm.getId()+ " and volumeId:"+ volume.getId());
            continue;
          }
          if (previousVmDiskStats != null && ((previousVmDiskStats.getCurrentBytesRead() != vmDiskStat_lock.getCurrentBytesRead()) || (previousVmDiskStats.getCurrentBytesWrite() != vmDiskStat_lock.getCurrentBytesWrite()) || (previousVmDiskStats.getCurrentIORead() != vmDiskStat_lock.getCurrentIORead())|| (previousVmDiskStats.getCurrentIOWrite() != vmDiskStat_lock.getCurrentIOWrite()))) {
            s_logger.debug("vm disk stats changed from the time GetVmDiskStatsCommand was sent. " + "Ignoring current answer. Host: " + host.getName() + " . VM: "+ vmDiskStat.getVmName()+ " Read(Bytes): "+ vmDiskStat.getBytesRead()+ " write(Bytes): "+ vmDiskStat.getBytesWrite()+ " Read(IO): "+ vmDiskStat.getIORead()+ " write(IO): "+ vmDiskStat.getIOWrite());
            continue;
          }
          if (vmDiskStat_lock.getCurrentBytesRead() > vmDiskStat.getBytesRead()) {
            if (s_logger.isDebugEnabled()) {
              s_logger.debug("Read # of bytes that's less than the last one.  " + "Assuming something went wrong and persisting it. Host: " + host.getName() + " . VM: "+ vmDiskStat.getVmName()+ " Reported: "+ vmDiskStat.getBytesRead()+ " Stored: "+ vmDiskStat_lock.getCurrentBytesRead());
            }
            vmDiskStat_lock.setNetBytesRead(vmDiskStat_lock.getNetBytesRead() + vmDiskStat_lock.getCurrentBytesRead());
          }
          vmDiskStat_lock.setCurrentBytesRead(vmDiskStat.getBytesRead());
          if (vmDiskStat_lock.getCurrentBytesWrite() > vmDiskStat.getBytesWrite()) {
            if (s_logger.isDebugEnabled()) {
              s_logger.debug("Write # of bytes that's less than the last one.  " + "Assuming something went wrong and persisting it. Host: " + host.getName() + " . VM: "+ vmDiskStat.getVmName()+ " Reported: "+ vmDiskStat.getBytesWrite()+ " Stored: "+ vmDiskStat_lock.getCurrentBytesWrite());
            }
            vmDiskStat_lock.setNetBytesWrite(vmDiskStat_lock.getNetBytesWrite() + vmDiskStat_lock.getCurrentBytesWrite());
          }
          vmDiskStat_lock.setCurrentBytesWrite(vmDiskStat.getBytesWrite());
          if (vmDiskStat_lock.getCurrentIORead() > vmDiskStat.getIORead()) {
            if (s_logger.isDebugEnabled()) {
              s_logger.debug("Read # of IO that's less than the last one.  " + "Assuming something went wrong and persisting it. Host: " + host.getName() + " . VM: "+ vmDiskStat.getVmName()+ " Reported: "+ vmDiskStat.getIORead()+ " Stored: "+ vmDiskStat_lock.getCurrentIORead());
            }
            vmDiskStat_lock.setNetIORead(vmDiskStat_lock.getNetIORead() + vmDiskStat_lock.getCurrentIORead());
          }
          vmDiskStat_lock.setCurrentIORead(vmDiskStat.getIORead());
          if (vmDiskStat_lock.getCurrentIOWrite() > vmDiskStat.getIOWrite()) {
            if (s_logger.isDebugEnabled()) {
              s_logger.debug("Write # of IO that's less than the last one.  " + "Assuming something went wrong and persisting it. Host: " + host.getName() + " . VM: "+ vmDiskStat.getVmName()+ " Reported: "+ vmDiskStat.getIOWrite()+ " Stored: "+ vmDiskStat_lock.getCurrentIOWrite());
            }
            vmDiskStat_lock.setNetIOWrite(vmDiskStat_lock.getNetIOWrite() + vmDiskStat_lock.getCurrentIOWrite());
          }
          vmDiskStat_lock.setCurrentIOWrite(vmDiskStat.getIOWrite());
          if (!_dailyOrHourly) {
            vmDiskStat_lock.setAggBytesWrite(vmDiskStat_lock.getNetBytesWrite() + vmDiskStat_lock.getCurrentBytesWrite());
            vmDiskStat_lock.setAggBytesRead(vmDiskStat_lock.getNetBytesRead() + vmDiskStat_lock.getCurrentBytesRead());
            vmDiskStat_lock.setAggIOWrite(vmDiskStat_lock.getNetIOWrite() + vmDiskStat_lock.getCurrentIOWrite());
            vmDiskStat_lock.setAggIORead(vmDiskStat_lock.getNetIORead() + vmDiskStat_lock.getCurrentIORead());
          }
          _vmDiskStatsDao.update(vmDiskStat_lock.getId(),vmDiskStat_lock);
        }
      }
    }
    txn.commit();
  }
 catch (  Exception e) {
    s_logger.warn("Error while collecting vm disk stats from hosts",e);
  }
 finally {
    txn.close();
  }
}
