def json_repr(obj):
    'Represent instance of a class as JSON.\n    Arguments:\n    obj -- any object\n    Return:\n    String that reprent JSON-encoded object.\n    '

    def serialize(obj):
        "Recursively walk object's hierarchy."
        if isinstance(obj, (bool, int, long, float, basestring)):
            return obj
        elif isinstance(obj, dict):
            obj = obj.copy()
            newobj = {}
            for key in obj:
                if (obj[key] is not None):
                    if (isinstance(obj[key], list) and (len(obj[key]) == 0)):
                        continue
                    newobj[key] = serialize(obj[key])
            return newobj
        elif isinstance(obj, list):
            return [serialize(item) for item in obj]
        elif isinstance(obj, tuple):
            return tuple(serialize([item for item in obj]))
        elif hasattr(obj, '__dict__'):
            return serialize(obj.__dict__)
        else:
            return repr(obj)
    return serialize(obj)
