def _parse_kexdh_gex_init(self, m):
    self.e = m.get_mpint()
    if ((self.e < 1) or (self.e > (self.p - 1))):
        raise SSHException('Client kex "e" is out of range')
    self._generate_x()
    self.f = pow(self.g, self.x, self.p)
    K = pow(self.e, self.x, self.p)
    key = str(self.transport.get_server_key())
    hm = Message()
    hm.add(self.transport.remote_version, self.transport.local_version, self.transport.remote_kex_init, self.transport.local_kex_init, key)
    if (not self.old_style):
        hm.add_int(self.min_bits)
    hm.add_int(self.preferred_bits)
    if (not self.old_style):
        hm.add_int(self.max_bits)
    hm.add_mpint(self.p)
    hm.add_mpint(self.g)
    hm.add_mpint(self.e)
    hm.add_mpint(self.f)
    hm.add_mpint(K)
    H = SHA.new(str(hm)).digest()
    self.transport._set_K_H(K, H)
    sig = self.transport.get_server_key().sign_ssh_data(self.transport.randpool, H)
    m = Message()
    m.add_byte(chr(_MSG_KEXDH_GEX_REPLY))
    m.add_string(key)
    m.add_mpint(self.f)
    m.add_string(str(sig))
    self.transport._send_message(m)
    self.transport._activate_outbound()
