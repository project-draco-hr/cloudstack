{
  final NicProfile nicProfile=mock(NicProfile.class);
  when(nicProfile.getNetworkId()).thenReturn(NETWORK_ID);
  final NetworkVO network=mock(NetworkVO.class);
  when(network.getUuid()).thenReturn("aaaaaa-ffffff");
  when(network.getName()).thenReturn("aaaaaa");
  when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);
  when(networkDao.findById(NETWORK_ID)).thenReturn(network);
  final VirtualMachineProfile vm=mock(VirtualMachineProfile.class);
  when(vm.getType()).thenReturn(VirtualMachine.Type.User);
  when(vm.getInstanceName()).thenReturn("");
  when(vm.getUuid()).thenReturn("aaaa-bbbbb");
  final VirtualMachine virtualMachine=mock(VirtualMachine.class);
  when(vm.getVirtualMachine()).thenReturn(virtualMachine);
  when(virtualMachine.getState()).thenReturn(State.Stopping);
  final HostVO host=mock(HostVO.class);
  when(host.getId()).thenReturn(NETWORK_ID);
  final NuageVspDeviceVO nuageVspDevice=mock(NuageVspDeviceVO.class);
  when(nuageVspDevice.getHostId()).thenReturn(NETWORK_ID);
  when(nuageVspDao.listByPhysicalNetwork(NETWORK_ID)).thenReturn(Arrays.asList(new NuageVspDeviceVO[]{nuageVspDevice}));
  when(hostDao.findById(NETWORK_ID)).thenReturn(host);
  final ReleaseVmVspAnswer answer=mock(ReleaseVmVspAnswer.class);
  when(answer.getResult()).thenReturn(true);
  when(agentManager.easySend(eq(NETWORK_ID),(Command)any())).thenReturn(answer);
  guru.release(nicProfile,vm,"aaaaa-fffff");
}
