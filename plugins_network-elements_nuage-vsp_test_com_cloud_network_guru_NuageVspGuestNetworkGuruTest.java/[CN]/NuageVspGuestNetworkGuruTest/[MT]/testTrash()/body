{
  final NetworkVO network=mock(NetworkVO.class);
  when(network.getId()).thenReturn(NETWORK_ID);
  when(network.getUuid()).thenReturn("aaaaaa");
  when(network.getName()).thenReturn("trash");
  when(network.getDomainId()).thenReturn(NETWORK_ID);
  when(network.getNetworkOfferingId()).thenReturn(NETWORK_ID);
  when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);
  when(network.getVpcId()).thenReturn(null);
  when(_networkDao.acquireInLockTable(NETWORK_ID,1200)).thenReturn(network);
  final NetworkOfferingVO offering=mock(NetworkOfferingVO.class);
  when(offering.getId()).thenReturn(NETWORK_ID);
  when(offering.getTrafficType()).thenReturn(TrafficType.Guest);
  when(_networkOfferingDao.findById(NETWORK_ID)).thenReturn(offering);
  final DomainVO domain=mock(DomainVO.class);
  when(domain.getUuid()).thenReturn("aaaaaa");
  when(_domainDao.findById(NETWORK_ID)).thenReturn(domain);
  final HostVO host=mock(HostVO.class);
  when(host.getId()).thenReturn(NETWORK_ID);
  final NuageVspDeviceVO nuageVspDevice=mock(NuageVspDeviceVO.class);
  when(nuageVspDevice.getHostId()).thenReturn(NETWORK_ID);
  when(_nuageVspDao.listByPhysicalNetwork(NETWORK_ID)).thenReturn(Arrays.asList(new NuageVspDeviceVO[]{nuageVspDevice}));
  when(_hostDao.findById(NETWORK_ID)).thenReturn(host);
  when(_nuageVspManager.getDnsDetails(network)).thenReturn(new ArrayList<String>());
  when(_nuageVspManager.getGatewaySystemIds()).thenReturn(new ArrayList<String>());
  final Answer answer=mock(Answer.class);
  when(answer.getResult()).thenReturn(true);
  when(_agentManager.easySend(eq(NETWORK_ID),(Command)any())).thenReturn(answer);
  assertTrue(_nuageVspGuestNetworkGuru.trash(network,offering));
}
