{
  Account account=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  Long domainId=(Long)params.get(BaseCmd.Properties.ID.getName());
  String newName=(String)params.get(BaseCmd.Properties.NAME.getName());
  Boolean editDomainResult=false;
  DomainVO domain=getManagementServer().findDomainIdById(domainId);
  if (domain == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find domain " + domainId);
  }
 else   if (domain.getParent() == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"ROOT domain can not be edited");
  }
  if ((account != null) && !getManagementServer().isChildDomain(account.getDomainId(),domain.getId())) {
    throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"Unable to update domain " + domainId + ", permission denied");
  }
  if (newName == null) {
    newName=domain.getName();
  }
  try {
    getManagementServer().updateDomain(domainId,newName);
    domain=getManagementServer().findDomainIdById(domainId);
    if (domain.getName().equals(newName)) {
      editDomainResult=true;
    }
  }
 catch (  Exception ex) {
    s_logger.error("Exception editing domain",ex);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to update domain " + domainId + ":  internal error.");
  }
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  if (editDomainResult == true) {
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.SUCCESS.getName(),new Boolean(true)));
  }
 else {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to update domain " + domainId);
  }
  return returnValues;
}
