{
  final VpcGatewayVO vo=_vpcGatewayDao.findById(gatewayId);
  boolean success=true;
  try {
    final List<Provider> providersToImplement=getVpcProviders(vo.getVpcId());
    final PrivateGateway gateway=getVpcPrivateGateway(gatewayId);
    for (    final VpcProvider provider : getVpcElements()) {
      if (providersToImplement.contains(provider.getProvider())) {
        if (!provider.createPrivateGateway(gateway)) {
          success=false;
        }
      }
    }
    if (success) {
      logger.debug("Private gateway " + gateway + " was applied succesfully on the backend");
      if (vo.getState() != VpcGateway.State.Ready) {
        vo.setState(VpcGateway.State.Ready);
        _vpcGatewayDao.update(vo.getId(),vo);
        logger.debug("Marke gateway " + gateway + " with state "+ VpcGateway.State.Ready);
      }
      CallContext.current().setEventDetails("Private Gateway Id: " + gatewayId);
      return getVpcPrivateGateway(gatewayId);
    }
 else {
      logger.warn("Private gateway " + gateway + " failed to apply on the backend");
      return null;
    }
  }
  finally {
    if (!success) {
      if (destroyOnFailure) {
        logger.debug("Destroying private gateway " + vo + " that failed to start");
        if (deletePrivateGatewayFromTheDB(getVpcPrivateGateway(gatewayId))) {
          logger.warn("Successfully destroyed vpc " + vo + " that failed to start");
        }
 else {
          logger.warn("Failed to destroy vpc " + vo + " that failed to start");
        }
      }
    }
  }
}
