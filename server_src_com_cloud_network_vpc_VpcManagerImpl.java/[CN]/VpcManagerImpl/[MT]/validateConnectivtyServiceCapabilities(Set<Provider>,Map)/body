{
  if (serviceCapabilitystList != null && !serviceCapabilitystList.isEmpty()) {
    final Collection serviceCapabilityCollection=serviceCapabilitystList.values();
    final Iterator iter=serviceCapabilityCollection.iterator();
    final List<Capability> specifiedCapabilities=new ArrayList<>();
    while (iter.hasNext()) {
      final HashMap<String,String> svcCapabilityMap=(HashMap<String,String>)iter.next();
      Capability capability=null;
      final String svc=svcCapabilityMap.get(SERVICE);
      final String capabilityName=svcCapabilityMap.get(CAPABILITYTYPE);
      final String capabilityValue=svcCapabilityMap.get(CAPABILITYVALUE);
      if (capabilityName != null) {
        capability=Capability.getCapability(capabilityName);
      }
      if (capability == null || capabilityValue == null) {
        throw new InvalidParameterValueException("Invalid capability:" + capabilityName + " capability value:"+ capabilityValue);
      }
      final Service usedService=Service.getService(svc);
      checkCapabilityPerServiceProvider(providers,capability,usedService);
      if (!capabilityValue.equalsIgnoreCase(TRUE_VALUE) && !capabilityValue.equalsIgnoreCase(FALSE_VALUE)) {
        throw new InvalidParameterValueException("Invalid Capability value:" + capabilityValue + " specified.");
      }
    }
  }
}
