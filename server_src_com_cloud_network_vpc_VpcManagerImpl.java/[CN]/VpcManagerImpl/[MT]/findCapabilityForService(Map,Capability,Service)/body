{
  boolean foundCapability=false;
  if (serviceCapabilitystList != null && !serviceCapabilitystList.isEmpty()) {
    Iterator iter=serviceCapabilitystList.values().iterator();
    while (iter.hasNext()) {
      HashMap<String,String> currentCapabilityMap=(HashMap<String,String>)iter.next();
      String currentCapabilityService=currentCapabilityMap.get(SERVICE);
      String currentCapabilityName=currentCapabilityMap.get(CAPABILITYTYPE);
      String currentCapabilityValue=currentCapabilityMap.get(CAPABILITYVALUE);
      if ((currentCapabilityName == null) || (currentCapabilityService == null) || (currentCapabilityValue == null)) {
        throw new InvalidParameterValueException(String.format("Invalid capability with name %s, value %s and service %s",currentCapabilityName,currentCapabilityValue,currentCapabilityService));
      }
      if (currentCapabilityName.equalsIgnoreCase(capability.getName())) {
        foundCapability=currentCapabilityValue.equalsIgnoreCase(TRUE_VALUE);
        if (!currentCapabilityService.equalsIgnoreCase(service.getName())) {
          throw new InvalidParameterValueException(String.format("Invalid Service: %s specified. Capability %s can be specified only for service %s",currentCapabilityService,service.getName(),currentCapabilityName));
        }
        break;
      }
    }
  }
  return foundCapability;
}
