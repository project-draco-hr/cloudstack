{
  final String cidr=vpc.getCidr();
  if (!NetUtils.isValidCIDR(cidr)) {
    throw new InvalidParameterValueException("Invalid CIDR specified " + cidr);
  }
  if (!NetUtils.validateGuestCidr(cidr)) {
    throw new InvalidParameterValueException("Guest Cidr " + cidr + " is not RFC1918 compliant");
  }
  if (!NetUtils.verifyDomainName(vpc.getNetworkDomain())) {
    throw new InvalidParameterValueException("Invalid network domain. Total length shouldn't exceed 190 chars. Each domain " + "label must be between 1 and 63 characters long, can contain ASCII letters 'a' through 'z', " + "the digits '0' through '9', "+ "and the hyphen ('-'); can't start or end with \"-\"");
  }
  return Transaction.execute(new TransactionCallback<VpcVO>(){
    @Override public VpcVO doInTransaction(    TransactionStatus status){
      if (displayVpc != null) {
        vpc.setDisplay(displayVpc);
      }
      VpcVO persistedVpc=_vpcDao.persist(vpc,finalizeServicesAndProvidersForVpc(vpc.getZoneId(),vpc.getVpcOfferingId()));
      _resourceLimitMgr.incrementResourceCount(vpc.getAccountId(),ResourceType.vpc);
      s_logger.debug("Created VPC " + persistedVpc);
      return persistedVpc;
    }
  }
);
}
