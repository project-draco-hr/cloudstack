{
  Map<Network.Service,Set<Network.Provider>> svcProviderMap=new HashMap<Network.Service,Set<Network.Provider>>();
  Set<Network.Provider> defaultProviders=new HashSet<Network.Provider>();
  defaultProviders.add(Provider.VirtualRouter);
  boolean sourceNatSvc=false;
  boolean firewallSvs=false;
  for (  String serviceName : supportedServices) {
    Service service=Network.Service.getService(serviceName);
    if (service == null || service == Service.Gateway) {
      throw new InvalidParameterValueException("Invalid service " + serviceName);
    }
    if (service == Service.SecurityGroup) {
      throw new UnsupportedServiceException("Service " + Service.SecurityGroup.getName() + " is not supported by VPC");
    }
    svcProviderMap.put(service,defaultProviders);
  }
  if (!sourceNatSvc) {
    s_logger.debug("Automatically adding source nat service to the list of VPC services");
    svcProviderMap.put(Service.SourceNat,defaultProviders);
  }
  if (!firewallSvs) {
    s_logger.debug("Automatically adding firewall service to the list of VPC services");
    svcProviderMap.put(Service.Firewall,defaultProviders);
  }
  svcProviderMap.put(Service.Gateway,defaultProviders);
  return createVpcOffering(name,displayText,svcProviderMap,false,null);
}
