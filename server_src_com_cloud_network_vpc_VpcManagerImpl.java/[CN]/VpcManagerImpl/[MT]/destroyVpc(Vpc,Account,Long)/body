{
  s_logger.debug("Destroying vpc " + vpc);
  int networksCount=_ntwkDao.getNetworkCountByVpcId(vpc.getId());
  if (networksCount > 0) {
    throw new InvalidParameterValueException("Can't delete VPC " + vpc + " as its used by "+ networksCount+ " networks");
  }
  if (vpc.getState() != Vpc.State.Inactive) {
    s_logger.debug("Updating VPC " + vpc + " with state "+ Vpc.State.Inactive+ " as a part of vpc delete");
    VpcVO vpcVO=_vpcDao.findById(vpc.getId());
    vpcVO.setState(Vpc.State.Inactive);
    Transaction txn=Transaction.currentTxn();
    txn.start();
    _vpcDao.update(vpc.getId(),vpcVO);
    _resourceLimitMgr.decrementResourceCount(vpc.getAccountId(),ResourceType.vpc);
    txn.commit();
  }
  if (!shutdownVpc(vpc.getId())) {
    s_logger.warn("Failed to shutdown vpc " + vpc + " as a part of vpc destroy process");
    return false;
  }
  if (!cleanupVpcResources(vpc.getId(),caller,callerUserId)) {
    s_logger.warn("Failed to cleanup resources for vpc " + vpc);
    return false;
  }
  if (_vpcDao.remove(vpc.getId())) {
    s_logger.debug("Vpc " + vpc + " is destroyed succesfully");
    return true;
  }
 else {
    s_logger.warn("Vpc " + vpc + " failed to destroy");
    return false;
  }
}
