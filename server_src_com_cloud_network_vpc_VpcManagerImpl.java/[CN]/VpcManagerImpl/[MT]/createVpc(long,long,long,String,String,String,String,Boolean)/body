{
  Account caller=CallContext.current().getCallingAccount();
  Account owner=_accountMgr.getAccount(vpcOwnerId);
  _accountMgr.checkAccess(caller,null,false,owner);
  _resourceLimitMgr.checkResourceLimit(owner,ResourceType.vpc);
  VpcOfferingVO vpcOff=_vpcOffDao.findById(vpcOffId);
  if (vpcOff == null || vpcOff.getState() != State.Enabled) {
    InvalidParameterValueException ex=new InvalidParameterValueException("Unable to find vpc offering in " + State.Enabled + " state by specified id");
    if (vpcOff == null) {
      ex.addProxyObject(String.valueOf(vpcOffId),"vpcOfferingId");
    }
 else {
      ex.addProxyObject(vpcOff.getUuid(),"vpcOfferingId");
    }
    throw ex;
  }
  boolean isRegionLevelVpcOff=vpcOff.offersRegionLevelVPC();
  if (isRegionLevelVpcOff && networkDomain == null) {
    throw new InvalidParameterValueException("Network domain must be specified for region level VPC");
  }
  DataCenter zone=_entityMgr.findById(DataCenter.class,zoneId);
  if (zone == null) {
    throw new InvalidParameterValueException("Can't find zone by id specified");
  }
  if (Grouping.AllocationState.Disabled == zone.getAllocationState() && !_accountMgr.isRootAdmin(caller.getId())) {
    PermissionDeniedException ex=new PermissionDeniedException("Cannot perform this operation since specified Zone is currently disabled");
    ex.addProxyObject(zone.getUuid(),"zoneId");
    throw ex;
  }
  if (networkDomain == null) {
    networkDomain=_ntwkModel.getAccountNetworkDomain(owner.getId(),zoneId);
    if (networkDomain == null) {
      networkDomain="cs" + Long.toHexString(owner.getId()) + NetworkOrchestrationService.GuestDomainSuffix.valueIn(zoneId);
    }
  }
  boolean useDistributedRouter=vpcOff.supportsDistributedRouter();
  final VpcVO vpc=new VpcVO(zoneId,vpcName,displayText,owner.getId(),owner.getDomainId(),vpcOffId,cidr,networkDomain,useDistributedRouter,isRegionLevelVpcOff,vpcOff.getRedundantRouter());
  return createVpc(displayVpc,vpc);
}
