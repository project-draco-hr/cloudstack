{
  Account caller=CallContext.current().getCallingAccount();
  Account owner=null;
  IpAddress ipToAssoc=_ntwkModel.getIp(ipId);
  if (ipToAssoc != null) {
    owner=_accountMgr.getAccount(ipToAssoc.getAllocatedToAccountId());
  }
 else {
    s_logger.debug("Unable to find ip address by id: " + ipId);
    return null;
  }
  Vpc vpc=_vpcDao.findById(vpcId);
  if (vpc == null) {
    throw new InvalidParameterValueException("Invalid VPC id provided");
  }
  _accountMgr.checkAccess(caller,AccessType.OperateEntry,ipToAssoc,vpc);
  boolean isSourceNat=false;
  if (getExistingSourceNatInVpc(owner.getId(),vpcId) == null) {
    isSourceNat=true;
  }
  s_logger.debug("Associating ip " + ipToAssoc + " to vpc "+ vpc);
  final boolean isSourceNatFinal=isSourceNat;
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      IPAddressVO ip=_ipAddressDao.findById(ipId);
      ip.setVpcId(vpcId);
      ip.setSourceNat(isSourceNatFinal);
      _ipAddressDao.update(ipId,ip);
      _ipAddrMgr.markPublicIpAsAllocated(ip);
    }
  }
);
  s_logger.debug("Successfully assigned ip " + ipToAssoc + " to vpc "+ vpc);
  return _ipAddressDao.findById(ipId);
}
