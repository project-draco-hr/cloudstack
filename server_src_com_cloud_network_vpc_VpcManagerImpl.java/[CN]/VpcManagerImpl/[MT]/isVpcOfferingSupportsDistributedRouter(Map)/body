{
  boolean supportsDistributedRouter=false;
  if (serviceCapabilitystList != null && !serviceCapabilitystList.isEmpty()) {
    Collection serviceCapabilityCollection=serviceCapabilitystList.values();
    Iterator iter=serviceCapabilityCollection.iterator();
    Map<Network.Capability,String> capabilityMap=null;
    while (iter.hasNext()) {
      HashMap<String,String> svcCapabilityMap=(HashMap<String,String>)iter.next();
      Network.Capability capability=null;
      String svc=svcCapabilityMap.get("service");
      String capabilityName=svcCapabilityMap.get("capabilitytype");
      String capabilityValue=svcCapabilityMap.get("capabilityvalue");
      if (capabilityName != null) {
        capability=Network.Capability.getCapability(capabilityName);
      }
      if ((capability == null) || (capabilityName == null) || (capabilityValue == null)) {
        throw new InvalidParameterValueException("Invalid capability:" + capabilityName + " capability value:"+ capabilityValue);
      }
      if (!svc.equalsIgnoreCase(Service.Connectivity.getName())) {
        throw new InvalidParameterValueException("Invalid Service:" + svc + " specified. Only for 'Connectivity' service capabilities can be specified");
      }
      if (!capabilityName.equalsIgnoreCase("DistributedRouter")) {
        continue;
      }
      if (!capabilityValue.equalsIgnoreCase("true") && capabilityValue.equalsIgnoreCase("false")) {
        throw new InvalidParameterValueException("Invalid Capability value:" + capabilityValue + " specified.");
      }
      supportsDistributedRouter=capabilityValue.equalsIgnoreCase("true");
    }
  }
  return supportsDistributedRouter;
}
