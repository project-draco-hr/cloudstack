{
  Transaction txn=Transaction.currentTxn();
  txn.start();
  if (_vpcOffDao.findByUniqueName(VpcOffering.defaultVPCOfferingName) == null) {
    s_logger.debug("Creating default VPC offering " + VpcOffering.defaultVPCOfferingName);
    Map<Service,Set<Provider>> svcProviderMap=new HashMap<Service,Set<Provider>>();
    Set<Provider> defaultProviders=new HashSet<Provider>();
    defaultProviders.add(Provider.VPCVirtualRouter);
    for (    Service svc : getSupportedServices()) {
      if (svc == Service.Lb) {
        Set<Provider> lbProviders=new HashSet<Provider>();
        lbProviders.add(Provider.VPCVirtualRouter);
        svcProviderMap.put(svc,lbProviders);
      }
 else {
        svcProviderMap.put(svc,defaultProviders);
      }
    }
    createVpcOffering(VpcOffering.defaultVPCOfferingName,VpcOffering.defaultVPCOfferingName,svcProviderMap,true,State.Enabled);
  }
  txn.commit();
  Map<String,String> configs=_configDao.getConfiguration(params);
  String value=configs.get(Config.VpcCleanupInterval.key());
  _cleanupInterval=NumbersUtil.parseInt(value,60 * 60);
  String maxNtwks=configs.get(Config.VpcMaxNetworks.key());
  _maxNetworks=NumbersUtil.parseInt(maxNtwks,3);
  IpAddressSearch=_ipAddressDao.createSearchBuilder();
  IpAddressSearch.and("accountId",IpAddressSearch.entity().getAllocatedToAccountId(),Op.EQ);
  IpAddressSearch.and("dataCenterId",IpAddressSearch.entity().getDataCenterId(),Op.EQ);
  IpAddressSearch.and("vpcId",IpAddressSearch.entity().getVpcId(),Op.EQ);
  IpAddressSearch.and("associatedWithNetworkId",IpAddressSearch.entity().getAssociatedWithNetworkId(),Op.EQ);
  SearchBuilder<VlanVO> virtualNetworkVlanSB=_vlanDao.createSearchBuilder();
  virtualNetworkVlanSB.and("vlanType",virtualNetworkVlanSB.entity().getVlanType(),Op.EQ);
  IpAddressSearch.join("virtualNetworkVlanSB",virtualNetworkVlanSB,IpAddressSearch.entity().getVlanId(),virtualNetworkVlanSB.entity().getId(),JoinBuilder.JoinType.INNER);
  IpAddressSearch.done();
  List<DataCenterVO> zones=_dcDao.listAllZones();
  zoneBlackListedRoutes=new HashMap<Long,Set<String>>();
  for (  DataCenterVO zone : zones) {
    List<ConfigurationVO> confs=_configServer.getConfigListByScope(Config.ConfigurationParameterScope.zone.toString(),zone.getId());
    for (    ConfigurationVO conf : confs) {
      String routeStr=conf.getValue();
      if (conf.getName().equalsIgnoreCase(Config.BlacklistedRoutes.key()) && routeStr != null && !routeStr.isEmpty()) {
        String[] routes=routeStr.split(",");
        Set<String> cidrs=new HashSet<String>();
        for (        String route : routes) {
          cidrs.add(route);
        }
        zoneBlackListedRoutes.put(zone.getId(),cidrs);
        break;
      }
    }
  }
  return true;
}
