{
  s_logger.debug("Cleaning up resources for vpc id=" + vpcId);
  boolean success=true;
  s_logger.debug("Cleaning up existed site to site VPN connections");
  _s2sVpnMgr.cleanupVpnConnectionByVpc(vpcId);
  s_logger.debug("Cleaning up existed site to site VPN gateways");
  _s2sVpnMgr.cleanupVpnGatewayByVpc(vpcId);
  final List<IPAddressVO> ipsToRelease=_ipAddressDao.listByAssociatedVpc(vpcId,null);
  s_logger.debug("Releasing ips for vpc id=" + vpcId + " as a part of vpc cleanup");
  for (  final IPAddressVO ipToRelease : ipsToRelease) {
    if (ipToRelease.isPortable()) {
      ipToRelease.setVpcId(null);
      ipToRelease.setAssociatedWithNetworkId(null);
      _ipAddressDao.update(ipToRelease.getId(),ipToRelease);
      s_logger.debug("Portable IP address " + ipToRelease + " is no longer associated with any VPC");
    }
 else {
      success=success && _ipAddrMgr.disassociatePublicIpAddress(ipToRelease.getId(),callerUserId,caller);
      if (!success) {
        s_logger.warn("Failed to cleanup ip " + ipToRelease + " as a part of vpc id="+ vpcId+ " cleanup");
      }
    }
  }
  if (success) {
    s_logger.debug("Released ip addresses for vpc id=" + vpcId + " as a part of cleanup vpc process");
  }
 else {
    s_logger.warn("Failed to release ip addresses for vpc id=" + vpcId + " as a part of cleanup vpc process");
  }
  if (!revokeStaticRoutesForVpc(vpcId,caller)) {
    s_logger.warn("Failed to revoke static routes for vpc " + vpcId + " as a part of cleanup vpc process");
    return false;
  }
  final List<PrivateGateway> gateways=getVpcPrivateGateways(vpcId);
  if (gateways != null) {
    for (    final PrivateGateway gateway : gateways) {
      if (gateway != null) {
        s_logger.debug("Deleting private gateway " + gateway + " as a part of vpc "+ vpcId+ " resources cleanup");
        if (!deleteVpcPrivateGateway(gateway.getId())) {
          success=false;
          s_logger.debug("Failed to delete private gateway " + gateway + " as a part of vpc "+ vpcId+ " resources cleanup");
        }
 else {
          s_logger.debug("Deleted private gateway " + gateway + " as a part of vpc "+ vpcId+ " resources cleanup");
        }
      }
    }
  }
  final SearchBuilder<NetworkACLVO> searchBuilder=_networkAclDao.createSearchBuilder();
  searchBuilder.and("vpcId",searchBuilder.entity().getVpcId(),Op.IN);
  final SearchCriteria<NetworkACLVO> searchCriteria=searchBuilder.create();
  searchCriteria.setParameters("vpcId",vpcId,0);
  final Filter filter=new Filter(NetworkACLVO.class,"id",false,null,null);
  final Pair<List<NetworkACLVO>,Integer> aclsCountPair=_networkAclDao.searchAndCount(searchCriteria,filter);
  final List<NetworkACLVO> acls=aclsCountPair.first();
  for (  final NetworkACLVO networkAcl : acls) {
    if (networkAcl.getId() != NetworkACL.DEFAULT_ALLOW && networkAcl.getId() != NetworkACL.DEFAULT_DENY) {
      _networkAclMgr.deleteNetworkACL(networkAcl);
    }
  }
  return success;
}
