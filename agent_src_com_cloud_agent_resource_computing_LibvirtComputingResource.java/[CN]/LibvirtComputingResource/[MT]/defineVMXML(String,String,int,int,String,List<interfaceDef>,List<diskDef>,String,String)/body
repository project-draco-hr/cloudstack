{
  LibvirtVMDef vm=new LibvirtVMDef();
  vm.setHvsType(_hypervisorType);
  vm.setDomainName(vmName);
  vm.setDomUUID(uuid);
  vm.setDomDescription(guestOSType);
  guestDef guest=new guestDef();
  guest.setGuestType(guestDef.guestType.KVM);
  guest.setGuestArch(arch);
  guest.setMachineType("pc");
  guest.setBootOrder(guestDef.bootOrder.CDROM);
  guest.setBootOrder(guestDef.bootOrder.HARDISK);
  vm.addComp(guest);
  guestResourceDef grd=new guestResourceDef();
  grd.setMemorySize(memSize * 1024);
  grd.setVcpuNum(cpus);
  vm.addComp(grd);
  featuresDef features=new featuresDef();
  features.addFeatures("pae");
  features.addFeatures("apic");
  features.addFeatures("acpi");
  vm.addComp(features);
  termPolicy term=new termPolicy();
  term.setCrashPolicy("destroy");
  term.setPowerOffPolicy("destroy");
  term.setRebootPolicy("restart");
  vm.addComp(term);
  devicesDef devices=new devicesDef();
  devices.setEmulatorPath(_hypervisorPath);
  for (  interfaceDef nic : nics) {
    devices.addDevice(nic);
  }
  for (  diskDef disk : disks) {
    if (!disk.isAttachDeferred())     devices.addDevice(disk);
  }
  serialDef serial=new serialDef("pty",null,(short)0);
  devices.addDevice(serial);
  consoleDef console=new consoleDef("pty",null,null,(short)0);
  devices.addDevice(console);
  graphicDef grap=new graphicDef("vnc",(short)0,true,null,null,null);
  devices.addDevice(grap);
  inputDef input=new inputDef("tablet","usb");
  devices.addDevice(input);
  vm.addComp(devices);
  String domXML=vm.toString();
  s_logger.debug(domXML);
  return domXML;
}
