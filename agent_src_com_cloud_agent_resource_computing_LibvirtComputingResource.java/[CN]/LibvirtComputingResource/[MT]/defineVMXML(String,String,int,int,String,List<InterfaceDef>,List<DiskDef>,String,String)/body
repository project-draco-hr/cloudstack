{
  LibvirtVMDef vm=new LibvirtVMDef();
  vm.setHvsType(_hypervisorType);
  vm.setDomainName(vmName);
  vm.setDomUUID(uuid);
  vm.setDomDescription(guestOSType);
  GuestDef guest=new GuestDef();
  guest.setGuestType(GuestDef.guestType.KVM);
  guest.setGuestArch(arch);
  guest.setMachineType("pc");
  guest.setBootOrder(GuestDef.bootOrder.CDROM);
  guest.setBootOrder(GuestDef.bootOrder.HARDISK);
  vm.addComp(guest);
  GuestResourceDef grd=new GuestResourceDef();
  grd.setMemorySize(memSize * 1024);
  grd.setVcpuNum(cpus);
  vm.addComp(grd);
  FeaturesDef features=new FeaturesDef();
  features.addFeatures("pae");
  features.addFeatures("apic");
  features.addFeatures("acpi");
  vm.addComp(features);
  TermPolicy term=new TermPolicy();
  term.setCrashPolicy("destroy");
  term.setPowerOffPolicy("destroy");
  term.setRebootPolicy("restart");
  vm.addComp(term);
  DevicesDef devices=new DevicesDef();
  devices.setEmulatorPath(_hypervisorPath);
  for (  InterfaceDef nic : nics) {
    devices.addDevice(nic);
  }
  for (  DiskDef disk : disks) {
    if (!disk.isAttachDeferred())     devices.addDevice(disk);
  }
  SerialDef serial=new SerialDef("pty",null,(short)0);
  devices.addDevice(serial);
  ConsoleDef console=new ConsoleDef("pty",null,null,(short)0);
  devices.addDevice(console);
  GraphicDef grap=new GraphicDef("vnc",(short)0,true,null,null,null);
  devices.addDevice(grap);
  InputDef input=new InputDef("tablet","usb");
  devices.addDevice(input);
  vm.addComp(devices);
  String domXML=vm.toString();
  s_logger.debug(domXML);
  return domXML;
}
