{
  DomainRouter router=cmd.getRouter();
  List<InterfaceDef> nics=null;
  try {
    nics=createRouterVMNetworks(cmd);
    List<DiskDef> disks=createSystemVMDisk(cmd.getVolumes());
    String dataDiskPath=null;
    for (    DiskDef disk : disks) {
      if (disk.getDiskLabel().equalsIgnoreCase("vdb")) {
        dataDiskPath=disk.getDiskPath();
      }
    }
    String vmName=cmd.getVmName();
    patchSystemVm(cmd.getBootArgs(),dataDiskPath,vmName);
    String uuid=UUID.nameUUIDFromBytes(vmName.getBytes()).toString();
    String domXML=defineVMXML(cmd.getVmName(),uuid,router.getRamSize(),1,_domrArch,nics,disks,router.getVncPassword(),cmd.getGuestOSDescription());
    s_logger.debug(domXML);
    startDomain(vmName,domXML);
    for (    InterfaceDef nic : nics) {
      if (nic.getHostNetType() == hostNicType.VNET) {
        disableBridgeForwardding(nic.getBrName());
      }
    }
  }
 catch (  LibvirtException e) {
    if (nics != null) {
      cleanupVMNetworks(nics);
    }
    s_logger.debug("Failed to start domr: " + e.toString());
    return e.toString();
  }
catch (  InternalErrorException e) {
    if (nics != null) {
      cleanupVMNetworks(nics);
    }
    s_logger.debug("Failed to start domr: " + e.toString());
    return e.toString();
  }
  return null;
}
