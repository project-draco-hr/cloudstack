{
  LibvirtVMDef vm=new LibvirtVMDef();
  vm.setHvsType(_hypervisorType);
  vm.setDomainName(vmTO.getName());
  vm.setDomUUID(UUID.nameUUIDFromBytes(vmTO.getName().getBytes()).toString());
  vm.setDomDescription(KVMGuestOsMapper.getGuestOsName(vmTO.getOs()));
  GuestDef guest=new GuestDef();
  guest.setGuestType(GuestDef.guestType.KVM);
  guest.setGuestArch(vmTO.getArch());
  guest.setMachineType("pc");
  guest.setBootOrder(GuestDef.bootOrder.CDROM);
  guest.setBootOrder(GuestDef.bootOrder.HARDISK);
  vm.addComp(guest);
  GuestResourceDef grd=new GuestResourceDef();
  grd.setMemorySize(vmTO.getMinRam() / 1024);
  grd.setVcpuNum(vmTO.getCpus());
  vm.addComp(grd);
  FeaturesDef features=new FeaturesDef();
  features.addFeatures("pae");
  features.addFeatures("apic");
  features.addFeatures("acpi");
  vm.addComp(features);
  TermPolicy term=new TermPolicy();
  term.setCrashPolicy("destroy");
  term.setPowerOffPolicy("destroy");
  term.setRebootPolicy("restart");
  vm.addComp(term);
  DevicesDef devices=new DevicesDef();
  devices.setEmulatorPath(_hypervisorPath);
  SerialDef serial=new SerialDef("pty",null,(short)0);
  devices.addDevice(serial);
  ConsoleDef console=new ConsoleDef("pty",null,null,(short)0);
  devices.addDevice(console);
  GraphicDef grap=new GraphicDef("vnc",(short)0,true,null,null,null);
  devices.addDevice(grap);
  InputDef input=new InputDef("tablet","usb");
  devices.addDevice(input);
  vm.addComp(devices);
  return vm;
}
