{
  String snapshotName=cmd.getSnapshotName();
  String VolPath=cmd.getVolumePath();
  String snapshotPath=cmd.getSnapshotPath();
  String vmName=cmd.getVmName();
  try {
    Connect conn=LibvirtConnection.getConnection();
    DomainInfo.DomainState state=null;
    Domain vm=null;
    if (vmName != null) {
      try {
        vm=getDomain(conn,cmd.getVmName());
        state=vm.getInfo().state;
      }
 catch (      LibvirtException e) {
      }
    }
    if (state == DomainInfo.DomainState.VIR_DOMAIN_RUNNING) {
      String vmUuid=vm.getUUIDString();
      Object[] args=new Object[]{snapshotName,vmUuid};
      String snapshot=SnapshotXML.format(args);
      s_logger.debug(snapshot);
      if (cmd.getCommandSwitch().equalsIgnoreCase(ManageSnapshotCommand.CREATE_SNAPSHOT)) {
        vm.snapshotCreateXML(snapshot);
      }
 else {
        DomainSnapshot snap=vm.snapshotLookupByName(snapshotName);
        snap.delete(0);
      }
      vm=getDomain(conn,cmd.getVmName());
      state=vm.getInfo().state;
      if (state == DomainInfo.DomainState.VIR_DOMAIN_PAUSED) {
        vm.resume();
      }
    }
 else {
      final Script command=new Script(_manageSnapshotPath,_timeout,s_logger);
      if (cmd.getCommandSwitch().equalsIgnoreCase(ManageSnapshotCommand.CREATE_SNAPSHOT)) {
        command.add("-c",VolPath);
      }
 else {
        command.add("-d",snapshotPath);
      }
      command.add("-n",snapshotName);
      String result=command.execute();
      if (result != null) {
        s_logger.debug("Failed to manage snapshot: " + result);
        return new ManageSnapshotAnswer(cmd,false,"Failed to manage snapshot: " + result);
      }
    }
  }
 catch (  LibvirtException e) {
    s_logger.debug("Failed to manage snapshot: " + e.toString());
    return new ManageSnapshotAnswer(cmd,false,"Failed to manage snapshot: " + e.toString());
  }
  return new ManageSnapshotAnswer(cmd,cmd.getSnapshotId(),cmd.getVolumePath(),true,null);
}
