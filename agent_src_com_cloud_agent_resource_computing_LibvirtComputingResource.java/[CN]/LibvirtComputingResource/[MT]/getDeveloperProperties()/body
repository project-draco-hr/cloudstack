{
  final File file=PropertiesUtil.findConfigFile("developer.properties");
  if (file == null) {
    throw new ConfigurationException("Unable to find developer.properties.");
  }
  s_logger.info("developer.properties found at " + file.getAbsolutePath());
  Properties properties=new Properties();
  try {
    properties.load(new FileInputStream(file));
    String startMac=(String)properties.get("private.macaddr.start");
    if (startMac == null) {
      throw new ConfigurationException("Developers must specify start mac for private ip range");
    }
    String startIp=(String)properties.get("private.ipaddr.start");
    if (startIp == null) {
      throw new ConfigurationException("Developers must specify start ip for private ip range");
    }
    final Map<String,Object> params=PropertiesUtil.toMap(properties);
    String endIp=(String)properties.get("private.ipaddr.end");
    if (endIp == null) {
      endIp=getEndIpFromStartIp(startIp,16);
      params.put("private.ipaddr.end",endIp);
    }
    return params;
  }
 catch (  final FileNotFoundException ex) {
    throw new CloudRuntimeException("Cannot find the file: " + file.getAbsolutePath(),ex);
  }
catch (  final IOException ex) {
    throw new CloudRuntimeException("IOException in reading " + file.getAbsolutePath(),ex);
  }
}
