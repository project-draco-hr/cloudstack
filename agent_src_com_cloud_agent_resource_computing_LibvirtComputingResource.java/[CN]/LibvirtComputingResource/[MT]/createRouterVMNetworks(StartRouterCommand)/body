{
  List<interfaceDef> nics=new ArrayList<interfaceDef>();
  DomainRouter router=cmd.getRouter();
  String guestMac=router.getGuestMacAddress();
  String privateMac=router.getPrivateMacAddress();
  String pubMac=router.getPublicMacAddress();
  String brName;
  interfaceDef pubNic=new interfaceDef();
  interfaceDef privNic=new interfaceDef();
  interfaceDef vnetNic=new interfaceDef();
  if ("untagged".equalsIgnoreCase(router.getVnet())) {
    vnetNic.defBridgeNet(_privBridgeName,null,guestMac,interfaceDef.nicModel.VIRTIO);
  }
 else {
    String vnetId=getVnetId(router.getVnet());
    brName=setVnetBrName(vnetId);
    String vnetDev="vtap" + vnetId;
    createVnet(vnetId,_pifs.first());
    vnetNic.defBridgeNet(brName,null,guestMac,interfaceDef.nicModel.VIRTIO);
  }
  nics.add(vnetNic);
  privNic.defPrivateNet(_privNwName,null,privateMac,interfaceDef.nicModel.VIRTIO);
  nics.add(privNic);
  if ("untagged".equalsIgnoreCase(router.getVlanId())) {
    pubNic.defBridgeNet(_publicBridgeName,null,pubMac,interfaceDef.nicModel.VIRTIO);
  }
 else {
    String vnetId=getVnetId(router.getVlanId());
    brName=setVnetBrName(vnetId);
    String vnetDev="vtap" + vnetId;
    createVnet(vnetId,_pifs.second());
    pubNic.defBridgeNet(brName,null,pubMac,interfaceDef.nicModel.VIRTIO);
  }
  nics.add(pubNic);
  return nics;
}
