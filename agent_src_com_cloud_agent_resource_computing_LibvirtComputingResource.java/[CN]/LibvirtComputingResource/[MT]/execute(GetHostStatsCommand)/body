{
  final Script cpuScript=new Script("/bin/bash",s_logger);
  cpuScript.add("-c");
  cpuScript.add("idle=$(top -b -n 1|grep Cpu\\(s\\):|cut -d% -f4|cut -d, -f2);echo $idle");
  final OutputInterpreter.OneLineParser parser=new OutputInterpreter.OneLineParser();
  String result=cpuScript.execute(parser);
  if (result != null) {
    s_logger.debug("Unable to get the host CPU state: " + result);
    return new Answer(cmd,false,result);
  }
  double cpuUtil=(100.0D - Double.parseDouble(parser.getLine()));
  long freeMem=0;
  final Script memScript=new Script("/bin/bash",s_logger);
  memScript.add("-c");
  memScript.add("freeMem=$(free|grep cache:|awk '{print $4}');echo $freeMem");
  final OutputInterpreter.OneLineParser Memparser=new OutputInterpreter.OneLineParser();
  result=memScript.execute(Memparser);
  if (result != null) {
    s_logger.debug("Unable to get the host Mem state: " + result);
    return new Answer(cmd,false,result);
  }
  freeMem=Long.parseLong(Memparser.getLine());
  Script totalMem=new Script("/bin/bash",s_logger);
  totalMem.add("-c");
  totalMem.add("free|grep Mem:|awk '{print $2}'");
  final OutputInterpreter.OneLineParser totMemparser=new OutputInterpreter.OneLineParser();
  result=totalMem.execute(totMemparser);
  if (result != null) {
    s_logger.debug("Unable to get the host Mem state: " + result);
    return new Answer(cmd,false,result);
  }
  long totMem=Long.parseLong(totMemparser.getLine());
  Pair<Double,Double> nicStats=getNicStats(_publicBridgeName);
  HostStatsEntry hostStats=new HostStatsEntry(cmd.getHostId(),cpuUtil,nicStats.first() / 1000,nicStats.second() / 1000,"host",totMem,freeMem,0,0);
  return new GetHostStatsAnswer(cmd,hostStats);
}
