{
  String command;
  List<String> nics=getInterfaces(vmName);
  for (  String vif : nics) {
    command="iptables -D BRIDGE-FIREWALL -m physdev --physdev-is-bridged --physdev-out " + vif + " -j "+ vmName+ ";"+ "iptables -D BRIDGE-FIREWALL -m physdev --physdev-is-bridged --physdev-in "+ vif+ " -j "+ vmName+ ";"+ "iptables -F "+ vmName+ ";"+ "iptables -X "+ vmName+ ";";
    String result=executeBashScript(command);
    if (result != null) {
      s_logger.debug("Ignoring failure to delete old rules");
    }
    result=executeBashScript("iptables -N " + vmName);
    if (result != null) {
      executeBashScript("iptables -F " + vmName);
    }
    command="iptables -D BRIDGE-FIREWALL -m physdev --physdev-is-bridged --physdev-out " + vif + " -j "+ vmName+ ";"+ "iptables -D BRIDGE-FIREWALL -m physdev --physdev-is-bridged --physdev-in "+ vif+ " -j "+ vmName+ ";"+ "iptables -A "+ vmName+ " -m state --state RELATED,ESTABLISHED -j ACCEPT"+ ";"+ "iptables -A "+ vmName+ " -p udp --dport 67:68 --sport 67:68 -j ACCEPT"+ ";"+ "iptables -A "+ vmName+ " -m physdev --physdev-is-bridged --physdev-in "+ vif+ " --source "+ vmIP+ " -j RETURN"+ ";"+ "iptables -A "+ vmName+ " -j DROP";
    result=executeBashScript(command);
    if (result != null) {
      s_logger.debug("Failed to program default rules for vm:" + vmName);
      return false;
    }
  }
  return true;
}
