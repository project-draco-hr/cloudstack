{
  String username=cmd.getUsername();
  Long id=cmd.getId();
  Account caller=UserContext.current().getCaller();
  Long domainId=cmd.getDomainId();
  boolean isRecursive=cmd.isRecursive();
  List<Long> permittedAccounts=new ArrayList<Long>();
  ListProjectResourcesCriteria listProjectResourcesCriteria=_accountMgr.buildACLSearchParameters(caller,domainId,isRecursive,cmd.getAccountName(),cmd.getProjectId(),permittedAccounts,cmd.listAll(),id);
  Filter searchFilter=new Filter(VpnUserVO.class,"username",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchBuilder<VpnUserVO> sb=_vpnUsersDao.createSearchBuilder();
  _accountMgr.buildACLSearchBuilder(sb,domainId,isRecursive,permittedAccounts,listProjectResourcesCriteria);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("username",sb.entity().getUsername(),SearchCriteria.Op.EQ);
  sb.and("state",sb.entity().getState(),SearchCriteria.Op.EQ);
  SearchCriteria<VpnUserVO> sc=sb.create();
  _accountMgr.buildACLSearchCriteria(sc,domainId,isRecursive,permittedAccounts,listProjectResourcesCriteria);
  sc.setParameters("state",State.Active);
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (username != null) {
    sc.setParameters("username",username);
  }
  return _vpnUsersDao.search(sc,searchFilter);
}
