{
  Account caller=CallContext.current().getCallingAccount();
  RemoteAccessVpnVO vpn=_remoteAccessVpnDao.findByPublicIpAddress(ipAddressId);
  if (vpn == null) {
    throw new InvalidParameterValueException("Unable to find your vpn: " + ipAddressId);
  }
  _accountMgr.checkAccess(caller,null,true,vpn);
  Network network=_networkMgr.getNetwork(vpn.getNetworkId());
  boolean started=false;
  try {
    boolean firewallOpened=true;
    if (openFirewall) {
      firewallOpened=_firewallMgr.applyIngressFirewallRules(vpn.getServerAddressId(),caller);
    }
    if (firewallOpened) {
      for (      RemoteAccessVPNServiceProvider element : _vpnServiceProviders) {
        if (element.startVpn(vpn)) {
          started=true;
          break;
        }
      }
    }
    return vpn;
  }
  finally {
    if (started) {
      Transaction txn=Transaction.currentTxn();
      txn.start();
      vpn.setState(RemoteAccessVpn.State.Running);
      _remoteAccessVpnDao.update(vpn.getId(),vpn);
      List<VpnUserVO> vpnUsers=_vpnUsersDao.listByAccount(vpn.getAccountId());
      for (      VpnUserVO user : vpnUsers) {
        if (user.getState() != VpnUser.State.Revoke) {
          UsageEventUtils.publishUsageEvent(EventTypes.EVENT_VPN_USER_ADD,user.getAccountId(),0,user.getId(),user.getUsername(),user.getClass().getName(),user.getUuid());
        }
      }
      txn.commit();
    }
  }
}
