{
  Account caller=UserContext.current().getCaller();
  String accountName=cmd.getAccountName();
  Long domainId=cmd.getDomainId();
  Long ipAddressId=cmd.getPublicIpId();
  if (ipAddressId != null) {
    PublicIpAddress publicIp=_networkMgr.getPublicIpAddress(ipAddressId);
    if (publicIp == null) {
      throw new InvalidParameterValueException("Unable to list remote access vpns, IP address " + ipAddressId + " not found.");
    }
 else {
      Long ipAddrAcctId=publicIp.getAllocatedToAccountId();
      if (ipAddrAcctId == null) {
        throw new InvalidParameterValueException("Unable to list remote access vpns, IP address " + ipAddressId + " is not associated with an account.");
      }
    }
    _accountMgr.checkAccess(caller,publicIp);
    List<RemoteAccessVpnVO> vpns=new ArrayList<RemoteAccessVpnVO>(1);
    RemoteAccessVpnVO remoteVpn=_remoteAccessVpnDao.findById(ipAddressId);
    if (remoteVpn != null) {
      vpns.add(remoteVpn);
    }
    return vpns;
  }
  Account owner=null;
  if (accountName != null) {
    owner=_accountDao.findAccount(accountName,domainId);
  }
  _accountMgr.checkAccess(caller,owner);
  Filter searchFilter=new Filter(RemoteAccessVpnVO.class,"serverAddress",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchCriteria<RemoteAccessVpnVO> sc=VpnSearch.create();
  sc.setParameters("accountId",owner.getId());
  sc.setParameters("state",RemoteAccessVpn.State.Running);
  DomainVO domain=_domainDao.findById(domainId);
  sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
  return _remoteAccessVpnDao.search(sc,searchFilter);
}
