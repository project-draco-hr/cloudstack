{
  AccessType accessType=null;
  Class<?>[] entityTypes=null;
  if (cmdClass != null) {
    BaseCmd cmdObj;
    try {
      cmdObj=(BaseCmd)cmdClass.newInstance();
      if (cmdObj instanceof BaseListCmd) {
        accessType=AccessType.UseEntry;
      }
 else       if (!(cmdObj instanceof BaseAsyncCreateCmd)) {
        accessType=AccessType.OperateEntry;
      }
    }
 catch (    Exception e) {
      throw new CloudRuntimeException(String.format("%s is claimed as an API command, but it cannot be instantiated",cmdClass.getName()));
    }
    APICommand at=cmdClass.getAnnotation(APICommand.class);
    entityTypes=at.entityType();
  }
  PermissionScope permissionScope=PermissionScope.ACCOUNT;
  Long policyId=getDefaultPolicyId(role);
switch (role) {
case User:
    permissionScope=PermissionScope.ACCOUNT;
  break;
case Admin:
permissionScope=PermissionScope.ALL;
break;
case DomainAdmin:
permissionScope=PermissionScope.DOMAIN;
break;
case ResourceAdmin:
permissionScope=PermissionScope.DOMAIN;
break;
}
if (entityTypes == null || entityTypes.length == 0) {
_iamSrv.addIAMPermissionToIAMPolicy(policyId,null,permissionScope.toString(),new Long(IAMPolicyPermission.PERMISSION_SCOPE_ID_CURRENT_CALLER),apiName,(accessType == null) ? null : accessType.toString(),Permission.Allow,false);
}
 else {
for (Class<?> entityType : entityTypes) {
_iamSrv.addIAMPermissionToIAMPolicy(policyId,entityType.getSimpleName(),permissionScope.toString(),new Long(IAMPolicyPermission.PERMISSION_SCOPE_ID_CURRENT_CALLER),apiName,(accessType == null) ? null : accessType.toString(),Permission.Allow,false);
}
}
}
