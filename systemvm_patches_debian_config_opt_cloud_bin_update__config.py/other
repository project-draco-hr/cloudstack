import sys
from merge import QueueFile
import logging
import subprocess
from subprocess import PIPE, STDOUT
import os
import os.path
import configure
import json
logging.basicConfig(filename='/var/log/cloud.log', level=logging.DEBUG, format='%(asctime)s %(message)s')
if (len(sys.argv) != 2):
    print '[ERROR]: Invalid usage'
    sys.exit(1)
jsonPath = '/var/cache/cloud/%s'
jsonCmdConfigPath = (jsonPath % sys.argv[1])
currentGuestNetConfig = '/etc/cloudstack/guestnetwork.json'
if (not (os.path.isfile(jsonCmdConfigPath) and os.access(jsonCmdConfigPath, os.R_OK))):
    print ("[ERROR]: You are telling me to process %s, but i can't access it" % jsonCmdConfigPath)
    sys.exit(1)
if os.path.isfile((jsonPath % 'cmd_line.json')):
    qf = QueueFile()
    qf.setFile('cmd_line.json')
    qf.load(None)
if (sys.argv[1] == 'guest_network.json'):
    if os.path.isfile(currentGuestNetConfig):
        file = open(currentGuestNetConfig)
        guestnet_dict = json.load(file)
        if (not is_guestnet_configured(guestnet_dict, ['eth1', 'eth2', 'eth3', 'eth4', 'eth5'])):
            process_file()
        else:
            print '[INFO] No need to process Guest Network.'
            finish_config()
    else:
        print '[INFO] No GuestNetwork configured yet. Configuring first one now.'
        process_file()
else:
    process_file()
