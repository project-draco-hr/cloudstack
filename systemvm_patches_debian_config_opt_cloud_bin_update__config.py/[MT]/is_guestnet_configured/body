def is_guestnet_configured(guestnet_dict, key):
    existing_key = None
    new_eth_key = None
    for (k1, v) in guestnet_dict.iteritems():
        for k2 in key:
            if ((k1 == k2) and (len(guestnet_dict[k1]) > 0)):
                existing_key = k1
        if existing_key:
            break
    if (not existing_key):
        return False
    file = open(jsonCmdConfigPath)
    new_guestnet_dict = json.load(file)
    for (k1, v) in new_guestnet_dict.iteritems():
        for k2 in key:
            if ((k1 == k2) and (len(new_guestnet_dict[k1]) > 0)):
                new_eth_key = k1
        if new_eth_key:
            break
    if (not new_eth_key):
        "\n        Why is the new guest net dictionary empty?\n          1. Might be a bug on the Java side.\n        Return True so we won't process an empty file. However, we have to investigate it!\n        "
        return True
    old_eth = guestnet_dict[existing_key][0]
    new_eth = new_guestnet_dict[new_eth_key][0]
    new_mac = new_eth['mac_address'].encode('utf-8')
    old_mac = old_eth['mac_address'].encode('utf-8')
    new_ip = new_eth['router_guest_ip'].encode('utf-8')
    old_ip = old_eth['router_guest_ip'].encode('utf-8')
    if ((new_mac == old_mac) and (new_ip == old_ip)):
        print '[WARN] Guest Network already configured. Will skip the file to avoid RTNETLINK errors.'
        return True
    return False
