{
  UserVmResponse userVmResponse=new UserVmResponse();
  if (userVm.getHypervisorType() != null) {
    userVmResponse.setHypervisor(userVm.getHypervisorType().toString());
  }
  userVmResponse.setId(userVm.getUuid());
  userVmResponse.setName(userVm.getName());
  userVmResponse.setDisplayName(userVm.getDisplayName());
  if (userVm.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {
    userVmResponse.setProjectId(userVm.getProjectUuid());
    userVmResponse.setProjectName(userVm.getProjectName());
  }
 else {
    userVmResponse.setAccountName(userVm.getAccountName());
  }
  userVmResponse.setDomainId(userVm.getDomainUuid());
  userVmResponse.setDomainName(userVm.getDomainName());
  userVmResponse.setCreated(userVm.getCreated());
  if (userVm.getState() != null) {
    userVmResponse.setState(userVm.getState().toString());
  }
  userVmResponse.setHaEnable(userVm.isHaEnabled());
  if (details.contains(VMDetails.all) || details.contains(VMDetails.group)) {
    userVmResponse.setGroupId(userVm.getInstanceGroupUuid());
    userVmResponse.setGroup(userVm.getInstanceGroupName());
  }
  userVmResponse.setZoneId(userVm.getDataCenterUuid());
  userVmResponse.setZoneName(userVm.getDataCenterName());
  if ((caller == null) || (caller.getType() == Account.ACCOUNT_TYPE_ADMIN)) {
    userVmResponse.setInstanceName(userVm.getInstanceName());
    userVmResponse.setHostId(userVm.getHostUuid());
    userVmResponse.setHostName(userVm.getHostName());
  }
  if (details.contains(VMDetails.all) || details.contains(VMDetails.tmpl)) {
    userVmResponse.setTemplateId(userVm.getTemplateUuid());
    userVmResponse.setTemplateName(userVm.getTemplateName());
    userVmResponse.setTemplateDisplayText(userVm.getTemplateDisplayText());
    userVmResponse.setPasswordEnabled(userVm.isPasswordEnabled());
  }
  if (details.contains(VMDetails.all) || details.contains(VMDetails.iso)) {
    userVmResponse.setIsoId(userVm.getIsoUuid());
    userVmResponse.setIsoName(userVm.getIsoName());
    userVmResponse.setIsoDisplayText(userVm.getIsoDisplayText());
  }
  if (details.contains(VMDetails.all) || details.contains(VMDetails.servoff)) {
    userVmResponse.setServiceOfferingId(userVm.getServiceOfferingUuid());
    userVmResponse.setServiceOfferingName(userVm.getServiceOfferingName());
    userVmResponse.setCpuNumber(userVm.getCpu());
    userVmResponse.setCpuSpeed(userVm.getSpeed());
    userVmResponse.setMemory(userVm.getRamSize());
  }
  userVmResponse.setGuestOsId(userVm.getGuestOsUuid());
  if (details.contains(VMDetails.all) || details.contains(VMDetails.volume)) {
    userVmResponse.setRootDeviceId(userVm.getVolumeDeviceId());
    if (userVm.getVolumeType() != null) {
      userVmResponse.setRootDeviceType(userVm.getVolumeType().toString());
    }
  }
  userVmResponse.setPassword(userVm.getPassword());
  userVmResponse.setJobId(userVm.getJobUuid());
  userVmResponse.setJobStatus(userVm.getJobStatus());
  userVmResponse.setPublicIpId(userVm.getPublicIpUuid());
  userVmResponse.setPublicIp(userVm.getPublicIpAddress());
  userVmResponse.setKeyPairName(userVm.getKeypairName());
  if (details.contains(VMDetails.all) || details.contains(VMDetails.stats)) {
    DecimalFormat decimalFormat=new DecimalFormat("#.##");
    String cpuUsed=null;
    VmStats vmStats=ApiDBUtils.getVmStatistics(userVm.getId());
    if (vmStats != null) {
      float cpuUtil=(float)vmStats.getCPUUtilization();
      cpuUsed=decimalFormat.format(cpuUtil) + "%";
      userVmResponse.setCpuUsed(cpuUsed);
      Double networkKbRead=Double.valueOf(vmStats.getNetworkReadKBs());
      userVmResponse.setNetworkKbsRead(networkKbRead.longValue());
      Double networkKbWrite=Double.valueOf(vmStats.getNetworkWriteKBs());
      userVmResponse.setNetworkKbsWrite(networkKbWrite.longValue());
    }
  }
  if (details.contains(VMDetails.all) || details.contains(VMDetails.secgrp)) {
    Long securityGroupId=userVm.getSecurityGroupId();
    if (securityGroupId != null && securityGroupId.longValue() != 0) {
      SecurityGroupResponse resp=new SecurityGroupResponse();
      resp.setId(userVm.getSecurityGroupUuid());
      resp.setName(userVm.getSecurityGroupName());
      resp.setDescription(userVm.getSecurityGroupDescription());
      resp.setObjectName("securitygroup");
      if (userVm.getAccountType() == Account.ACCOUNT_TYPE_PROJECT) {
        resp.setProjectId(userVm.getProjectUuid());
        resp.setProjectName(userVm.getProjectName());
      }
 else {
        resp.setAccountName(userVm.getAccountName());
      }
      userVmResponse.addSecurityGroup(resp);
    }
  }
  if (details.contains(VMDetails.all) || details.contains(VMDetails.nics)) {
    long nic_id=userVm.getNicId();
    if (nic_id > 0) {
      NicResponse nicResponse=new NicResponse();
      nicResponse.setId(userVm.getNicUuid());
      nicResponse.setIpaddress(userVm.getIpAddress());
      nicResponse.setGateway(userVm.getGateway());
      nicResponse.setNetmask(userVm.getNetmask());
      nicResponse.setNetworkid(userVm.getNetworkUuid());
      nicResponse.setMacAddress(userVm.getMacAddress());
      nicResponse.setIp6Address(userVm.getIp6Address());
      nicResponse.setIp6Gateway(userVm.getIp6Gateway());
      nicResponse.setIp6Cidr(userVm.getIp6Cidr());
      if (userVm.getBroadcastUri() != null) {
        nicResponse.setBroadcastUri(userVm.getBroadcastUri().toString());
      }
      if (userVm.getIsolationUri() != null) {
        nicResponse.setIsolationUri(userVm.getIsolationUri().toString());
      }
      if (userVm.getTrafficType() != null) {
        nicResponse.setTrafficType(userVm.getTrafficType().toString());
      }
      if (userVm.getGuestType() != null) {
        nicResponse.setType(userVm.getGuestType().toString());
      }
      nicResponse.setIsDefault(userVm.isDefaultNic());
      nicResponse.setObjectName("nic");
      userVmResponse.addNic(nicResponse);
    }
  }
  long tag_id=userVm.getTagId();
  if (tag_id > 0) {
    ResourceTagJoinVO vtag=ApiDBUtils.findResourceTagViewById(tag_id);
    if (vtag != null) {
      userVmResponse.addTag(ApiDBUtils.newResourceTagResponse(vtag,false));
    }
  }
  userVmResponse.setObjectName(objectName);
  return userVmResponse;
}
