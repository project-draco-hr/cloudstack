@attr(tags=['advanced', 'selfservice'])
def test_04_network_without_domain_CS19303(self):
    '\n        @Desc: Errors editing a network without a network domain specified\n        @Steps:\n        Step1: Create a network offering with SourceNAT,staticNAT and dhcp services\n        Step2: Verify the network offering creation\n        Step3: Create an isolated network with the offering created in step1 and without a network domain specified\n        Step4: Verify the network creation\n        Step5: Edit the network and verify that updating network should not error out\n        '
    self.debug('Creating n/w offering with SourceNat,StaticNat and DHCP services in VR & conserve mode:off')
    self.network_offering = NetworkOffering.create(self.api_client, self.services['network_offering_withoutDNS'], conservemode=False)
    self.assertIsNotNone(self.network_offering, 'Failed to create NO with Sourcenat,staticnat and dhcp only services')
    self.cleanup.append(self.network_offering)
    self.debug(('Created n/w offering with ID: %s' % self.network_offering.id))
    self.network_offering.update(self.apiclient, state='Enabled')
    self.debug(('Creating nw without dns service using no id: %s' % self.network_offering.id))
    self.network = Network.create(self.apiclient, self.services['network'], accountid=self.account.name, domainid=self.account.domainid, networkofferingid=self.network_offering.id, zoneid=self.zone.id)
    self.assertIsNotNone(self.network, 'Failed to create network without DNS service and network domain')
    self.debug(('Created network with NO: %s' % self.network_offering.id))
    try:
        self.network_update = self.network.update(self.apiclient, name='NW without nw domain')
        self.debug('Success:Network update has been successful without network domain')
    except Exception as e:
        self.fail(('Error editing a network without network domain specified: %s' % e))
    return
