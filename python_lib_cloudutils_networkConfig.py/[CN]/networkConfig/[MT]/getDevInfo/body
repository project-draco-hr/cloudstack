@staticmethod
def getDevInfo(dev):
    if (not networkConfig.isNetworkDev(dev)):
        logging.debug((('dev: ' + dev) + ' is not a network device'))
        raise CloudInternalException((('dev: ' + dev) + ' is not a network device'))
    netmask = None
    ipAddr = None
    macAddr = None
    cmd = bash(('ifconfig ' + dev))
    if (not cmd.isSuccess()):
        logging.debug('Failed to get address from ifconfig')
        raise CloudInternalException(('Failed to get network info by ifconfig %s' % dev))
    for line in cmd.getLines():
        if (line.find('HWaddr') != (-1)):
            macAddr = line.split('HWaddr ')[1].strip(' ')
        elif (line.find('inet ') != (-1)):
            m = re.search('addr:(.*)\\ *Bcast:(.*)\\ *Mask:(.*)', line)
            if (m is not None):
                ipAddr = m.group(1).rstrip(' ')
                netmask = m.group(3).rstrip(' ')
    if networkConfig.isBridgePort(dev):
        type = 'brport'
    elif networkConfig.isBridge(dev):
        type = 'bridge'
    else:
        type = 'dev'
    return networkConfig.devInfo(macAddr, ipAddr, netmask, None, type, dev)
