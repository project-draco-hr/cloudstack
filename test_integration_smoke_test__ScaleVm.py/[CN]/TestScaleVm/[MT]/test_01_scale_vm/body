@attr(tags=['advanced', 'basic', 'multicluster', 'storagemotion', 'xenserver'])
def test_01_scale_vm(self):
    'Test scale virtual machine \n        '
    self.debug(('Scaling VM-ID: %s to service offering: %s' % (self.virtual_machine.id, self.big_offering.id)))
    cmd = scaleVirtualMachine.scaleVirtualMachineCmd()
    cmd.serviceofferingid = self.big_offering.id
    cmd.id = self.virtual_machine.id
    self.apiclient.scaleVirtualMachine(cmd)
    list_vm_response = list_virtual_machines(self.apiclient, id=self.virtual_machine.id)
    self.assertEqual(isinstance(list_vm_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(list_vm_response, None, 'Check virtual machine is listVirtualMachines')
    vm_response = list_vm_response[0]
    self.assertEqual(vm_response.id, self.virtual_machine.id, 'Check virtual machine ID of scaled VM')
    self.assertEqual(vm_response.serviceofferingid, self.big_offering.id, 'Check service offering of the VM')
    self.assertEqual(vm_response.state, 'Running', 'Check the state of VM')
    return
