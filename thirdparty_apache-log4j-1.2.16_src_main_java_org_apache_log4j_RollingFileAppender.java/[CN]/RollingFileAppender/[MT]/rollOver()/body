{
  File target;
  File file;
  if (qw != null) {
    long size=((CountingQuietWriter)qw).getCount();
    LogLog.debug("rolling over count=" + size);
    nextRollover=size + maxFileSize;
  }
  LogLog.debug("maxBackupIndex=" + maxBackupIndex);
  boolean renameSucceeded=true;
  if (maxBackupIndex > 0) {
    file=new File(fileName + '.' + maxBackupIndex);
    if (file.exists())     renameSucceeded=file.delete();
    for (int i=maxBackupIndex - 1; i >= 1 && renameSucceeded; i--) {
      file=new File(fileName + "." + i);
      if (file.exists()) {
        target=new File(fileName + '.' + (i + 1));
        LogLog.debug("Renaming file " + file + " to "+ target);
        renameSucceeded=file.renameTo(target);
      }
    }
    if (renameSucceeded) {
      target=new File(fileName + "." + 1);
      this.closeFile();
      file=new File(fileName);
      LogLog.debug("Renaming file " + file + " to "+ target);
      renameSucceeded=file.renameTo(target);
      if (!renameSucceeded) {
        try {
          this.setFile(fileName,true,bufferedIO,bufferSize);
        }
 catch (        IOException e) {
          if (e instanceof InterruptedIOException) {
            Thread.currentThread().interrupt();
          }
          LogLog.error("setFile(" + fileName + ", true) call failed.",e);
        }
      }
    }
  }
  if (renameSucceeded) {
    try {
      this.setFile(fileName,false,bufferedIO,bufferSize);
      nextRollover=0;
    }
 catch (    IOException e) {
      if (e instanceof InterruptedIOException) {
        Thread.currentThread().interrupt();
      }
      LogLog.error("setFile(" + fileName + ", false) call failed.",e);
    }
  }
}
