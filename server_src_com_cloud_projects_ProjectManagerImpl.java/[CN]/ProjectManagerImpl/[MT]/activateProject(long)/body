{
  Account caller=CallContext.current().getCallingAccount();
  final ProjectVO project=getProject(projectId);
  if (project == null) {
    InvalidParameterValueException ex=new InvalidParameterValueException("Unable to find project with specified id");
    ex.addProxyObject(String.valueOf(projectId),"projectId");
    throw ex;
  }
  _accountMgr.checkAccess(caller,AccessType.ModifyProject,true,_accountMgr.getAccount(project.getProjectAccountId()));
  Project.State currentState=project.getState();
  if (currentState == State.Active) {
    s_logger.debug("The project id=" + projectId + " is already active, no need to activate it again");
    return project;
  }
  if (currentState != State.Suspended) {
    throw new InvalidParameterValueException("Can't activate the project in " + currentState + " state");
  }
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      project.setState(Project.State.Active);
      _projectDao.update(projectId,project);
      _accountMgr.enableAccount(project.getProjectAccountId());
    }
  }
);
  return _projectDao.findById(projectId);
}
