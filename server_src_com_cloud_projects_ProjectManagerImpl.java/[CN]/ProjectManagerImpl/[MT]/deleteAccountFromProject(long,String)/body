{
  Account caller=UserContext.current().getCaller();
  Project project=getProject(projectId);
  if (project == null) {
    throw new InvalidParameterValueException("Unable to find the project id=" + projectId);
  }
  Account account=_accountMgr.getActiveAccountByName(accountName,project.getDomainId());
  if (account == null) {
    throw new InvalidParameterValueException("Unable to find account name=" + accountName + " in domain id="+ project.getDomainId());
  }
  _accountMgr.checkAccess(caller,_domainDao.findById(project.getProjectDomainId()),AccessType.ModifyProject);
  ProjectAccount projectAccount=_projectAccountDao.findByProjectIdAccountId(projectId,account.getId());
  if (projectAccount == null) {
    throw new InvalidParameterValueException("Account " + accountName + " is not assigned to the project id="+ projectId);
  }
  if (projectAccount.getAccountRole() == Role.Owner) {
    throw new InvalidParameterValueException("Unable to delete account " + accountName + " from the project id="+ projectId+ " as the account is the owner of the project");
  }
  return deleteAccountFromProject(projectId,account.getId());
}
