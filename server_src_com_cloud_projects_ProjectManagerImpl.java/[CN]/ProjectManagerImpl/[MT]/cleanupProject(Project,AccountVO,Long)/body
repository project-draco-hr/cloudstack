{
  boolean result=true;
  AccountVO account=_accountDao.findById(project.getProjectAccountId());
  s_logger.debug("Deleting projects " + project + " internal account id="+ account.getId()+ " as a part of project cleanup...");
  result=result && _accountMgr.deleteAccount(account,callerUserId,caller);
  if (result) {
    result=Transaction.execute(new TransactionCallback<Boolean>(){
      @Override public Boolean doInTransaction(      TransactionStatus status){
        boolean result=true;
        s_logger.debug("Unassigning all accounts from project " + project + " as a part of project cleanup...");
        List<? extends ProjectAccount> projectAccounts=_projectAccountDao.listByProjectId(project.getId());
        for (        ProjectAccount projectAccount : projectAccounts) {
          result=result && unassignAccountFromProject(projectAccount.getProjectId(),projectAccount.getAccountId());
        }
        s_logger.debug("Removing all invitations for the project " + project + " as a part of project cleanup...");
        _projectInvitationDao.cleanupInvitations(project.getId());
        return result;
      }
    }
);
    if (result) {
      s_logger.debug("Accounts are unassign successfully from project " + project + " as a part of project cleanup...");
    }
  }
 else {
    s_logger.warn("Failed to cleanup project's internal account");
  }
  return result;
}
