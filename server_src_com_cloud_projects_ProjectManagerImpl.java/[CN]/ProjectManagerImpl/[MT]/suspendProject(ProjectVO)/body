{
  s_logger.debug("Marking project " + project + " with state "+ State.Suspended+ " as a part of project suspend...");
  project.setState(State.Suspended);
  boolean updateResult=_projectDao.update(project.getId(),project);
  if (updateResult) {
    long projectAccountId=project.getProjectAccountId();
    if (!_accountMgr.disableAccount(projectAccountId)) {
      s_logger.warn("Failed to suspend all project's " + project + " resources; the resources will be suspended later by background thread");
    }
  }
 else {
    throw new CloudRuntimeException("Failed to mark the project " + project + " with state "+ State.Suspended);
  }
  return true;
}
