{
  Account caller=UserContext.current().getCaller();
  Account owner=caller;
  if ((accountName != null && domainId == null) || (domainId != null && accountName == null)) {
    throw new InvalidParameterValueException("Account name and domain id must be specified together");
  }
  if (accountName != null) {
    owner=_accountMgr.finalizeOwner(caller,accountName,domainId,null);
  }
  if (_projectDao.findByNameAndDomain(name,owner.getDomainId()) != null) {
    throw new InvalidParameterValueException("Project with name " + name + " already exists in domain id="+ owner.getDomainId());
  }
  _resourceLimitMgr.checkResourceLimit(owner,ResourceType.project);
  Transaction txn=Transaction.currentTxn();
  txn.start();
  StringBuilder acctNm=new StringBuilder("PrjAcct-");
  acctNm.append(name).append("-").append(owner.getDomainId());
  Account projectAccount=_accountMgr.createAccount(acctNm.toString(),Account.ACCOUNT_TYPE_PROJECT,domainId,null);
  Project project=_projectDao.persist(new ProjectVO(name,displayText,owner.getDomainId(),projectAccount.getId()));
  assignAccountToProject(project,owner.getId(),ProjectAccount.Role.Owner);
  if (project != null) {
    UserContext.current().setEventDetails("Project id=" + project.getId());
  }
  _resourceLimitMgr.incrementResourceCount(owner.getAccountId(),ResourceType.project);
  txn.commit();
  return project;
}
