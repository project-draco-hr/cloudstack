{
  Long domainId=caller.getDomainId();
  if (!_accountMgr.isRootAdmin(caller.getAccountId())) {
    if (caller.getDomainId() != domainId.longValue()) {
      throw new PermissionDeniedException("Can't create acl role in domain " + domainId + ", permission denied");
    }
  }
  AclPolicy ro=_aclPolicyDao.findByName(domainId,aclPolicyName);
  if (ro != null) {
    throw new InvalidParameterValueException("Unable to create acl policy with name " + aclPolicyName + " already exisits for domain "+ domainId);
  }
  final long account_id=caller.getAccountId();
  final long domain_id=domainId;
  AclPolicy role=Transaction.execute(new TransactionCallback<AclPolicy>(){
    @Override public AclPolicy doInTransaction(    TransactionStatus status){
      AclPolicyVO rvo=new AclPolicyVO(aclPolicyName,description);
      rvo.setAccountId(account_id);
      rvo.setDomainId(domain_id);
      AclPolicy role=_aclPolicyDao.persist(rvo);
      if (parentPolicyId != null) {
        List<AclPolicyPermissionVO> perms=_policyPermissionDao.listByPolicy(parentPolicyId);
        if (perms != null) {
          for (          AclPolicyPermissionVO perm : perms) {
            perm.setAclPolicyId(role.getId());
            _policyPermissionDao.persist(perm);
          }
        }
      }
      return role;
    }
  }
);
  return role;
}
