{
  Account caller=CallContext.current().getCallingAccount();
  AclPolicy policy=_aclPolicyDao.findById(aclPolicyId);
  if (policy == null) {
    throw new InvalidParameterValueException("Unable to find acl policy: " + aclPolicyId + "; failed to add permission to policy.");
  }
  _accountMgr.checkAccess(caller,null,true,policy);
  Class entityClass=entityClassMap.get(entityType);
  if (entityClass == null) {
    throw new InvalidParameterValueException("Entity type " + entityType + " permission granting is not supported yet");
  }
  if (scope == PermissionScope.RESOURCE && scopeId != null) {
    ControlledEntity entity=(ControlledEntity)_entityMgr.findById(entityClass,scopeId);
    if (entity == null) {
      throw new InvalidParameterValueException("Unable to find entity " + entityType + " by id: "+ scopeId);
    }
    _accountMgr.checkAccess(caller,null,true,entity);
  }
  AclPolicyPermissionVO permit=_policyPermissionDao.findByPolicyAndEntity(aclPolicyId,entityType,scope,scopeId,action,perm);
  if (permit == null) {
    Class<?> cmdClass=_apiServer.getCmdClass(action);
    AccessType accessType=null;
    if (BaseListCmd.class.isAssignableFrom(cmdClass)) {
      accessType=AccessType.ListEntry;
    }
    permit=new AclPolicyPermissionVO(aclPolicyId,action,entityType,accessType,scope,scopeId,perm);
    _policyPermissionDao.persist(permit);
  }
  return policy;
}
