{
  CloudstackPlugin cSp=new CloudstackPlugin(c);
  Map<String,String> oldVmStats=null;
  Map<String,String> newVmStats=null;
  VmStatsEntry stats=new VmStatsEntry();
  try {
    if (vmStats.containsKey(vmName)) {
      oldVmStats=new HashMap<String,String>();
      oldVmStats.putAll(vmStats.get(vmName));
    }
    newVmStats=cSp.ovsDomUStats(vmName);
  }
 catch (  Ovm3ResourceException e) {
    LOGGER.info("Unable to retrieve stats from " + vmName,e);
    return stats;
  }
  if (oldVmStats == null) {
    LOGGER.debug("No old stats retrieved stats from " + vmName);
    stats.setNumCPUs(1);
    stats.setNetworkReadKBs(0);
    stats.setNetworkWriteKBs(0);
    stats.setDiskReadKBs(0);
    stats.setDiskWriteKBs(0);
    stats.setDiskReadIOs(0);
    stats.setDiskWriteIOs(0);
    stats.setCPUUtilization(0);
    stats.setEntityType("vm");
  }
 else {
    LOGGER.debug("Retrieved new stats from " + vmName);
    int cpus=Integer.parseInt(newVmStats.get("vcpus"));
    stats.setNumCPUs(cpus);
    stats.setNetworkReadKBs(doubleMin(newVmStats.get("rx_bytes"),oldVmStats.get("rx_bytes")));
    stats.setNetworkWriteKBs(doubleMin(newVmStats.get("tx_bytes"),oldVmStats.get("tx_bytes")));
    stats.setDiskReadKBs(doubleMin(newVmStats.get("rd_bytes"),oldVmStats.get("rd_bytes")));
    stats.setDiskWriteKBs(doubleMin(newVmStats.get("rw_bytes"),oldVmStats.get("rw_bytes")));
    stats.setDiskReadIOs(doubleMin(newVmStats.get("rd_ops"),oldVmStats.get("rd_ops")));
    stats.setDiskWriteIOs(doubleMin(newVmStats.get("rw_ops"),oldVmStats.get("rw_ops")));
    Double dCpu=doubleMin(newVmStats.get("cputime"),oldVmStats.get("cputime"));
    Double dTime=doubleMin(newVmStats.get("uptime"),oldVmStats.get("uptime"));
    Double cpupct=dCpu / dTime * 100 * cpus;
    stats.setCPUUtilization(cpupct);
    stats.setEntityType("vm");
  }
  ((ConcurrentHashMap<String,Map<String,String>>)vmStats).put(vmName,newVmStats);
  return stats;
}
