{
  GenericQueryBuilder<UcsBladeVO,UcsBladeVO> q=GenericQueryBuilder.create(UcsBladeVO.class);
  q.addAnd(q.getEntity().getUcsManagerId(),Op.EQ,mgr.getId());
  List<UcsBladeVO> pblades=q.list();
  if (pblades.isEmpty()) {
    return;
  }
  Map<String,UcsBladeVO> previousBlades=new HashMap<String,UcsBladeVO>(pblades.size());
  for (  UcsBladeVO b : pblades) {
    previousBlades.put(b.getDn(),b);
  }
  List<ComputeBlade> cblades=listBlades(mgr.getId());
  Map<String,ComputeBlade> currentBlades=new HashMap<String,ComputeBlade>(cblades.size());
  for (  ComputeBlade c : cblades) {
    currentBlades.put(c.getDn(),c);
  }
  discoverNewBlades(previousBlades,currentBlades,mgr);
  decommissionFadedBlade(previousBlades,currentBlades);
}
