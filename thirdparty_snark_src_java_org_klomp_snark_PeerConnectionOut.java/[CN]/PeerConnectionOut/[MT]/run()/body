{
  try {
    while (!quit) {
      Message m=null;
      PeerState state=null;
synchronized (sendQueue) {
        while (!quit && sendQueue.isEmpty()) {
          try {
            dout.flush();
            sendQueue.wait();
          }
 catch (          InterruptedException ie) {
          }
        }
        state=peer.state;
        if (!quit && state != null) {
          Iterator it=sendQueue.iterator();
          while (m == null && it.hasNext()) {
            Message nm=(Message)it.next();
            if (nm.type == Message.PIECE) {
              if (state.choking) {
                it.remove();
              }
              nm=null;
            }
 else             if (nm.type == Message.REQUEST && state.choked) {
              it.remove();
              nm=null;
            }
            if (m == null && nm != null) {
              m=nm;
              it.remove();
            }
          }
          if (m == null && sendQueue.size() > 0) {
            m=sendQueue.remove(0);
          }
        }
      }
      if (m != null) {
        log.log(Level.ALL,"Send " + peer + ": "+ m);
        m.sendMessage(dout);
        if (m.type == Message.CHOKE) {
          removeMessage(Message.PIECE);
        }
        if (m.type == Message.PIECE) {
          state.uploaded(m.len);
        }
        m=null;
      }
    }
  }
 catch (  IOException ioe) {
  }
catch (  Throwable t) {
    log.log(Level.SEVERE,peer + " failed",t);
  }
 finally {
    quit=true;
    peer.disconnect();
  }
}
