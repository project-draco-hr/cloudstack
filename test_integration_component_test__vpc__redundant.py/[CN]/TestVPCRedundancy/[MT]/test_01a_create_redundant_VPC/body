@attr(tags=['advanced', 'intervlan'], required_hardware='true')
def test_01a_create_redundant_VPC(self):
    ' Create a redundant vpc with two networks with two vms in each network '
    self.debug('Starting est 1a')
    self.query_routers()
    self.networks.append(self.create_network(self.services['network_offering'], '10.1.1.1'))
    self.networks.append(self.create_network(self.services['network_offering_no_lb'], '10.1.2.1'))
    self.check_master_status(2)
    self.add_nat_rules()
    self.do_vpc_test(False)
    self.stop_router('MASTER')
    time.sleep(30)
    self.check_master_status(1)
    self.do_vpc_test(False)
    self.delete_nat_rules()
    self.check_master_status(1)
    self.do_vpc_test(True)
    self.start_router()
    self.add_nat_rules()
    self.check_master_status(2)
    self.do_vpc_test(False)
