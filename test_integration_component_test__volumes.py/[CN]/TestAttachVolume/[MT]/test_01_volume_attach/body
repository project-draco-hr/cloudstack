@attr(tags=['advanced', 'advancedns', 'needle'])
def test_01_volume_attach(self):
    'Test Attach volumes (max capacity)\n        '
    try:
        for i in range(self.max_data_volumes):
            volume = Volume.create(self.apiclient, self.services['volume'], zoneid=self.zone.id, account=self.account.name, domainid=self.account.domainid, diskofferingid=self.disk_offering.id)
            list_volume_response = Volume.list(self.apiclient, id=volume.id)
            self.assertNotEqual(list_volume_response, None, 'Check if volume exists in ListVolumes')
            self.virtual_machine.attach_volume(self.apiclient, volume)
        list_volume_response = Volume.list(self.apiclient, virtualmachineid=self.virtual_machine.id, type='DATADISK', listall=True)
        self.assertNotEqual(list_volume_response, None, 'Check if volume exists in ListVolumes')
        self.assertEqual(isinstance(list_volume_response, list), True, 'Check list volumes response for valid list')
        self.assertEqual(len(list_volume_response), self.max_data_volumes, ('Volumes attached to the VM %s. Expected %s' % (len(list_volume_response), self.max_data_volumes)))
        self.debug(('Rebooting the VM: %s' % self.virtual_machine.id))
        self.virtual_machine.reboot(self.apiclient)
        vm_response = VirtualMachine.list(self.apiclient, id=self.virtual_machine.id)
        self.assertNotEqual(len(vm_response), 0, 'Check VMs available in List VMs response')
        self.assertEqual(isinstance(vm_response, list), True, 'Check list VM response for valid list')
        vm = vm_response[0]
        self.assertEqual(vm.state, 'Running', 'Check the state of VM')
        self.virtual_machine.stop(self.apiclient)
        self.virtual_machine.start(self.apiclient)
        time.sleep(self.services['sleep'])
        vm_response = VirtualMachine.list(self.apiclient, id=self.virtual_machine.id)
        self.assertEqual(isinstance(vm_response, list), True, 'Check list VM response for valid list')
        self.assertNotEqual(len(vm_response), 0, 'Check VMs available in List VMs response')
        vm = vm_response[0]
        self.assertEqual(vm.state, 'Running', 'Check the state of VM')
    except Exception as e:
        self.fail(('Exception occured: %s' % e))
    return
