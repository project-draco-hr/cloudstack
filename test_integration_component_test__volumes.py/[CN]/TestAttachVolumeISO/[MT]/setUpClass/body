@classmethod
def setUpClass(cls):
    cls.testClient = super(TestAttachVolumeISO, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.services = Services().services
    cls.domain = get_domain(cls.api_client)
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.pod = get_pod(cls.api_client, cls.zone.id)
    cls.services['mode'] = cls.zone.networktype
    cls.hypervisor = cls.testClient.getHypervisorInfo()
    if (cls.hypervisor.lower() == 'lxc'):
        if (not find_storage_pool_type(cls.api_client, storagetype='rbd')):
            raise unittest.SkipTest('RBD storage type is required for data volumes for LXC')
    cls.disk_offering = DiskOffering.create(cls.api_client, cls.services['disk_offering'])
    template = get_template(cls.api_client, cls.zone.id, cls.services['ostype'])
    cls.services['zoneid'] = cls.zone.id
    cls.services['virtual_machine']['zoneid'] = cls.zone.id
    cls.services['iso']['zoneid'] = cls.zone.id
    cls.services['virtual_machine']['template'] = template.id
    listHost = Host.list(cls.api_client, type='Routing', zoneid=cls.zone.id, podid=cls.pod.id)
    ver = listHost[0].hypervisorversion
    hv = listHost[0].hypervisor
    cmd = listHypervisorCapabilities.listHypervisorCapabilitiesCmd()
    cmd.hypervisor = hv
    res = cls.api_client.listHypervisorCapabilities(cmd)
    cls.debug('Hypervisor Capabilities: {}'.format(res))
    for i in range(len(res)):
        if (res[i].hypervisorversion == ver):
            break
    cls.max_data_volumes = int(res[i].maxdatavolumeslimit)
    cls.debug('max data volumes:{}'.format(cls.max_data_volumes))
    cls.services['volume']['max'] = cls.max_data_volumes
    cls.account = Account.create(cls.api_client, cls.services['account'], domainid=cls.domain.id)
    cls.service_offering = ServiceOffering.create(cls.api_client, cls.services['service_offering'])
    cls.virtual_machine = VirtualMachine.create(cls.api_client, cls.services['virtual_machine'], accountid=cls.account.name, domainid=cls.account.domainid, serviceofferingid=cls.service_offering.id)
    cls._cleanup = [cls.service_offering, cls.disk_offering, cls.account]
