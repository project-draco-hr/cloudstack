@attr(tags=['advanced', 'configuration', 'advancedns', 'simulator', 'api', 'basic', 'eip', 'sg'])
def test_deployVmWithCustomDisk(self):
    'Test custom disk sizes beyond range\n        '
    config = Configurations.list(self.apiclient, name='custom.diskoffering.size.min')
    self.assertEqual(isinstance(config, list), True, 'custom.diskoffering.size.min should be present in global config')
    min_size = int(config[0].value)
    self.debug(('custom.diskoffering.size.min: %s' % min_size))
    config = Configurations.list(self.apiclient, name='custom.diskoffering.size.max')
    self.assertEqual(isinstance(config, list), True, 'custom.diskoffering.size.min should be present in global config')
    max_size = int(config[0].value)
    self.debug(('custom.diskoffering.size.max: %s' % max_size))
    self.debug('Creating a volume with size less than min cust disk size')
    self.services['custom_volume']['customdisksize'] = (min_size - 1)
    self.services['custom_volume']['zoneid'] = self.zone.id
    with self.assertRaises(Exception):
        Volume.create_custom_disk(self.apiclient, self.services['custom_volume'], account=self.account.account.name, domainid=self.account.account.domainid, diskofferingid=self.disk_offering.id)
    self.debug('Create volume failed!')
    self.debug('Creating a volume with size more than max cust disk size')
    self.services['custom_volume']['customdisksize'] = (max_size + 1)
    with self.assertRaises(Exception):
        Volume.create_custom_disk(self.apiclient, self.services['custom_volume'], account=self.account.account.name, domainid=self.account.account.domainid, diskofferingid=self.disk_offering.id)
    self.debug('Create volume failed!')
    self.debug(('Creating a volume with size more than min cust disk ' + 'but less than max cust disk size'))
    self.services['custom_volume']['customdisksize'] = (min_size + 1)
    try:
        Volume.create_custom_disk(self.apiclient, self.services['custom_volume'], account=self.account.account.name, domainid=self.account.account.domainid, diskofferingid=self.disk_offering.id)
        self.debug('Create volume of cust disk size succeeded')
    except Exception as e:
        self.fail(('Create volume failed with exception: %s' % e))
    return
