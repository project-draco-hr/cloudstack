{
  assert(vmdkDatastorePathChain != null);
  assert(vmdkDatastorePathChain.length >= 1);
  if (controllerKey < 0)   controllerKey=vmMo.getIDEDeviceControllerKey();
  VirtualDisk disk=new VirtualDisk();
  VirtualDiskFlatVer2BackingInfo backingInfo=new VirtualDiskFlatVer2BackingInfo();
  backingInfo.setDatastore(morDs);
  backingInfo.setFileName(vmdkDatastorePathChain[0]);
  backingInfo.setDiskMode(VirtualDiskMode.persistent.toString());
  if (vmdkDatastorePathChain.length > 1) {
    String[] parentDisks=new String[vmdkDatastorePathChain.length - 1];
    for (int i=0; i < vmdkDatastorePathChain.length - 1; i++)     parentDisks[i]=vmdkDatastorePathChain[i + 1];
    setParentBackingInfo(backingInfo,morDs,parentDisks);
  }
  disk.setBacking(backingInfo);
  if (deviceNumber < 0)   deviceNumber=vmMo.getNextDeviceNumber(controllerKey);
  disk.setControllerKey(controllerKey);
  disk.setKey(-contextNumber);
  disk.setUnitNumber(deviceNumber);
  VirtualDeviceConnectInfo connectInfo=new VirtualDeviceConnectInfo();
  connectInfo.setConnected(true);
  connectInfo.setStartConnected(true);
  disk.setConnectable(connectInfo);
  return disk;
}
