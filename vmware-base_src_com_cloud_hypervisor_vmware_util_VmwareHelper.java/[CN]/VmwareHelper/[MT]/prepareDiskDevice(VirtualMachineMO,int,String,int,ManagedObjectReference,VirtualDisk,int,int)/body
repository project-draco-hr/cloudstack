{
  assert(templateDisk != null);
  VirtualDeviceBackingInfo parentBacking=templateDisk.getBacking();
  assert(parentBacking != null);
  VirtualDisk disk=new VirtualDisk();
  if (parentBacking instanceof VirtualDiskFlatVer1BackingInfo) {
    VirtualDiskFlatVer1BackingInfo backingInfo=new VirtualDiskFlatVer1BackingInfo();
    backingInfo.setDiskMode(((VirtualDiskFlatVer1BackingInfo)parentBacking).getDiskMode());
    backingInfo.setDatastore(morDs);
    backingInfo.setFileName(vmdkDatastorePath);
    backingInfo.setParent((VirtualDiskFlatVer1BackingInfo)parentBacking);
    disk.setBacking(backingInfo);
  }
 else   if (parentBacking instanceof VirtualDiskFlatVer2BackingInfo) {
    VirtualDiskFlatVer2BackingInfo backingInfo=new VirtualDiskFlatVer2BackingInfo();
    backingInfo.setDiskMode(((VirtualDiskFlatVer2BackingInfo)parentBacking).getDiskMode());
    backingInfo.setDatastore(morDs);
    backingInfo.setFileName(vmdkDatastorePath);
    backingInfo.setParent((VirtualDiskFlatVer2BackingInfo)parentBacking);
    disk.setBacking(backingInfo);
  }
 else   if (parentBacking instanceof VirtualDiskRawDiskMappingVer1BackingInfo) {
    VirtualDiskRawDiskMappingVer1BackingInfo backingInfo=new VirtualDiskRawDiskMappingVer1BackingInfo();
    backingInfo.setDiskMode(((VirtualDiskRawDiskMappingVer1BackingInfo)parentBacking).getDiskMode());
    backingInfo.setDatastore(morDs);
    backingInfo.setFileName(vmdkDatastorePath);
    backingInfo.setParent((VirtualDiskRawDiskMappingVer1BackingInfo)parentBacking);
    disk.setBacking(backingInfo);
  }
 else   if (parentBacking instanceof VirtualDiskSparseVer1BackingInfo) {
    VirtualDiskSparseVer1BackingInfo backingInfo=new VirtualDiskSparseVer1BackingInfo();
    backingInfo.setDiskMode(((VirtualDiskSparseVer1BackingInfo)parentBacking).getDiskMode());
    backingInfo.setDatastore(morDs);
    backingInfo.setFileName(vmdkDatastorePath);
    backingInfo.setParent((VirtualDiskSparseVer1BackingInfo)parentBacking);
    disk.setBacking(backingInfo);
  }
 else   if (parentBacking instanceof VirtualDiskSparseVer2BackingInfo) {
    VirtualDiskSparseVer2BackingInfo backingInfo=new VirtualDiskSparseVer2BackingInfo();
    backingInfo.setDiskMode(((VirtualDiskSparseVer2BackingInfo)parentBacking).getDiskMode());
    backingInfo.setDatastore(morDs);
    backingInfo.setFileName(vmdkDatastorePath);
    backingInfo.setParent((VirtualDiskSparseVer2BackingInfo)parentBacking);
    disk.setBacking(backingInfo);
  }
 else {
    throw new Exception("Unsupported disk backing: " + parentBacking.getClass().getCanonicalName());
  }
  if (controllerKey < 0)   controllerKey=vmMo.getIDEDeviceControllerKey();
  disk.setControllerKey(controllerKey);
  if (deviceNumber < 0)   deviceNumber=vmMo.getNextDeviceNumber(controllerKey);
  disk.setKey(-contextNumber);
  disk.setUnitNumber(deviceNumber);
  disk.setCapacityInKB(sizeInMb * 1024);
  VirtualDeviceConnectInfo connectInfo=new VirtualDeviceConnectInfo();
  connectInfo.setConnected(true);
  connectInfo.setStartConnected(true);
  disk.setConnectable(connectInfo);
  return disk;
}
