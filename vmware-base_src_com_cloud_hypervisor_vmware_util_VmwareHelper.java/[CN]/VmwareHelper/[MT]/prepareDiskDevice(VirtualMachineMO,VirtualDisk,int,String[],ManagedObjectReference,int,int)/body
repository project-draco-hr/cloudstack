{
  assert(vmdkDatastorePathChain != null);
  assert(vmdkDatastorePathChain.length >= 1);
  VirtualDisk disk;
  VirtualDiskFlatVer2BackingInfo backingInfo;
  if (device != null) {
    disk=device;
    backingInfo=(VirtualDiskFlatVer2BackingInfo)disk.getBacking();
  }
 else {
    disk=new VirtualDisk();
    backingInfo=new VirtualDiskFlatVer2BackingInfo();
    backingInfo.setDatastore(morDs);
    backingInfo.setDiskMode(VirtualDiskMode.PERSISTENT.value());
    disk.setBacking(backingInfo);
    if (controllerKey < 0)     controllerKey=vmMo.getIDEDeviceControllerKey();
    if (deviceNumber < 0)     deviceNumber=vmMo.getNextDeviceNumber(controllerKey);
    disk.setControllerKey(controllerKey);
    disk.setKey(-contextNumber);
    disk.setUnitNumber(deviceNumber);
    VirtualDeviceConnectInfo connectInfo=new VirtualDeviceConnectInfo();
    connectInfo.setConnected(true);
    connectInfo.setStartConnected(true);
    disk.setConnectable(connectInfo);
  }
  backingInfo.setFileName(vmdkDatastorePathChain[0]);
  if (vmdkDatastorePathChain.length > 1) {
    String[] parentDisks=new String[vmdkDatastorePathChain.length - 1];
    for (int i=0; i < vmdkDatastorePathChain.length - 1; i++)     parentDisks[i]=vmdkDatastorePathChain[i + 1];
    setParentBackingInfo(backingInfo,morDs,parentDisks);
  }
  return disk;
}
