{
  DataCenter dc=_dcDao.findById(pod.getDataCenterId());
  if (nic.getIp4Address() == null) {
    Transaction txn=Transaction.currentTxn();
    txn.start();
    PublicIp ip=null;
    List<PodVlanMapVO> podRefs=_podVlanDao.listPodVlanMapsByPod(pod.getId());
    String podRangeGateway=null;
    if (!podRefs.isEmpty()) {
      podRangeGateway=_vlanDao.findById(podRefs.get(0).getVlanDbId()).getVlanGateway();
    }
    if (vm.getType() == VirtualMachine.Type.DomainRouter) {
      Nic placeholderNic=_networkModel.getPlaceholderNicForRouter(network,pod.getId());
      if (placeholderNic != null) {
        IPAddressVO userIp=_ipAddressDao.findByIpAndSourceNetworkId(network.getId(),placeholderNic.getIp4Address());
        ip=PublicIp.createFromAddrAndVlan(userIp,_vlanDao.findById(userIp.getVlanId()));
        s_logger.debug("Nic got an ip address " + placeholderNic.getIp4Address() + " stored in placeholder nic for the network "+ network+ " and gateway "+ podRangeGateway);
      }
    }
    if (ip == null) {
      ip=_networkMgr.assignPublicIpAddress(dc.getId(),pod.getId(),vm.getOwner(),VlanType.DirectAttached,network.getId(),null,false);
    }
    nic.setIp4Address(ip.getAddress().toString());
    nic.setFormat(AddressFormat.Ip4);
    nic.setGateway(ip.getGateway());
    nic.setNetmask(ip.getNetmask());
    if (ip.getVlanTag() != null && ip.getVlanTag().equalsIgnoreCase(Vlan.UNTAGGED)) {
      nic.setIsolationUri(URI.create("ec2://" + Vlan.UNTAGGED));
      nic.setBroadcastUri(URI.create("vlan://" + Vlan.UNTAGGED));
      nic.setBroadcastType(BroadcastDomainType.Native);
    }
    nic.setReservationId(String.valueOf(ip.getVlanTag()));
    nic.setMacAddress(ip.getMacAddress());
    if (vm.getType() == VirtualMachine.Type.DomainRouter) {
      Nic placeholderNic=_networkModel.getPlaceholderNicForRouter(network,pod.getId());
      if (placeholderNic == null) {
        s_logger.debug("Saving placeholder nic with ip4 address " + nic.getIp4Address() + " for the network "+ network);
        _networkMgr.savePlaceholderNic(network,nic.getIp4Address(),null,VirtualMachine.Type.DomainRouter);
      }
    }
    txn.commit();
  }
  nic.setDns1(dc.getDns1());
  nic.setDns2(dc.getDns2());
}
