{
  try {
    List<CiscoVnmcControllerVO> ciscoVnmcResources=_ciscoVnmcElementService.listCiscoVnmcResources(this);
    ListResponse<CiscoVnmcResourceResponse> response=new ListResponse<CiscoVnmcResourceResponse>();
    List<CiscoVnmcResourceResponse> ciscoVnmcResourcesResponse=new ArrayList<CiscoVnmcResourceResponse>();
    if (ciscoVnmcResources != null && !ciscoVnmcResources.isEmpty()) {
      for (      CiscoVnmcController ciscoVnmcResourceVO : ciscoVnmcResources) {
        CiscoVnmcResourceResponse ciscoVnmcResourceResponse=_ciscoVnmcElementService.createCiscoVnmcResourceResponse(ciscoVnmcResourceVO);
        ciscoVnmcResourceResponse.setObjectName("vnmc");
        ciscoVnmcResourcesResponse.add(ciscoVnmcResourceResponse);
      }
    }
    response.setResponses(ciscoVnmcResourcesResponse);
    response.setResponseName(getCommandName());
    this.setResponseObject(response);
  }
 catch (  InvalidParameterValueException invalidParamExcp) {
    throw new ServerApiException(ApiErrorCode.PARAM_ERROR,invalidParamExcp.getMessage());
  }
catch (  CloudRuntimeException runtimeExcp) {
    throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,runtimeExcp.getMessage());
  }
}
