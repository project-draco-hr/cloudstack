{
  Long snapshotId=data.getId();
  SnapshotVO snapshot=this.snapshotDao.findByIdIncludingRemoved(snapshotId);
  CommandResult result=new CommandResult();
  if (snapshot == null) {
    s_logger.debug("Destroying snapshot " + snapshotId + " backup failed due to unable to find snapshot ");
    result.setResult("Unable to find snapshot: " + snapshotId);
    callback.complete(result);
    return;
  }
  try {
    String secondaryStoragePoolUrl=this.snapshotMgr.getSecondaryStorageURL(snapshot);
    Long dcId=snapshot.getDataCenterId();
    Long accountId=snapshot.getAccountId();
    Long volumeId=snapshot.getVolumeId();
    String backupOfSnapshot=snapshot.getBackupSnapshotId();
    if (backupOfSnapshot == null) {
      callback.complete(result);
      return;
    }
    SwiftTO swift=_swiftMgr.getSwiftTO(snapshot.getSwiftId());
    S3TO s3=_s3Mgr.getS3TO();
    DeleteSnapshotBackupCommand cmd=new DeleteSnapshotBackupCommand(swift,s3,secondaryStoragePoolUrl,dcId,accountId,volumeId,backupOfSnapshot,false);
    Answer answer=agentMgr.sendToSSVM(dcId,cmd);
    if ((answer != null) && answer.getResult()) {
      snapshot.setBackupSnapshotId(null);
      snapshotDao.update(snapshotId,snapshot);
    }
 else     if (answer != null) {
      result.setResult(answer.getDetails());
    }
  }
 catch (  Exception e) {
    s_logger.debug("failed to delete snapshot: " + snapshotId + ": "+ e.toString());
    result.setResult(e.toString());
  }
  callback.complete(result);
}
