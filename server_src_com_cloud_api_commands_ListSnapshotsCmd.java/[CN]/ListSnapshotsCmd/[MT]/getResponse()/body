{
  List<SnapshotVO> snapshots=(List<SnapshotVO>)getResponseObject();
  List<SnapshotResponse> response=new ArrayList<SnapshotResponse>();
  for (  Snapshot snapshot : snapshots) {
    SnapshotResponse snapshotResponse=new SnapshotResponse();
    snapshotResponse.setId(snapshot.getId());
    Account acct=getManagementServer().findAccountById(Long.valueOf(snapshot.getAccountId()));
    if (acct != null) {
      snapshotResponse.setAccountName(acct.getAccountName());
      snapshotResponse.setDomainId(acct.getDomainId());
      snapshotResponse.setDomain(getManagementServer().findDomainIdById(acct.getDomainId()).getName());
    }
    VolumeVO volume=getManagementServer().findAnyVolumeById(snapshot.getVolumeId());
    String snapshotTypeStr=SnapshotType.values()[snapshot.getSnapshotType()].name();
    snapshotResponse.setSnapshotType(snapshotTypeStr);
    snapshotResponse.setVolumeId(snapshot.getVolumeId());
    snapshotResponse.setVolumeName(volume.getName());
    snapshotResponse.setVolumeType(volume.getVolumeType().name());
    snapshotResponse.setCreated(snapshot.getCreated());
    snapshotResponse.setName(snapshot.getName());
    AsyncJobVO asyncJob=getManagementServer().findInstancePendingAsyncJob("snapshot",snapshot.getId());
    if (asyncJob != null) {
      snapshotResponse.setJobId(asyncJob.getId());
      snapshotResponse.setJobStatus(asyncJob.getStatus());
    }
    snapshotResponse.setIntervalType(getManagementServer().getSnapshotIntervalTypes(snapshot.getId()));
    response.add(snapshotResponse);
  }
  return SerializerHelper.toSerializedString(response);
}
