{
  long accountId=CallContext.current().getCallingAccount().getAccountId();
  Account account=_accountMgr.getAccount(accountId);
  List<NuageVspDeviceVO> nuageVspDevices=_nuageConfigDao.listByPhysicalNetwork(getPhysicalNetworkId());
  if (nuageVspDevices != null && (!nuageVspDevices.isEmpty())) {
    NuageVspDeviceVO config=nuageVspDevices.iterator().next();
    HostVO nuageVspHost=_hostDao.findById(config.getHostId());
    VspResourceCommand cmd=new VspResourceCommand(method,resource,resourceId,childResource,null,resourceFilter,null,null);
    VspResourceAnswer answer=(VspResourceAnswer)_agentMgr.easySend(nuageVspHost.getId(),cmd);
    if (answer == null || !answer.getResult()) {
      s_logger.error("VspResourceCommand failed");
      if ((null != answer) && (null != answer.getDetails())) {
        throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,answer.getDetails());
      }
    }
 else {
      NuageVspResourceResponse response=new NuageVspResourceResponse();
      response.setResourceInfo(StringUtils.isBlank(answer.getResourceInfo()) ? "" : answer.getResourceInfo());
      response.setObjectName("nuagevspresource");
      response.setResponseName(getCommandName());
      this.setResponseObject(response);
    }
  }
 else {
    String errorMessage="No Nuage VSP Controller configured on physical network " + getPhysicalNetworkId();
    s_logger.error(errorMessage);
    throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,errorMessage);
  }
}
