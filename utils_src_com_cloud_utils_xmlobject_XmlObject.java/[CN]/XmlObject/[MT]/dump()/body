{
  StringBuilder sb=new StringBuilder();
  sb.append("<").append(tag);
  List<XmlObject> children=new ArrayList<XmlObject>();
  for (  Map.Entry<String,Object> e : elements.entrySet()) {
    String key=e.getKey();
    Object val=e.getValue();
    if (val instanceof String) {
      sb.append(String.format(" %s=\"%s\"",key,val.toString()));
    }
 else     if (val instanceof XmlObject) {
      children.add((XmlObject)val);
    }
 else     if (val instanceof List) {
      children.addAll((Collection<? extends XmlObject>)val);
    }
 else {
      throw new CloudRuntimeException(String.format("unsupported element type[tag:%s, class: %s], only allowed type of [String, List<XmlObject>, Object]",key,val.getClass().getName()));
    }
  }
  if (!children.isEmpty() && text != null) {
    logger.info(String.format("element %s cannot have both text[%s] and child elements, set text to null",tag,text));
    text=null;
  }
  if (!children.isEmpty()) {
    sb.append(">");
    for (    XmlObject x : children) {
      sb.append(x.dump());
    }
    sb.append(String.format("</%s>",tag));
  }
 else {
    if (text != null) {
      sb.append(">");
      sb.append(text);
      sb.append(String.format("</%s>",tag));
    }
 else {
      sb.append(" />");
    }
  }
  return sb.toString();
}
