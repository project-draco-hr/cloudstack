import os
import sys
from os.path import exists as _exists
from time import localtime as _localtime, asctime as _asctime
vSwitchDBPidFile = '/var/run/openvswitch/ovsdb-server.pid'
vSwitchDBDaemonName = 'ovsdb-server'
vSwitchPidFile = '/var/run/openvswitch/ovs-vswitchd.pid'
vsctlPath = '/usr/bin/ovs-vsctl'
vSwitchDaemonName = 'ovs-vswitchd'
logFile = '/var/log/cloud/management/vlanRemapUtils.log'
fLog = None
global result
errors = {'NO_DB_PID_FILE': 'NO_DB_PID_FILE', 'DB_NOT_RUN': 'DB_NOT_RUN', 'NO_SWITCH_PID_FILE': 'NO_SWITCH_PID_FILE', 'SWITCH_NOT_RUN': 'SWITCH_NOT_RUN', 'NO_VSCTL': 'NO_VSCTL', 'COMMAND_FAILED': 'COMMAND_FAILED', 'ERR_ARGS_NUM': 'ERR_ARGS_NUM', 'ERROR_OP': 'ERROR_OP', 'SUCCESS': 'SUCCESS', }
if (__name__ == '__main__'):
    global result
    openLog()
    if (checkvSwitch() < 0):
        print result
        log(("Check switch failed, reason = '%s'" % result))
        sys.exit((-1))
    op = sys.argv[1]
    if (op == 'createGRE'):
        checkArgNum(5)
        bridge = sys.argv[2]
        remoteIP = sys.argv[3]
        key = sys.argv[4]
        doCreateGRE(bridge, remoteIP, key)
    elif (op == 'createFlow'):
        checkArgNum(6)
        bridge = sys.argv[2]
        vifName = sys.argv[3]
        mac = sys.argv[4]
        remap = sys.argv[5]
        doCreateFlow(bridge, vifName, mac, remap)
    elif (op == 'deleteFlow'):
        checkArgNum(6)
        bridge = sys.argv[2]
        vifName = sys.argv[3]
        mac = sys.argv[4]
        remap = sys.argv[5]
        doDeleteFlow(bridge, vifName, mac, remap)
    elif (op == 'setTag'):
        checkArgNum(5)
        bridge = sys.argv[2]
        vifName = sys.argv[3]
        tag = sys.argv[4]
        doSetTag(bridge, vifName, tag)
    else:
        log(('WARNING: get an unkown op %s' % op))
        result = errors['ERROR_OP']
        print result
        sys.exit((-1))
    result = errors['SUCCESS']
    closeLog()
    print result
