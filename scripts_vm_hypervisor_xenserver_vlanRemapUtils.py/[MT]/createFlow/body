def createFlow(bridge, vifName, mac, remap):
    global result
    inport = getGreOfPorts(bridge)
    if (len(inport) == 0):
        log('WARNING: no inport found')
        result = errors['NO_INPORT']
        return (-1)
    output = getVifPort(bridge, vifName)
    if (output == None):
        log(('WARNING: cannot find ofport for %s' % vifName))
        result = errors['NO_OFPORT']
        return (-1)
    if (output == '[]'):
        log(('WARNING: ofport is [] for %s' % vifName))
        result = errors['NO_OFPORT']
        return (-1)
    log('')
    log('Create flow for remap')
    noneGreOfPorts = getNoneGreOfPort(bridge)
    isARP = True
    if (len(noneGreOfPorts) == 0):
        log('WARNING: no none GRE ofports found, no ARP flow and DHCP flow will be created')
        isARP = False
    for j in remap.split('/'):
        for i in inport:
            flow = formatDropFlow(i, j)
            param = (bridge + (' "%s"' % flow))
            dropflow = ['ovs-ofctl add-flow', param]
            doCmd(dropflow)
            flow = formatFlow(i, j, mac, output)
            param = (bridge + (' "%s"' % flow))
            addflow = ['ovs-ofctl add-flow', param]
            doCmd(addflow)
            if (isARP == True):
                flow = formatARPFlow(bridge, i, j, noneGreOfPorts)
                param = (bridge + (' "%s"' % flow))
                addflow = ['ovs-ofctl add-flow', param]
                doCmd(addflow)
                flow = formatDHCPFlow(bridge, i, j, noneGreOfPorts)
                param = (bridge + (' "%s"' % flow))
                addflow = ['ovs-ofctl add-flow', param]
                doCmd(addflow)
                flow = formatDHCPClientFlow(bridge, i, j, noneGreOfPorts)
                param = (bridge + (' "%s"' % flow))
                addflow = ['ovs-ofctl add-flow', param]
                doCmd(addflow)
    result = errors['SUCCESS']
    return 0
