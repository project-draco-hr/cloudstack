def createGRE(bridge, remoteIP, greKey):
    global result
    name = ('%sgre' % bridge)
    if (checkGREInterface(bridge, remoteIP, greKey) < 0):
        result = errors['TUNNEL_EXISTED']
        return 0
    wait = [vsctlPath, ('--timeout=30 wait-until bridge %s -- get bridge %s name' % (bridge, bridge))]
    res = doCmd(wait)
    if (bridge not in res):
        log(("WARNIING:Can't find bridge %s for creating tunnel!" % bridge))
        result = errors['COMMAND_FAILED']
        return (-1)
    createInterface = [vsctlPath, 'create interface', ('name=%s' % name), ('type=gre options:"remote_ip=%s key=%s"' % (remoteIP, greKey))]
    ifaceUUID = doCmd(createInterface)
    if (isUUID(ifaceUUID) < 0):
        result = errors['COMMAND_FAILED']
        return (-1)
    createPort = [vsctlPath, 'create port', ('name=%s' % name), ('interfaces=[%s]' % ifaceUUID)]
    portUUID = doCmd(createPort)
    if (isUUID(portUUID) < 0):
        result = errors['COMMAND_FAILED']
        return (-1)
    addBridge = [vsctlPath, ('add bridge %s' % bridge), ('ports %s' % portUUID)]
    doCmd(addBridge)
    wait = [vsctlPath, ('--timeout=5 wait-until port %s -- get port %s name' % (name, name))]
    res = doCmd(wait)
    if (name in res):
        result = errors['SUCCESS']
        return 0
    else:
        result = errors['COMMAND_FAILED']
        return (-1)
