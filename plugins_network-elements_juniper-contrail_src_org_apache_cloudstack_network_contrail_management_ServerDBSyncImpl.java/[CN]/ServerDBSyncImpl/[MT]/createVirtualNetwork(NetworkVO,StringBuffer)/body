{
  syncLogMesg.append("VN# DB: " + _manager.getCanonicalName(dbNet) + "("+ dbNet.getUuid()+ "); VNC: none;  action: create\n");
  if (_manager.getDatabase().lookupVirtualNetwork(dbNet.getUuid(),_manager.getCanonicalName(dbNet),dbNet.getTrafficType()) != null) {
    s_logger.warn("VN model object is already present in DB: " + dbNet.getUuid() + ", name: "+ dbNet.getName());
  }
  VirtualNetworkModel vnModel=new VirtualNetworkModel(dbNet,dbNet.getUuid(),_manager.getCanonicalName(dbNet),dbNet.getTrafficType());
  vnModel.build(_manager.getModelController(),dbNet);
  if (_rwMode) {
    try {
      if (!vnModel.verify(_manager.getModelController())) {
        vnModel.update(_manager.getModelController());
      }
    }
 catch (    InternalErrorException ex) {
      s_logger.warn("create virtual-network",ex);
      syncLogMesg.append("Error: VN# VNC : Unable to create network " + dbNet.getName() + "\n");
      return;
    }
    s_logger.debug("add model " + vnModel.getName());
    _manager.getDatabase().getVirtualNetworks().add(vnModel);
    syncLogMesg.append("VN# VNC: " + dbNet.getUuid() + ", "+ vnModel.getName()+ " created\n");
  }
 else {
    syncLogMesg.append("VN# VNC: " + vnModel.getName() + " created \n");
  }
}
