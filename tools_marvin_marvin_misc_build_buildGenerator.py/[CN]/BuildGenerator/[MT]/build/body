def build(self, wait=20):
    if (self.config and self.jobclient):
        while self.jobclient.is_queued_or_running():
            logging.debug(('Waiting  %ss for running/queued build to complete' % wait))
            delay(wait)
        self.jobclient.invoke(params=self.parseConfigParams())
        self.build_number = self.jobclient.get_last_buildnumber()
        self.paramlist = self.parseConfigParams()
        logging.info(('Started build : %d' % self.jobclient.get_last_buildnumber()))
        while self.jobclient.is_running():
            logging.debug(('Polling build status in %ss' % wait))
            delay(wait)
        logging.info(('Completed build : %d' % self.jobclient.get_last_buildnumber()))
        logging.debug(('Last Good Build : %d, Last Build : %d, Our Build :                           %d' % (self.jobclient.get_last_good_buildnumber(), self.jobclient.get_last_buildnumber(), self.build_number)))
        if (self.jobclient.get_last_good_buildnumber() == self.build_number):
            return self.build_number
        else:
            our_build = self.getBuildWithNumber(self.build_number)
            if ((our_build is not None) and (our_build.get_status() == 'SUCCESS')):
                logging.debug(("Our builds' %d status %s" % (self.build_number, our_build.get_status())))
                return self.build_number
            else:
                logging.debug(("Our builds' %d status %s" % (self.build_number, our_build.get_status())))
                return 0
