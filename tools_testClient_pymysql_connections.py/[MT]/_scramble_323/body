def _scramble_323(password, message):
    hash_pass = _hash_password_323(password)
    hash_message = _hash_password_323(message[:SCRAMBLE_LENGTH_323])
    hash_pass_n = struct.unpack('>LL', hash_pass)
    hash_message_n = struct.unpack('>LL', hash_message)
    rand_st = RandStruct_323((hash_pass_n[0] ^ hash_message_n[0]), (hash_pass_n[1] ^ hash_message_n[1]))
    outbuf = StringIO.StringIO()
    for _ in xrange(min(SCRAMBLE_LENGTH_323, len(message))):
        outbuf.write(int2byte((int((rand_st.my_rnd() * 31)) + 64)))
    extra = int2byte(int((rand_st.my_rnd() * 31)))
    out = outbuf.getvalue()
    outbuf = StringIO.StringIO()
    for c in out:
        outbuf.write(int2byte((byte2int(c) ^ byte2int(extra))))
    return outbuf.getvalue()
