def _read_rowdata_packet(self):
    'Read a rowdata packet for each data row in the result set.'
    rows = []
    while True:
        packet = self.connection.read_packet()
        if packet.is_eof_packet():
            self.warning_count = packet.read(2)
            server_status = struct.unpack('<h', packet.read(2))[0]
            self.has_next = (server_status & SERVER_STATUS.SERVER_MORE_RESULTS_EXISTS)
            break
        row = []
        for field in self.fields:
            if (field.type_code in self.connection.decoders):
                converter = self.connection.decoders[field.type_code]
                if DEBUG:
                    print ('DEBUG: field=%s, converter=%s' % (field, converter))
                data = packet.read_length_coded_string()
                converted = None
                if (data != None):
                    converted = converter(self.connection, field, data)
            row.append(converted)
        rows.append(tuple(row))
    self.affected_rows = len(rows)
    self.rows = tuple(rows)
    if DEBUG:
        self.rows
