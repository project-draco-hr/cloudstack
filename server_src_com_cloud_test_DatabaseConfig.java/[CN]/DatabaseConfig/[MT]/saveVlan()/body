{
  String zoneId=_currentObjectParams.get("zoneId");
  String physicalNetworkIdStr=_currentObjectParams.get("physicalNetworkId");
  String vlanId=_currentObjectParams.get("vlanId");
  String gateway=_currentObjectParams.get("gateway");
  String netmask=_currentObjectParams.get("netmask");
  String publicIpRange=_currentObjectParams.get("ipAddressRange");
  String vlanType=_currentObjectParams.get("vlanType");
  String vlanPodName=_currentObjectParams.get("podName");
  String ipError="Please enter a valid IP address for the field: ";
  if (!IPRangeConfig.validOrBlankIP(gateway)) {
    printError(ipError + "gateway");
  }
  if (!IPRangeConfig.validOrBlankIP(netmask)) {
    printError(ipError + "netmask");
  }
  if (!checkIpAddressRange(publicIpRange)) {
    printError("Please enter a valid public IP range.");
  }
  String[] ipAddressRangeArray=publicIpRange.split("\\-");
  String startIP=ipAddressRangeArray[0];
  String endIP=null;
  if (ipAddressRangeArray.length > 1) {
    endIP=ipAddressRangeArray[1];
  }
  if (netmask != null && netmask != "") {
    if (endIP != null) {
      if (!IPRangeConfig.sameSubnet(startIP,endIP,netmask)) {
        printError("Start and end IPs for the public IP range must be in the same subnet, as per the provided netmask.");
      }
    }
    if (gateway != null && gateway != "") {
      if (!IPRangeConfig.sameSubnet(startIP,gateway,netmask)) {
        printError("The start IP for the public IP range must be in the same subnet as the gateway, as per the provided netmask.");
      }
      if (endIP != null) {
        if (!IPRangeConfig.sameSubnet(endIP,gateway,netmask)) {
          printError("The end IP for the public IP range must be in the same subnet as the gateway, as per the provided netmask.");
        }
      }
    }
  }
  long zoneDbId=Long.parseLong(zoneId);
  String zoneName=PodZoneConfig.getZoneName(zoneDbId);
  long physicalNetworkId=Long.parseLong(physicalNetworkIdStr);
  pzc.modifyVlan(zoneName,true,vlanId,gateway,netmask,vlanPodName,vlanType,publicIpRange,0,physicalNetworkId);
  long vlanDbId=pzc.getVlanDbId(zoneName,vlanId);
  iprc.saveIPRange("public",-1,zoneDbId,vlanDbId,startIP,endIP,null,physicalNetworkId);
}
