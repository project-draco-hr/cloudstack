{
  long id=Long.parseLong(_currentObjectParams.get("id"));
  String name=_currentObjectParams.get("name");
  String displayText=_currentObjectParams.get("displayText");
  int cpu=Integer.parseInt(_currentObjectParams.get("cpu"));
  int ramSize=Integer.parseInt(_currentObjectParams.get("ramSize"));
  int speed=Integer.parseInt(_currentObjectParams.get("speed"));
  String useLocalStorageValue=_currentObjectParams.get("useLocalStorage");
  boolean ha=Boolean.parseBoolean(_currentObjectParams.get("enableHA"));
  boolean mirroring=Boolean.parseBoolean(_currentObjectParams.get("mirrored"));
  boolean useLocalStorage;
  if (useLocalStorageValue != null) {
    if (Boolean.parseBoolean(useLocalStorageValue)) {
      useLocalStorage=true;
    }
 else {
      useLocalStorage=false;
    }
  }
 else {
    useLocalStorage=false;
  }
  ServiceOfferingVO serviceOffering=new ServiceOfferingVO(name,cpu,ramSize,speed,null,null,ha,displayText,useLocalStorage,false,null,false,null,false);
  Long bytesReadRate=Long.parseLong(_currentObjectParams.get("bytesReadRate"));
  if ((bytesReadRate != null) && (bytesReadRate > 0))   serviceOffering.setBytesReadRate(bytesReadRate);
  Long bytesWriteRate=Long.parseLong(_currentObjectParams.get("bytesWriteRate"));
  if ((bytesWriteRate != null) && (bytesWriteRate > 0))   serviceOffering.setBytesWriteRate(bytesWriteRate);
  Long iopsReadRate=Long.parseLong(_currentObjectParams.get("iopsReadRate"));
  if ((iopsReadRate != null) && (iopsReadRate > 0))   serviceOffering.setIopsReadRate(iopsReadRate);
  Long iopsWriteRate=Long.parseLong(_currentObjectParams.get("iopsWriteRate"));
  if ((iopsWriteRate != null) && (iopsWriteRate > 0))   serviceOffering.setIopsWriteRate(iopsWriteRate);
  ServiceOfferingDaoImpl dao=ComponentContext.inject(ServiceOfferingDaoImpl.class);
  try {
    dao.persist(serviceOffering);
  }
 catch (  Exception e) {
    s_logger.error("error creating service offering",e);
  }
}
