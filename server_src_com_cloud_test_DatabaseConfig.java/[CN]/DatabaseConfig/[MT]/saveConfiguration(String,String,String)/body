{
  String instance="DEFAULT";
  String description=s_configurationDescriptions.get(name);
  String component=s_configurationComponents.get(name);
  if (category == null) {
    category="Advanced";
  }
  String instanceNameError="Please enter a non-blank value for the field: ";
  if (name.equals("instance.name")) {
    if (value == null || value.isEmpty() || !value.matches("^[A-Za-z0-9]{1,8}$")) {
      printError(instanceNameError + "configuration: instance.name can not be empty and can only contain numbers and alphabets up to 8 characters long");
    }
  }
  if (name.equals("network.throttling.rate")) {
    if (value != null && !value.isEmpty()) {
      _networkThrottlingRate=value;
    }
  }
  if (name.equals("multicast.throttling.rate")) {
    if (value != null && !value.isEmpty()) {
      _multicastThrottlingRate=value;
    }
  }
  String insertSql="INSERT INTO `cloud`.`configuration` (instance, component, name, value, description, category) " + "VALUES ('" + instance + "','"+ component+ "','"+ name+ "','"+ value+ "','"+ description+ "','"+ category+ "')";
  String selectSql="SELECT name FROM cloud.configuration WHERE name = '" + name + "'";
  Transaction txn=Transaction.currentTxn();
  try {
    PreparedStatement stmt=txn.prepareAutoCloseStatement(selectSql);
    ResultSet result=stmt.executeQuery();
    Boolean hasRow=result.next();
    if (!hasRow) {
      stmt=txn.prepareAutoCloseStatement(insertSql);
      stmt.executeUpdate();
    }
  }
 catch (  SQLException ex) {
    s_logger.error("error creating configuration",ex);
  }
}
