{
  Map<String,String> args=new HashMap<String,String>();
  try {
    Map<Pool,Pool.Record> poolRecs=Pool.getAllRecords(conn);
    if (poolRecs.size() != 1) {
      throw new CloudRuntimeException("There are " + poolRecs.size() + " pool for host :"+ _host.uuid);
    }
    Host master=poolRecs.values().iterator().next().master;
    for (int i=0; i < params.length; i+=2) {
      args.put(params[i],params[i + 1]);
    }
    if (s_logger.isTraceEnabled()) {
      s_logger.trace("callHostPlugin executing for command " + cmd + " with "+ getArgsString(args));
    }
    String result=master.callPlugin(conn,plugin,cmd,args);
    if (s_logger.isTraceEnabled()) {
      s_logger.trace("callHostPlugin Result: " + result);
    }
    return result.replace("\n","");
  }
 catch (  Types.HandleInvalid e) {
    s_logger.warn("callHostPlugin failed for cmd: " + cmd + " with args "+ getArgsString(args)+ " due to HandleInvalid clazz:"+ e.clazz+ ", handle:"+ e.handle);
  }
catch (  XenAPIException e) {
    s_logger.warn("callHostPlugin failed for cmd: " + cmd + " with args "+ getArgsString(args)+ " due to "+ e.toString(),e);
  }
catch (  XmlRpcException e) {
    s_logger.warn("callHostPlugin failed for cmd: " + cmd + " with args "+ getArgsString(args)+ " due to "+ e.getMessage(),e);
  }
  return null;
}
