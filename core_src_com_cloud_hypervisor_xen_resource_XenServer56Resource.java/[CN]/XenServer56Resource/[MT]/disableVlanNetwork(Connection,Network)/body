{
  try {
    if (!network.getNameLabel(conn).startsWith("VLAN")) {
      return;
    }
    String bridge=network.getBridge(conn).trim();
    for (    PIF pif : network.getPIFs(conn)) {
      if (pif.getHost(conn).getUuid(conn).equalsIgnoreCase(_host.uuid)) {
        VLAN vlan=pif.getVLANMasterOf(conn);
        if (vlan != null) {
          String vlannum=pif.getVLAN(conn).toString();
          String device=pif.getDevice(conn).trim();
          if (vlannum.equals("-1")) {
            return;
          }
          try {
            vlan.destroy(conn);
            Host host=Host.getByUuid(conn,_host.uuid);
            host.forgetDataSourceArchives(conn,"pif_" + bridge + "_tx");
            host.forgetDataSourceArchives(conn,"pif_" + bridge + "_rx");
            host.forgetDataSourceArchives(conn,"pif_" + device + "."+ vlannum+ "_tx");
            host.forgetDataSourceArchives(conn,"pif_" + device + "."+ vlannum+ "_rx");
          }
 catch (          XenAPIException e) {
            s_logger.debug("Catch " + e.getClass().getName() + ": failed to destory VLAN "+ device+ " on host "+ _host.uuid+ " due to "+ e.toString());
          }
        }
        break;
      }
    }
  }
 catch (  XenAPIException e) {
    String msg="Unable to disable VLAN network due to " + e.toString();
    s_logger.warn(msg,e);
  }
catch (  Exception e) {
    String msg="Unable to disable VLAN network due to " + e.getMessage();
    s_logger.warn(msg,e);
  }
}
