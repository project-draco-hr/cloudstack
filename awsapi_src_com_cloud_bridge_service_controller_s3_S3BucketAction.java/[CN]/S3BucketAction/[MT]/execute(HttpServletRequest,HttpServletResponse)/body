{
  String method=request.getMethod();
  String queryString=request.getQueryString();
  if (method.equalsIgnoreCase("PUT")) {
    if (queryString != null && queryString.length() > 0) {
      if (queryString.startsWith("acl")) {
        executePutBucketAcl(request,response);
        return;
      }
 else       if (queryString.startsWith("versioning")) {
        executePutBucketVersioning(request,response);
        return;
      }
 else       if (queryString.startsWith("policy")) {
        executePutBucketPolicy(request,response);
        return;
      }
 else       if (queryString.startsWith("logging")) {
        executePutBucketLogging(request,response);
        return;
      }
 else       if (queryString.startsWith("website")) {
        executePutBucketWebsite(request,response);
        return;
      }
    }
    executePutBucket(request,response);
  }
 else   if (method.equalsIgnoreCase("GET") || method.equalsIgnoreCase("HEAD")) {
    if (queryString != null && queryString.length() > 0) {
      if (queryString.startsWith("acl")) {
        executeGetBucketAcl(request,response);
        return;
      }
 else       if (queryString.startsWith("versioning")) {
        executeGetBucketVersioning(request,response);
        return;
      }
 else       if (queryString.contains("versions")) {
        executeGetBucketObjectVersions(request,response);
        return;
      }
 else       if (queryString.startsWith("location")) {
        executeGetBucketLocation(request,response);
        return;
      }
 else       if (queryString.startsWith("uploads")) {
        executeListMultipartUploads(request,response);
        return;
      }
 else       if (queryString.startsWith("policy")) {
        executeGetBucketPolicy(request,response);
        return;
      }
 else       if (queryString.startsWith("logging")) {
        executeGetBucketLogging(request,response);
        return;
      }
 else       if (queryString.startsWith("website")) {
        executeGetBucketWebsite(request,response);
        return;
      }
    }
    String bucketAtr=(String)request.getAttribute(S3Constants.BUCKET_ATTR_KEY);
    if (bucketAtr.equals("/"))     executeGetAllBuckets(request,response);
 else     executeGetBucket(request,response);
  }
 else   if (method.equalsIgnoreCase("DELETE")) {
    if (queryString != null && queryString.length() > 0) {
      if (queryString.startsWith("policy")) {
        executeDeleteBucketPolicy(request,response);
        return;
      }
 else       if (queryString.startsWith("website")) {
        executeDeleteBucketWebsite(request,response);
        return;
      }
    }
    executeDeleteBucket(request,response);
  }
 else   if ((method.equalsIgnoreCase("POST")) && (queryString.equalsIgnoreCase("delete"))) {
    executeMultiObjectDelete(request,response);
  }
 else   throw new IllegalArgumentException("Unsupported method in REST request");
}
