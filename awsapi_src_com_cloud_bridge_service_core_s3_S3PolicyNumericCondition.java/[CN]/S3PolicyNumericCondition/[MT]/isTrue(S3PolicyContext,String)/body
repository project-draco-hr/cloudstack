{
  Float toCompareWith;
  String temp=null;
  Set<ConditionKeys> keySet=getAllKeys();
  if (null == keySet)   return false;
  Iterator<ConditionKeys> itr=keySet.iterator();
  if (!itr.hasNext())   return false;
  while (itr.hasNext()) {
    ConditionKeys keyName=itr.next();
    Float[] valueList=getKeyValues(keyName);
    boolean keyResult=false;
    if (null == (temp=context.getEvalParam(keyName)))     return false;
    try {
      toCompareWith=new Float(temp);
    }
 catch (    NumberFormatException e) {
      return false;
    }
    for (int i=0; i < valueList.length && !keyResult; i++) {
      int difference=valueList[i].compareTo(toCompareWith);
switch (condition) {
case NumericEquals:
        if (0 == difference)         keyResult=true;
      break;
case NumericNotEquals:
    if (0 != difference)     keyResult=true;
  break;
case NumericLessThan:
if (0 > difference) keyResult=true;
break;
case NumericLessThanEquals:
if (0 > difference || 0 == difference) keyResult=true;
break;
case NumericGreaterThan:
if (0 < difference) keyResult=true;
break;
case NumericGreaterThanEquals:
if (0 < difference || 0 == difference) keyResult=true;
break;
default :
return false;
}
logger.info("S3PolicyNumericCondition eval - SID: " + SID + ", "+ condition+ ", key: "+ keyName+ ", valuePassedIn: "+ toCompareWith+ ", valueInRule: "+ valueList[i]+ ", result: "+ keyResult);
}
if (!keyResult) return false;
}
return true;
}
