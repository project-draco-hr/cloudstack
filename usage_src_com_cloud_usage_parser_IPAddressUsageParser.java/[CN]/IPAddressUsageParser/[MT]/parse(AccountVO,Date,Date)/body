{
  s_logger.info("Parsing all ip address usage events");
  if ((endDate == null) || endDate.after(new Date())) {
    endDate=new Date();
  }
  List<UsageIPAddressVO> usageInstances=m_usageIPAddressDao.getUsageRecords(account.getId(),account.getDomainId(),startDate,endDate,false,null,null);
  Calendar startCal=Calendar.getInstance();
  startCal.setTime(startDate);
  startCal.set(Calendar.DAY_OF_MONTH,1);
  startCal.set(Calendar.HOUR_OF_DAY,0);
  startCal.set(Calendar.MINUTE,0);
  startCal.set(Calendar.SECOND,0);
  startCal.set(Calendar.MILLISECOND,0);
  Calendar endCal=Calendar.getInstance();
  endCal.setTime(endDate);
  endCal.set(Calendar.DAY_OF_MONTH,endCal.getActualMaximum(Calendar.DAY_OF_MONTH));
  int numberOfMonths=0;
  while (startCal.before(endCal)) {
    numberOfMonths++;
    startCal.roll(Calendar.MONTH,true);
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("processing " + numberOfMonths + " month(s) worth of ip address data");
  }
  for (  UsageIPAddressVO usageInstance : usageInstances) {
    String ipAddress=usageInstance.getAddress();
    Date assignedDate=usageInstance.getAssigned();
    Date releasedDate=usageInstance.getReleased();
    if (releasedDate == null) {
      releasedDate=new Date();
    }
    startCal.setTime(startDate);
    startCal.set(Calendar.DAY_OF_MONTH,1);
    startCal.set(Calendar.HOUR_OF_DAY,0);
    startCal.set(Calendar.MINUTE,0);
    startCal.set(Calendar.SECOND,0);
    startCal.set(Calendar.MILLISECOND,0);
    for (int i=0; i < numberOfMonths; i++) {
      if (assignedDate.before(startCal.getTime())) {
        assignedDate=startCal.getTime();
      }
      startCal.roll(Calendar.MONTH,true);
      Date nextMonth=startCal.getTime();
      startCal.add(Calendar.MILLISECOND,-1);
      if (releasedDate.before(startCal.getTime())) {
        startCal.setTime(releasedDate);
      }
      createUsageRecord(assignedDate,startCal.getTime(),account,ipAddress,startDate,endDate);
      startCal.setTime(nextMonth);
    }
  }
  return true;
}
