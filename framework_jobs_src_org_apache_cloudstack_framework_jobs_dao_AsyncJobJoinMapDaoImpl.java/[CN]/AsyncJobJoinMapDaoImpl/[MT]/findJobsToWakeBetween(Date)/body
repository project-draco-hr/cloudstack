{
  List<Long> standaloneList=new ArrayList<Long>();
  TransactionLegacy txn=TransactionLegacy.currentTxn();
  String sql="SELECT job_id FROM async_job_join_map WHERE next_wakeup < ? AND expiration > ? AND job_id NOT IN (SELECT content_id FROM sync_queue_item)";
  try (PreparedStatement pstmt=txn.prepareStatement(sql)){
    pstmt.setString(1,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),cutDate));
    pstmt.setString(2,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),cutDate));
    ResultSet rs=pstmt.executeQuery();
    while (rs.next()) {
      standaloneList.add(rs.getLong(1));
    }
  }
 catch (  SQLException e) {
    throw new CloudRuntimeException("Unable to handle SQL exception",e);
  }
  sql="UPDATE async_job_join_map SET next_wakeup=DATE_ADD(next_wakeup, INTERVAL wakeup_interval SECOND) WHERE next_wakeup < ? AND expiration > ?";
  try (PreparedStatement pstmt=txn.prepareStatement(sql)){
    pstmt.setString(1,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),cutDate));
    pstmt.setString(2,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),cutDate));
    pstmt.executeUpdate();
    return standaloneList;
  }
 catch (  SQLException e) {
    throw new CloudRuntimeException("Unable to handle SQL exception",e);
  }
}
