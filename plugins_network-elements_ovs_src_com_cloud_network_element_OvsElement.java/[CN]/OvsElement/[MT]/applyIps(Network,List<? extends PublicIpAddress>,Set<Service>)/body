{
  boolean canHandle=true;
  for (  Service service : services) {
    if (!canHandle(network,service) && service != Service.SourceNat && service != Service.Firewall) {
      canHandle=false;
      break;
    }
  }
  if (canHandle) {
    List<DomainRouterVO> routers=_routerDao.listByNetworkAndRole(network.getId(),Role.VIRTUAL_ROUTER);
    if (routers == null || routers.isEmpty()) {
      s_logger.debug("Virtual router element doesn't need to associate ip addresses on the backend; virtual " + "router doesn't exist in the network " + network.getId());
      return true;
    }
    return _routerMgr.associatePublicIP(network,ipAddress,routers);
  }
 else {
    return false;
  }
}
