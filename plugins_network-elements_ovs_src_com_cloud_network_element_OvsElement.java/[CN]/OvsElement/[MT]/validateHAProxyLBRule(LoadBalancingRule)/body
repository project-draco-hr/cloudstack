{
  String timeEndChar="dhms";
  for (  LbStickinessPolicy stickinessPolicy : rule.getStickinessPolicies()) {
    List<Pair<String,String>> paramsList=stickinessPolicy.getParams();
    if (StickinessMethodType.LBCookieBased.getName().equalsIgnoreCase(stickinessPolicy.getMethodName())) {
    }
 else     if (StickinessMethodType.SourceBased.getName().equalsIgnoreCase(stickinessPolicy.getMethodName())) {
      String tablesize="200k";
      String expire="30m";
      for (      Pair<String,String> paramKV : paramsList) {
        String key=paramKV.first();
        String value=paramKV.second();
        if ("tablesize".equalsIgnoreCase(key))         tablesize=value;
        if ("expire".equalsIgnoreCase(key))         expire=value;
      }
      if ((expire != null) && !containsOnlyNumbers(expire,timeEndChar)) {
        throw new InvalidParameterValueException("Failed LB in validation rule id: " + rule.getId() + " Cause: expire is not in timeformat: "+ expire);
      }
      if ((tablesize != null) && !containsOnlyNumbers(tablesize,"kmg")) {
        throw new InvalidParameterValueException("Failed LB in validation rule id: " + rule.getId() + " Cause: tablesize is not in size format: "+ tablesize);
      }
    }
 else     if (StickinessMethodType.AppCookieBased.getName().equalsIgnoreCase(stickinessPolicy.getMethodName())) {
      String cookieName=null;
      String length=null;
      String holdTime=null;
      for (      Pair<String,String> paramKV : paramsList) {
        String key=paramKV.first();
        String value=paramKV.second();
        if ("cookie-name".equalsIgnoreCase(key))         cookieName=value;
        if ("length".equalsIgnoreCase(key))         length=value;
        if ("holdtime".equalsIgnoreCase(key))         holdTime=value;
      }
      if ((length != null) && (!containsOnlyNumbers(length,null))) {
        throw new InvalidParameterValueException("Failed LB in validation rule id: " + rule.getId() + " Cause: length is not a number: "+ length);
      }
      if ((holdTime != null) && (!containsOnlyNumbers(holdTime,timeEndChar) && !containsOnlyNumbers(holdTime,null))) {
        throw new InvalidParameterValueException("Failed LB in validation rule id: " + rule.getId() + " Cause: holdtime is not in timeformat: "+ holdTime);
      }
    }
  }
  return true;
}
