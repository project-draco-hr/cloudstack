@attr(tags=['advanced', 'selfservice'])
def test_create_pvlan_network(self):
    self.debug('Test create pvlan network')
    createNetworkCmd = createNetwork.createNetworkCmd()
    createNetworkCmd.name = 'pvlan network'
    createNetworkCmd.displaytext = 'pvlan network'
    createNetworkCmd.netmask = '255.255.255.0'
    createNetworkCmd.gateway = '10.10.10.1'
    createNetworkCmd.startip = '10.10.10.10'
    createNetworkCmd.gateway = '10.10.10.20'
    createNetworkCmd.vlan = '1234'
    createNetworkCmd.isolatedpvlan = '567'
    createNetworkCmd.zoneid = self.zoneId
    createNetworkCmd.networkofferingid = self.networkOfferingId
    createNetworkResponse = self.apiClient.createNetwork(createNetworkCmd)
    self.networkId = createNetworkResponse.id
    self.broadcasttype = createNetworkResponse.broadcastdomaintype
    self.broadcasturi = createNetworkResponse.broadcasturi
    self.assertIsNotNone(createNetworkResponse.id, 'Network failed to create')
    self.assertTrue(createNetworkResponse.broadcastdomaintype, 'Pvlan')
    self.assertTrue(createNetworkResponse.broadcasturi, 'pvlan://1234-i567')
    self.debug('Clean up test pvlan network')
    deleteNetworkCmd = deleteNetwork.deleteNetworkCmd()
    deleteNetworkCmd.id = self.networkId
    self.apiClient.deleteNetwork(deleteNetworkCmd)
    createNetworkCmd.ip6gateway = 'fc00:1234::1'
    createNetworkCmd.ip6cidr = 'fc00:1234::/64'
    createNetworkCmd.startipv6 = 'fc00:1234::10'
    createNetworkCmd.endipv6 = 'fc00:1234::20'
    err = 0
    with self.assertRaises(Exception):
        self.apiClient.createNetwork(createNetworkCmd)
