{
  long zoneId=0L;
  long userId=event.getResourceId();
  if (EventTypes.EVENT_VPN_USER_ADD.equals(event.getType())) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Creating VPN user: " + userId + " for account: "+ event.getAccountId());
    }
    Account acct=m_accountDao.findByIdIncludingRemoved(event.getAccountId());
    String userName=event.getResourceName();
    UsageVPNUserVO vpnUser=new UsageVPNUserVO(zoneId,event.getAccountId(),acct.getDomainId(),userId,userName,event.getCreateDate(),null);
    m_usageVPNUserDao.persist(vpnUser);
  }
 else   if (EventTypes.EVENT_VPN_USER_REMOVE.equals(event.getType())) {
    SearchCriteria<UsageVPNUserVO> sc=m_usageVPNUserDao.createSearchCriteria();
    sc.addAnd("accountId",SearchCriteria.Op.EQ,event.getAccountId());
    sc.addAnd("userId",SearchCriteria.Op.EQ,userId);
    sc.addAnd("deleted",SearchCriteria.Op.NULL);
    List<UsageVPNUserVO> vuVOs=m_usageVPNUserDao.search(sc,null);
    if (vuVOs.size() > 1) {
      s_logger.warn("More that one usage entry for vpn user: " + userId + " assigned to account: "+ event.getAccountId()+ "; marking them all as deleted...");
    }
    for (    UsageVPNUserVO vuVO : vuVOs) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("deleting vpn user: " + vuVO.getUserId());
      }
      vuVO.setDeleted(event.getCreateDate());
      m_usageVPNUserDao.update(vuVO);
    }
  }
}
