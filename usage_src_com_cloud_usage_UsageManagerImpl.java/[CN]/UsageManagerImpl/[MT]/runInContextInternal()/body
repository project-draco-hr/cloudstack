{
  if (logger.isInfoEnabled()) {
    logger.info("starting usage job...");
  }
  long execTime=_jobExecTime.getTimeInMillis();
  long now=System.currentTimeMillis() + 2000;
  if (execTime < now) {
    _jobExecTime.add(Calendar.MINUTE,_aggregationDuration);
  }
  UsageJobVO job=_usageJobDao.isOwner(_hostname,_pid);
  if (job != null) {
    Calendar cal=Calendar.getInstance(_usageTimezone);
    cal.setTime(new Date());
    long startDate=0;
    long endDate=0;
    if (_aggregationDuration == DAILY_TIME) {
      cal.roll(Calendar.DAY_OF_YEAR,false);
      cal.set(Calendar.HOUR_OF_DAY,0);
      cal.set(Calendar.MINUTE,0);
      cal.set(Calendar.SECOND,0);
      cal.set(Calendar.MILLISECOND,0);
      startDate=cal.getTime().getTime();
      cal.roll(Calendar.DAY_OF_YEAR,true);
      cal.add(Calendar.MILLISECOND,-1);
      endDate=cal.getTime().getTime();
    }
 else     if (_aggregationDuration == HOURLY_TIME) {
      cal.roll(Calendar.HOUR_OF_DAY,false);
      cal.set(Calendar.MINUTE,0);
      cal.set(Calendar.SECOND,0);
      cal.set(Calendar.MILLISECOND,0);
      startDate=cal.getTime().getTime();
      cal.roll(Calendar.HOUR_OF_DAY,true);
      cal.add(Calendar.MILLISECOND,-1);
      endDate=cal.getTime().getTime();
    }
 else {
      endDate=cal.getTime().getTime();
      cal.add(Calendar.MINUTE,-1 * _aggregationDuration);
      startDate=cal.getTime().getTime();
    }
    parse(job,startDate,endDate);
  }
 else {
    if (logger.isDebugEnabled()) {
      logger.debug("Not owner of usage job, skipping...");
    }
  }
  if (logger.isInfoEnabled()) {
    logger.info("usage job complete");
  }
}
