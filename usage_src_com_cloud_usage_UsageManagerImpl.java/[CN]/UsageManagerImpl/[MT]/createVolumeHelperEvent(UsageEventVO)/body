{
  long volId=event.getResourceId();
  if (EventTypes.EVENT_VOLUME_CREATE.equals(event.getType()) || EventTypes.EVENT_VOLUME_RESIZE.equals(event.getType())) {
    SearchCriteria<UsageVolumeVO> sc=_usageVolumeDao.createSearchCriteria();
    sc.addAnd("accountId",SearchCriteria.Op.EQ,event.getAccountId());
    sc.addAnd("id",SearchCriteria.Op.EQ,volId);
    sc.addAnd("deleted",SearchCriteria.Op.NULL);
    List<UsageVolumeVO> volumesVOs=_usageVolumeDao.search(sc,null);
    if (volumesVOs.size() > 0) {
      s_logger.error("Found duplicate usage entry for volume: " + volId + " assigned to account: "+ event.getAccountId()+ "; marking as deleted...");
    }
    for (    UsageVolumeVO volumesVO : volumesVOs) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("deleting volume: " + volumesVO.getId() + " from account: "+ volumesVO.getAccountId());
      }
      volumesVO.setDeleted(event.getCreateDate());
      _usageVolumeDao.update(volumesVO);
    }
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("create volume with id : " + volId + " for account: "+ event.getAccountId());
    }
    Account acct=_accountDao.findByIdIncludingRemoved(event.getAccountId());
    UsageVolumeVO volumeVO=new UsageVolumeVO(volId,event.getZoneId(),event.getAccountId(),acct.getDomainId(),event.getOfferingId(),event.getTemplateId(),event.getSize(),event.getCreateDate(),null);
    _usageVolumeDao.persist(volumeVO);
  }
 else   if (EventTypes.EVENT_VOLUME_DELETE.equals(event.getType())) {
    SearchCriteria<UsageVolumeVO> sc=_usageVolumeDao.createSearchCriteria();
    sc.addAnd("accountId",SearchCriteria.Op.EQ,event.getAccountId());
    sc.addAnd("id",SearchCriteria.Op.EQ,volId);
    sc.addAnd("deleted",SearchCriteria.Op.NULL);
    List<UsageVolumeVO> volumesVOs=_usageVolumeDao.search(sc,null);
    if (volumesVOs.size() > 1) {
      s_logger.warn("More that one usage entry for volume: " + volId + " assigned to account: "+ event.getAccountId()+ "; marking them all as deleted...");
    }
    for (    UsageVolumeVO volumesVO : volumesVOs) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("deleting volume: " + volumesVO.getId() + " from account: "+ volumesVO.getAccountId());
      }
      volumesVO.setDeleted(event.getCreateDate());
      _usageVolumeDao.update(volumesVO);
    }
  }
}
