{
  long zoneId=-1L;
  long id=event.getResourceId();
  if (EventTypes.EVENT_NET_RULE_ADD.equals(event.getType())) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Creating port forwarding rule : " + id + " for account: "+ event.getAccountId());
    }
    zoneId=event.getZoneId();
    Account acct=m_accountDao.findByIdIncludingRemoved(event.getAccountId());
    UsagePortForwardingRuleVO pfVO=new UsagePortForwardingRuleVO(id,zoneId,event.getAccountId(),acct.getDomainId(),event.getCreateDate(),null);
    m_usagePortForwardingRuleDao.persist(pfVO);
  }
 else   if (EventTypes.EVENT_NET_RULE_DELETE.equals(event.getType())) {
    SearchCriteria<UsagePortForwardingRuleVO> sc=m_usagePortForwardingRuleDao.createSearchCriteria();
    sc.addAnd("accountId",SearchCriteria.Op.EQ,event.getAccountId());
    sc.addAnd("id",SearchCriteria.Op.EQ,id);
    sc.addAnd("deleted",SearchCriteria.Op.NULL);
    List<UsagePortForwardingRuleVO> pfVOs=m_usagePortForwardingRuleDao.search(sc,null);
    if (pfVOs.size() > 1) {
      s_logger.warn("More that one usage entry for port forwarding rule: " + id + " assigned to account: "+ event.getAccountId()+ "; marking them all as deleted...");
    }
    for (    UsagePortForwardingRuleVO pfVO : pfVOs) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("deleting port forwarding rule: " + pfVO.getId() + " from account: "+ pfVO.getAccountId());
      }
      pfVO.setDeleted(event.getCreateDate());
      m_usagePortForwardingRuleDao.update(pfVO);
    }
  }
}
