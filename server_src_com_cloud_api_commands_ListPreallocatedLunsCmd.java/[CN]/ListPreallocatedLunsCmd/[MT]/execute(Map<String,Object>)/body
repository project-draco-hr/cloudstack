{
  String targetIqn=(String)params.get(BaseCmd.Properties.TARGET_IQN.getName());
  String scope=(String)params.get(BaseCmd.Properties.SCOPE.getName());
  Integer page=(Integer)params.get(BaseCmd.Properties.PAGE.getName());
  Integer pageSize=(Integer)params.get(BaseCmd.Properties.PAGESIZE.getName());
  Long startIndex=Long.valueOf(0);
  int pageSizeNum=50;
  if (pageSize != null) {
    pageSizeNum=pageSize.intValue();
  }
  if (page != null) {
    int pageNum=page.intValue();
    if (pageNum > 0) {
      startIndex=Long.valueOf(pageSizeNum * (pageNum - 1));
    }
  }
  Criteria c=new Criteria("id",Boolean.TRUE,startIndex,Long.valueOf(pageSizeNum));
  if (targetIqn != null) {
    c.addCriteria(Criteria.TARGET_IQN,targetIqn);
  }
  if (scope != null) {
    c.addCriteria(Criteria.SCOPE,scope);
  }
  List<PreallocatedLunVO> preAllocatedLuns=getManagementServer().getPreAllocatedLuns(c);
  if (preAllocatedLuns == null)   throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"unable to find pre allocated luns");
  List<Pair<String,Object>> preAllocatedLunTags=new ArrayList<Pair<String,Object>>();
  Object[] sTag=new Object[preAllocatedLuns.size()];
  int i=0;
  for (  PreallocatedLunVO lun : preAllocatedLuns) {
    List<Pair<String,Object>> lunData=new ArrayList<Pair<String,Object>>();
    lunData.add(new Pair<String,Object>(BaseCmd.Properties.ID.getName(),lun.getId()));
    lunData.add(new Pair<String,Object>(BaseCmd.Properties.VOLUME_ID.getName(),lun.getVolumeId()));
    lunData.add(new Pair<String,Object>(BaseCmd.Properties.ZONE_ID.getName(),lun.getDataCenterId()));
    lunData.add(new Pair<String,Object>(BaseCmd.Properties.LUN.getName(),lun.getLun()));
    lunData.add(new Pair<String,Object>(BaseCmd.Properties.PORTAL.getName(),lun.getPortal()));
    lunData.add(new Pair<String,Object>(BaseCmd.Properties.SIZE.getName(),lun.getSize()));
    lunData.add(new Pair<String,Object>(BaseCmd.Properties.TAKEN.getName(),lun.getTaken()));
    lunData.add(new Pair<String,Object>(BaseCmd.Properties.TARGET_IQN.getName(),lun.getTargetIqn()));
    sTag[i++]=lunData;
  }
  Pair<String,Object> lunTag=new Pair<String,Object>("preallocatedlun",sTag);
  preAllocatedLunTags.add(lunTag);
  return preAllocatedLunTags;
}
