{
  s_logger.debug("Trying to find a potenial host and associated storage pools from the suitable host/pool lists for this VM");
  boolean hostCanAccessPool=false;
  Map<Volume,StoragePool> storage=new HashMap<Volume,StoragePool>();
  for (  Host potentialHost : suitableHosts) {
    for (    Volume vol : suitableVolumeStoragePools.keySet()) {
      s_logger.debug("Checking if host: " + potentialHost.getId() + " can access any suitable storage pool for volume: "+ vol.getVolumeType());
      List<StoragePool> volumePoolList=suitableVolumeStoragePools.get(vol);
      hostCanAccessPool=false;
      for (      StoragePool potentialSPool : volumePoolList) {
        if (hostCanAccessSPool(potentialHost,potentialSPool)) {
          storage.put(vol,potentialSPool);
          hostCanAccessPool=true;
          break;
        }
      }
      if (!hostCanAccessPool) {
        break;
      }
    }
    if (hostCanAccessPool) {
      s_logger.debug("Found a potential host " + "id: " + potentialHost.getId() + " name: "+ potentialHost.getName()+ " and associated storage pools for this VM");
      return new Pair<Host,Map<Volume,StoragePool>>(potentialHost,storage);
    }
  }
  s_logger.debug("Could not find a potential host that has associated storage pools from the suitable host/pool lists for this VM");
  return null;
}
