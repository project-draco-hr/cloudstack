{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Listing clusters in order of aggregate capacity, that have (atleast one host with) enough CPU and RAM capacity under this " + (isZone ? "Zone: " : "Pod: ") + id);
  }
  String capacityTypeToOrder=configDao.getValue(Config.HostCapacityTypeToOrderClusters.key());
  short capacityType=Capacity.CAPACITY_TYPE_CPU;
  if ("RAM".equalsIgnoreCase(capacityTypeToOrder)) {
    capacityType=Capacity.CAPACITY_TYPE_MEMORY;
  }
  List<Long> clusterIdswithEnoughCapacity=capacityDao.listClustersInZoneOrPodByHostCapacities(id,requiredCpu,requiredRam,capacityType,isZone);
  if (s_logger.isTraceEnabled()) {
    s_logger.trace("ClusterId List having enough CPU and RAM capacity: " + clusterIdswithEnoughCapacity);
  }
  Pair<List<Long>,Map<Long,Double>> result=capacityDao.orderClustersByAggregateCapacity(id,capacityType,isZone);
  List<Long> clusterIdsOrderedByAggregateCapacity=result.first();
  if (s_logger.isTraceEnabled()) {
    s_logger.trace("ClusterId List in order of aggregate capacity: " + clusterIdsOrderedByAggregateCapacity);
  }
  clusterIdsOrderedByAggregateCapacity.retainAll(clusterIdswithEnoughCapacity);
  if (s_logger.isTraceEnabled()) {
    s_logger.trace("ClusterId List having enough CPU and RAM capacity & in order of aggregate capacity: " + clusterIdsOrderedByAggregateCapacity);
  }
  return result;
}
