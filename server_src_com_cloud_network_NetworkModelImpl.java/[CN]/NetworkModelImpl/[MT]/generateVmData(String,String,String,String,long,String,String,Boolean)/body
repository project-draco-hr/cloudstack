{
  final List<String[]> vmData=new ArrayList<String[]>();
  if (userData != null) {
    vmData.add(new String[]{"userdata","user-data",new String(Base64.decodeBase64(userData),StringUtils.getPreferredCharset())});
  }
  vmData.add(new String[]{"metadata","service-offering",StringUtils.unicodeEscape(serviceOffering)});
  vmData.add(new String[]{"metadata","availability-zone",StringUtils.unicodeEscape(zoneName)});
  vmData.add(new String[]{"metadata","local-hostname",StringUtils.unicodeEscape(vmName)});
  vmData.add(new String[]{"metadata","instance-id",vmName});
  vmData.add(new String[]{"metadata","vm-id",String.valueOf(vmId)});
  vmData.add(new String[]{"metadata","public-keys",publicKey});
  String cloudIdentifier=_configDao.getValue("cloud.identifier");
  if (cloudIdentifier == null) {
    cloudIdentifier="";
  }
 else {
    cloudIdentifier="CloudStack-{" + cloudIdentifier + "}";
  }
  vmData.add(new String[]{"metadata","cloud-identifier",cloudIdentifier});
  if (password != null && !password.isEmpty() && !password.equals("saved_password")) {
    if (isWindows) {
      MessageDigest md5=null;
      try {
        md5=MessageDigest.getInstance("MD5");
      }
 catch (      NoSuchAlgorithmException e) {
        s_logger.error("Unexpected exception " + e.getMessage(),e);
        throw new CloudRuntimeException("Unable to get MD5 MessageDigest",e);
      }
      md5.reset();
      md5.update(password.getBytes(StringUtils.getPreferredCharset()));
      byte[] digest=md5.digest();
      BigInteger bigInt=new BigInteger(1,digest);
      String hashtext=bigInt.toString(16);
      vmData.add(new String[]{"password","vm-password-md5checksum",hashtext});
    }
    vmData.add(new String[]{"password","vm-password",password});
  }
  return vmData;
}
