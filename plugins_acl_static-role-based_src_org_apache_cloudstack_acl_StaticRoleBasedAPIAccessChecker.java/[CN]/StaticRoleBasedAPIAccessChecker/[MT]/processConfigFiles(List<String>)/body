{
  Properties preProcessedCommands=new Properties();
  for (  String configFile : configFiles) {
    File commandsFile=PropertiesUtil.findConfigFile(configFile);
    if (commandsFile != null) {
      try {
        preProcessedCommands.load(new FileInputStream(commandsFile));
      }
 catch (      FileNotFoundException fnfex) {
        InputStream stream=PropertiesUtil.openStreamFromURL(configFile);
        if (stream != null) {
          try {
            preProcessedCommands.load(stream);
          }
 catch (          IOException e) {
            s_logger.error("IO Exception, unable to find properties file:",fnfex);
          }
        }
 else {
          s_logger.error("Unable to find properites file",fnfex);
        }
      }
catch (      IOException ioe) {
        s_logger.error("IO Exception loading properties file",ioe);
      }
    }
  }
  for (  Object key : preProcessedCommands.keySet()) {
    String preProcessedCommand=preProcessedCommands.getProperty((String)key);
    int splitIndex=preProcessedCommand.lastIndexOf(";");
    String mask=preProcessedCommand.substring(splitIndex + 1);
    try {
      short cmdPermissions=Short.parseShort(mask);
      if ((cmdPermissions & Admin.getValue()) != 0) {
        s_adminCommands.add((String)key);
      }
      if ((cmdPermissions & ResourceAdmin.getValue()) != 0) {
        s_resourceDomainAdminCommands.add((String)key);
      }
      if ((cmdPermissions & DomainAdmin.getValue()) != 0) {
        s_resellerCommands.add((String)key);
      }
      if ((cmdPermissions & User.getValue()) != 0) {
        s_userCommands.add((String)key);
      }
      s_allCommands.addAll(s_adminCommands);
      s_allCommands.addAll(s_resourceDomainAdminCommands);
      s_allCommands.addAll(s_userCommands);
      s_allCommands.addAll(s_resellerCommands);
    }
 catch (    NumberFormatException nfe) {
      s_logger.info("Malformed command.properties permissions value, key = " + key + ", value = "+ preProcessedCommand);
    }
  }
}
