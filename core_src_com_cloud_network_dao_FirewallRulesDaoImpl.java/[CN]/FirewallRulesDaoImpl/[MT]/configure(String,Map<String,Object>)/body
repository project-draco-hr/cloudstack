{
  if (!super.configure(name,params)) {
    return false;
  }
  SELECT_IP_FORWARDINGS_BY_USERID_SQL=buildSelectByUserIdSql();
  if (s_logger.isDebugEnabled()) {
    s_logger.debug(SELECT_IP_FORWARDINGS_BY_USERID_SQL);
  }
  SELECT_IP_FORWARDINGS_BY_USERID_AND_DCID_SQL=buildSelectByUserIdAndDatacenterIdSql();
  if (s_logger.isDebugEnabled()) {
    s_logger.debug(SELECT_IP_FORWARDINGS_BY_USERID_AND_DCID_SQL);
  }
  SELECT_LB_FORWARDINGS_BY_USERID_AND_DCID_SQL=buildSelectByUserIdAndDatacenterIdForLBSql();
  if (s_logger.isDebugEnabled()) {
    s_logger.debug(SELECT_LB_FORWARDINGS_BY_USERID_AND_DCID_SQL);
  }
  FWByIPSearch=createSearchBuilder();
  FWByIPSearch.and("publicIpAddress",FWByIPSearch.entity().getPublicIpAddress(),SearchCriteria.Op.EQ);
  FWByIPSearch.done();
  FWByIPAndForwardingSearch=createSearchBuilder();
  FWByIPAndForwardingSearch.and("publicIpAddress",FWByIPAndForwardingSearch.entity().getPublicIpAddress(),SearchCriteria.Op.EQ);
  FWByIPAndForwardingSearch.and("forwarding",FWByIPAndForwardingSearch.entity().isForwarding(),SearchCriteria.Op.EQ);
  FWByIPAndForwardingSearch.done();
  FWByIPPortAndForwardingSearch=createSearchBuilder();
  FWByIPPortAndForwardingSearch.and("publicIpAddress",FWByIPPortAndForwardingSearch.entity().getPublicIpAddress(),SearchCriteria.Op.EQ);
  FWByIPPortAndForwardingSearch.and("publicPort",FWByIPPortAndForwardingSearch.entity().getPublicPort(),SearchCriteria.Op.EQ);
  FWByIPPortAndForwardingSearch.and("forwarding",FWByIPPortAndForwardingSearch.entity().isForwarding(),SearchCriteria.Op.EQ);
  FWByIPPortAndForwardingSearch.done();
  FWByIPPortProtoSearch=createSearchBuilder();
  FWByIPPortProtoSearch.and("publicIpAddress",FWByIPPortProtoSearch.entity().getPublicIpAddress(),SearchCriteria.Op.EQ);
  FWByIPPortProtoSearch.and("publicPort",FWByIPPortProtoSearch.entity().getPublicPort(),SearchCriteria.Op.EQ);
  FWByIPPortProtoSearch.and("protocol",FWByIPPortProtoSearch.entity().getProtocol(),SearchCriteria.Op.EQ);
  FWByIPPortProtoSearch.done();
  FWByIPPortAlgoSearch=createSearchBuilder();
  FWByIPPortAlgoSearch.and("publicIpAddress",FWByIPPortAlgoSearch.entity().getPublicIpAddress(),SearchCriteria.Op.EQ);
  FWByIPPortAlgoSearch.and("publicPort",FWByIPPortAlgoSearch.entity().getPublicPort(),SearchCriteria.Op.EQ);
  FWByIPPortAlgoSearch.and("algorithm",FWByIPPortAlgoSearch.entity().getAlgorithm(),SearchCriteria.Op.EQ);
  FWByIPPortAlgoSearch.done();
  FWByPrivateIPSearch=createSearchBuilder();
  FWByPrivateIPSearch.and("privateIpAddress",FWByPrivateIPSearch.entity().getPrivateIpAddress(),SearchCriteria.Op.EQ);
  FWByPrivateIPSearch.done();
  RulesExcludingPubIpPort=createSearchBuilder();
  RulesExcludingPubIpPort.and("publicIpAddress",RulesExcludingPubIpPort.entity().getPrivateIpAddress(),SearchCriteria.Op.EQ);
  RulesExcludingPubIpPort.and("groupId",RulesExcludingPubIpPort.entity().getGroupId(),SearchCriteria.Op.NEQ);
  RulesExcludingPubIpPort.and("forwarding",RulesExcludingPubIpPort.entity().isForwarding(),SearchCriteria.Op.EQ);
  RulesExcludingPubIpPort.done();
  FWByGroupId=createSearchBuilder();
  FWByGroupId.and("groupId",FWByGroupId.entity().getGroupId(),SearchCriteria.Op.EQ);
  FWByGroupId.and("forwarding",FWByGroupId.entity().isForwarding(),SearchCriteria.Op.EQ);
  FWByGroupId.done();
  FWByGroupAndPrivateIp=createSearchBuilder();
  FWByGroupAndPrivateIp.and("groupId",FWByGroupAndPrivateIp.entity().getGroupId(),SearchCriteria.Op.EQ);
  FWByGroupAndPrivateIp.and("privateIpAddress",FWByGroupAndPrivateIp.entity().getPrivateIpAddress(),SearchCriteria.Op.EQ);
  FWByGroupAndPrivateIp.and("forwarding",FWByGroupAndPrivateIp.entity().isForwarding(),SearchCriteria.Op.EQ);
  FWByGroupAndPrivateIp.done();
  FWByPrivateIpPrivatePortPublicIpPublicPortSearch=createSearchBuilder();
  FWByPrivateIpPrivatePortPublicIpPublicPortSearch.and("publicIpAddress",FWByPrivateIpPrivatePortPublicIpPublicPortSearch.entity().getPublicIpAddress(),SearchCriteria.Op.EQ);
  FWByPrivateIpPrivatePortPublicIpPublicPortSearch.and("privateIpAddress",FWByPrivateIpPrivatePortPublicIpPublicPortSearch.entity().getPrivateIpAddress(),SearchCriteria.Op.EQ);
  FWByPrivateIpPrivatePortPublicIpPublicPortSearch.and("privatePort",FWByPrivateIpPrivatePortPublicIpPublicPortSearch.entity().getPrivatePort(),SearchCriteria.Op.NULL);
  FWByPrivateIpPrivatePortPublicIpPublicPortSearch.and("publicPort",FWByPrivateIpPrivatePortPublicIpPublicPortSearch.entity().getPublicPort(),SearchCriteria.Op.NULL);
  FWByPrivateIpPrivatePortPublicIpPublicPortSearch.done();
  OneToOneNATSearch=createSearchBuilder();
  OneToOneNATSearch.and("publicIpAddress",OneToOneNATSearch.entity().getPublicIpAddress(),SearchCriteria.Op.EQ);
  OneToOneNATSearch.and("protocol",OneToOneNATSearch.entity().getProtocol(),SearchCriteria.Op.EQ);
  OneToOneNATSearch.done();
  FWByIpForLB=createSearchBuilder();
  FWByIpForLB.and("publicIpAddress",FWByIpForLB.entity().getPublicIpAddress(),SearchCriteria.Op.EQ);
  FWByIpForLB.and("groupId",FWByIpForLB.entity().getGroupId(),SearchCriteria.Op.NNULL);
  FWByIpForLB.and("forwarding",FWByIpForLB.entity().isForwarding(),SearchCriteria.Op.EQ);
  FWByIpForLB.done();
  return true;
}
