{
  PhysicalNetworkVO physnet=mock(PhysicalNetworkVO.class);
  when(physnetdao.findById(anyLong())).thenReturn(physnet);
  when(physnet.getIsolationMethods()).thenReturn(Arrays.asList(new String[]{"VXLAN"}));
  when(physnet.getId()).thenReturn(42L);
  NetworkOffering offering=mock(NetworkOffering.class);
  when(offering.getId()).thenReturn(42L);
  when(offering.getTrafficType()).thenReturn(TrafficType.Guest);
  when(offering.getGuestType()).thenReturn(GuestType.Isolated);
  NetworkVO network=mock(NetworkVO.class);
  when(network.getName()).thenReturn("testnetwork");
  when(network.getState()).thenReturn(State.Implementing);
  when(network.getPhysicalNetworkId()).thenReturn(42L);
  DeployDestination dest=mock(DeployDestination.class);
  DataCenter dc=mock(DataCenter.class);
  when(dest.getDataCenter()).thenReturn(dc);
  when(netmodel.findPhysicalNetworkId(anyLong(),(String)any(),(TrafficType)any())).thenReturn(42L);
  when(dcdao.allocateVnet(anyLong(),anyLong(),anyLong(),(String)any(),eq(true))).thenReturn("42");
  doNothing().when(guru).allocateVnetComplete((Network)any(),(NetworkVO)any(),anyLong(),anyLong(),(String)any(),eq("42"));
  Domain dom=mock(Domain.class);
  when(dom.getName()).thenReturn("domain");
  Account acc=mock(Account.class);
  when(acc.getAccountName()).thenReturn("accountname");
  ReservationContext res=mock(ReservationContext.class);
  when(res.getDomain()).thenReturn(dom);
  when(res.getAccount()).thenReturn(acc);
  Network implementednetwork=guru.implement(network,offering,dest,res);
  assertTrue(implementednetwork != null);
}
