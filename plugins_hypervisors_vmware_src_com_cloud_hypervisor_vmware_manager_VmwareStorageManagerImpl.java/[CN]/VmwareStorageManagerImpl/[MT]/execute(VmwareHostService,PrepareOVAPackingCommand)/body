{
  String secStorageUrl=((PrepareOVAPackingCommand)cmd).getSecondaryStorageUrl();
  assert(secStorageUrl != null);
  String installPath=cmd.getTemplatePath();
  String details=null;
  boolean success=false;
  String ovafileName="";
  s_logger.info("Fang: execute OVAPacking cmd at vmwareMngImpl. ");
  String secondaryMountPoint=_mountService.getMountPoint(secStorageUrl);
  String installFullPath=secondaryMountPoint + "/" + installPath;
  String templateName=installFullPath;
  s_logger.info("Fang: execute vmwareMgrImpl: templateNAme " + templateName);
  try {
    if (templateName.endsWith(".ova")) {
      if (new File(templateName).exists()) {
        details="OVA files exists. succeed. ";
        return new Answer(cmd,true,details);
      }
 else {
        if (new File(templateName + ".meta").exists()) {
          s_logger.info("Fang: execute vmwareMgrImpl: getfromMeta " + templateName);
          ovafileName=getOVAFromMetafile(templateName + ".meta");
          details="OVA file in meta file is " + ovafileName;
          return new Answer(cmd,true,details);
        }
 else {
          String msg="Unable to find ova meta or ova file to prepare template (vmware)";
          s_logger.error(msg);
          throw new Exception(msg);
        }
      }
    }
  }
 catch (  Throwable e) {
    if (e instanceof RemoteException) {
      s_logger.error("Unable to connect to remote service ");
      details="Unable to connect to remote service ";
      return new Answer(cmd,false,details);
    }
    String msg="Unable to execute PrepareOVAPackingCommand due to exception";
    s_logger.error(msg,e);
    return new Answer(cmd,false,details);
  }
  return new Answer(cmd,true,details);
}
