{
  DataStoreTO storeTO=template.getDataStore();
  if (!(storeTO instanceof NfsTO)) {
    s_logger.debug("can only handle nfs storage, when create ova from volume");
    return null;
  }
  NfsTO nfsStore=(NfsTO)storeTO;
  String secStorageUrl=nfsStore.getUrl();
  assert(secStorageUrl != null);
  String installPath=template.getPath();
  String ovafileName="";
  String secondaryMountPoint=_mountService.getMountPoint(secStorageUrl);
  String installFullPath=secondaryMountPoint + "/" + installPath;
  String templateName=installFullPath;
  try {
    if (templateName.endsWith(".ova")) {
      if (new File(templateName).exists()) {
        s_logger.debug("OVA files exists. succeed. ");
        return templateName;
      }
 else {
        if (new File(templateName + ".meta").exists()) {
          ovafileName=getOVAFromMetafile(templateName + ".meta");
          s_logger.debug("OVA file in meta file is " + ovafileName);
          return installPath;
        }
 else {
          String msg="Unable to find ova meta or ova file to prepare template (vmware)";
          s_logger.error(msg);
          throw new Exception(msg);
        }
      }
    }
  }
 catch (  Throwable e) {
    s_logger.debug("Failed to create ova: " + e.toString());
  }
  return null;
}
