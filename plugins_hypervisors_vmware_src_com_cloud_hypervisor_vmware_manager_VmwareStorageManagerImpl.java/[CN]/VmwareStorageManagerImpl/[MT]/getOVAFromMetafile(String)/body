{
  File ova_metafile=new File(metafileName);
  Properties props=null;
  FileInputStream strm=null;
  String ovaFileName="";
  s_logger.info("Fang: getOVAfromMetaFile: metafileName " + metafileName);
  try {
    strm=new FileInputStream(ova_metafile);
    if (null == strm) {
      String msg="Cannot read ova meat file.  Error";
      s_logger.error(msg);
      throw new Exception(msg);
    }
    s_logger.info("Fang: getOVAfromMetaFile: load strm ");
    if (null != ova_metafile) {
      props=new Properties();
      props.load(strm);
      if (props == null) {
        s_logger.info("Fang: getOVAfromMetaFile: props is null. ");
      }
    }
    if (null != props) {
      ovaFileName=props.getProperty("ova.filename");
      s_logger.info("Fang: ovafilename" + ovaFileName);
      String ovfFileName=props.getProperty("ovf");
      s_logger.info("Fang: ovffilename" + ovfFileName);
      int diskNum=Integer.parseInt(props.getProperty("numDisks"));
      if (diskNum <= 0) {
        String msg="VMDK disk file number is 0. Error";
        s_logger.error(msg);
        throw new Exception(msg);
      }
      String[] disks=new String[diskNum];
      for (int i=0; i < diskNum; i++) {
        String diskNameKey="disk1.name";
        disks[i]=props.getProperty(diskNameKey);
        s_logger.info("Fang: diskname " + disks[i]);
      }
      String exportDir=ova_metafile.getParent();
      s_logger.info("Fang: exportDir: " + exportDir);
      s_logger.info("Fang: Sync file system before we package OVA..., before tar ");
      s_logger.info("Fang: ova: " + ovaFileName + ", ovf:"+ ovfFileName+ ", vmdk:"+ disks[0]+ ".");
      Script commandSync=new Script(true,"sync",0,s_logger);
      commandSync.execute();
      Script command=new Script(false,"tar",0,s_logger);
      command.setWorkDir(exportDir);
      command.add("-cf",ovaFileName);
      command.add(ovfFileName);
      for (      String diskName : disks) {
        command.add(diskName);
      }
      command.execute();
      s_logger.info("Fang: Package OVA for template in dir: " + exportDir + "cmd: "+ command.toString());
      if ((new File(exportDir + ovaFileName)).exists()) {
        s_logger.info("Fang: ova file is created and ready to extract ");
        return (ovaFileName);
      }
 else {
        String msg=exportDir + File.separator + ovaFileName+ ".ova is not created as expected";
        s_logger.error(msg);
        throw new Exception(msg);
      }
    }
 else {
      String msg="Error reading the ova meta file: " + metafileName;
      s_logger.error(msg);
      throw new Exception(msg);
    }
  }
 catch (  Exception e) {
    return null;
  }
 finally {
    if (strm != null) {
      try {
        strm.close();
      }
 catch (      Exception e) {
      }
    }
  }
}
