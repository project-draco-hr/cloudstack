{
  File ova_metafile=new File(metafileName);
  Properties props=null;
  FileInputStream strm=null;
  String ovaFileName="";
  s_logger.info("getOVAfromMetaFile: " + metafileName);
  try {
    strm=new FileInputStream(ova_metafile);
    s_logger.info("loading properties from ova meta file: " + metafileName);
    props=new Properties();
    props.load(strm);
    ovaFileName=props.getProperty("ova.filename");
    s_logger.info("ovafilename: " + ovaFileName);
    String ovfFileName=props.getProperty("ovf");
    s_logger.info("ovffilename: " + ovfFileName);
    int diskNum=Integer.parseInt(props.getProperty("numDisks"));
    if (diskNum <= 0) {
      String msg="VMDK disk file number is 0. Error";
      s_logger.error(msg);
      throw new Exception(msg);
    }
    String[] disks=new String[diskNum];
    for (int i=0; i < diskNum; i++) {
      String diskNameKey="disk1.name";
      disks[i]=props.getProperty(diskNameKey);
      s_logger.info("diskname " + disks[i]);
    }
    String exportDir=ova_metafile.getParent();
    s_logger.info("exportDir: " + exportDir);
    s_logger.info("Sync file system before we package OVA..., before tar ");
    s_logger.info("ova: " + ovaFileName + ", ovf:"+ ovfFileName+ ", vmdk:"+ disks[0]+ ".");
    Script commandSync=new Script(true,"sync",0,s_logger);
    commandSync.execute();
    Script command=new Script(false,"tar",0,s_logger);
    command.setWorkDir(exportDir);
    command.add("-cf",ovaFileName);
    command.add(ovfFileName);
    for (    String diskName : disks) {
      command.add(diskName);
    }
    command.execute();
    s_logger.info("Package OVA for template in dir: " + exportDir + "cmd: "+ command.toString());
    if ((new File(exportDir + ovaFileName)).exists()) {
      s_logger.info("ova file is created and ready to extract ");
      return (ovaFileName);
    }
 else {
      String msg=exportDir + File.separator + ovaFileName+ ".ova is not created as expected";
      s_logger.error(msg);
      throw new Exception(msg);
    }
  }
 catch (  Exception e) {
    s_logger.error("Exception in getOVAFromMetafile",e);
    return null;
  }
 finally {
    if (strm != null) {
      try {
        strm.close();
      }
 catch (      Exception e) {
      }
    }
  }
}
