{
  Long maxTemplateSizeInBytes=getMaxTemplateSizeInBytes();
  VirtualMachineTemplate tmpl=_templateDao.findById(data.getId());
  DownloadCommand dcmd=new DownloadCommand((TemplateObjectTO)(data.getTO()),maxTemplateSizeInBytes);
  dcmd.setProxy(getHttpProxy());
  EndPoint ep=_epSelector.select(data);
  if (ep == null) {
    s_logger.warn("There is no secondary storage VM for downloading template to image store " + dataStore.getName());
    return;
  }
  CreateContext<CreateCmdResult> context=new CreateContext<CreateCmdResult>(callback,data);
  AsyncCallbackDispatcher<SwiftImageStoreDriverImpl,DownloadAnswer> caller=AsyncCallbackDispatcher.create(this);
  caller.setContext(context);
  if (data.getType() == DataObjectType.TEMPLATE) {
    caller.setCallback(caller.getTarget().createTemplateAsyncCallback(null,null));
  }
 else   if (data.getType() == DataObjectType.VOLUME) {
    caller.setCallback(caller.getTarget().createVolumeAsyncCallback(null,null));
  }
  ep.sendMessageAsync(dcmd,caller);
}
