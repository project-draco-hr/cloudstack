{
  PreparedStatement pstmt=null;
  ResultSet rs=null;
  PreparedStatement pstmtUpdate=null;
  try {
    String xenPublicLabel=getNetworkLabelFromConfig(conn,"xen.public.network.device");
    String xenPrivateLabel=getNetworkLabelFromConfig(conn,"xen.private.network.device");
    String xenStorageLabel=getNetworkLabelFromConfig(conn,"xen.storage.network.device1");
    String xenGuestLabel=getNetworkLabelFromConfig(conn,"xen.guest.network.device");
    String kvmPublicLabel=getNetworkLabelFromConfig(conn,"kvm.public.network.device");
    String kvmPrivateLabel=getNetworkLabelFromConfig(conn,"kvm.private.network.device");
    String kvmGuestLabel=getNetworkLabelFromConfig(conn,"kvm.guest.network.device");
    String vmwarePublicLabel=getNetworkLabelFromConfig(conn,"vmware.public.vswitch");
    String vmwarePrivateLabel=getNetworkLabelFromConfig(conn,"vmware.private.vswitch");
    String vmwareGuestLabel=getNetworkLabelFromConfig(conn,"vmware.guest.vswitch");
    pstmt=conn.prepareStatement("SELECT id, domain_id, networktype, vnet, name FROM `cloud`.`data_center`");
    rs=pstmt.executeQuery();
    while (rs.next()) {
      long zoneId=rs.getLong(1);
      Long domainId=rs.getLong(2);
      String networkType=rs.getString(3);
      String vnet=rs.getString(4);
      String zoneName=rs.getString(5);
      PreparedStatement pstmt2=conn.prepareStatement("SELECT distinct tag FROM `cloud`.`network_tags` t JOIN `cloud`.`networks` n where t.network_id = n.id and n.data_center_id = " + zoneId);
      ResultSet rsTags=pstmt2.executeQuery();
      if (rsTags.next()) {
        boolean isFirstPhysicalNtwk=true;
        do {
          String guestNetworkTag=rsTags.getString(1);
          long physicalNetworkId=addPhysicalNetworkToZone(conn,zoneId,zoneName,networkType,(isFirstPhysicalNtwk) ? vnet : null,domainId);
          if (isFirstPhysicalNtwk) {
            addTrafficType(conn,physicalNetworkId,"Public",xenPublicLabel,kvmPublicLabel,vmwarePublicLabel);
            addTrafficType(conn,physicalNetworkId,"Management",xenPrivateLabel,kvmPrivateLabel,vmwarePrivateLabel);
            addTrafficType(conn,physicalNetworkId,"Storage",xenStorageLabel,null,null);
          }
          addTrafficType(conn,physicalNetworkId,"Guest",guestNetworkTag,kvmGuestLabel,vmwareGuestLabel);
          addDefaultServiceProviders(conn,physicalNetworkId,zoneId);
          PreparedStatement pstmt3=conn.prepareStatement("SELECT network_id FROM `cloud`.`network_tags` where tag = '" + guestNetworkTag + "'");
          ResultSet rsNet=pstmt3.executeQuery();
          s_logger.debug("Adding PhysicalNetwork to VLAN");
          s_logger.debug("Adding PhysicalNetwork to user_ip_address");
          s_logger.debug("Adding PhysicalNetwork to networks");
          while (rsNet.next()) {
            Long networkId=rsNet.getLong(1);
            addPhysicalNtwk_To_Ntwk_IP_Vlan(conn,physicalNetworkId,networkId);
          }
          pstmt3.close();
          if (isFirstPhysicalNtwk) {
            s_logger.debug("Adding PhysicalNetwork to op_dc_vnet_alloc");
            String updateVnet="UPDATE `cloud`.`op_dc_vnet_alloc` SET physical_network_id = " + physicalNetworkId + " WHERE data_center_id = "+ zoneId;
            pstmtUpdate=conn.prepareStatement(updateVnet);
            pstmtUpdate.executeUpdate();
            pstmtUpdate.close();
          }
          isFirstPhysicalNtwk=false;
        }
 while (rsTags.next());
        pstmt2.close();
      }
 else {
        long physicalNetworkId=addPhysicalNetworkToZone(conn,zoneId,zoneName,networkType,vnet,domainId);
        addTrafficType(conn,physicalNetworkId,"Public",xenPublicLabel,kvmPublicLabel,vmwarePublicLabel);
        addTrafficType(conn,physicalNetworkId,"Management",xenPrivateLabel,kvmPrivateLabel,vmwarePrivateLabel);
        addTrafficType(conn,physicalNetworkId,"Storage",xenStorageLabel,null,null);
        addTrafficType(conn,physicalNetworkId,"Guest",xenGuestLabel,kvmGuestLabel,vmwareGuestLabel);
        addDefaultServiceProviders(conn,physicalNetworkId,zoneId);
        s_logger.debug("Adding PhysicalNetwork to op_dc_vnet_alloc");
        String updateVnet="UPDATE `cloud`.`op_dc_vnet_alloc` SET physical_network_id = " + physicalNetworkId + " WHERE data_center_id = "+ zoneId;
        pstmtUpdate=conn.prepareStatement(updateVnet);
        pstmtUpdate.executeUpdate();
        pstmtUpdate.close();
        s_logger.debug("Adding PhysicalNetwork to VLAN");
        String updateVLAN="UPDATE `cloud`.`vlan` SET physical_network_id = " + physicalNetworkId + " WHERE data_center_id = "+ zoneId;
        pstmtUpdate=conn.prepareStatement(updateVLAN);
        pstmtUpdate.executeUpdate();
        pstmtUpdate.close();
        s_logger.debug("Adding PhysicalNetwork to user_ip_address");
        String updateUsrIp="UPDATE `cloud`.`user_ip_address` SET physical_network_id = " + physicalNetworkId + " WHERE data_center_id = "+ zoneId;
        pstmtUpdate=conn.prepareStatement(updateUsrIp);
        pstmtUpdate.executeUpdate();
        pstmtUpdate.close();
        s_logger.debug("Adding PhysicalNetwork to networks");
        String updateNet="UPDATE `cloud`.`networks` SET physical_network_id = " + physicalNetworkId + " WHERE data_center_id = "+ zoneId+ " AND traffic_type = 'Guest'";
        pstmtUpdate=conn.prepareStatement(updateNet);
        pstmtUpdate.executeUpdate();
        pstmtUpdate.close();
      }
    }
  }
 catch (  SQLException e) {
    throw new CloudRuntimeException("Exception while adding PhysicalNetworks",e);
  }
 finally {
    if (pstmtUpdate != null) {
      try {
        pstmtUpdate.close();
      }
 catch (      SQLException e) {
      }
    }
    if (rs != null) {
      try {
        rs.close();
      }
 catch (      SQLException e) {
      }
    }
    if (pstmt != null) {
      try {
        pstmt.close();
      }
 catch (      SQLException e) {
      }
    }
  }
}
