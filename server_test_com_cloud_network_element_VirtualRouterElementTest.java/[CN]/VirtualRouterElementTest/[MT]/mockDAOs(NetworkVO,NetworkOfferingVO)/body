{
  when(_networkDao.acquireInLockTable(network.getId(),NetworkOrchestrationService.NetworkLockTimeout.value())).thenReturn(network);
  when(_networksDao.acquireInLockTable(network.getId(),NetworkOrchestrationService.NetworkLockTimeout.value())).thenReturn(network);
  when(_physicalProviderDao.findByServiceProvider(0L,"VirtualRouter")).thenReturn(new PhysicalNetworkServiceProviderVO());
  when(_vrProviderDao.findByNspIdAndType(0L,Type.VirtualRouter)).thenReturn(new VirtualRouterProviderVO());
  when(_networkOfferingDao.findById(0L)).thenReturn(offering);
  when(_routerDao.getNextInSequence(Long.class,"id")).thenReturn(0L);
  final ServiceOfferingVO svcoff=new ServiceOfferingVO("name",1,1024 * 1024,1024 * 1024 * 1024,1,0,false,"displayText",ProvisioningType.THIN,false,false,"tags",false,VirtualMachine.Type.DomainRouter,false);
  when(_serviceOfferingDao.findById(0L)).thenReturn(svcoff);
  when(_serviceOfferingDao.findByName(Matchers.anyString())).thenReturn(svcoff);
  final DomainRouterVO router=new DomainRouterVO(1L,1L,0L,"name",0L,HypervisorType.XenServer,0L,0L,1L,1L,false,RedundantState.UNKNOWN,false,false,null);
  final DomainRouterVO routerNeedUpdateBackup=new DomainRouterVO(2L,1L,0L,"name",0L,HypervisorType.XenServer,0L,0L,1L,1L,false,RedundantState.BACKUP,false,false,null);
  routerNeedUpdateBackup.setUpdateState(VirtualRouter.UpdateState.UPDATE_NEEDED);
  final DomainRouterVO routerNeedUpdateMaster=new DomainRouterVO(3L,1L,0L,"name",0L,HypervisorType.XenServer,0L,0L,1L,1L,false,RedundantState.MASTER,false,false,null);
  routerNeedUpdateMaster.setUpdateState(VirtualRouter.UpdateState.UPDATE_NEEDED);
  final DomainRouterVO routerUpdateComplete=new DomainRouterVO(4L,1L,0L,"name",0L,HypervisorType.XenServer,0L,0L,1L,1L,false,RedundantState.UNKNOWN,false,false,null);
  routerUpdateComplete.setUpdateState(VirtualRouter.UpdateState.UPDATE_COMPLETE);
  final DomainRouterVO routerUpdateInProgress=new DomainRouterVO(5L,1L,0L,"name",0L,HypervisorType.XenServer,0L,0L,1L,1L,false,RedundantState.UNKNOWN,false,false,null);
  routerUpdateInProgress.setUpdateState(VirtualRouter.UpdateState.UPDATE_IN_PROGRESS);
  List<DomainRouterVO> routerList1=new ArrayList<>();
  routerList1.add(routerUpdateComplete);
  routerList1.add(routerNeedUpdateBackup);
  routerList1.add(routerNeedUpdateMaster);
  routerList1.add(routerUpdateInProgress);
  List<DomainRouterVO> routerList2=new ArrayList<>();
  routerList2.add(routerUpdateComplete);
  routerList2.add(routerNeedUpdateBackup);
  routerList2.add(routerNeedUpdateMaster);
  List<DomainRouterVO> routerList3=new ArrayList<>();
  routerList3.add(routerUpdateComplete);
  routerList3.add(routerUpdateInProgress);
  when(_routerDao.getNextInSequence(Long.class,"id")).thenReturn(1L);
  when(_templateDao.findRoutingTemplate(HypervisorType.XenServer,"SystemVM Template (XenServer)")).thenReturn(new VMTemplateVO());
  when(_routerDao.persist(any(DomainRouterVO.class))).thenReturn(router);
  when(_routerDao.findById(router.getId())).thenReturn(router);
  when(_routerDao.listByNetworkAndRole(1l,VirtualRouter.Role.VIRTUAL_ROUTER)).thenReturn(routerList1);
  when(_routerDao.listByNetworkAndRole(2l,VirtualRouter.Role.VIRTUAL_ROUTER)).thenReturn(routerList2);
  when(_routerDao.listByNetworkAndRole(3l,VirtualRouter.Role.VIRTUAL_ROUTER)).thenReturn(routerList1);
  when(_routerDao.listByNetworkAndRole(6l,VirtualRouter.Role.VIRTUAL_ROUTER)).thenReturn(routerList3);
  when(_networkDetailsDao.findDetail(1l,Network.updatingInSequence)).thenReturn(new NetworkDetailVO(1l,Network.updatingInSequence,"true",true));
  when(_networkDetailsDao.findDetail(2l,Network.updatingInSequence)).thenReturn(new NetworkDetailVO(2l,Network.updatingInSequence,"true",true));
  when(_networkDetailsDao.findDetail(6l,Network.updatingInSequence)).thenReturn(new NetworkDetailVO(2l,Network.updatingInSequence,"true",true));
  when(_routerDao.persist(any(DomainRouterVO.class))).thenReturn(router);
}
