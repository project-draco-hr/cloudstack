{
  when(_networkDao.acquireInLockTable(network.getId(),NetworkOrchestrationService.NetworkLockTimeout.value())).thenReturn(network);
  when(_networksDao.acquireInLockTable(network.getId(),NetworkOrchestrationService.NetworkLockTimeout.value())).thenReturn(network);
  when(_physicalProviderDao.findByServiceProvider(0L,"VirtualRouter")).thenReturn(new PhysicalNetworkServiceProviderVO());
  when(_vrProviderDao.findByNspIdAndType(0L,Type.VirtualRouter)).thenReturn(new VirtualRouterProviderVO());
  when(_networkOfferingDao.findById(0L)).thenReturn(offering);
  when(_routerDao.getNextInSequence(Long.class,"id")).thenReturn(0L);
  final ServiceOfferingVO svcoff=new ServiceOfferingVO("name",1,1024 * 1024,1024 * 1024 * 1024,1,0,false,"displayText",ProvisioningType.THIN,false,false,"tags",false,VirtualMachine.Type.DomainRouter,false);
  when(_serviceOfferingDao.findById(0L)).thenReturn(svcoff);
  final DomainRouterVO router=new DomainRouterVO(1L,1L,0L,"name",0L,HypervisorType.XenServer,0L,0L,1L,1L,false,RedundantState.UNKNOWN,false,false,null);
  when(_routerDao.getNextInSequence(Long.class,"id")).thenReturn(1L);
  when(_templateDao.findRoutingTemplate(HypervisorType.XenServer,"SystemVM Template (XenServer)")).thenReturn(new VMTemplateVO());
  when(_routerDao.persist(any(DomainRouterVO.class))).thenReturn(router);
  when(_routerDao.findById(router.getId())).thenReturn(router);
}
