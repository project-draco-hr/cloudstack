def __sendCmdToCS(self, command, auth=True, payload={}, method='GET'):
    '\n        @Name : __sendCmdToCS\n        @Desc : Makes requests to CS using the Inputs provided\n        @Input: command: cloudstack API command name\n                    eg: deployVirtualMachineCommand\n                auth: Authentication (apikey,secretKey) => True\n                     else False for integration.api.port\n                payload: request data composed as a dictionary\n                method: GET/POST via HTTP\n        @output: FAILED or else response from CS\n        '
    try:
        payload['command'] = command
        payload['response'] = 'json'
        if auth:
            payload['apiKey'] = self.apiKey
            payload['signature'] = self.__sign(payload)
        if (self.protocol == 'http'):
            self.logger.debug(('Payload: %s' % str(payload)))
            if (method == 'POST'):
                self.logger.debug(('=======Sending POST Cmd : %s=======' % str(command)))
                return self.__sendPostReqToCS(self.baseUrl, payload)
            if (method == 'GET'):
                self.logger.debug(('========Sending GET Cmd : %s=======' % str(command)))
                return self.__sendGetReqToCS(self.baseUrl, payload)
        else:
            self.logger.exception('__sendCmdToCS: Invalid Protocol')
            return FAILED
    except Exception as e:
        self.logger.exception(('__sendCmdToCS: Exception:%s' % GetDetailExceptionInfo(e)))
        return FAILED
