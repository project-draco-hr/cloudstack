def request(self, command, auth=True, payload={}, method='GET'):
    '\n        Makes requests using auth or over integration port\n        @param command: cloudstack API command name\n                    eg: deployVirtualMachineCommand\n        @param auth: Authentication (apikey,secretKey) => True\n                     else False for integration.api.port\n        @param payload: request data composed as a dictionary\n        @param method: GET/POST via HTTP\n        @return:\n        '
    payload['command'] = command
    payload['response'] = 'json'
    if auth:
        payload['apiKey'] = self.apiKey
        signature = self.sign(payload)
        payload['signature'] = signature
    try:
        if (method == 'POST'):
            response = requests.post(self.baseurl, params=payload)
        else:
            response = requests.get(self.baseurl, params=payload)
    except ConnectionError as c:
        self.logging.debug(('Connection refused. Reason: %s : %s' % (self.baseurl, c)))
        raise c
    except HTTPError as h:
        self.logging.debug(('Server returned error code: %s' % h))
        raise h
    except Timeout as t:
        self.logging.debug(('Connection timed out with %s' % t))
        raise t
    except RequestException as r:
        self.logging.debug(('Error returned by server %s' % r))
        raise r
    else:
        return response
