def marvin_request(self, cmd, data={}, response_type=None):
    "\n        Requester for marvin command objects\n        @param cmd: marvin's command from cloudstackAPI\n        @param data: any data to be sent in as POST\n        @param response_type: response type of the command in cmd\n        @param raw:\n        @return:\n        "
    (cmdname, isAsync, payload) = self.sanitize_command(cmd)
    self.logging.info(('sending command: %s %s' % (cmdname, str(payload))))
    if self.auth:
        response = self.request(cmdname, auth=True, payload=payload, data=data)
    else:
        response = self.request(cmdname, auth=False, payload=payload, data=data)
    self.logging.info(('Request: %s Response: %s' % (response.url, response.text)))
    response = jsonHelper.getResultObj(response.json(), response_type)
    if (isAsync == 'false'):
        return response
    else:
        asyncJobId = response.jobid
        response = self.poll(asyncJobId, response_type)
        return response.jobresult
