def marvin_request(self, cmd, response_type=None, method='GET', data=''):
    "\n        Requester for marvin command objects\n        @param cmd: marvin's command from cloudstackAPI\n        @param response_type: response type of the command in cmd\n        @param method: HTTP GET/POST, defaults to GET\n        @return:\n        "
    (cmdname, isAsync, payload) = self.sanitize_command(cmd)
    self.logging.debug(('sending %s request: %s %s' % (method, cmdname, str(payload))))
    response = self.request(cmdname, self.auth, payload=payload, method=method)
    self.logging.debug(('Request: %s Response: %s' % (response.url, response.text)))
    try:
        response = jsonHelper.getResultObj(response.json(), response_type)
    except TypeError:
        response = jsonHelper.getResultObj(response.json, response_type)
    if (isAsync == 'false'):
        return response
    else:
        asyncJobId = response.jobid
        response = self.poll(asyncJobId, response_type)
        return response.jobresult
