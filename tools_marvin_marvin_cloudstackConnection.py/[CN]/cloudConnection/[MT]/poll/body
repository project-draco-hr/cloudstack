def poll(self, jobid, response):
    '\n        polls the completion of a given jobid\n        @param jobid:\n        @param response:\n        @return:\n        '
    cmd = queryAsyncJobResult.queryAsyncJobResultCmd()
    cmd.jobid = jobid
    timeout = self.asyncTimeout
    while (timeout > 0):
        asyncResonse = self.marvinRequest(cmd, response_type=response)
        if (asyncResonse.jobstatus == 2):
            raise cloudstackException.cloudstackAPIException('asyncquery', asyncResonse.jobresult)
        elif (asyncResonse.jobstatus == 1):
            return asyncResonse
        time.sleep(5)
        if (self.logger is not None):
            self.logger.debug(('job: %s still processing,will timeout in %ds' % (jobid, timeout)))
        timeout = (timeout - 5)
    raise cloudstackException.cloudstackAPIException('asyncquery', ('Async job timeout %s' % jobid))
