{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Parsing all VPN user usage events for account: " + account.getId());
  }
  if ((endDate == null) || endDate.after(new Date())) {
    endDate=new Date();
  }
  List<UsageVPNUserVO> usageVUs=m_usageVPNUserDao.getUsageRecords(account.getId(),account.getDomainId(),startDate,endDate,false,0);
  if (usageVUs.isEmpty()) {
    s_logger.debug("No VPN user usage events for this period");
    return true;
  }
  Map<String,Pair<Long,Long>> usageMap=new HashMap<String,Pair<Long,Long>>();
  Map<String,VUInfo> vuMap=new HashMap<String,VUInfo>();
  for (  UsageVPNUserVO usageVU : usageVUs) {
    long userId=usageVU.getUserId();
    String userName=usageVU.getUsername();
    String key="" + userId + "VU"+ userName;
    vuMap.put(key,new VUInfo(userId,usageVU.getZoneId(),userName));
    Date vuCreateDate=usageVU.getCreated();
    Date vuDeleteDate=usageVU.getDeleted();
    if ((vuDeleteDate == null) || vuDeleteDate.after(endDate)) {
      vuDeleteDate=endDate;
    }
    if (vuCreateDate.before(startDate)) {
      vuCreateDate=startDate;
    }
    long currentDuration=(vuDeleteDate.getTime() - vuCreateDate.getTime()) + 1;
    updateVUUsageData(usageMap,key,usageVU.getUserId(),currentDuration);
  }
  for (  String vuIdKey : usageMap.keySet()) {
    Pair<Long,Long> vutimeInfo=usageMap.get(vuIdKey);
    long useTime=vutimeInfo.second().longValue();
    if (useTime > 0L) {
      VUInfo info=vuMap.get(vuIdKey);
      createUsageRecord(UsageTypes.VPN_USERS,useTime,startDate,endDate,account,info.getUserId(),info.getUserName(),info.getZoneId());
    }
  }
  return true;
}
