@staticmethod
def getBridgeByIp(ip):
    try:
        routes = doCmd(['ip', 'route']).split('\n')
        brName = None
        for r in routes:
            if (((ip in r) and ('xenbr' in r)) or ('vlan' in r)):
                brName = r.split(' ')[2]
                break
        if (not brName):
            raise Exception(('Cannot find bridge with IP %s' % ip))
        logger.debug(OvmNetwork.getBridgeByIp, ('bridge:%s, ip:%s' % (brName, ip)))
        return toGson({'bridge': brName, })
    except Exception as e:
        errmsg = fmt_err_msg(e)
        logger.error(OvmNetwork.getBridgeByIp, errmsg)
        raise XmlRpcFault(toErrCode(OvmNetwork, OvmNetwork.getBridgeByIp), errmsg)
