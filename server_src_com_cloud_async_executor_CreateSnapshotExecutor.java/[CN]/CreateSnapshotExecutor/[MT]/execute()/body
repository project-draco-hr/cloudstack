{
  AsyncJobManager asyncMgr=getAsyncJobMgr();
  AsyncJobVO job=getJob();
  Gson gson=GsonHelper.getBuilder().create();
  if (getSyncSource() == null) {
    SnapshotOperationParam param=gson.fromJson(job.getCmdInfo(),SnapshotOperationParam.class);
    asyncMgr.syncAsyncJobExecution(job.getId(),"Volume",param.getVolumeId());
    return true;
  }
 else {
    SnapshotOperationParam param=gson.fromJson(job.getCmdInfo(),SnapshotOperationParam.class);
    SnapshotManager snapshotManager=asyncMgr.getExecutorContext().getSnapshotMgr();
    long volumeId=param.getVolumeId();
    List<Long> policyIds=param.getPolicyIds();
    long snapshotId=0;
    long userId=param.getUserId();
    boolean backedUp=false;
    Long jobId=getJob().getId();
    int result=AsyncJobResult.STATUS_FAILED;
    int errorCode=BaseCmd.INTERNAL_ERROR;
    Object resultObject="Failed to create snapshot.";
    try {
      SnapshotVO snapshot=snapshotManager.createSnapshot(userId,param.getVolumeId(),param.getPolicyIds());
      if (snapshot != null && snapshot.getStatus() == Snapshot.Status.CreatedOnPrimary) {
        snapshotId=snapshot.getId();
        asyncMgr.updateAsyncJobStatus(jobId,BaseCmd.PROGRESS_INSTANCE_CREATED,snapshotId);
        backedUp=snapshotManager.backupSnapshotToSecondaryStorage(userId,snapshot);
        if (backedUp) {
          result=AsyncJobResult.STATUS_SUCCEEDED;
          errorCode=0;
          resultObject=composeResultObject(snapshot);
        }
 else {
          resultObject="Created snapshot: " + snapshotId + " on primary but failed to backup on secondary";
        }
      }
    }
 catch (    Exception e) {
      resultObject="Unable to create snapshot: " + e.getMessage();
      s_logger.warn(resultObject,e);
    }
    asyncMgr.completeAsyncJob(jobId,result,errorCode,resultObject);
    snapshotManager.postCreateSnapshot(userId,volumeId,snapshotId,policyIds,backedUp);
    return true;
  }
}
