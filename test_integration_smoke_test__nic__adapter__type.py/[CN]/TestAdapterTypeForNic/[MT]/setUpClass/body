@classmethod
def setUpClass(cls):
    cls.testClient = super(TestAdapterTypeForNic, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.testdata = cls.testClient.getParsedTestDataConfig()
    cls.hypervisor = get_hypervisor_type(cls.api_client)
    cls.domain = get_domain(cls.api_client)
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.template = get_template(cls.api_client, cls.zone.id, cls.testdata['ostype'])
    cls.testdata['isolated_network']['zoneid'] = cls.zone.id
    cls._cleanup = []
    cls.account = Account.create(cls.api_client, cls.testdata['account'], domainid=cls.domain.id)
    cls._cleanup.append(cls.account)
    cls.userapiclient = cls.testClient.getUserApiClient(UserName=cls.account.name, DomainName=cls.account.domain)
    cls.service_offering = ServiceOffering.create(cls.api_client, cls.testdata['service_offering'])
    cls._cleanup.append(cls.service_offering)
    cls.isolated_network_offering = NetworkOffering.create(cls.api_client, cls.testdata['isolated_network_offering'])
    cls._cleanup.append(cls.isolated_network_offering)
    cls.isolated_network_offering.update(cls.api_client, state='Enabled')
    return
