{
  Map<String,String> sourceDetails=null;
  VolumeVO volumeVO=volumeDao.findById(volumeInfo.getId());
  Long vmInstanceId=volumeVO.getInstanceId();
  VMInstanceVO vmInstanceVO=vmInstanceDao.findById(vmInstanceId);
  Long hostId=null;
  if (vmInstanceVO != null) {
    hostId=vmInstanceVO.getHostId();
    if (hostId == null) {
      hostId=vmInstanceVO.getLastHostId();
      if (hostId == null) {
        sourceDetails=getSourceDetails(volumeInfo);
      }
    }
  }
 else {
    sourceDetails=getSourceDetails(volumeInfo);
  }
  HostVO hostVO=null;
  if (hostId != null) {
    hostVO=hostDao.findById(hostId);
  }
 else {
    Optional<HostVO> optHostVO=getHost(volumeInfo.getDataCenterId(),false);
    if (optHostVO.isPresent()) {
      hostVO=optHostVO.get();
    }
  }
  if (hostVO == null) {
    final String errMsg="Unable to locate an applicable host";
    s_logger.error("performSnapshotAndCopyOnHostSide: " + errMsg);
    throw new CloudRuntimeException(errMsg);
  }
  long storagePoolId=volumeVO.getPoolId();
  StoragePoolVO storagePoolVO=storagePoolDao.findById(storagePoolId);
  DataStore dataStore=dataStoreMgr.getDataStore(storagePoolId,DataStoreRole.Primary);
  Map<String,String> destDetails=getDestDetails(storagePoolVO,snapshotInfo);
  SnapshotAndCopyCommand snapshotAndCopyCommand=new SnapshotAndCopyCommand(volumeInfo.getPath(),sourceDetails,destDetails);
  SnapshotAndCopyAnswer snapshotAndCopyAnswer=null;
  try {
    if (sourceDetails != null) {
      volService.grantAccess(volumeInfo,hostVO,dataStore);
    }
    volService.grantAccess(snapshotInfo,hostVO,dataStore);
    snapshotAndCopyAnswer=(SnapshotAndCopyAnswer)agentMgr.send(hostVO.getId(),snapshotAndCopyCommand);
  }
 catch (  Exception ex) {
    throw new CloudRuntimeException(ex.getMessage());
  }
 finally {
    try {
      volService.revokeAccess(snapshotInfo,hostVO,dataStore);
      if (sourceDetails != null) {
        volService.revokeAccess(volumeInfo,hostVO,dataStore);
      }
    }
 catch (    Exception ex) {
      s_logger.debug(ex.getMessage(),ex);
    }
  }
  if (snapshotAndCopyAnswer == null || !snapshotAndCopyAnswer.getResult()) {
    final String errMsg;
    if (snapshotAndCopyAnswer != null && snapshotAndCopyAnswer.getDetails() != null && !snapshotAndCopyAnswer.getDetails().isEmpty()) {
      errMsg=snapshotAndCopyAnswer.getDetails();
    }
 else {
      errMsg="Unable to perform host-side operation";
    }
    throw new CloudRuntimeException(errMsg);
  }
  String path=snapshotAndCopyAnswer.getPath();
  SnapshotDetailsVO snapshotDetail=new SnapshotDetailsVO(snapshotInfo.getId(),DiskTO.PATH,path,false);
  snapshotDetailsDao.persist(snapshotDetail);
}
