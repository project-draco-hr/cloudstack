{
  Preconditions.checkArgument(snapshotInfo != null,"backupSnapshot expects a valid snapshot");
  if (snapshotInfo.getLocationType() != Snapshot.LocationType.SECONDARY) {
    markAsBackedUp((SnapshotObject)snapshotInfo);
    return snapshotInfo;
  }
  HostVO host=getHost(snapshotInfo.getVolumeId());
  boolean canStorageSystemCreateVolumeFromSnapshot=canStorageSystemCreateVolumeFromSnapshot(snapshotInfo.getBaseVolume().getPoolId());
  boolean computeClusterSupportsResign=clusterDao.getSupportsResigning(host.getClusterId());
  if (!canStorageSystemCreateVolumeFromSnapshot || !computeClusterSupportsResign) {
    String mesg="Cannot archive snapshot: Either canStorageSystemCreateVolumeFromSnapshot or " + "computeClusterSupportsResign were false.  ";
    s_logger.warn(mesg);
    throw new CloudRuntimeException(mesg);
  }
  return snapshotSvr.backupSnapshot(snapshotInfo);
}
