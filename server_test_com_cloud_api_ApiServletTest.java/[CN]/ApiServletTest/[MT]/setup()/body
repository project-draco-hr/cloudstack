{
  servlet=new ApiServlet();
  responseWriter=new StringWriter();
  Mockito.when(response.getWriter()).thenReturn(new PrintWriter(responseWriter));
  Mockito.when(request.getRemoteAddr()).thenReturn("127.0.0.1");
  Mockito.when(accountService.getSystemUser()).thenReturn(user);
  Mockito.when(accountService.getSystemAccount()).thenReturn(account);
  Field accountMgrField=ApiServlet.class.getDeclaredField("_accountMgr");
  accountMgrField.setAccessible(true);
  accountMgrField.set(servlet,accountService);
  Mockito.when(authManager.getAPIAuthenticator(Mockito.anyString())).thenReturn(authenticator);
  Mockito.when(authenticator.authenticate(Mockito.anyString(),Mockito.anyMap(),Mockito.isA(HttpSession.class),Mockito.anyString(),Mockito.anyString(),Mockito.isA(StringBuilder.class),Mockito.isA(HttpServletResponse.class))).thenReturn("{\"loginresponse\":{}");
  Field authManagerField=ApiServlet.class.getDeclaredField("_authManager");
  authManagerField.setAccessible(true);
  authManagerField.set(servlet,authManager);
  Field apiServerField=ApiServlet.class.getDeclaredField("_apiServer");
  apiServerField.setAccessible(true);
  apiServerField.set(servlet,apiServer);
}
