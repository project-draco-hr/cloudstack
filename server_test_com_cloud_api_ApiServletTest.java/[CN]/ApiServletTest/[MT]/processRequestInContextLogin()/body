{
  Mockito.when(request.getMethod()).thenReturn("GET");
  Mockito.when(request.getSession(Mockito.anyBoolean())).thenReturn(session);
  HashMap<String,String[]> params=new HashMap<String,String[]>();
  params.put(ApiConstants.COMMAND,new String[]{"login"});
  params.put(ApiConstants.USERNAME,new String[]{"TEST"});
  params.put(ApiConstants.PASSWORD,new String[]{"TEST-PWD"});
  params.put(ApiConstants.DOMAIN_ID,new String[]{"42"});
  params.put(ApiConstants.DOMAIN,new String[]{"TEST-DOMAIN"});
  Mockito.when(request.getParameterMap()).thenReturn(params);
  Mockito.when(apiServer.fetchDomainId("42")).thenReturn(null);
  Mockito.when(session.getAttribute("userid")).thenReturn(1l);
  Mockito.when(session.getAttribute("accountobj")).thenReturn(account);
  servlet.processRequestInContext(request,response);
  Mockito.verify(request).getSession(true);
  Mockito.verify(apiServer).loginUser(Mockito.any(HttpSession.class),Mockito.eq("TEST"),Mockito.eq("TEST-PWD"),Mockito.eq(42l),Mockito.eq("/TEST-DOMAIN/"),Mockito.eq("127.0.0.1"),Mockito.any(Map.class));
  Mockito.verify(response).setStatus(HttpServletResponse.SC_OK);
}
