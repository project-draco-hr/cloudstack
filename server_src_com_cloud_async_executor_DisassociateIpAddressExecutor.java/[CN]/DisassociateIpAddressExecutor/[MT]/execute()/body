{
  Gson gson=GsonHelper.getBuilder().create();
  AsyncJobManager asyncMgr=getAsyncJobMgr();
  AsyncJobVO job=getJob();
  ManagementServer managementServer=asyncMgr.getExecutorContext().getManagementServer();
  DisassociateIpAddressParam param=gson.fromJson(job.getCmdInfo(),DisassociateIpAddressParam.class);
  if (getSyncSource() == null) {
    DomainRouterVO router=getRouterSyncSource(param);
    if (router == null) {
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.NET_INVALID_PARAM_ERROR,"Unable to find router with given user " + param.getUserId() + " and ip "+ param.getIpAddress()+ " to disassociate");
    }
 else {
      asyncMgr.syncAsyncJobExecution(job.getId(),"Router",router.getId());
    }
    return true;
  }
 else {
    try {
      if (s_logger.isDebugEnabled())       s_logger.debug("Executing disassociateIpAddress, uid: " + param.getUserId() + ", account id: "+ param.getAccountId()+ ", ip: "+ param.getIpAddress());
      boolean result=managementServer.disassociateIpAddress(param.getUserId(),param.getAccountId(),param.getIpAddress());
      if (result) {
        if (s_logger.isDebugEnabled())         s_logger.debug("disassociateIpAddress executed successfully, complete async-execution");
        asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_SUCCEEDED,0,"success");
      }
 else {
        s_logger.warn("disassociateIpAddress execution failed, complete async-execution");
        asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"failed");
      }
    }
 catch (    PermissionDeniedException e) {
      s_logger.warn("disassociateIpAddress execution failed : PermissionDeniedException, complete async-execution",e);
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.PARAM_ERROR,e.getMessage());
    }
catch (    IllegalArgumentException e) {
      s_logger.warn("disassociateIpAddress execution failed : IllegalArgumentException, complete async-execution",e);
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.PARAM_ERROR,e.getMessage());
    }
catch (    Exception e) {
      s_logger.warn("disassociateIpAddress execution failed : Exception, complete async-execution",e);
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.PARAM_ERROR,e.getMessage());
    }
  }
  return true;
}
