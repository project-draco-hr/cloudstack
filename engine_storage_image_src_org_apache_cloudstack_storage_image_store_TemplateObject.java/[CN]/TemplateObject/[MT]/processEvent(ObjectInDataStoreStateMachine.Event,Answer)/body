{
  try {
    if (this.getDataStore().getRole() == DataStoreRole.Primary) {
      if (answer instanceof CopyCmdAnswer) {
        CopyCmdAnswer cpyAnswer=(CopyCmdAnswer)answer;
        TemplateObjectTO newTemplate=(TemplateObjectTO)cpyAnswer.getNewData();
        VMTemplateStoragePoolVO templatePoolRef=templatePoolDao.findByPoolTemplate(this.getDataStore().getId(),this.getId());
        templatePoolRef.setDownloadPercent(100);
        templatePoolRef.setDownloadState(Status.DOWNLOADED);
        templatePoolRef.setLocalDownloadPath(newTemplate.getPath());
        templatePoolRef.setInstallPath(newTemplate.getPath());
        templatePoolDao.update(templatePoolRef.getId(),templatePoolRef);
      }
    }
 else     if (this.getDataStore().getRole() == DataStoreRole.Image || this.getDataStore().getRole() == DataStoreRole.ImageCache) {
      if (answer instanceof CopyCmdAnswer) {
        CopyCmdAnswer cpyAnswer=(CopyCmdAnswer)answer;
        TemplateObjectTO newTemplate=(TemplateObjectTO)cpyAnswer.getNewData();
        TemplateDataStoreVO templateStoreRef=this.templateStoreDao.findByStoreTemplate(this.getDataStore().getId(),this.getId());
        templateStoreRef.setInstallPath(newTemplate.getPath());
        templateStoreRef.setDownloadPercent(100);
        templateStoreRef.setDownloadState(Status.DOWNLOADED);
        templateStoreRef.setSize(newTemplate.getSize());
        templateStoreRef.setPhysicalSize(newTemplate.getPhysicalSize());
        templateStoreDao.update(templateStoreRef.getId(),templateStoreRef);
        if (this.getDataStore().getRole() == DataStoreRole.Image) {
          VMTemplateVO templateVO=this.imageDao.findById(this.getId());
          if (newTemplate.getFormat() != null) {
            templateVO.setFormat(newTemplate.getFormat());
          }
          templateVO.setSize(newTemplate.getSize());
          this.imageDao.update(templateVO.getId(),templateVO);
        }
      }
    }
    objectInStoreMgr.update(this,event);
  }
 catch (  NoTransitionException e) {
    s_logger.debug("failed to update state",e);
    throw new CloudRuntimeException("Failed to update state" + e.toString());
  }
catch (  Exception ex) {
    s_logger.debug("failed to process event and answer",ex);
    objectInStoreMgr.delete(this);
    throw new CloudRuntimeException("Failed to process event",ex);
  }
 finally {
    if (event == ObjectInDataStoreStateMachine.Event.OperationFailed) {
      objectInStoreMgr.deleteIfNotReady(this);
    }
  }
}
