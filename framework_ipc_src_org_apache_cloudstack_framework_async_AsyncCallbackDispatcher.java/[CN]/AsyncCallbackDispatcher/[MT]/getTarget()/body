{
  Enhancer en=new Enhancer();
  en.setSuperclass(_targetObject.getClass());
  en.setCallbacks(new Callback[]{new MethodInterceptor(){
    @Override public Object intercept(    Object arg0,    Method arg1,    Object[] arg2,    MethodProxy arg3) throws Throwable {
      _callbackMethod=arg1;
      _callbackMethod.setAccessible(true);
      return null;
    }
  }
,new MethodInterceptor(){
    @Override public Object intercept(    Object arg0,    Method arg1,    Object[] arg2,    MethodProxy arg3) throws Throwable {
      return null;
    }
  }
});
  en.setCallbackFilter(new CallbackFilter(){
    public int accept(    Method method){
      if (method.getParameterTypes().length == 0 && method.getName().equals("finalize")) {
        return 1;
      }
      return 0;
    }
  }
);
  return (T)en.create();
}
