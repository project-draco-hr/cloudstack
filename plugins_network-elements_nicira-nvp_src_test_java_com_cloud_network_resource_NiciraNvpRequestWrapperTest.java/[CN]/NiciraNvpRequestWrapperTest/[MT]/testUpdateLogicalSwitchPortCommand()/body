{
  final NiciraNvpApi niciraNvpApi=Mockito.mock(NiciraNvpApi.class);
  final NiciraNvpUtilities niciraNvpUtilities=Mockito.mock(NiciraNvpUtilities.class);
  final VifAttachment vifAttachment=Mockito.mock(VifAttachment.class);
  final String logicalSwitchPortUuid="d2e05a9e-7120-4487-a5fc-414ab36d9345";
  final String logicalSwitchUuid="d2e05a9e-7120-4487-a5fc-414ab36d9345";
  final String attachmentUuid="d2e05a9e-7120-4487-a5fc-414ab36d9345";
  final String ownerName="admin";
  final String nicName="eth0";
  final UpdateLogicalSwitchPortCommand command=new UpdateLogicalSwitchPortCommand(logicalSwitchPortUuid,logicalSwitchUuid,attachmentUuid,ownerName,nicName);
  when(niciraNvpResource.getNiciraNvpUtilities()).thenReturn(niciraNvpUtilities);
  when(niciraNvpResource.getNiciraNvpApi()).thenReturn(niciraNvpApi);
  try {
    when(niciraNvpUtilities.createVifAttachment(attachmentUuid)).thenReturn(vifAttachment);
    doNothing().when(niciraNvpApi).updateLogicalSwitchPortAttachment(logicalSwitchUuid,logicalSwitchPortUuid,vifAttachment);
  }
 catch (  final NiciraNvpApiException e) {
    fail(e.getMessage());
  }
  final NiciraNvpRequestWrapper wrapper=NiciraNvpRequestWrapper.getInstance();
  assertNotNull(wrapper);
  final Answer answer=wrapper.execute(command,niciraNvpResource);
  assertTrue(answer.getResult());
}
