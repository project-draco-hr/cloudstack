@classmethod
def setUpClass(cls):
    cls.testClient = super(TestISOUsage, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.services = Services().services
    cls.domain = get_domain(cls.api_client)
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.services['mode'] = cls.zone.networktype
    cls.services['server']['zoneid'] = cls.zone.id
    cls.services['iso']['zoneid'] = cls.zone.id
    cls.account = Account.create(cls.api_client, cls.services['account'], domainid=cls.domain.id)
    cls.services['account'] = cls.account.name
    cls.project = Project.create(cls.api_client, cls.services['project'], account=cls.account.name, domainid=cls.account.domainid)
    cls.iso = Iso.create(cls.api_client, cls.services['iso'], projectid=cls.project.id)
    try:
        cls.iso.download(cls.api_client)
    except Exception as e:
        raise Exception(('%s: Failed to download ISO: %s' % (e, cls.iso.id)))
    cls._cleanup = [cls.project, cls.account]
    return
