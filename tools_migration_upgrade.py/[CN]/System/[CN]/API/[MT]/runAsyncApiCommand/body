def runAsyncApiCommand(self, command, params, objectName):
    requestURL = self.buildRequestUrl(command, params)
    xmlText = urllib2.urlopen(requestURL).read()
    responseName = (command + 'response').lower()
    jobId = System.API.getTagValue(xmlText, responseName, 'jobid')
    objectId = System.API.getTagValue(xmlText, responseName, (objectName + 'id'))
    params = dict()
    params['jobId'] = jobId
    requestURL = self.buildRequestUrl('queryAsyncJobResult', params)
    retries = int(GLOBALS['ASYNC_RETRIES'])
    jobResult = None
    while (retries > 0):
        time.sleep(float(GLOBALS['ASYNC_SLEEP_TIME']))
        xmlText = urllib2.urlopen(requestURL).read()
        if (System.API.getTagValue(xmlText, 'queryasyncjobresultresponse', 'jobstatus') == '1'):
            if (objectId != None):
                return objectId
            else:
                return True
        jobResult = System.API.getTagValue(xmlText, 'queryasyncjobresultresponse', 'jobresult')
        retries -= 1
    raise Exception(jobResult)
