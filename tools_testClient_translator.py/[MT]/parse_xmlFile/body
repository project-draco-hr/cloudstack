def parse_xmlFile(dom, outf, glos):
    testName = dom.documentElement.nodeName
    if (outf is not None):
        outFile.write(('# Generated by translator.py\n# from %s\n' % options.xmlfile))
        outFile.write(('# on %s\n\n' % str(now)))
        outFile.write('from cloudstackTestCase import *\n')
        outFile.write('import cloudstackException\n')
        outFile.write('import cloudstackTestClient\n')
        outFile.write('import time\n\n')
        outFile.write('# These are global variables used in the script below\n')
        for key in glos:
            outFile.write(('%s = None\n' % key))
        outFile.write('# End of globals\n\n')
        outFile.write('if __name__ == "__main__":\n\n')
        outFile.write(('%s# Possible initialization parameters:\n' % INDENT))
        outFile.write(('%s# cloudstackTestClient(mgtSvr=None, port=8096, apiKey = None, securityKey = None, asyncTimeout=3600, defaultWorkerThreads=10, logging=None)\n' % INDENT))
        outFile.write(('%stestClient = cloudstackTestClient.cloudstackTestClient("localhost")\n\n' % INDENT))
        outFile.write(('%sapiclient = testClient.getApiClient()\n' % INDENT))
    else:
        glos = []
    for cmd in dom.getElementsByTagName('command'):
        cmd_name = cmd.getElementsByTagName('name')[0].childNodes[0].nodeValue.strip()
        cmd_name_var = ('_%s' % cmd_name)
        cmd_name_resp = ('resp_%s' % cmd_name)
        testCaseName = cmd.getElementsByTagName('testcase')[0].childNodes[0].nodeValue.strip()
        if (outf is not None):
            outFile.write(('\n%s# %s\n' % (INDENT, testCaseName)))
        if (outf is not None):
            outFile.write(('%s%s = %s.%sCmd()\n' % (INDENT, cmd_name_var, cmd_name, cmd_name)))
        for param in cmd.getElementsByTagName('parameters'):
            for item in param.getElementsByTagName('item'):
                itemName = item.getElementsByTagName('name')[0].childNodes[0].nodeValue.strip()
                itemParam = None
                itemValue = None
                try:
                    itemValue = item.getElementsByTagName('value')[0].childNodes[0].nodeValue.strip()
                except Exception:
                    itemValue = None
                try:
                    itemParam = item.getElementsByTagName('param')[0].childNodes[0].nodeValue.strip()
                except Exception:
                    itemParam = None
                if ((item.getAttribute('getparam') == 'true') and (itemParam is not None)):
                    if (outf is not None):
                        outFile.write(('%s%s.%s = %s\n' % (INDENT, cmd_name_var, itemName, itemParam)))
                    else:
                        glos.append(itemParam)
                elif ((item.getAttribute('random') == 'true') or (item.getAttribute('randomnumber') == 'true')):
                    randValue = int((random.random() * 10000000))
                    if (outf is not None):
                        outFile.write(("%s%s.%s = '%s-randomName'\n" % (INDENT, cmd_name_var, itemName, str(randValue))))
                    if ((item.getAttribute('setparam') == 'true') and (itemParam is not None)):
                        if (outf is not None):
                            outFile.write(("%s%s = '%s-randomName'\n" % (INDENT, itemName, str(randValue))))
                        else:
                            glos.append(itemParam)
                else:
                    try:
                        val = int(itemValue)
                    except Exception:
                        val = ("'%s'" % itemValue)
                    if (outf is not None):
                        outFile.write(('%s%s.%s = %s\n' % (INDENT, cmd_name_var, itemName, val)))
        if (outf is not None):
            outFile.write(('%s%s = apiClient.%s(%s)\n' % (INDENT, cmd_name_resp, cmd_name, cmd_name_var)))
        for return_val in cmd.getElementsByTagName('returnvalue'):
            for item in return_val.getElementsByTagName('item'):
                itemName = item.getElementsByTagName('name')[0].childNodes[0].nodeValue.strip()
                itemParam = item.getElementsByTagName('param')[0].childNodes[0].nodeValue.strip()
                if (item.getAttribute('setparam') == 'true'):
                    if (outf is not None):
                        outFile.write(('%s%s = %s.%s\n' % (INDENT, itemParam, cmd_name_resp, itemName)))
                elif (outf is not None):
                    outFile.write(('%sif %s != %s.%s:\n' % (INDENT, itemParam, cmd_name_resp, itemName)))
                    outFile.write(('%sprint %s.%s + " does not match " + %s\n' % (INDENT2, cmd_name_resp, itemName, itemValue)))
    return set(glos)
