{
  if (verbose)   s_logger.debug("[" + this + "] INFO: Data received: "+ buf+ ".");
  int x=(Integer)buf.getMetadata(TARGET_X);
  int y=(Integer)buf.getMetadata(TARGET_Y);
  int rectWidth=(Integer)buf.getMetadata(WIDTH);
  int rectHeight=(Integer)buf.getMetadata(HEIGHT);
  String format=(String)buf.getMetadata(PIXEL_FORMAT);
  int bpp;
  if (format != null && RGB888LE32.equals(format)) {
    bpp=4;
  }
 else   throw new RuntimeException("Unsupported format: " + format + ". Supported formats: "+ RGB888LE32+ ".");
  int dataLength=rectWidth * rectHeight * bpp;
  if (!cap(buf,dataLength,dataLength,link,false))   return;
  BufferedImage image=canvas.getOfflineImage();
  DataBuffer dataBuf=image.getRaster().getDataBuffer();
switch (dataBuf.getDataType()) {
case DataBuffer.TYPE_INT:
{
      int[] intArray=buf.toIntLEArray();
      DataBufferInt dataBuffer=(DataBufferInt)dataBuf;
      int imageWidth=image.getWidth();
      int imageHeight=image.getHeight();
      int[] imageBuffer=dataBuffer.getData();
      for (int srcLine=0, dstLine=y; srcLine < rectHeight && dstLine < imageHeight; srcLine++, dstLine++) {
        try {
          System.arraycopy(intArray,srcLine * rectWidth,imageBuffer,x + dstLine * imageWidth,rectWidth);
        }
 catch (        IndexOutOfBoundsException e) {
          s_logger.info("[ignored] copy error",e);
        }
      }
      break;
    }
default :
  throw new RuntimeException("Unsupported data buffer in buffered image: expected data buffer of type int (DataBufferInt). Actual data buffer type: " + dataBuf.getClass().getSimpleName());
}
canvas.repaint(x,y,rectWidth,rectHeight);
buf.unref();
}
