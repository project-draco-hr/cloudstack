{
  String domainName=domain.getName();
  if (domainName != null) {
    if (domainName.contains("/")) {
      throw new IllegalArgumentException("Domain name contains one or more invalid characters.  Please enter a name without '/' characters.");
    }
  }
 else {
    throw new IllegalArgumentException("Domain name is null.  Please specify a valid domain name.");
  }
  long parent=DomainVO.ROOT_DOMAIN;
  if (domain.getParent() != null && domain.getParent().longValue() >= DomainVO.ROOT_DOMAIN) {
    parent=domain.getParent().longValue();
  }
  DomainVO parentDomain=findById(parent);
  if (parentDomain == null) {
    s_logger.error("Unable to load parent domain: " + parent);
    return null;
  }
  GlobalLock lock=GlobalLock.getInternLock("lock.domain." + parent);
  if (!lock.lock(3600)) {
    s_logger.error("Unable to lock parent domain: " + parent);
    return null;
  }
  Transaction txn=Transaction.currentTxn();
  try {
    txn.start();
    domain.setPath(allocPath(parentDomain,domain.getName()));
    domain.setLevel(parentDomain.getLevel() + 1);
    parentDomain.setNextChildSeq(parentDomain.getNextChildSeq() + 1);
    parentDomain.setChildCount(parentDomain.getChildCount() + 1);
    persist(domain);
    update(parentDomain.getId(),parentDomain);
    txn.commit();
    return domain;
  }
 catch (  Exception e) {
    s_logger.error("Unable to create domain due to " + e.getMessage(),e);
    txn.rollback();
    return null;
  }
 finally {
    lock.unlock();
  }
}
