@data(ADMIN_ACCOUNT, USER_ACCOUNT)
@attr(tags=['basic', 'advanced'])
def test_deploy_virtual_machines_static_offering(self, value):
    'Test deploy VM with static offering'
    isadmin = True
    if (value == USER_ACCOUNT):
        isadmin = False
    self.account = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id, admin=isadmin)
    apiclient = self.testClient.getUserApiClient(UserName=self.account.name, DomainName=self.account.domain)
    self.cleanup.append(self.account)
    self.services['service_offering']['cpunumber'] = 2
    self.services['service_offering']['cpuspeed'] = 256
    self.services['service_offering']['memory'] = 128
    serviceOffering = ServiceOffering.create(self.apiclient, self.services['service_offering'])
    self.cleanup_co.append(serviceOffering)
    try:
        VirtualMachine.create(apiclient, self.services['virtual_machine'], serviceofferingid=serviceOffering.id, accountid=self.account.name, domainid=self.account.domainid)
    except Exception as e:
        self.fail(('vm creation failed: %s' % e))
    try:
        VirtualMachine.create(apiclient, self.services['virtual_machine'], serviceofferingid=serviceOffering.id, customcpunumber=4, customcpuspeed=512, custommemory=256, accountid=self.account.name, domainid=self.account.domainid)
        self.fail('VM creation should have failed, it succeeded')
    except Exception as e:
        self.debug(('vm creation failed as expected: %s' % e))
    return
