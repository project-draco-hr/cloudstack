@data(ADMIN_ACCOUNT, USER_ACCOUNT)
@attr(tags=['basic', 'advanced'])
def test_change_so_stopped_vm_dynamic_to_dynamic(self, value):
    'Test scale stopped VM from dynamic offering to dynamic offering'
    isadmin = True
    if (value == USER_ACCOUNT):
        isadmin = False
    try:
        self.account = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id, admin=isadmin)
        apiclient = self.testClient.getUserApiClient(UserName=self.account.name, DomainName=self.account.domain)
        self.cleanup.append(self.account)
        self.services['service_offering']['cpunumber'] = ''
        self.services['service_offering']['cpuspeed'] = ''
        self.services['service_offering']['memory'] = ''
        serviceOffering_dynamic_1 = ServiceOffering.create(self.apiclient, self.services['service_offering'])
        serviceOffering_dynamic_2 = ServiceOffering.create(self.apiclient, self.services['service_offering'])
        self.cleanup_co.append(serviceOffering_dynamic_1)
        self.cleanup_co.append(serviceOffering_dynamic_2)
        virtualMachine = VirtualMachine.create(apiclient, self.services['virtual_machine'], serviceofferingid=serviceOffering_dynamic_1.id, accountid=self.account.name, domainid=self.account.domainid, customcpunumber=2, customcpuspeed=256, custommemory=128)
        virtualMachine.stop(apiclient)
        virtualMachine.scale(apiclient, serviceOfferingId=serviceOffering_dynamic_1.id, customcpunumber=4, customcpuspeed=512, custommemory=256)
        virtualMachine.scale(apiclient, serviceOfferingId=serviceOffering_dynamic_2.id, customcpunumber=4, customcpuspeed=512, custommemory=256)
    except Exception as e:
        self.fail(('Exception occured: %s' % e))
    with self.assertRaises(Exception):
        virtualMachine.scale(apiclient, serviceOfferingId=serviceOffering_dynamic_1.id, customcpunumber=4)
    return
