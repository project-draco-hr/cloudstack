{
  Long id=cmd.getId();
  Long domainId=cmd.getDomainId();
  boolean isRecursive=cmd.isRecursive();
  String accountName=cmd.getAccountName();
  boolean listAll=cmd.listAll();
  long startIndex=cmd.getStartIndex();
  long pageSizeVal=cmd.getPageSizeVal();
  Account caller=CallContext.current().getCallingAccount();
  List<Long> permittedAccounts=new ArrayList<Long>();
  Ternary<Long,Boolean,ListProjectResourcesCriteria> domainIdRecursiveListProject=new Ternary<Long,Boolean,ListProjectResourcesCriteria>(domainId,isRecursive,null);
  _accountMgr.buildACLSearchParameters(caller,id,accountName,null,permittedAccounts,domainIdRecursiveListProject,listAll,false);
  domainId=domainIdRecursiveListProject.first();
  isRecursive=domainIdRecursiveListProject.second();
  ListProjectResourcesCriteria listProjectResourcesCriteria=domainIdRecursiveListProject.third();
  Filter searchFilter=new Filter(Site2SiteCustomerGatewayVO.class,"id",false,startIndex,pageSizeVal);
  SearchBuilder<Site2SiteCustomerGatewayVO> sb=_customerGatewayDao.createSearchBuilder();
  _accountMgr.buildACLSearchBuilder(sb,domainId,isRecursive,permittedAccounts,listProjectResourcesCriteria);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  SearchCriteria<Site2SiteCustomerGatewayVO> sc=sb.create();
  _accountMgr.buildACLSearchCriteria(sc,domainId,isRecursive,permittedAccounts,listProjectResourcesCriteria);
  if (id != null) {
    sc.addAnd("id",SearchCriteria.Op.EQ,id);
  }
  Pair<List<Site2SiteCustomerGatewayVO>,Integer> result=_customerGatewayDao.searchAndCount(sc,searchFilter);
  return new Pair<List<? extends Site2SiteCustomerGateway>,Integer>(result.first(),result.second());
}
