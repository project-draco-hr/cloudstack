def processGuestNetwork(self, dbag):
    d = self.qFile.data
    dp = {}
    dp['public_ip'] = d['router_guest_ip']
    dp['netmask'] = d['router_guest_netmask']
    dp['source_nat'] = False
    dp['add'] = d['add']
    dp['one_to_one_nat'] = False
    dp['gateway'] = d['router_guest_gateway']
    dp['nic_dev_id'] = d['device'][3]
    dp['nw_type'] = 'guest'
    dp = PrivateGatewayHack.update_network_type_for_privategateway(dbag, dp)
    qf = QueueFile()
    qf.load({'ip_address': [dp], 'type': 'ips', })
    if (('domain_name' not in d.keys()) or (d['domain_name'] == '')):
        d['domain_name'] = 'cloudnine.internal'
    d = PrivateGatewayHack.update_network_type_for_privategateway(dbag, d)
    return cs_guestnetwork.merge(dbag, d)
