{
  Long jobId=(Long)params.get(BaseCmd.Properties.JOB_ID.getName());
  AsyncJobResult result;
  try {
    result=getManagementServer().queryAsyncJobResult(jobId);
  }
 catch (  PermissionDeniedException e) {
    throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"Permission denied");
  }
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  returnValues.add(new Pair<String,Object>(BaseCmd.Properties.JOB_ID.getName(),jobId));
  returnValues.add(new Pair<String,Object>(BaseCmd.Properties.JOB_STATUS.getName(),Integer.valueOf(result.getJobStatus())));
  returnValues.add(new Pair<String,Object>(BaseCmd.Properties.JOB_PROCESS_STATUS.getName(),Integer.valueOf(result.getProcessStatus())));
  returnValues.add(new Pair<String,Object>(BaseCmd.Properties.JOB_RESULT_CODE.getName(),Integer.valueOf(result.getResultCode())));
  Object resultObject=result.getResultObject();
  if (resultObject != null) {
    Class<?> clz=resultObject.getClass();
    if (clz.isPrimitive() || clz.getSuperclass() == Number.class || clz == String.class || clz == Date.class) {
      returnValues.add(new Pair<String,Object>(BaseCmd.Properties.JOB_RESULT_TYPE.getName(),"text"));
      SerializerHelper.appendPairList(returnValues,resultObject,BaseCmd.Properties.JOB_RESULT.getName());
    }
 else {
      returnValues.add(new Pair<String,Object>(BaseCmd.Properties.JOB_RESULT_TYPE.getName(),"object"));
      if (result.getCmdOriginator() != null && !result.getCmdOriginator().isEmpty()) {
        List<Pair<String,Object>> resultValues=new ArrayList<Pair<String,Object>>();
        if (resultObject instanceof NetworkGroupResultObject) {
          serializeNetworkGroupResults(resultValues,(NetworkGroupResultObject)resultObject);
        }
 else {
          SerializerHelper.appendPairList(resultValues,resultObject,BaseCmd.Properties.JOB_RESULT.getName());
        }
        returnValues.add(new Pair<String,Object>(result.getCmdOriginator(),new Object[]{resultValues}));
      }
    }
  }
  return returnValues;
}
