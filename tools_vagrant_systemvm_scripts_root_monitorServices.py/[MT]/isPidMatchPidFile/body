def isPidMatchPidFile(pidfile, pids):
    ' Compares the running process pid with the pid in pid file.\n        If a process with multiple pids then it matches with pid file\n    '
    if ((pids is None) or (isinstance(pids, list) != True) or (len(pids) == 0)):
        printd('Invalid Arguments')
        return StatusCodes.FAILED
    if (not path.isfile(pidfile)):
        printd((('The pid file ' + pidfile) + ' is not there for this process'))
        return StatusCodes.FAILED
    fd = None
    try:
        fd = open(pidfile, 'r')
    except:
        printd((('pid file: ' + pidfile) + ' open failed'))
        return StatusCodes.FAILED
    inp = fd.read()
    if (not inp):
        fd.close()
        return StatusCodes.FAILED
    printd(('file content ' + str(inp)))
    printd(pids)
    tocheck_pid = inp.strip()
    for item in pids:
        if (str(tocheck_pid) == item.strip()):
            printd('pid file matched')
            fd.close()
            return StatusCodes.SUCCESS
    fd.close()
    return StatusCodes.FAILED
