@classmethod
def _addNetScaler(cls, netscaler_config):
    'Helper method for common Netscaler add procedure'
    physical_networks = PhysicalNetwork.list(cls.api_client, zoneid=cls.zone.id)
    if isinstance(physical_networks, list):
        cls.physical_network = physical_networks[0]
    nw_service_providers = NetworkServiceProvider.list(cls.api_client, name='Netscaler', physicalnetworkid=cls.physical_network.id)
    if ((not isinstance(nw_service_providers, list)) or (len(nw_service_providers) < 1)):
        NetworkServiceProvider.add(cls.api_client, name='Netscaler', physicalnetworkid=cls.physical_network.id, servicelist=['Lb'])
    cls.netscaler = NetScaler.add(cls.api_client, netscaler_config, physicalnetworkid=cls.physical_network.id)
    nw_service_providers = NetworkServiceProvider.list(cls.api_client, name='Netscaler', physicalnetworkid=cls.physical_network.id)
    if isinstance(nw_service_providers, list):
        cls.netscaler_provider = nw_service_providers[0]
    if (cls.netscaler_provider.state != 'Enabled'):
        NetworkServiceProvider.update(cls.api_client, id=cls.netscaler_provider.id, state='Enabled')
