{
  Connect conn;
  StoragePool virtPool=null;
  try {
    conn=LibvirtConnection.getConnection();
    virtPool=conn.storagePoolLookupByName("/" + volumeUuid);
  }
 catch (  LibvirtException e1) {
    throw new CloudRuntimeException(e1.toString());
  }
  LibvirtStorageVolumeDef.volFormat libvirtformat=null;
  String volPath=null;
  String volName=null;
  long volAllocation=0;
  long volCapacity=0;
  StorageVol vol=getVolume(virtPool,volumeUuid);
  try {
    if (vol == null) {
      libvirtformat=LibvirtStorageVolumeDef.volFormat.QCOW2;
      StoragePoolInfo poolinfo=virtPool.getInfo();
      volCapacity=poolinfo.available;
      LibvirtStorageVolumeDef volDef=new LibvirtStorageVolumeDef(volumeUuid,volCapacity,libvirtformat,null,null);
      s_logger.debug(volDef.toString());
      vol=virtPool.storageVolCreateXML(volDef.toString(),0);
      volPath=vol.getPath();
      volName=vol.getName();
      volAllocation=vol.getInfo().allocation;
      volCapacity=vol.getInfo().capacity;
    }
    KVMPhysicalDisk disk=new KVMPhysicalDisk(vol.getPath(),volumeUuid,pool);
    disk.setFormat(PhysicalDiskFormat.QCOW2);
    disk.setSize(vol.getInfo().allocation);
    disk.setVirtualSize(vol.getInfo().capacity);
    return disk;
  }
 catch (  LibvirtException e) {
    throw new CloudRuntimeException(e.toString());
  }
}
