@attr(tags=['baremetal', 'basic'])
def test_baremetal(self):
    self.debug('Test create baremetal network offering')
    networkoffering = NetworkOffering.create(self.apiclient, self.services['network_offering'])
    networkoffering.update(self.apiclient, state='Enabled')
    self.cleanup.append(networkoffering)
    physical_network = PhysicalNetwork.list(self.apiclient, zoneid=self.zoneid)[0]
    dhcp_provider = NetworkServiceProvider.list(self.apiclient, name='BaremetalDhcpProvider', physical_network_id=physical_network.id)[0]
    NetworkServiceProvider.update(self.apiclient, id=dhcp_provider.id, state='Enabled')
    pxe_provider = NetworkServiceProvider.list(self.apiclient, name='BaremetalPxeProvider', physical_network_id=physical_network.id)[0]
    NetworkServiceProvider.update(self.apiclient, id=pxe_provider.id, state='Enabled')
    userdata_provider = NetworkServiceProvider.list(self.apiclient, name='BaremetalUserdataProvider', physical_network_id=physical_network.id)[0]
    NetworkServiceProvider.update(self.apiclient, id=userdata_provider.id, state='Enabled')
    network = Network.create(self.apiclient, self.services['network'], zoneid=self.zoneid, networkofferingid=networkoffering.id)
    self.cleanup.insert(0, network)
    pod = Pod.list(self.apiclient)[0]
    cmd = createVlanIpRange.createVlanIpRangeCmd()
    cmd.podid = pod.id
    cmd.networkid = network.id
    cmd.gateway = '10.1.1.1'
    cmd.netmask = '255.255.255.0'
    cmd.startip = '10.1.1.20'
    cmd.endip = '10.1.1.40'
    cmd.forVirtualNetwork = 'false'
    self.apiclient.createVlanIpRange(cmd)
