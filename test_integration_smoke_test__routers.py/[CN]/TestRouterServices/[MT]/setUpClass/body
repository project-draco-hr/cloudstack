@classmethod
def setUpClass(cls):
    testClient = super(TestRouterServices, cls).getClsTestClient()
    cls.apiclient = testClient.getApiClient()
    cls.services = testClient.getParsedTestDataConfig()
    cls.domain = get_domain(cls.apiclient)
    cls.zone = get_zone(cls.apiclient, cls.getZoneForTests())
    cls.services['mode'] = cls.zone.networktype
    template = get_template(cls.apiclient, cls.zone.id, cls.services['ostype'])
    if (template == FAILED):
        cls.fail(('get_template() failed to return template with description %s' % cls.services['ostype']))
    cls.services['virtual_machine']['zoneid'] = cls.zone.id
    cls.account = Account.create(cls.apiclient, cls.services['account'], domainid=cls.domain.id)
    cls.service_offering = ServiceOffering.create(cls.apiclient, cls.services['service_offerings'])
    cls.vm_1 = VirtualMachine.create(cls.apiclient, cls.services['virtual_machine'], templateid=template.id, accountid=cls.account.name, domainid=cls.account.domainid, serviceofferingid=cls.service_offering.id)
    cls.cleanup = [cls.account, cls.service_offering]
    return
