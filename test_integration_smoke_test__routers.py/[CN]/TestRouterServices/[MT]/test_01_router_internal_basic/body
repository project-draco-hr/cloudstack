def test_01_router_internal_basic(self):
    'Test router internal basic zone\n        '
    list_router_response = list_routers(self.apiclient, account=self.account.account.name, domainid=self.account.account.domainid)
    self.assertEqual(isinstance(list_router_response, list), True, 'Check list response returns a valid list')
    router = list_router_response[0]
    hosts = list_hosts(self.apiclient, zoneid=router.zoneid, type='Routing', state='Up', virtualmachineid=self.vm_1.id)
    self.assertEqual(isinstance(hosts, list), True, 'Check list host returns a valid list')
    host = hosts[0]
    self.debug(('Router ID: %s, state: %s' % (router.id, router.state)))
    self.assertEqual(router.state, 'Running', 'Check list router response for router state')
    result = get_process_status(host.ipaddress, self.services['virtual_machine']['publicport'], self.vm_1.username, self.vm_1.password, router.linklocalip, 'service dnsmasq status')
    res = str(result)
    self.debug(('Dnsmasq process status: %s' % res))
    self.assertEqual(res.count('running'), 1, 'Check dnsmasq service is running or not')
    return
