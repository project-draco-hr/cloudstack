def test_03_restart_network_cleanup(self):
    'Test restart network\n        '
    list_router_response = list_routers(self.apiclient, account=self.account.account.name, domainid=self.account.account.domainid)
    self.assertEqual(isinstance(list_router_response, list), True, 'Check list response returns a valid list')
    router = list_router_response[0]
    old_linklocalip = router.linklocalip
    timeout = 10
    while True:
        networks = list_networks(self.apiclient, account=self.account.account.name, domainid=self.account.account.domainid)
        self.assertEqual(isinstance(networks, list), True, 'Check list response returns a valid list')
        network = networks[0]
        if (network.state in ['Implemented', 'Setup']):
            break
        elif (timeout == 0):
            break
        else:
            time.sleep(self.services['sleep'])
            timeout = (timeout - 1)
    self.debug(('Restarting network with ID: %s, Network state: %s' % (network.id, network.state)))
    cmd = restartNetwork.restartNetworkCmd()
    cmd.id = network.id
    cmd.cleanup = True
    self.apiclient.restartNetwork(cmd)
    list_router_response = list_routers(self.apiclient, account=self.account.account.name, domainid=self.account.account.domainid)
    self.assertEqual(isinstance(list_router_response, list), True, 'Check list response returns a valid list')
    router = list_router_response[0]
    self.assertNotEqual(router.linklocalip, old_linklocalip, 'Check link-local IP after restart')
    return
