def listdir_attr(self, path='.'):
    "\n        Return a list containing L{SFTPAttributes} objects corresponding to\n        files in the given C{path}.  The list is in arbitrary order.  It does\n        not include the special entries C{'.'} and C{'..'} even if they are\n        present in the folder.\n\n        The returned L{SFTPAttributes} objects will each have an additional\n        field: C{longname}, which may contain a formatted string of the file's\n        attributes, in unix format.  The content of this string will probably\n        depend on the SFTP server implementation.\n\n        @param path: path to list (defaults to C{'.'})\n        @type path: str\n        @return: list of attributes\n        @rtype: list of L{SFTPAttributes}\n\n        @since: 1.2\n        "
    path = self._adjust_cwd(path)
    self._log(DEBUG, ('listdir(%r)' % path))
    (t, msg) = self._request(CMD_OPENDIR, path)
    if (t != CMD_HANDLE):
        raise SFTPError('Expected handle')
    handle = msg.get_string()
    filelist = []
    while True:
        try:
            (t, msg) = self._request(CMD_READDIR, handle)
        except EOFError as e:
            break
        if (t != CMD_NAME):
            raise SFTPError('Expected name response')
        count = msg.get_int()
        for i in range(count):
            filename = _to_unicode(msg.get_string())
            longname = _to_unicode(msg.get_string())
            attr = SFTPAttributes._from_msg(msg, filename, longname)
            if ((filename != '.') and (filename != '..')):
                filelist.append(attr)
    self._request(CMD_CLOSE, handle)
    return filelist
