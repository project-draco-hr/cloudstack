def _async_request(self, fileobj, t, *arg):
    self._lock.acquire()
    try:
        msg = Message()
        msg.add_int(self.request_number)
        for item in arg:
            if (type(item) is int):
                msg.add_int(item)
            elif (type(item) is long):
                msg.add_int64(item)
            elif (type(item) is str):
                msg.add_string(item)
            elif (type(item) is SFTPAttributes):
                item._pack(msg)
            else:
                raise Exception(('unknown type for %r type %r' % (item, type(item))))
        num = self.request_number
        self._expecting[num] = fileobj
        self._send_packet(t, str(msg))
        self.request_number += 1
    finally:
        self._lock.release()
    return num
