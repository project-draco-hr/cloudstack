def __init__(self, sock):
    '\n        Create an SFTP client from an existing L{Channel}.  The channel\n        should already have requested the C{"sftp"} subsystem.\n\n        An alternate way to create an SFTP client context is by using\n        L{from_transport}.\n\n        @param sock: an open L{Channel} using the C{"sftp"} subsystem\n        @type sock: L{Channel}\n\n        @raise SSHException: if there\'s an exception while negotiating\n            sftp\n        '
    BaseSFTP.__init__(self)
    self.sock = sock
    self.ultra_debug = False
    self.request_number = 1
    self._lock = threading.Lock()
    self._cwd = None
    self._expecting = weakref.WeakValueDictionary()
    if (type(sock) is Channel):
        transport = self.sock.get_transport()
        self.logger = util.get_logger((transport.get_log_channel() + '.sftp'))
        self.ultra_debug = transport.get_hexdump()
    try:
        server_version = self._send_version()
    except EOFError as x:
        raise SSHException('EOF during negotiation')
    self._log(INFO, ('Opened sftp connection (server version %d)' % server_version))
