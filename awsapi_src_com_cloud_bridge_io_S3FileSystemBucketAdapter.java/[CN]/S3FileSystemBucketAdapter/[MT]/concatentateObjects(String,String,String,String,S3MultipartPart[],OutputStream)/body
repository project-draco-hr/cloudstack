{
  MessageDigest md5;
  long totalLength=0;
  try {
    md5=MessageDigest.getInstance("MD5");
  }
 catch (  NoSuchAlgorithmException e) {
    logger.error("Unexpected exception " + e.getMessage(),e);
    throw new InternalErrorException("Unable to get MD5 MessageDigest",e);
  }
  File file=new File(getBucketFolderDir(mountedRoot,destBucket) + File.separatorChar + fileName);
  try {
    file.delete();
    file.createNewFile();
    final FileOutputStream fos=new FileOutputStream(file);
    byte[] buffer=new byte[4096];
    for (int i=0; i < parts.length; i++) {
      DataHandler nextPart=loadObject(mountedRoot,sourceBucket,parts[i].getPath());
      InputStream is=nextPart.getInputStream();
      int len=0;
      while ((len=is.read(buffer)) > 0) {
        fos.write(buffer,0,len);
        md5.update(buffer,0,len);
        totalLength+=len;
      }
      is.close();
      if (null != client) {
        client.write(new String(" ").getBytes());
        client.flush();
      }
    }
    fos.close();
    return new OrderedPair<String,Long>(StringHelper.toHexString(md5.digest()),new Long(totalLength));
  }
 catch (  IOException e) {
    logger.error("concatentateObjects unexpected exception " + e.getMessage(),e);
    throw new OutOfStorageException(e);
  }
}
