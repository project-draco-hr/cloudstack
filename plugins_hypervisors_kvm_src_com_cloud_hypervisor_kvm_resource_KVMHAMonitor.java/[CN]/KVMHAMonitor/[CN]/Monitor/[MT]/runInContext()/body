{
synchronized (_storagePool) {
    Set<String> removedPools=new HashSet<String>();
    for (    String uuid : _storagePool.keySet()) {
      NfsStoragePool primaryStoragePool=_storagePool.get(uuid);
      StoragePool storage=null;
      try {
        Connect conn=LibvirtConnection.getConnection();
        storage=conn.storagePoolLookupByUUIDString(uuid);
        if (storage == null) {
          s_logger.debug("Libvirt storage pool " + uuid + " not found, removing from HA list");
          removedPools.add(uuid);
          continue;
        }
 else         if (storage.getInfo().state != StoragePoolState.VIR_STORAGE_POOL_RUNNING) {
          s_logger.debug("Libvirt storage pool " + uuid + " found, but not running, removing from HA list");
          removedPools.add(uuid);
          continue;
        }
        s_logger.debug("Found NFS storage pool " + uuid + " in libvirt, continuing");
      }
 catch (      LibvirtException e) {
        s_logger.debug("Failed to lookup libvirt storage pool " + uuid + " due to: "+ e);
        if (e.toString().contains("pool not found")) {
          s_logger.debug("removing pool from HA monitor since it was deleted");
          removedPools.add(uuid);
          continue;
        }
      }
      String result=null;
      for (int i=0; i < 5; i++) {
        Script cmd=new Script(s_heartBeatPath,_heartBeatUpdateTimeout,s_logger);
        cmd.add("-i",primaryStoragePool._poolIp);
        cmd.add("-p",primaryStoragePool._poolMountSourcePath);
        cmd.add("-m",primaryStoragePool._mountDestPath);
        cmd.add("-h",_hostIP);
        result=cmd.execute();
        if (result != null) {
          s_logger.warn("write heartbeat failed: " + result + ", retry: "+ i);
        }
 else {
          break;
        }
      }
      if (result != null) {
        s_logger.warn("write heartbeat failed: " + result + "; reboot the host");
        Script cmd=new Script(s_heartBeatPath,_heartBeatUpdateTimeout,s_logger);
        cmd.add("-i",primaryStoragePool._poolIp);
        cmd.add("-p",primaryStoragePool._poolMountSourcePath);
        cmd.add("-m",primaryStoragePool._mountDestPath);
        cmd.add("-c");
        result=cmd.execute();
      }
    }
    if (!removedPools.isEmpty()) {
      for (      String uuid : removedPools) {
        removeStoragePool(uuid);
      }
    }
  }
}
