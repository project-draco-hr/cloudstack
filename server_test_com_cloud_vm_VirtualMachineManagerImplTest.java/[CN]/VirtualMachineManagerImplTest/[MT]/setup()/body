{
  MockitoAnnotations.initMocks(this);
  _vmMgr._templateDao=_templateDao;
  _vmMgr._volsDao=_volsDao;
  _vmMgr.volumeMgr=_storageMgr;
  _vmMgr._accountDao=_accountDao;
  _vmMgr._userDao=_userDao;
  _vmMgr._accountMgr=_accountMgr;
  _vmMgr._configMgr=_configMgr;
  _vmMgr._capacityMgr=_capacityMgr;
  _vmMgr._hostDao=_hostDao;
  _vmMgr._nodeId=1L;
  _vmMgr._workDao=_workDao;
  _vmMgr._agentMgr=_agentMgr;
  _vmMgr._podDao=_podDao;
  _vmMgr._clusterDao=_clusterDao;
  _vmMgr._dcDao=_dcDao;
  _vmMgr._diskOfferingDao=_diskOfferingDao;
  _vmMgr._storagePoolDao=_storagePoolDao;
  _vmMgr._poolHostDao=_poolHostDao;
  _vmMgr._networkMgr=_networkMgr;
  _vmMgr._hvGuruMgr=_hvGuruMgr;
  _vmMgr._vmSnapshotMgr=_vmSnapshotMgr;
  _vmMgr._vmDao=_vmInstanceDao;
  _vmMgr._configServer=_configServer;
  _vmMgr._uservmDetailsDao=_vmDetailsDao;
  when(_vmMock.getId()).thenReturn(314l);
  when(_vmInstance.getId()).thenReturn(1L);
  when(_vmInstance.getServiceOfferingId()).thenReturn(2L);
  when(_vmInstance.getInstanceName()).thenReturn("myVm");
  when(_vmInstance.getHostId()).thenReturn(2L);
  when(_vmInstance.getType()).thenReturn(VirtualMachine.Type.User);
  when(_host.getId()).thenReturn(1L);
  when(_hostDao.findById(anyLong())).thenReturn(null);
  when(_configMgr.getServiceOffering(anyLong())).thenReturn(getSvcoffering(512));
  when(_workDao.persist(_work)).thenReturn(_work);
  when(_workDao.update("1",_work)).thenReturn(true);
  when(_work.getId()).thenReturn("1");
  doNothing().when(_work).setStep(ItWorkVO.Step.Done);
}
