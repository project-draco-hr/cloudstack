{
  return (T)Proxy.newProxyInstance(serviceObject.getClass().getClassLoader(),new Class[]{serviceInterface},new InvocationHandler(){
    public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      Object result=null;
      try {
        result=method.invoke(serviceObject,args);
        PersistContext.commitTransaction();
        PersistContext.commitTransaction(true);
      }
 catch (      PersistException e) {
      }
catch (      SessionException e) {
      }
catch (      Throwable e) {
        if (e.getCause() != null && e.getCause() instanceof AxisFault)         throw e.getCause();
 else         if (e.getCause() != null && e.getCause().getCause() != null && e.getCause().getCause() instanceof AxisFault)         throw e.getCause().getCause();
 else {
          logger.warn("Unhandled exception " + e.getMessage(),e);
          throw e;
        }
      }
 finally {
        PersistContext.closeSession();
        PersistContext.closeSession(true);
      }
      return result;
    }
  }
);
}
