{
  try {
    if (com.amazon.s3.client.AmazonS3Stub.GetBucketLoggingStatus.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.GetBucketLoggingStatus.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.GetBucketLoggingStatusResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.GetBucketLoggingStatusResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.CopyObject.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.CopyObject.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.CopyObjectResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.CopyObjectResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.GetBucketAccessControlPolicy.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.GetBucketAccessControlPolicy.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.GetBucketAccessControlPolicyResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.GetBucketAccessControlPolicyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.ListBucket.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.ListBucket.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.ListBucketResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.ListBucketResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.PutObject.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.PutObject.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.PutObjectResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.PutObjectResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.CreateBucket.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.CreateBucket.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.CreateBucketResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.CreateBucketResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.ListAllMyBuckets.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.ListAllMyBuckets.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.ListAllMyBucketsResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.ListAllMyBucketsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.GetObject.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.GetObject.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.GetObjectResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.GetObjectResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.DeleteBucket.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.DeleteBucket.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.DeleteBucketResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.DeleteBucketResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.SetBucketLoggingStatus.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.SetBucketLoggingStatus.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.SetBucketLoggingStatusResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.SetBucketLoggingStatusResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.GetObjectAccessControlPolicy.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.GetObjectAccessControlPolicy.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.GetObjectAccessControlPolicyResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.GetObjectAccessControlPolicyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.DeleteObject.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.DeleteObject.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.DeleteObjectResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.DeleteObjectResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.SetBucketAccessControlPolicy.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.SetBucketAccessControlPolicy.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.SetBucketAccessControlPolicyResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.SetBucketAccessControlPolicyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.SetObjectAccessControlPolicy.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.SetObjectAccessControlPolicy.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.SetObjectAccessControlPolicyResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.SetObjectAccessControlPolicyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.PutObjectInline.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.PutObjectInline.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.PutObjectInlineResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.PutObjectInlineResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.GetObjectExtended.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.GetObjectExtended.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.client.AmazonS3Stub.GetObjectExtendedResponse.class.equals(type)) {
      return com.amazon.s3.client.AmazonS3Stub.GetObjectExtendedResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
  }
 catch (  java.lang.Exception e) {
    throw org.apache.axis2.AxisFault.makeFault(e);
  }
  return null;
}
