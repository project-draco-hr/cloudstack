{
  GetObjectExtended object=new GetObjectExtended();
  int event;
  java.lang.String nillableValue=null;
  java.lang.String prefix="";
  java.lang.String namespaceuri="";
  try {
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type") != null) {
      java.lang.String fullTypeName=reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type");
      if (fullTypeName != null) {
        java.lang.String nsPrefix=null;
        if (fullTypeName.indexOf(":") > -1) {
          nsPrefix=fullTypeName.substring(0,fullTypeName.indexOf(":"));
        }
        nsPrefix=nsPrefix == null ? "" : nsPrefix;
        java.lang.String type=fullTypeName.substring(fullTypeName.indexOf(":") + 1);
        if (!"GetObjectExtended".equals(type)) {
          java.lang.String nsUri=reader.getNamespaceContext().getNamespaceURI(nsPrefix);
          return (GetObjectExtended)ExtensionMapper.getTypeObject(nsUri,type,reader);
        }
      }
    }
    java.util.Vector handledAttributes=new java.util.Vector();
    reader.next();
    java.util.ArrayList list10=new java.util.ArrayList();
    java.util.ArrayList list11=new java.util.ArrayList();
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","Bucket").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setBucket(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
      reader.next();
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","Key").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setKey(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
      reader.next();
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","GetMetadata").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setGetMetadata(org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
      reader.next();
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","GetData").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setGetData(org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
      reader.next();
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","InlineData").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setInlineData(org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
      reader.next();
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","ByteRangeStart").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setByteRangeStart(org.apache.axis2.databinding.utils.ConverterUtil.convertToLong(content));
      reader.next();
    }
 else {
      object.setByteRangeStart(java.lang.Long.MIN_VALUE);
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","ByteRangeEnd").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setByteRangeEnd(org.apache.axis2.databinding.utils.ConverterUtil.convertToLong(content));
      reader.next();
    }
 else {
      object.setByteRangeEnd(java.lang.Long.MIN_VALUE);
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","IfModifiedSince").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setIfModifiedSince(org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
      reader.next();
    }
 else {
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","IfUnmodifiedSince").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setIfUnmodifiedSince(org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
      reader.next();
    }
 else {
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","IfMatch").equals(reader.getName())) {
      list10.add(reader.getElementText());
      boolean loopDone10=false;
      while (!loopDone10) {
        while (!reader.isEndElement()) {
          reader.next();
        }
        reader.next();
        while (!reader.isStartElement() && !reader.isEndElement())         reader.next();
        if (reader.isEndElement()) {
          loopDone10=true;
        }
 else {
          if (new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","IfMatch").equals(reader.getName())) {
            list10.add(reader.getElementText());
          }
 else {
            loopDone10=true;
          }
        }
      }
      object.setIfMatch((java.lang.String[])list10.toArray(new java.lang.String[list10.size()]));
    }
 else {
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","IfNoneMatch").equals(reader.getName())) {
      list11.add(reader.getElementText());
      boolean loopDone11=false;
      while (!loopDone11) {
        while (!reader.isEndElement()) {
          reader.next();
        }
        reader.next();
        while (!reader.isStartElement() && !reader.isEndElement())         reader.next();
        if (reader.isEndElement()) {
          loopDone11=true;
        }
 else {
          if (new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","IfNoneMatch").equals(reader.getName())) {
            list11.add(reader.getElementText());
          }
 else {
            loopDone11=true;
          }
        }
      }
      object.setIfNoneMatch((java.lang.String[])list11.toArray(new java.lang.String[list11.size()]));
    }
 else {
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","ReturnCompleteObjectOnConditionFailure").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setReturnCompleteObjectOnConditionFailure(org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
      reader.next();
    }
 else {
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","AWSAccessKeyId").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setAWSAccessKeyId(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
      reader.next();
    }
 else {
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","Timestamp").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setTimestamp(org.apache.axis2.databinding.utils.ConverterUtil.convertToDateTime(content));
      reader.next();
    }
 else {
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","Signature").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setSignature(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
      reader.next();
    }
 else {
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement() && new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","Credential").equals(reader.getName())) {
      java.lang.String content=reader.getElementText();
      object.setCredential(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
      reader.next();
    }
 else {
    }
    while (!reader.isStartElement() && !reader.isEndElement())     reader.next();
    if (reader.isStartElement())     throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
  }
 catch (  javax.xml.stream.XMLStreamException e) {
    throw new java.lang.Exception(e);
  }
  return object;
}
