@data('network_offering', 'network_offering_vpcNS')
@attr(tags=['advanced', 'intervlan'])
def test_05_create_network_diff_account(self, value):
    ' Test create network from different account in VPC\n        '
    if ((value == 'network_offering_vpcNS') and (NSconfigured == False)):
        self.skipTest('Netscaler not configured: skipping test')
    if (value == 'network_offering'):
        vpc_off_list = VpcOffering.list(self.apiclient, name='Default VPC offering', listall=True)
    else:
        vpc_off_list = VpcOffering.list(self.apiclient, name='Default VPC  offering with Netscaler', listall=True)
    if isinstance(vpc_off_list, list):
        vpc_off = vpc_off_list[0]
    self.debug(('Creating a VPC with offering: %s' % vpc_off.id))
    self.debug('creating a VPC network with cidr: 10.1.1.1/16')
    self.services['vpc']['cidr'] = '10.1.1.1/16'
    vpc = VPC.create(self.apiclient, self.services['vpc'], vpcofferingid=vpc_off.id, zoneid=self.zone.id, account=self.account.name, domainid=self.account.domainid)
    self.validate_vpc_network(vpc)
    self.debug('Creating network offering')
    self.network_offering = NetworkOffering.create(self.apiclient, self.services[value], conservemode=False)
    self.network_offering.update(self.apiclient, state='Enabled')
    self.cleanup.append(self.network_offering)
    self.debug(('Creating the new account to create new network in VPC: %s' % vpc.name))
    account = Account.create(self.apiclient, self.services['account'], admin=True, domainid=self.domain.id)
    self.debug('Creating network from diff account than VPC')
    with self.assertRaises(Exception):
        self.services['network']['netmask'] = '255.0.0.0'
        Network.create(self.apiclient, self.services['network'], accountid=account.name, domainid=account.domainid, networkofferingid=self.network_offering.id, zoneid=self.zone.id, gateway='10.1.1.1', vpcid=vpc.id)
    self.debug('Network creation failed as VPC belongs to different account')
    return
