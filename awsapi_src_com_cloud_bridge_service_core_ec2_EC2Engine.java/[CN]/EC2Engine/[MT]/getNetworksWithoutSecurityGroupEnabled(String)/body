{
  CloudStackAccount caller=getCurrentAccount();
  List<CloudStackNetwork> networks=getApi().listNetworks(caller.getName(),caller.getDomainId(),null,true,null,null,null,null,null,zoneId);
  List<CloudStackNetworkOffering> reuquiredOfferings=getApi().listNetworkOfferings("Required",null,null,null,true,null,null,null,null,null,zoneId);
  if (reuquiredOfferings != null && !reuquiredOfferings.isEmpty()) {
    if (networks != null && !networks.isEmpty()) {
      for (      CloudStackNetwork network : networks) {
        for (        CloudStackNetworkOffering requiredOffering : reuquiredOfferings) {
          logger.debug("[reqd/virtual} offering: " + requiredOffering.getId() + " network "+ network.getNetworkOfferingId());
          if (network.getNetworkOfferingId().equals(requiredOffering.getId())) {
            return network;
          }
        }
      }
    }
 else {
      return createDefaultGuestNetwork(zoneId,reuquiredOfferings.get(0),caller);
    }
  }
 else {
    List<CloudStackNetworkOffering> optionalOfferings=getApi().listNetworkOfferings("Optional",null,null,null,true,null,null,null,null,null,zoneId);
    if (optionalOfferings != null && !optionalOfferings.isEmpty()) {
      if (networks != null && !networks.isEmpty()) {
        for (        CloudStackNetwork network : networks) {
          for (          CloudStackNetworkOffering optionalOffering : optionalOfferings) {
            logger.debug("[optional] offering: " + optionalOffering.getId() + " network "+ network.getNetworkOfferingId());
            if (network.getNetworkOfferingId().equals(optionalOffering.getId())) {
              return network;
            }
          }
        }
      }
    }
  }
  throw new EC2ServiceException(ServerError.InternalError,"Unable to find an appropriate network for account " + caller.getName());
}
