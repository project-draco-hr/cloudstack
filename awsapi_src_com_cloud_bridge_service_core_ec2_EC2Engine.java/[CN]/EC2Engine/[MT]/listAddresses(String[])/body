{
  try {
    EC2DescribeAddressesResponse addressSet=new EC2DescribeAddressesResponse();
    List<CloudStackIpAddress> addresses=getApi().listPublicIpAddresses(null,null,null,null,null,null,null,null,null);
    if (addresses != null && addresses.size() > 0) {
      for (      CloudStackIpAddress address : addresses) {
        boolean matched=false;
        if (addressNames.length > 0) {
          for (          String addressName : addressNames) {
            if (address.getIpAddress().equalsIgnoreCase(addressName)) {
              matched=true;
              break;
            }
          }
        }
 else         matched=true;
        if (!matched)         continue;
        EC2Address ec2Address=new EC2Address();
        ec2Address.setIpAddress(address.getIpAddress());
        if (address.getVirtualMachineId() != null)         ec2Address.setAssociatedInstanceId(address.getVirtualMachineId().toString());
        addressSet.addAddress(ec2Address);
      }
    }
    return addressSet;
  }
 catch (  Exception e) {
    logger.error("List Addresses - ",e);
    throw new Exception(e.getMessage() != null ? e.getMessage() : e.toString());
  }
}
