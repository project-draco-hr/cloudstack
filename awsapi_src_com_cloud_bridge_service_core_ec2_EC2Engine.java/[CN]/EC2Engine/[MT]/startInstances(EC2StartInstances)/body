{
  EC2StartInstancesResponse instances=new EC2StartInstancesResponse();
  EC2Instance[] vms=null;
  try {
    EC2DescribeInstancesResponse previousState=listVirtualMachines(request.getInstancesSet(),null);
    vms=previousState.getInstanceSet();
    for (    EC2Instance vm : vms) {
      vm.setPreviousState(vm.getState());
      if (vm.getState().equalsIgnoreCase("Running") || vm.getState().equalsIgnoreCase("Destroyed")) {
        instances.addInstance(vm);
        continue;
      }
      CloudStackUserVm resp=getApi().startVirtualMachine(vm.getId());
      if (resp != null) {
        vm.setState(resp.getState());
        if (logger.isDebugEnabled())         logger.debug("Starting VM " + vm.getId() + " job "+ resp.getJobId());
      }
      instances.addInstance(vm);
    }
    return instances;
  }
 catch (  Exception e) {
    logger.error("EC2 StartInstances - ",e);
    throw new EC2ServiceException(ServerError.InternalError,e.getMessage() != null ? e.getMessage() : "An unexpected error occurred.");
  }
}
