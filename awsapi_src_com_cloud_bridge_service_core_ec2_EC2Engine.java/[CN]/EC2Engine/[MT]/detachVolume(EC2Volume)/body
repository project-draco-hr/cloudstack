{
  EC2Volume resp=new EC2Volume();
  try {
    EC2DescribeVolumesResponse volumes=new EC2DescribeVolumesResponse();
    volumes=listVolumes(request.getId(),null,volumes,null);
    if (volumes != null) {
      EC2Volume[] volumeSet=volumes.getVolumeSet();
      if (request.getInstanceId() != null) {
        if (!request.getInstanceId().equalsIgnoreCase(volumeSet[0].getInstanceId()))         throw new Exception("Volume is not attached to the Instance");
      }
      if (request.getDevice() != null) {
        String devicePath=null;
        if (volumeSet[0].getDeviceId() != null)         devicePath=cloudDeviceIdToDevicePath(volumeSet[0].getHypervisor(),volumeSet[0].getDeviceId());
        if (!request.getDevice().equalsIgnoreCase(devicePath))         throw new Exception("Volume is not attached to the Device");
      }
    }
    CloudStackVolume vol=getApi().detachVolume(null,request.getId(),null);
    if (vol != null) {
      resp.setAttached(vol.getAttached());
      resp.setCreated(vol.getCreated());
      resp.setDevice(request.getDevice());
      resp.setDeviceId(vol.getDeviceId());
      resp.setHypervisor(vol.getHypervisor());
      resp.setId(vol.getId());
      resp.setInstanceId(vol.getVirtualMachineId());
      resp.setSize(vol.getSize());
      resp.setSnapshotId(vol.getSnapshotId());
      resp.setState(vol.getState());
      resp.setType(vol.getVolumeType());
      resp.setVMState(vol.getVirtualMachineState());
      resp.setZoneName(vol.getZoneName());
    }
  }
 catch (  Exception e) {
    logger.error("EC2 DetachVolume - ",e);
    handleException(e);
  }
  return resp;
}
