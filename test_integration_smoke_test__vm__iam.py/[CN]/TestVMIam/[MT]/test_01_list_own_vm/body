@attr(tags=['devcloud', 'advanced', 'advancedns', 'smoke', 'basic', 'sg'])
def test_01_list_own_vm(self):
    self.debug(('Listing VM for account: %s' % self.account_1A.name))
    self.apiclient.connection.apiKey = self.user_1A_apikey
    self.apiclient.connection.secretKey = self.user_1A_secretkey
    list_vm_response = list_virtual_machines(self.apiclient)
    self.assertEqual(isinstance(list_vm_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_vm_response), 0, 'Check VM available in List Virtual Machines')
    self.assertEqual(list_vm_response[0].name, self.virtual_machine_1A.name, 'Virtual Machine names do not match')
    self.debug(('Listing VM for account: %s' % self.account_1B.id))
    self.apiclient.connection.apiKey = self.user_1B_apikey
    self.apiclient.connection.secretKey = self.user_1B_secretkey
    list_vm_response = list_virtual_machines(self.apiclient)
    self.assertEqual(isinstance(list_vm_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_vm_response), 0, 'Check VM available in List Virtual Machines')
    self.assertEqual(list_vm_response[0].name, self.virtual_machine_1B.name, 'Virtual Machine names do not match')
    self.debug(('Listing VM for account: %s' % self.account_2A.id))
    self.apiclient.connection.apiKey = self.user_2A_apikey
    self.apiclient.connection.secretKey = self.user_2A_secretkey
    list_vm_response = list_virtual_machines(self.apiclient)
    self.assertEqual(isinstance(list_vm_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_vm_response), 0, 'Check VM available in List Virtual Machines')
    self.assertEqual(list_vm_response[0].name, self.virtual_machine_2A.name, 'Virtual Machine names do not match')
    return
