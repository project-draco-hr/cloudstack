@attr(tags=['devcloud', 'advanced', 'advancedns', 'smoke', 'basic', 'sg', 'selfservice'])
def test_07_revoke_resource_vm(self):
    self.debug(('Revoking VM %s read only access from account: %s' % (self.virtual_machine_1A.name, self.account_1B.name)))
    res_permission = {}
    res_permission['action'] = 'listVirtualMachines'
    res_permission['entitytype'] = 'VirtualMachine'
    res_permission['scope'] = 'RESOURCE'
    res_permission['scopeid'] = self.virtual_machine_1A.id
    self.vm_read_policy.removePermission(self.apiclient, res_permission)
    self.debug(('Listing VM for account: %s' % self.account_1B.id))
    self.apiclient.connection.apiKey = self.user_1B_apikey
    self.apiclient.connection.securityKey = self.user_1B_secretkey
    list_vm_response = list_virtual_machines(self.apiclient)
    self.assertEqual(isinstance(list_vm_response, list), True, 'Check list response returns a valid list')
    self.assertEqual(len(list_vm_response), 1, 'Check VM available in List Virtual Machines')
    self.assertEqual(list_vm_response[0].name, self.virtual_machine_1B.name, 'Virtual Machine names do not match')
    return
