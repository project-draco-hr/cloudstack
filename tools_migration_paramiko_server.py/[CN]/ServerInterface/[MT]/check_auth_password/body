def check_auth_password(self, username, password):
    '\n        Determine if a given username and password supplied by the client is\n        acceptable for use in authentication.\n\n        Return L{AUTH_FAILED} if the password is not accepted,\n        L{AUTH_SUCCESSFUL} if the password is accepted and completes\n        the authentication, or L{AUTH_PARTIALLY_SUCCESSFUL} if your\n        authentication is stateful, and this key is accepted for\n        authentication, but more authentication is required.  (In this latter\n        case, L{get_allowed_auths} will be called to report to the client what\n        options it has for continuing the authentication.)\n\n        The default implementation always returns L{AUTH_FAILED}.\n\n        @param username: the username of the authenticating client.\n        @type username: str\n        @param password: the password given by the client.\n        @type password: str\n        @return: L{AUTH_FAILED} if the authentication fails;\n            L{AUTH_SUCCESSFUL} if it succeeds;\n            L{AUTH_PARTIALLY_SUCCESSFUL} if the password auth is\n            successful, but authentication must continue.\n        @rtype: int\n        '
    return AUTH_FAILED
