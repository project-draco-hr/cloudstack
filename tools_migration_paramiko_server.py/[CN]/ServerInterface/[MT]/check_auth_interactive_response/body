def check_auth_interactive_response(self, responses):
    '\n        Continue or finish an interactive authentication challenge, if\n        supported.  You should override this method in server mode if you want\n        to support the C{"keyboard-interactive"} auth type.\n        \n        Return L{AUTH_FAILED} if the responses are not accepted,\n        L{AUTH_SUCCESSFUL} if the responses are accepted and complete\n        the authentication, or L{AUTH_PARTIALLY_SUCCESSFUL} if your\n        authentication is stateful, and this set of responses is accepted for\n        authentication, but more authentication is required.  (In this latter\n        case, L{get_allowed_auths} will be called to report to the client what\n        options it has for continuing the authentication.)\n\n        If you wish to continue interactive authentication with more questions,\n        you may return an L{InteractiveQuery} object, which should cause the\n        client to respond with more answers, calling this method again.  This\n        cycle can continue indefinitely.\n\n        The default implementation always returns L{AUTH_FAILED}.\n\n        @param responses: list of responses from the client\n        @type responses: list(str)\n        @return: L{AUTH_FAILED} if the authentication fails;\n            L{AUTH_SUCCESSFUL} if it succeeds;\n            L{AUTH_PARTIALLY_SUCCESSFUL} if the interactive auth is\n            successful, but authentication must continue; otherwise an object\n            containing queries for the user\n        @rtype: int or L{InteractiveQuery}\n        '
    return AUTH_FAILED
