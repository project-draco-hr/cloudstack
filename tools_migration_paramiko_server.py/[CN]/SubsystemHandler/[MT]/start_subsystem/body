def start_subsystem(self, name, transport, channel):
    '\n        Process an ssh subsystem in server mode.  This method is called on a\n        new object (and in a new thread) for each subsystem request.  It is\n        assumed that all subsystem logic will take place here, and when the\n        subsystem is finished, this method will return.  After this method\n        returns, the channel is closed.\n\n        The combination of C{transport} and C{channel} are unique; this handler\n        corresponds to exactly one L{Channel} on one L{Transport}.\n\n        @note: It is the responsibility of this method to exit if the\n            underlying L{Transport} is closed.  This can be done by checking\n            L{Transport.is_active} or noticing an EOF\n            on the L{Channel}.  If this method loops forever without checking\n            for this case, your python interpreter may refuse to exit because\n            this thread will still be running.\n\n        @param name: name of the requested subsystem.\n        @type name: str\n        @param transport: the server-mode L{Transport}.\n        @type transport: L{Transport}\n        @param channel: the channel associated with this subsystem request.\n        @type channel: L{Channel}\n        '
    pass
