{
  if (encryptedText == null || encryptedText.isEmpty())   return encryptedText;
  assert(password != null);
  assert(!password.isEmpty());
  try {
    Cipher cipher=Cipher.getInstance("DES");
    int maxKeySize=8;
    SecretKeySpec keySpec=new SecretKeySpec(normalizeKey(password.getBytes(),maxKeySize),"DES");
    cipher.init(Cipher.DECRYPT_MODE,keySpec);
    byte[] encryptedBytes=Base64.decodeBase64(encryptedText);
    return new String(cipher.doFinal(encryptedBytes));
  }
 catch (  NoSuchAlgorithmException e) {
    s_logger.error("Unexpected exception ",e);
    return null;
  }
catch (  NoSuchPaddingException e) {
    s_logger.error("Unexpected exception ",e);
    return null;
  }
catch (  IllegalBlockSizeException e) {
    s_logger.error("Unexpected exception ",e);
    return null;
  }
catch (  BadPaddingException e) {
    s_logger.error("Unexpected exception ",e);
    return null;
  }
catch (  InvalidKeyException e) {
    s_logger.error("Unexpected exception ",e);
    return null;
  }
}
