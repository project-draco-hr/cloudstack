def lookup(self, hostname):
    '\n        Return a dict of config options for a given hostname.\n\n        The host-matching rules of OpenSSH\'s C{ssh_config} man page are used,\n        which means that all configuration options from matching host\n        specifications are merged, with more specific hostmasks taking\n        precedence. In other words, if C{"Port"} is set under C{"Host *"}\n        and also C{"Host *.example.com"}, and the lookup is for\n        C{"ssh.example.com"}, then the port entry for C{"Host *.example.com"}\n        will win out.\n\n        The keys in the returned dict are all normalized to lowercase (look for\n        C{"port"}, not C{"Port"}. No other processing is done to the keys or\n        values.\n\n        @param hostname: the hostname to lookup\n        @type hostname: str\n        '
    matches = [x for x in self._config if fnmatch.fnmatch(hostname, x['host'])]
    matches.sort((lambda x, y: cmp(len(x['host']), len(y['host']))))
    ret = {}
    for m in matches:
        ret.update(m)
    del ret['host']
    return ret
