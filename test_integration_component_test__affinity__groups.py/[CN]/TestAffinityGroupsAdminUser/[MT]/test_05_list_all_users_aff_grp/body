@attr(tags=['simulator', 'basic', 'advanced'], required_hardware='false')
def test_05_list_all_users_aff_grp(self):
    '\n            List Affinity Groups belonging to regular user passing account id and domain id\n        '
    self.user1 = Account.create(self.api_client, self.services['new_account'])
    self.cleanup.append(self.user1)
    userapiclient = self.testClient.getUserApiClient(UserName=self.user1.name, DomainName=self.user1.domain, type=0)
    aff_grp1 = self.create_aff_grp(api_client=userapiclient, aff_grp=self.services['host_anti_affinity'])
    aff_grp2 = self.create_aff_grp(api_client=userapiclient, aff_grp=self.services['host_anti_affinity'])
    list_aff_grps = AffinityGroup.list(self.api_client, accountId=self.user1.id, domainId=self.user1.domainid)
    self.assertNotEqual(list_aff_grps, [], 'Admin not able to list Affinity Groups of users')
    grp_names = [aff_grp1.name, aff_grp2.name]
    list_names = []
    for grp in list_aff_grps:
        list_names.append(grp.name)
    for name in grp_names:
        self.assertTrue((name in list_names), ('Missing Group %s from listing' % name))
    aff_grp1.delete(self.api_client)
    aff_grp2.delete(self.api_client)
