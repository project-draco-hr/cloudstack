def test_04_delete_aff_grp_with_vms(self):
    '\n            Delete Affinity Group which has after updating affinity group for\n            vms in it.\n        '
    self.create_aff_grp(aff_grp=self.services['host_anti_affinity_0'])
    (vm1, hostid1) = self.create_vm_in_aff_grps([self.aff_grp[0].name])
    (vm2, hostid2) = self.create_vm_in_aff_grps([self.aff_grp[0].name])
    with self.assertRaises(Exception):
        AffinityGroup.delete(self.api_client, name=self.aff_grp[0].name)
    vm1.update_affinity_group(self.api_client, affinitygroupnames=[])
    with self.assertRaises(Exception):
        AffinityGroup.delete(self.api_client, name=self.aff_grp[0].name)
    vm2.update_affinity_group(self.api_client, affinitygroupnames=[])
    AffinityGroup.delete(self.api_client, name=self.aff_grp[0].name)
    vm1.delete(self.api_client)
    vm2.delete(self.api_client)
    wait_for_cleanup(self.apiclient, ['expunge.delay', 'expunge.interval'])
    AffinityGroup.delete(self.api_client, name=self.aff_grp[1].name)
