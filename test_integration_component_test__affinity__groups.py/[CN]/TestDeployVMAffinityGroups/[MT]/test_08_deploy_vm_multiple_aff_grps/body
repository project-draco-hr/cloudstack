@attr(tags=['simulator', 'basic', 'advanced', 'multihost'], required_hardware='false')
def test_08_deploy_vm_multiple_aff_grps(self):
    '\n            Deploy vm in multiple affinity groups\n        '
    self.create_aff_grp(aff_grp=self.services['host_anti_affinity'], acc=self.account.name, domainid=self.domain.id)
    self.create_aff_grp(aff_grp=self.services['host_anti_affinity'], acc=self.account.name, domainid=self.domain.id)
    (vm1, hostid1) = self.create_vm_in_aff_grps(ag_list=[self.aff_grp[0].name, self.aff_grp[1].name], account_name=self.account.name, domain_id=self.domain.id)
    list_aff_grps = AffinityGroup.list(self.api_client, virtualmachineid=vm1.id)
    aff_grps_names = [self.aff_grp[0].name, self.aff_grp[1].name]
    list_aff_grps_names = [list_aff_grps[0].name, list_aff_grps[1].name]
    aff_grps_names.sort()
    list_aff_grps_names.sort()
    self.assertEqual(aff_grps_names, list_aff_grps_names, ('One of the Affinity Groups is missing %s' % list_aff_grps_names))
    vm1.delete(self.api_client)
    wait_for_cleanup(self.apiclient, ['expunge.delay', 'expunge.interval'])
    self.aff_grp[0].delete(self.api_client)
    self.aff_grp[1].delete(self.api_client)
