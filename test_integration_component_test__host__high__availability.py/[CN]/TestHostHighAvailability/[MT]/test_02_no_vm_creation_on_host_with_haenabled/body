@attr(configuration='ha.tag')
@attr(tags=['advanced', 'advancedns', 'sg', 'basic', 'eip', 'simulator', 'multihost'])
def test_02_no_vm_creation_on_host_with_haenabled(self):
    ' Verify you can not create new VMs on hosts with an ha.tag '
    virtual_machine_with_ha = VirtualMachine.create(self.apiclient, self.services['virtual_machine'], accountid=self.account.name, domainid=self.account.account.domainid, serviceofferingid=self.service_offering_with_ha.id)
    vms = VirtualMachine.list(self.apiclient, id=virtual_machine_with_ha.id, listall=True)
    self.assertEqual(isinstance(vms, list), True, 'listVirtualMachines returned invalid object in response.')
    self.assertNotEqual(len(vms), 0, 'listVirtualMachines returned empty list.')
    vm = vms[0]
    self.debug(('Deployed VM on host: %s' % vm.hostid))
    list_hosts_response = list_hosts(self.apiclient, id=vm.hostid)
    self.assertEqual(isinstance(list_hosts_response, list), True, 'listHosts returned invalid object in response.')
    self.assertNotEqual(len(list_hosts_response), 0, 'listHosts retuned empty list in response.')
    self.assertEqual(list_hosts_response[0].hahost, False, 'VM created on HA enabled host.')
    virtual_machine_without_ha = VirtualMachine.create(self.apiclient, self.services['virtual_machine'], accountid=self.account.name, domainid=self.account.account.domainid, serviceofferingid=self.service_offering_without_ha.id)
    vms = VirtualMachine.list(self.apiclient, id=virtual_machine_without_ha.id, listall=True)
    self.assertEqual(isinstance(vms, list), True, 'listVirtualMachines returned invalid object in response.')
    self.assertNotEqual(len(vms), 0, 'listVirtualMachines returned empty list.')
    vm = vms[0]
    self.debug(('Deployed VM on host: %s' % vm.hostid))
    list_hosts_response = list_hosts(self.apiclient, id=vm.hostid)
    self.assertEqual(isinstance(list_hosts_response, list), True, 'listHosts returned invalid object in response.')
    self.assertNotEqual(len(list_hosts_response), 0, 'listHosts returned empty list.')
    host = list_hosts_response[0]
    self.assertEqual(host.hahost, False, 'VM migrated to HA enabled host.')
