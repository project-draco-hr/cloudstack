@attr(configuration='ha.tag')
@attr(tags=['advanced', 'advancedns', 'sg', 'basic', 'eip', 'simulator'])
def test_01_vm_deployment_with_compute_offering_with_ha_enabled(self):
    ' Test VM deployments (Create HA enabled Compute Service Offering and VM) '
    list_service_response = list_service_offering(self.apiclient, id=self.service_offering_with_ha.id)
    self.assertEqual(isinstance(list_service_response, list), True, 'listServiceOfferings returned invalid object in response.')
    self.assertNotEqual(len(list_service_response), 0, 'listServiceOfferings returned empty list.')
    self.assertEqual(list_service_response[0].offerha, True, 'The service offering is not HA enabled')
    virtual_machine = VirtualMachine.create(self.apiclient, self.services['virtual_machine'], accountid=self.account.name, domainid=self.account.domainid, serviceofferingid=self.service_offering_with_ha.id)
    vms = VirtualMachine.list(self.apiclient, id=virtual_machine.id, listall=True)
    self.assertEqual(isinstance(vms, list), True, 'listVirtualMachines returned invalid object in response.')
    self.assertNotEqual(len(vms), 0, 'listVirtualMachines returned empty list.')
    self.debug(('Deployed VM on host: %s' % vms[0].hostid))
    self.assertEqual(vms[0].haenable, True, 'VM not created with HA enable tag')
