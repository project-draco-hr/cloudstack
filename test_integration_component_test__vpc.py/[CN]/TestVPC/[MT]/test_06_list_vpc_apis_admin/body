@attr(tags=['advanced', 'intervlan'])
def test_06_list_vpc_apis_admin(self):
    ' Test list VPC APIs for different user roles\n        '
    self.user = Account.create(self.apiclient, self.services['account'])
    self.cleanup.append(self.user)
    self.services['vpc']['cidr'] = '10.1.1.1/16'
    self.debug(('creating a VPC network in the account: %s' % self.account.name))
    vpc_1 = VPC.create(self.apiclient, self.services['vpc'], vpcofferingid=self.vpc_off.id, zoneid=self.zone.id, account=self.account.name, domainid=self.account.account.domainid)
    self.validate_vpc_network(vpc_1)
    self.services['vpc']['cidr'] = '10.1.46.1/16'
    vpc_2 = VPC.create(self.apiclient, self.services['vpc'], vpcofferingid=self.vpc_off.id, zoneid=self.zone.id, account=self.user.account.name, domainid=self.user.account.domainid)
    self.validate_vpc_network(vpc_2)
    self.debug('Validating list VPCs call by passing account and domain')
    vpcs = VPC.list(self.apiclient, account=self.user.account.name, domainid=self.user.account.domainid, listall=True)
    self.assertEqual(isinstance(vpcs, list), True, 'List VPC should return a valid response')
    vpc = vpcs[0]
    self.assertEqual(vpc.id, vpc_2.id, 'List VPC should return VPC belonging to that account')
    return
