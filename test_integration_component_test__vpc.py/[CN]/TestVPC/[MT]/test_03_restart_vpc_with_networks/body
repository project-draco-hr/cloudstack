@attr(tags=['advanced', 'intervlan'])
def test_03_restart_vpc_with_networks(self):
    ' Test restart VPC having networks\n        '
    self.services['vpc']['cidr'] = '10.1.1.1/16'
    self.debug(('creating a VPC network in the account: %s' % self.account.name))
    vpc = VPC.create(self.apiclient, self.services['vpc'], vpcofferingid=self.vpc_off.id, zoneid=self.zone.id, account=self.account.name, domainid=self.account.domainid)
    self.validate_vpc_network(vpc)
    self.network_offering = NetworkOffering.create(self.apiclient, self.services['network_offering'], conservemode=False)
    self.network_offering.update(self.apiclient, state='Enabled')
    self._cleanup.append(self.network_offering)
    gateway = vpc.cidr.split('/')[0]
    self.debug(('Creating network with network offering: %s' % self.network_offering.id))
    network_1 = Network.create(self.apiclient, self.services['network'], accountid=self.account.name, domainid=self.account.domainid, networkofferingid=self.network_offering.id, zoneid=self.zone.id, gateway=gateway, vpcid=vpc.id)
    self.debug(('Created network with ID: %s' % network_1.id))
    self.network_offering_no_lb = NetworkOffering.create(self.apiclient, self.services['network_offering_no_lb'], conservemode=False)
    self.network_offering_no_lb.update(self.apiclient, state='Enabled')
    self._cleanup.append(self.network_offering_no_lb)
    gateway = '10.1.2.1'
    self.debug(('Creating network with network offering: %s' % self.network_offering_no_lb.id))
    network_2 = Network.create(self.apiclient, self.services['network'], accountid=self.account.name, domainid=self.account.domainid, networkofferingid=self.network_offering_no_lb.id, zoneid=self.zone.id, gateway=gateway, vpcid=vpc.id)
    self.debug(('Created network with ID: %s' % network_2.id))
    self.debug('Restarting the VPC with no network')
    try:
        vpc.restart(self.apiclient)
    except Exception as e:
        self.fail(('Failed to restart VPC network - %s' % e))
    self.validate_vpc_network(vpc, state='Enabled')
    return
