@attr(tags=['advanced', 'intervlan', 'selfservice'])
def test_19_create_vpc_wo_params(self):
    ' Test creation of VPC without mandatory parameters\n        '
    self.services['vpc']['cidr'] = '10.1.1.1/16'
    self.debug(('creating a VPC network in the account: %s' % self.account.name))
    with self.assertRaises(Exception):
        vpc = VPC.create(self.apiclient, self.services['vpc'], zoneid=self.zone.id, account=self.account.name, domainid=self.account.domainid)
    self.services['vpc_no_name']['cidr'] = '10.1.1.1/16'
    with self.assertRaises(Exception):
        vpc = VPC.create(self.apiclient, self.services['vpc_no_name'], vpcofferingid=self.vpc_off.id, zoneid=self.zone.id, account=self.account.name, domainid=self.account.domainid)
    with self.assertRaises(Exception):
        vpc = VPC.create(self.apiclient, self.services['vpc'], vpcofferingid=self.vpc_off.id, account=self.account.name, domainid=self.account.domainid)
    vpc_wo_cidr = {'name': 'TestVPC_WO_CIDR', 'displaytext': 'TestVPC_WO_CIDR', }
    with self.assertRaises(Exception):
        vpc = VPC.create(self.apiclient, vpc_wo_cidr, vpcofferingid=self.vpc_off.id, zoneid=self.zone.id, account=self.account.name, domainid=self.account.domainid)
