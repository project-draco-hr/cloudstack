@attr(tags=['advanced', 'intervlan'])
def test_18_create_net_for_user_diff_domain_by_doadmin(self):
    ' Test creation of network by domain admin for user from different domain\n        '
    domain = Domain.create(self.api_client, self.services['domain'])
    domain_admin = Account.create(self.apiclient, self.services['domain_admin'])
    self.debug(('Created account: %s' % domain_admin.name))
    self.cleanup.append(domain_admin)
    da_apiclient = self.testClient.getUserApiClient(account=domain_admin.name, domain=self.services['domain']['name'], type=2)
    user = Account.create(self.apiclient, self.services['account'])
    self.debug(('Created account: %s' % user.name))
    self.cleanup.append(user)
    self.services['vpc']['cidr'] = '10.1.1.1/16'
    self.debug(('creating a VPC network in the account: %s' % user.name))
    userapiclient = self.testClient.getUserApiClient(account=user.name, domain=user.domain, type=0)
    vpc = VPC.create(da_apiclient, self.services['vpc'], vpcofferingid=self.vpc_off.id, zoneid=self.zone.id)
    self.validate_vpc_network(vpc)
    self.network_offering = NetworkOffering.create(self.apiclient, self.services['network_offering'], conservemode=False)
    self.network_offering.update(self.apiclient, state='Enabled')
    self.cleanup.append(self.network_offering)
    gateway = vpc.cidr.split('/')[0]
    self.debug(('Creating network with network offering: %s' % self.network_offering.id))
    with self.assertRaises(Exception):
        network = Network.create(userapiclient, self.services['network'], networkofferingid=self.network_offering.id, zoneid=self.zone.id, gateway=gateway, vpcid=vpc.id)
