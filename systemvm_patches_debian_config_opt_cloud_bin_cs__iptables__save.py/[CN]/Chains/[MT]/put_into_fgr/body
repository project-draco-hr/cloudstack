def put_into_fgr(self, content):
    'fill this line into this tabular'
    self.length += 1
    cha = 'filter'
    liste = content.split()
    action = liste[0]
    if ('-t' in action):
        liste.pop(0)
        fname = liste.pop(0)
        legals = ['filter', 'nat', 'raw', 'mangle']
        if (fname not in legals):
            msg = ('Valid is one of %s, got: %s' % (legals, fname))
            raise ValueError(msg)
        action = liste[0]
        content = ''
        for elem in liste:
            content = ((content + elem) + ' ')
        if (len(liste) > 1):
            chain_name = liste[1]
    if ('-F' in action):
        self.reset()
        return
    if ('-P' in action):
        liste.pop(0)
        cha = liste.pop(0)
        new = liste.pop(0)
        if (new not in ['ACCEPT', 'DROP', 'REJECT']):
            msg = ('Illegal policy: % s' % new)
            raise ValueError(msg)
        self.poli[cha] = new
        return
    if ('-X' in action):
        predef = ['INPUT', 'FORWARD', 'OUTPUT', 'PREROUTING', 'POSTROUTING']
        rem_chain_name = liste.pop(1)
        if (rem_chain_name in predef):
            msg = 'Cannot remove predefined chain'
            raise ValueError(msg)
        if (rem_chain_name in self.data):
            self.data[rem_chain_name] = []
            self.poli[rem_chain_name] = '-'
            self.data.pop(rem_chain_name)
        return
    if ('-N' in action):
        new_chain_name = liste.pop(1)
        existing = self.data.keys()
        if (new_chain_name in existing):
            msg = ('Chain %s already exists' % new_chain_name)
            raise ValueError(msg)
        self.data[new_chain_name] = []
        self.poli[new_chain_name] = '-'
        return
    if ('-I' in action):
        chain_name = liste[1]
        existing = self.data.keys()
        if (chain_name not in existing):
            msg = ('invalid chain name: %s' % chain_name)
            raise ValueError(msg)
        kette = self.data[chain_name]
        if (len(kette) > 0):
            kette.insert(0, content)
        else:
            msg = ('Empty chain %s allows append only!' % chain_name)
            raise ValueError(msg)
        self.data[chain_name] = kette
        return
    if ('-A' in action):
        chain_name = liste[1]
        existing = self.data.keys()
        if (chain_name not in existing):
            msg = ('invalid chain name: %s' % chain_name)
            raise ValueError(msg)
        kette = self.data[chain_name]
        kette.append(content)
        self.data[chain_name] = kette
        return
    msg = ('Unknown filter command in input:', content)
    raise ValueError(msg)
