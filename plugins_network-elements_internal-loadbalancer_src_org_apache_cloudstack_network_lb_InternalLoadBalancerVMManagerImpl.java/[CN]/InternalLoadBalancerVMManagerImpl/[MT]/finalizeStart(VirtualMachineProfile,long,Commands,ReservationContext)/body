{
  DomainRouterVO internalLbVm=_internalLbVmDao.findById(profile.getId());
  boolean result=true;
  Answer answer=cmds.getAnswer("checkSsh");
  if (answer != null && answer instanceof CheckSshAnswer) {
    final CheckSshAnswer sshAnswer=(CheckSshAnswer)answer;
    if (sshAnswer == null || !sshAnswer.getResult()) {
      logger.warn("Unable to ssh to the internal LB VM: " + sshAnswer.getDetails());
      result=false;
    }
  }
 else {
    result=false;
  }
  if (result == false) {
    return result;
  }
  final List<Network> guestNetworks=new ArrayList<Network>();
  final List<? extends Nic> internalLbVmNics=_nicDao.listByVmId(profile.getId());
  for (  final Nic internalLbVmNic : internalLbVmNics) {
    final Network network=_ntwkModel.getNetwork(internalLbVmNic.getNetworkId());
    if (network.getTrafficType() == TrafficType.Guest) {
      guestNetworks.add(network);
    }
  }
  answer=cmds.getAnswer("getDomRVersion");
  if (answer != null && answer instanceof GetDomRVersionAnswer) {
    final GetDomRVersionAnswer versionAnswer=(GetDomRVersionAnswer)answer;
    if (answer == null || !answer.getResult()) {
      logger.warn("Unable to get the template/scripts version of internal LB VM " + internalLbVm.getInstanceName() + " due to: "+ versionAnswer.getDetails());
      result=false;
    }
 else {
      internalLbVm.setTemplateVersion(versionAnswer.getTemplateVersion());
      internalLbVm.setScriptsVersion(versionAnswer.getScriptsVersion());
      internalLbVm=_internalLbVmDao.persist(internalLbVm,guestNetworks);
    }
  }
 else {
    result=false;
  }
  return result;
}
