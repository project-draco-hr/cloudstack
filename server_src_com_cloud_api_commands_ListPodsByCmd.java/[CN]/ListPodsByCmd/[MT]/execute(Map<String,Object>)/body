{
  Long id=(Long)params.get(BaseCmd.Properties.ID.getName());
  String name=(String)params.get(BaseCmd.Properties.NAME.getName());
  Long zoneId=(Long)params.get(BaseCmd.Properties.ZONE_ID.getName());
  String keyword=(String)params.get(BaseCmd.Properties.KEYWORD.getName());
  Criteria c=new Criteria();
  if (keyword != null) {
    c.addCriteria(Criteria.KEYWORD,keyword);
  }
 else {
    c.addCriteria(Criteria.ID,id);
    c.addCriteria(Criteria.NAME,name);
    c.addCriteria(Criteria.DATACENTERID,zoneId);
  }
  List<HostPodVO> pods=getManagementServer().searchForPods(c);
  if (pods == null) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to find pods for specified search criteria.");
  }
  List<Pair<String,Object>> podTags=new ArrayList<Pair<String,Object>>();
  Object[] podDataTags=new Object[pods.size()];
  int i=0;
  for (  HostPodVO pod : pods) {
    String[] ipRange=new String[2];
    if (pod.getDescription() != null && pod.getDescription().length() > 0) {
      ipRange=pod.getDescription().split("-");
    }
 else {
      ipRange[0]=pod.getDescription();
    }
    List<Pair<String,Object>> podData=new ArrayList<Pair<String,Object>>();
    podData.add(new Pair<String,Object>(BaseCmd.Properties.ID.getName(),pod.getId()));
    podData.add(new Pair<String,Object>(BaseCmd.Properties.NAME.getName(),pod.getName()));
    podData.add(new Pair<String,Object>(BaseCmd.Properties.ZONE_ID.getName(),pod.getDataCenterId()));
    podData.add(new Pair<String,Object>(BaseCmd.Properties.ZONE_NAME.getName(),PodZoneConfig.getZoneName(pod.getDataCenterId())));
    podData.add(new Pair<String,Object>(BaseCmd.Properties.CIDR.getName(),pod.getCidrAddress() + "/" + pod.getCidrSize()));
    podData.add(new Pair<String,Object>(BaseCmd.Properties.START_IP.getName(),ipRange[0]));
    podData.add(new Pair<String,Object>(BaseCmd.Properties.END_IP.getName(),(ipRange.length > 1 && ipRange[1] != null) ? ipRange[1] : ""));
    podData.add(new Pair<String,Object>(BaseCmd.Properties.GATEWAY.getName(),pod.getGateway()));
    podDataTags[i++]=podData;
  }
  Pair<String,Object> podTag=new Pair<String,Object>("pod",podDataTags);
  podTags.add(podTag);
  return podTags;
}
