@attr('simulator_only', tags=['advanced'], required_hardware='false')
def test_deployVM_in_sharedNetwork_scope_domain_nosubdomainaccess_subdomainuser(self):
    '\n\tValidate that regular user in a subdomain is NOT allowed to deploy VM in a shared network created with scope="domain" and no subdomain access\n\n\t'
    self.apiclient.connection.apiKey = self.user_d111a_apikey
    self.apiclient.connection.securityKey = self.user_d111a_secretkey
    self.vmdata['name'] = (self.acldata['vmD111A']['name'] + '-shared-scope-domain-nosubdomainaccess')
    self.vmdata['displayname'] = (self.acldata['vmD111A']['displayname'] + '-shared-scope-domain-nosubdomainaccess')
    try:
        vm = VirtualMachine.create(self.apiclient, self.vmdata, zoneid=self.zone.id, serviceofferingid=self.service_offering.id, templateid=self.template.id, networkids=self.shared_network_domain_d11.id)
        self.fail('Subdomain user is able to deploy VM in a shared network with scope=domain with no subdomain access ')
    except Exception as e:
        self.debug(('When a user from a subdomain deploys a VM in a shared network with scope=domain with no subdomain access %s' % e))
        if (not CloudstackAclException.verifyMsginException(e, CloudstackAclException.NOT_AVAILABLE_IN_DOMAIN)):
            self.fail('Error message validation failed when Subdomain user tries to deploy VM in a shared network with scope=domain with no subdomain access')
