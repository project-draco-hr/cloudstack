@attr(tags=['advanced'], required_hardware='false')
def test_deployVM_in_sharedNetwork_scope_domain_withsubdomainaccess_parentdomainadminuser(self):
    '\n\tValidate that admin user in a parent domain is NOT allowed to deploy VM in a shared network created with scope="domain" and  with subdomain access for any domain\n\t'
    self.apiclient.connection.apiKey = self.user_d1_apikey
    self.apiclient.connection.securityKey = self.user_d1_secretkey
    self.vmdata['name'] = (self.acldata['vmD1']['name'] + '-shared-scope-domain-withsubdomainaccess')
    self.vmdata['displayname'] = (self.acldata['vmD1']['displayname'] + '-shared-scope-domain-withsubdomainaccess')
    try:
        vm = VirtualMachine.create(self.apiclient, self.vmdata, zoneid=self.zone.id, serviceofferingid=self.service_offering.id, templateid=self.template.id, networkids=self.shared_network_domain_with_subdomain_d11.id)
        self.fail("Parent domain's admin user is able to deploy VM in a shared network with scope=domain with  subdomain access ")
    except Exception as e:
        self.debug(('When an admin user from parent domain deploys a VM in a shared network with scope=domain with  subdomain access %s' % e))
        if (not CloudstackAclException.verifyMsginException(e, CloudstackAclException.NOT_AVAILABLE_IN_DOMAIN)):
            self.fail("Error message validation failed when Parent domain's admin user tries to deploy VM in a shared network with scope=domain with  subdomain access")
