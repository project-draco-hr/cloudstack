@classmethod
def setUpClass(cls):
    testClient = super(TestlistTemplates, cls).getClsTestClient()
    cls.apiclient = testClient.getApiClient()
    cls.testdata = testClient.getParsedTestDataConfig()
    cls.zone = get_zone(cls.apiclient, cls.testClient.getZoneForTests())
    cls.template = get_template(cls.apiclient, cls.zone.id, cls.testdata['ostype'])
    cls.hypervisor = cls.testClient.getHypervisorInfo()
    builtin_info = get_builtin_template_info(cls.apiclient, cls.zone.id)
    cls.testdata['templates']['url'] = builtin_info[0]
    cls.testdata['templates']['hypervisor'] = builtin_info[1]
    cls.testdata['templates']['format'] = builtin_info[2]
    if cls.zone.localstorageenabled:
        cls.storagetype = 'local'
        cls.testdata['service_offerings']['tiny']['storagetype'] = 'local'
        cls.testdata['disk_offering']['storagetype'] = 'local'
    else:
        cls.storagetype = 'shared'
        cls.testdata['service_offerings']['tiny']['storagetype'] = 'shared'
        cls.testdata['disk_offering']['storagetype'] = 'shared'
    cls.testdata['virtual_machine']['hypervisor'] = cls.hypervisor
    cls.testdata['virtual_machine']['zoneid'] = cls.zone.id
    cls.testdata['virtual_machine']['template'] = cls.template.id
    cls.testdata['custom_volume']['zoneid'] = cls.zone.id
    cls.service_offering = ServiceOffering.create(cls.apiclient, cls.testdata['service_offerings']['tiny'])
    cls.mgtSvrDetails = cls.config.__dict__['mgtSvr'][0].__dict__
    cls.cleanup = []
    cls.domain = Domain.create(cls.apiclient, cls.testdata['domain'])
    cls.account = Account.create(cls.apiclient, cls.testdata['account'], admin=True, domainid=cls.domain.id)
    cls.debug(('Created account %s in domain %s' % (cls.account.name, cls.domain.id)))
    cls.cleanup.append(cls.account)
    cls.cleanup.append(cls.domain)
