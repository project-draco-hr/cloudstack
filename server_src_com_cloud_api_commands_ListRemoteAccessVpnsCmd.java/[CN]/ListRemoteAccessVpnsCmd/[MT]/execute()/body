{
  List<RemoteAccessVpnVO> vpns=_mgr.searchForRemoteAccessVpns(this);
  ListResponse<RemoteAccessVpnResponse> response=new ListResponse<RemoteAccessVpnResponse>();
  List<RemoteAccessVpnResponse> vpnResponses=new ArrayList<RemoteAccessVpnResponse>();
  for (  RemoteAccessVpnVO vpn : vpns) {
    RemoteAccessVpnResponse vpnResponse=new RemoteAccessVpnResponse();
    vpnResponse.setId(vpn.getId());
    vpnResponse.setPublicIp(vpn.getVpnServerAddress());
    vpnResponse.setIpRange(vpn.getIpRange());
    vpnResponse.setPresharedKey(vpn.getIpsecPresharedKey());
    vpnResponse.setAccountName(vpn.getAccountName());
    Account accountTemp=ApiDBUtils.findAccountById(vpn.getAccountId());
    if (accountTemp != null) {
      vpnResponse.setDomainId(accountTemp.getDomainId());
      vpnResponse.setDomainName(ApiDBUtils.findDomainById(accountTemp.getDomainId()).getName());
    }
    vpnResponse.setObjectName("remoteaccessvpn");
    vpnResponses.add(vpnResponse);
  }
  response.setResponses(vpnResponses);
  response.setResponseName(getName());
  this.setResponseObject(response);
}
