{
  final String uuid="befc4dcd-f5c6-4015-8791-3c18622b7c7f";
  final Connection conn=Mockito.mock(Connection.class);
  final XsHost xsHost=Mockito.mock(XsHost.class);
  final XmlRpcClient client=Mockito.mock(XmlRpcClient.class);
  final MaintainCommand maintainCommand=new MaintainCommand();
  final Map<String,Object> map=new Hashtable<String,Object>();
  map.put("Value","Xen");
  final Map<String,Object> spiedMap=spy(map);
  final CitrixRequestWrapper wrapper=CitrixRequestWrapper.getInstance();
  assertNotNull(wrapper);
  when(citrixResourceBase.getConnection()).thenReturn(conn);
  when(citrixResourceBase.getHost()).thenReturn(xsHost);
  when(xsHost.getUuid()).thenReturn(uuid);
  when(conn.getSessionReference()).thenReturn("befc4dcd");
  try {
    final Object[] params={Marshalling.toXMLRPC("befc4dcd"),Marshalling.toXMLRPC(uuid)};
    when(client.execute("host.get_by_uuid",new Object[]{"befc4dcd",uuid})).thenReturn(spiedMap);
    PowerMockito.when(conn,"dispatch","host.get_by_uuid",params).thenReturn(spiedMap);
  }
 catch (  final Exception e) {
    fail(e.getMessage());
  }
  final Answer answer=wrapper.execute(maintainCommand,citrixResourceBase);
  assertFalse(answer.getResult());
}
