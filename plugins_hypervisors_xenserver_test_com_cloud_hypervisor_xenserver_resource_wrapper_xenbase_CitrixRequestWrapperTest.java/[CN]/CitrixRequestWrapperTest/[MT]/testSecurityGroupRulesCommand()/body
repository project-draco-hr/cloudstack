{
  final Connection conn=Mockito.mock(Connection.class);
  final XsHost xsHost=Mockito.mock(XsHost.class);
  final String guestIp="127.0.0.1";
  final String guestMac="00:00:00:00";
  final String vmName="Test";
  final Long vmId=1l;
  final String signature="signature";
  final Long seqNum=1l;
  final IpPortAndProto[] ingressRuleSet=new IpPortAndProto[]{Mockito.mock(IpPortAndProto.class)};
  final IpPortAndProto[] egressRuleSet=new IpPortAndProto[]{Mockito.mock(IpPortAndProto.class)};
  final List<String> secIps=new Vector<String>();
  final SecurityGroupRulesCmd sshCommand=new SecurityGroupRulesCmd(guestIp,guestMac,vmName,vmId,signature,seqNum,ingressRuleSet,egressRuleSet,secIps);
  final CitrixRequestWrapper wrapper=CitrixRequestWrapper.getInstance();
  assertNotNull(wrapper);
  when(citrixResourceBase.getConnection()).thenReturn(conn);
  when(citrixResourceBase.getHost()).thenReturn(xsHost);
  final Answer answer=wrapper.execute(sshCommand,citrixResourceBase);
  verify(citrixResourceBase,times(1)).getConnection();
  assertFalse(answer.getResult());
}
