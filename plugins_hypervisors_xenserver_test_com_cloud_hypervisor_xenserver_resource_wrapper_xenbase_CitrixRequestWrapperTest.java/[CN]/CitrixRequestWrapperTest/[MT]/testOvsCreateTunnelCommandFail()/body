{
  final String bridge="tunnel";
  final Connection conn=Mockito.mock(Connection.class);
  final Network network=Mockito.mock(Network.class);
  final OvsCreateTunnelCommand createTunnel=new OvsCreateTunnelCommand("127.0.0.1",1,1l,2l,1l,"127.0.1.1","net01","cd84c713-f448-48c9-ba25-e6740d4a9003");
  final CitrixRequestWrapper wrapper=CitrixRequestWrapper.getInstance();
  assertNotNull(wrapper);
  when(citrixResourceBase.getConnection()).thenReturn(conn);
  try {
    when(citrixResourceBase.findOrCreateTunnelNetwork(conn,createTunnel.getNetworkName())).thenReturn(network);
    when(network.getBridge(conn)).thenReturn(bridge);
    when(citrixResourceBase.callHostPlugin(conn,"ovstunnel","create_tunnel","bridge",bridge,"remote_ip",createTunnel.getRemoteIp(),"key",createTunnel.getKey().toString(),"from",createTunnel.getFrom().toString(),"to",createTunnel.getTo().toString(),"cloudstack-network-id",createTunnel.getNetworkUuid())).thenReturn("FAIL:1");
  }
 catch (  final BadServerResponse e) {
    fail(e.getMessage());
  }
catch (  final XenAPIException e) {
    fail(e.getMessage());
  }
catch (  final XmlRpcException e) {
    fail(e.getMessage());
  }
  final Answer answer=wrapper.execute(createTunnel,citrixResourceBase);
  verify(citrixResourceBase,times(1)).getConnection();
  verify(citrixResourceBase,times(1)).configureTunnelNetwork(conn,createTunnel.getNetworkId(),createTunnel.getFrom(),createTunnel.getNetworkName());
  assertFalse(answer.getResult());
}
