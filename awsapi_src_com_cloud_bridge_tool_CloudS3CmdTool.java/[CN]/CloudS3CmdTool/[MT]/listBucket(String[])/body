{
  if (args.length < 2) {
    System.out.println("Usage: bucket-list -prefix=<prefix> -delimiter=<delimiter> -marker=<Marker> -max=<max items to return> <bucket name>");
    System.exit(0);
  }
  try {
    ListBucket request=new ListBucket();
    Map<String,String> params=getNamedParameters(args);
    request.setBucket(args[args.length - 1]);
    request.setCredential("TODO");
    if (params.get("prefix") != null)     request.setPrefix(params.get("prefix"));
    if (params.get("delimiter") != null)     request.setDelimiter(params.get("delimiter"));
    if (params.get("marker") != null)     request.setMarker(params.get("marker"));
    if (params.get("max") != null) {
      try {
        int maxKeys=Integer.parseInt(params.get("max"));
        request.setMaxKeys(maxKeys);
      }
 catch (      Exception e) {
        System.out.println("-max parameter should be a numeric value");
      }
    }
    request.setAWSAccessKeyId("TODO");
    request.setCredential("TODO");
    request.setSignature("TODO");
    request.setTimestamp(Calendar.getInstance());
    ListBucketResponse response=serviceStub.listBucket(request);
    ListBucketResult result=response.getListBucketResponse();
    System.out.println("\tContent of Bucket " + result.getName());
    System.out.println("\tListing with prefix: " + result.getPrefix() + ", delimiter: "+ result.getDelimiter()+ ", marker: "+ result.getMarker()+ ", max: "+ result.getMaxKeys());
    ListEntry[] entries=result.getContents();
    if (entries != null) {
      for (int i=0; i < entries.length; i++) {
        ListEntry entry=entries[i];
        System.out.print("\t");
        System.out.print(entry.getSize());
        System.out.print("\t");
        System.out.print(entry.getKey());
        System.out.print("\t");
        System.out.print(entry.getETag());
        System.out.print("\n");
      }
    }
    PrefixEntry[] prefixEntries=result.getCommonPrefixes();
    if (prefixEntries != null) {
      System.out.print("\n\n");
      for (int i=0; i < prefixEntries.length; i++) {
        System.out.print("\t<Prefix>\t");
        System.out.print(prefixEntries[i].getPrefix());
        System.out.print("\n");
      }
    }
  }
 catch (  Exception e) {
    System.out.println("Failed to execute bucket-list due to " + e.getMessage());
  }
}
