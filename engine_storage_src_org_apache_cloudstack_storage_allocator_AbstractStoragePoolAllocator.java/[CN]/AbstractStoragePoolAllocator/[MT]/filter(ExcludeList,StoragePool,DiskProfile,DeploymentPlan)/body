{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Checking if storage pool is suitable, name: " + pool.getName() + " ,poolId: "+ pool.getId());
  }
  if (avoid.shouldAvoid(pool)) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("StoragePool is in avoid set, skipping this pool");
    }
    return false;
  }
  Long clusterId=pool.getClusterId();
  if (clusterId != null) {
    ClusterVO cluster=_clusterDao.findById(clusterId);
    if (!(cluster.getHypervisorType() == dskCh.getHypervisorType())) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("StoragePool's Cluster does not have required hypervisorType, skipping this pool");
      }
      return false;
    }
  }
 else   if (pool.getHypervisor() != null && !(pool.getHypervisor() == dskCh.getHypervisorType())) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("StoragePool does not have required hypervisorType, skipping this pool");
    }
    return false;
  }
  Volume volume=_volumeDao.findById(dskCh.getVolumeId());
  List<Volume> requestVolumes=new ArrayList<Volume>();
  requestVolumes.add(volume);
  return storageMgr.storagePoolHasEnoughIops(requestVolumes,pool) && storageMgr.storagePoolHasEnoughSpace(requestVolumes,pool);
}
