{
  boolean result;
  try {
    result=_userVmService.upgradeVirtualMachine(this);
  }
 catch (  ResourceUnavailableException ex) {
    s_logger.warn("Exception: ",ex);
    throw new ServerApiException(ApiErrorCode.RESOURCE_UNAVAILABLE_ERROR,ex.getMessage());
  }
catch (  ConcurrentOperationException ex) {
    s_logger.warn("Exception: ",ex);
    throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,ex.getMessage());
  }
catch (  ManagementServerException ex) {
    s_logger.warn("Exception: ",ex);
    throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,ex.getMessage());
  }
catch (  VirtualMachineMigrationException ex) {
    s_logger.warn("Exception: ",ex);
    throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,ex.getMessage());
  }
  if (result) {
    SuccessResponse response=new SuccessResponse(getCommandName());
    this.setResponseObject(response);
  }
 else {
    throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,"Failed to scale vm");
  }
}
