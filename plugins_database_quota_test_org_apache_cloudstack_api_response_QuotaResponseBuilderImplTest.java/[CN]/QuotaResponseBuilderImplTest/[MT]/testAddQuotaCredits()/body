{
  final long accountId=2L;
  final long domainId=2L;
  final double amount=11.0;
  final long updatedBy=2L;
  final Date now=new Date();
  QuotaCreditsVO credit=new QuotaCreditsVO();
  credit.setCredit(new BigDecimal(amount));
  Mockito.when(quotaCreditsDao.saveCredits(Mockito.any(QuotaCreditsVO.class))).thenReturn(credit);
  Mockito.when(quotaBalanceDao.lastQuotaBalance(Mockito.anyLong(),Mockito.anyLong(),Mockito.any(Date.class))).thenReturn(new BigDecimal(111));
  AccountVO account=new AccountVO();
  account.setState(Account.State.locked);
  Mockito.when(accountDao.findById(Mockito.anyLong())).thenReturn(account);
  QuotaCreditsResponse resp=quotaResponseBuilder.addQuotaCredits(accountId,domainId,amount,updatedBy,now);
  assertTrue(resp.getCredits().compareTo(credit.getCredit()) == 0);
}
