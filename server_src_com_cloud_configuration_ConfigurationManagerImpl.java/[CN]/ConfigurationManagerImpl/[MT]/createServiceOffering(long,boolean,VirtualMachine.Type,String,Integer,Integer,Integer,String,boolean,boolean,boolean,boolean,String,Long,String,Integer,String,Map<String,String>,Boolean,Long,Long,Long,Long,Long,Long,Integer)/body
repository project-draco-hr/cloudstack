{
  tags=StringUtils.cleanupTags(tags);
  ServiceOfferingVO offering=new ServiceOfferingVO(name,cpu,ramSize,speed,networkRate,null,offerHA,limitResourceUse,volatileVm,displayText,localStorageRequired,false,tags,isSystem,vmType,domainId,hostTag,deploymentPlanner);
  if (isCustomizedIops != null) {
    bytesReadRate=null;
    bytesWriteRate=null;
    iopsReadRate=null;
    iopsWriteRate=null;
    if (isCustomizedIops) {
      minIops=null;
      maxIops=null;
    }
 else {
      if (minIops == null && maxIops == null) {
        minIops=0L;
        maxIops=0L;
      }
 else {
        if (minIops == null || minIops <= 0) {
          throw new InvalidParameterValueException("The min IOPS must be greater than 0.");
        }
        if (maxIops == null) {
          maxIops=0L;
        }
        if (minIops > maxIops) {
          throw new InvalidParameterValueException("The min IOPS must be less than or equal to the max IOPS.");
        }
      }
    }
  }
 else {
    minIops=null;
    maxIops=null;
  }
  offering.setCustomizedIops(isCustomizedIops);
  offering.setMinIops(minIops);
  offering.setMaxIops(maxIops);
  if ((bytesReadRate != null) && (bytesReadRate > 0))   offering.setBytesReadRate(bytesReadRate);
  if ((bytesWriteRate != null) && (bytesWriteRate > 0))   offering.setBytesWriteRate(bytesWriteRate);
  if ((iopsReadRate != null) && (iopsReadRate > 0))   offering.setIopsReadRate(iopsReadRate);
  if ((iopsWriteRate != null) && (iopsWriteRate > 0))   offering.setIopsWriteRate(iopsWriteRate);
  if (hypervisorSnapshotReserve != null && hypervisorSnapshotReserve < 0) {
    throw new InvalidParameterValueException("If provided, Hypervisor Snapshot Reserve must be greater than or equal to 0.");
  }
  offering.setHypervisorSnapshotReserve(hypervisorSnapshotReserve);
  if ((offering=_serviceOfferingDao.persist(offering)) != null) {
    if (details != null) {
      List<ServiceOfferingDetailsVO> detailsVO=new ArrayList<ServiceOfferingDetailsVO>();
      for (      Entry<String,String> detailEntry : details.entrySet()) {
        detailsVO.add(new ServiceOfferingDetailsVO(offering.getId(),detailEntry.getKey(),detailEntry.getValue(),true));
      }
      _serviceOfferingDetailsDao.saveDetails(detailsVO);
    }
    CallContext.current().setEventDetails("Service offering id=" + offering.getId());
    return offering;
  }
 else {
    return null;
  }
}
