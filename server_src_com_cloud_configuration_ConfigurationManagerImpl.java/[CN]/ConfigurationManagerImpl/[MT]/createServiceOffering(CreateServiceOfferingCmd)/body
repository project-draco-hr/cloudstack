{
  Long userId=UserContext.current().getCallerUserId();
  if (userId == null) {
    userId=User.UID_SYSTEM;
  }
  String name=cmd.getServiceOfferingName();
  if ((name == null) || (name.length() == 0)) {
    throw new InvalidParameterValueException("Failed to create service offering: specify the name that has non-zero length");
  }
  String displayText=cmd.getDisplayText();
  if ((displayText == null) || (displayText.length() == 0)) {
    throw new InvalidParameterValueException("Failed to create service offering " + name + ": specify the display text that has non-zero length");
  }
  Long cpuNumber=cmd.getCpuNumber();
  if ((cpuNumber == null) || (cpuNumber.intValue() <= 0) || (cpuNumber.intValue() > 2147483647)) {
    throw new InvalidParameterValueException("Failed to create service offering " + name + ": specify the cpu number value between 1 and 2147483647");
  }
  Long cpuSpeed=cmd.getCpuSpeed();
  if ((cpuSpeed == null) || (cpuSpeed.intValue() <= 0) || (cpuSpeed.intValue() > 2147483647)) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Failed to create service offering " + name + ": specify the cpu speed value between 1 and 2147483647");
  }
  Long memory=cmd.getMemory();
  if ((memory == null) || (memory.intValue() <= 0) || (memory.intValue() > 2147483647)) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Failed to create service offering " + name + ": specify the memory value between 1 and 2147483647");
  }
  if (cmd.getDomainId() != null) {
    DomainVO domain=_domainDao.findById(cmd.getDomainId());
    if (domain == null) {
      throw new InvalidParameterValueException("Please specify a valid domain id");
    }
  }
  boolean localStorageRequired=false;
  String storageType=cmd.getStorageType();
  if (storageType == null) {
    localStorageRequired=false;
  }
 else   if (storageType.equals("local")) {
    localStorageRequired=true;
  }
 else   if (storageType.equals("shared")) {
    localStorageRequired=false;
  }
 else {
    throw new InvalidParameterValueException("Invalid storage type " + storageType + " specified, valid types are: 'local' and 'shared'");
  }
  Boolean offerHA=cmd.getOfferHa();
  if (offerHA == null) {
    offerHA=false;
  }
  Boolean useVirtualNetwork=cmd.getUseVirtualNetwork();
  if (useVirtualNetwork == null) {
    useVirtualNetwork=Boolean.TRUE;
  }
  return createServiceOffering(userId,cmd.getServiceOfferingName(),cpuNumber.intValue(),memory.intValue(),cpuSpeed.intValue(),cmd.getDisplayText(),localStorageRequired,offerHA,useVirtualNetwork,cmd.getTags(),cmd.getDomainId());
}
