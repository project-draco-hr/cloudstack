{
  Long userId=CallContext.current().getCallingUserId();
  String zoneName=cmd.getZoneName();
  String dns1=cmd.getDns1();
  String dns2=cmd.getDns2();
  String ip6Dns1=cmd.getIp6Dns1();
  String ip6Dns2=cmd.getIp6Dns2();
  String internalDns1=cmd.getInternalDns1();
  String internalDns2=cmd.getInternalDns2();
  String guestCidr=cmd.getGuestCidrAddress();
  Long domainId=cmd.getDomainId();
  String type=cmd.getNetworkType();
  Boolean isBasic=false;
  String allocationState=cmd.getAllocationState();
  String networkDomain=cmd.getDomain();
  boolean isSecurityGroupEnabled=cmd.getSecuritygroupenabled();
  boolean isLocalStorageEnabled=cmd.getLocalStorageEnabled();
  if (allocationState == null) {
    allocationState=Grouping.AllocationState.Disabled.toString();
  }
  if (!(type.equalsIgnoreCase(NetworkType.Basic.toString())) && !(type.equalsIgnoreCase(NetworkType.Advanced.toString()))) {
    throw new InvalidParameterValueException("Invalid zone type; only Advanced and Basic values are supported");
  }
 else   if (type.equalsIgnoreCase(NetworkType.Basic.toString())) {
    isBasic=true;
  }
  NetworkType zoneType=isBasic ? NetworkType.Basic : NetworkType.Advanced;
  if (zoneType == NetworkType.Basic && guestCidr != null) {
    throw new InvalidParameterValueException("guestCidrAddress parameter is not supported for Basic zone");
  }
  DomainVO domainVO=null;
  if (userId == null) {
    userId=User.UID_SYSTEM;
  }
  if (domainId != null) {
    domainVO=_domainDao.findById(domainId);
  }
  if (zoneType == NetworkType.Basic) {
    isSecurityGroupEnabled=true;
  }
  return createZone(userId,zoneName,dns1,dns2,internalDns1,internalDns2,guestCidr,domainVO != null ? domainVO.getName() : null,domainId,zoneType,allocationState,networkDomain,isSecurityGroupEnabled,isLocalStorageEnabled,ip6Dns1,ip6Dns2);
}
