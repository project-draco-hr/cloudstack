{
  checkPodAttributes(-1,podName,zoneId,gateway,cidr,startIp,endIp,true);
  String cidrAddress=getCidrAddress(cidr);
  long cidrSize=getCidrSize(cidr);
  if (startIp != null) {
    if (endIp == null) {
      endIp=NetUtils.getIpRangeEndIpFromCidr(cidrAddress,cidrSize);
    }
  }
  String ipRange;
  if (startIp != null) {
    ipRange=startIp + "-";
    if (endIp != null) {
      ipRange+=endIp;
    }
  }
 else {
    ipRange="";
  }
  HostPodVO pod=new HostPodVO(podName,zoneId,gateway,cidrAddress,cidrSize,ipRange);
  Transaction txn=Transaction.currentTxn();
  try {
    txn.start();
    if (_podDao.persist(pod) == null) {
      txn.rollback();
      throw new InternalErrorException("Failed to create new pod. Please contact Cloud Support.");
    }
    if (startIp != null) {
      _zoneDao.addPrivateIpAddress(zoneId,pod.getId(),startIp,endIp);
    }
    String[] linkLocalIpRanges=getLinkLocalIPRange();
    if (linkLocalIpRanges != null) {
      _zoneDao.addLinkLocalPrivateIpAddress(zoneId,pod.getId(),linkLocalIpRanges[0],linkLocalIpRanges[1]);
    }
    txn.commit();
  }
 catch (  Exception e) {
    txn.rollback();
    s_logger.error("Unable to create new pod due to " + e.getMessage(),e);
    throw new InternalErrorException("Failed to create new pod. Please contact Cloud Support.");
  }
  DataCenterVO zone=_zoneDao.findById(zoneId);
  saveConfigurationEvent(userId,null,EventTypes.EVENT_POD_CREATE,"Successfully created new pod with name: " + podName + " in zone: "+ zone.getName()+ ".","podId=" + pod.getId(),"zoneId=" + zone.getId(),"gateway=" + gateway,"cidr=" + cidr,"startIp=" + startIp,"endIp=" + endIp);
  return pod;
}
