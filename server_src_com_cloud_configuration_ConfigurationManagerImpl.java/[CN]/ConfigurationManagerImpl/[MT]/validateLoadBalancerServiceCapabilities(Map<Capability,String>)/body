{
  if (lbServiceCapabilityMap != null && !lbServiceCapabilityMap.isEmpty()) {
    if (lbServiceCapabilityMap.keySet().size() > 3 || !lbServiceCapabilityMap.containsKey(Capability.SupportedLBIsolation)) {
      throw new InvalidParameterValueException("Only " + Capability.SupportedLBIsolation.getName() + ", "+ Capability.ElasticLb.getName()+ ", "+ Capability.InlineMode.getName()+ " capabilities can be sepcified for LB service");
    }
    for (    Capability cap : lbServiceCapabilityMap.keySet()) {
      String value=lbServiceCapabilityMap.get(cap);
      if (cap == Capability.SupportedLBIsolation) {
        boolean dedicatedLb=value.contains("dedicated");
        boolean sharedLB=value.contains("shared");
        if ((dedicatedLb && sharedLB) || (!dedicatedLb && !sharedLB)) {
          throw new InvalidParameterValueException("Either dedicated or shared isolation can be specified for " + Capability.SupportedLBIsolation.getName());
        }
      }
 else       if (cap == Capability.ElasticLb) {
        boolean enabled=value.contains("true");
        boolean disabled=value.contains("false");
        if (!enabled && !disabled) {
          throw new InvalidParameterValueException("Unknown specified value for " + Capability.ElasticLb.getName());
        }
      }
 else       if (cap == Capability.InlineMode) {
        boolean enabled=value.contains("true");
        boolean disabled=value.contains("false");
        if (!enabled && !disabled) {
          throw new InvalidParameterValueException("Unknown specified value for " + Capability.InlineMode.getName());
        }
      }
 else       if (cap == Capability.LbSchemes) {
        boolean internalLb=value.contains("internal");
        boolean publicLb=value.contains("public");
        if (!internalLb && !publicLb) {
          throw new InvalidParameterValueException("Unknown specified value for " + Capability.LbSchemes.getName());
        }
      }
 else {
        throw new InvalidParameterValueException("Only " + Capability.SupportedLBIsolation.getName() + ", "+ Capability.ElasticLb.getName()+ ", "+ Capability.InlineMode.getName()+ ", "+ Capability.LbSchemes.getName()+ " capabilities can be sepcified for LB service");
      }
    }
  }
}
