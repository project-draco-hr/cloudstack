{
  final long startIPLong=NetUtils.ip2Long(startIP);
  final long endIPLong=NetUtils.ip2Long(endIP);
  final List<String> problemIps=Transaction.execute(new TransactionCallback<List<String>>(){
    @Override public List<String> doInTransaction(    final TransactionStatus status){
      final IPRangeConfig config=new IPRangeConfig();
      return config.savePublicIPRange(TransactionLegacy.currentTxn(),startIPLong,endIPLong,zoneId,vlanDbId,sourceNetworkid,physicalNetworkId);
    }
  }
);
  return problemIps != null && problemIps.size() == 0;
}
