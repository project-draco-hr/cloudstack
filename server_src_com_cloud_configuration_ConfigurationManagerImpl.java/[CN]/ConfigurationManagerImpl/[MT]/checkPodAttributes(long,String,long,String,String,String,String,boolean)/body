{
  if (checkForDuplicates) {
    if (validPod(podName,zoneId)) {
      throw new InvalidParameterValueException("A pod with name: " + podName + " already exists in zone "+ zoneId+ ". Please specify a different pod name. ");
    }
  }
  String cidrAddress;
  long cidrSize;
  if (NetUtils.isValidCIDR(cidr)) {
    cidrAddress=getCidrAddress(cidr);
    cidrSize=getCidrSize(cidr);
  }
 else {
    throw new InvalidParameterValueException("Please enter a valid CIDR for pod: " + podName);
  }
  if (startIp != null || endIp != null) {
    checkIpRange(startIp,endIp,cidrAddress,cidrSize);
  }
  if (!NetUtils.isValidIp(gateway)) {
    throw new InvalidParameterValueException("The gateway is not a valid IP address.");
  }
  if (!NetUtils.getCidrSubNet(gateway,cidrSize).equalsIgnoreCase(NetUtils.getCidrSubNet(cidrAddress,cidrSize))) {
    throw new InvalidParameterValueException("The gateway is not in the CIDR subnet.");
  }
  String checkPodCIDRs=_configDao.getValue("check.pod.cidrs");
  if (checkPodCIDRs == null || checkPodCIDRs.trim().isEmpty() || Boolean.parseBoolean(checkPodCIDRs)) {
    HashMap<Long,List<Object>> currentPodCidrSubnets=_podDao.getCurrentPodCidrSubnets(zoneId,podId);
    List<Object> newCidrPair=new ArrayList<Object>();
    newCidrPair.add(0,cidrAddress);
    newCidrPair.add(1,new Long(cidrSize));
    currentPodCidrSubnets.put(new Long(-1),newCidrPair);
    checkPodCidrSubnets(zoneId,currentPodCidrSubnets);
  }
}
