{
  final Long diskOfferingId=cmd.getId();
  final String name=cmd.getDiskOfferingName();
  final String displayText=cmd.getDisplayText();
  final Integer sortKey=cmd.getSortKey();
  final Boolean displayDiskOffering=cmd.getDisplayOffering();
  final DiskOffering diskOfferingHandle=_entityMgr.findById(DiskOffering.class,diskOfferingId);
  if (diskOfferingHandle == null) {
    throw new InvalidParameterValueException("Unable to find disk offering by id " + diskOfferingId);
  }
  Long userId=CallContext.current().getCallingUserId();
  if (userId == null) {
    userId=Long.valueOf(User.UID_SYSTEM);
  }
  final User user=_userDao.findById(userId);
  if (user == null || user.getRemoved() != null) {
    throw new InvalidParameterValueException("Unable to find active user by id " + userId);
  }
  final Account account=_accountDao.findById(user.getAccountId());
  if (account.getType() == Account.ACCOUNT_TYPE_DOMAIN_ADMIN) {
    if (diskOfferingHandle.getDomainId() == null) {
      throw new InvalidParameterValueException("Unable to update public disk offering by id " + userId + " because it is domain-admin");
    }
    if (!_domainDao.isChildDomain(account.getDomainId(),diskOfferingHandle.getDomainId())) {
      throw new InvalidParameterValueException("Unable to update disk offering by another domain admin with id " + userId);
    }
  }
 else   if (account.getType() != Account.ACCOUNT_TYPE_ADMIN) {
    throw new InvalidParameterValueException("Unable to update disk offering by id " + userId + " because it is not root-admin or domain-admin");
  }
  final boolean updateNeeded=name != null || displayText != null || sortKey != null || displayDiskOffering != null;
  if (!updateNeeded) {
    return _diskOfferingDao.findById(diskOfferingId);
  }
  final DiskOfferingVO diskOffering=_diskOfferingDao.createForUpdate(diskOfferingId);
  if (name != null) {
    diskOffering.setName(name);
  }
  if (displayText != null) {
    diskOffering.setDisplayText(displayText);
  }
  if (sortKey != null) {
    diskOffering.setSortKey(sortKey);
  }
  if (displayDiskOffering != null) {
    diskOffering.setDisplayOffering(displayDiskOffering);
  }
  if (_diskOfferingDao.update(diskOfferingId,diskOffering)) {
    CallContext.current().setEventDetails("Disk offering id=" + diskOffering.getId());
    return _diskOfferingDao.findById(diskOfferingId);
  }
 else {
    return null;
  }
}
