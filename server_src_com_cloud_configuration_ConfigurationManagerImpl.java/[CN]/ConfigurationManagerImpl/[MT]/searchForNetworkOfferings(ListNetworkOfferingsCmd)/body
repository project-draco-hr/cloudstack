{
  Account caller=UserContext.current().getCaller();
  Filter searchFilter=new Filter(NetworkOfferingVO.class,"created",false,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchCriteria<NetworkOfferingVO> sc=_networkOfferingDao.createSearchCriteria();
  Long id=cmd.getId();
  Object name=cmd.getNetworkOfferingName();
  Object displayText=cmd.getDisplayText();
  Object trafficType=cmd.getTrafficType();
  Object isDefault=cmd.getIsDefault();
  Object specifyVlan=cmd.getSpecifyVlan();
  Object isShared=cmd.getIsShared();
  Object availability=cmd.getAvailability();
  Object state=cmd.getState();
  Long zoneId=cmd.getZoneId();
  DataCenter zone=null;
  Long networkId=cmd.getNetworkId();
  String guestIpType=cmd.getGuestIpType();
  if (zoneId != null) {
    zone=getZone(zoneId);
  }
  Object keyword=cmd.getKeyword();
  if (keyword != null) {
    SearchCriteria<NetworkOfferingVO> ssc=_networkOfferingDao.createSearchCriteria();
    ssc.addOr("displayText",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("name",SearchCriteria.Op.SC,ssc);
  }
  if (name != null) {
    sc.addAnd("name",SearchCriteria.Op.LIKE,"%" + name + "%");
  }
  if (guestIpType != null) {
    sc.addAnd("guestType",SearchCriteria.Op.EQ,guestIpType);
  }
  if (displayText != null) {
    sc.addAnd("displayText",SearchCriteria.Op.LIKE,"%" + displayText + "%");
  }
  if (trafficType != null) {
    sc.addAnd("trafficType",SearchCriteria.Op.EQ,trafficType);
  }
  if (isDefault != null) {
    sc.addAnd("isDefault",SearchCriteria.Op.EQ,isDefault);
  }
  if (specifyVlan != null) {
    sc.addAnd("specifyVlan",SearchCriteria.Op.EQ,specifyVlan);
  }
  if (isShared != null) {
    sc.addAnd("isShared",SearchCriteria.Op.EQ,isShared);
  }
  if (availability != null) {
    sc.addAnd("availability",SearchCriteria.Op.EQ,availability);
  }
  if (state != null) {
    sc.addAnd("state",SearchCriteria.Op.EQ,state);
  }
  if (zone != null) {
    if (zone.getNetworkType() == NetworkType.Basic) {
      return new ArrayList<NetworkOffering>();
    }
  }
  sc.addAnd("systemOnly",SearchCriteria.Op.EQ,false);
  if (networkId != null) {
    Network network=_networkMgr.getNetwork(networkId);
    if (network == null) {
      throw new InvalidParameterValueException("Unable to find the network by id=" + networkId);
    }
    NetworkOffering offering=_networkOfferingDao.findByIdIncludingRemoved(network.getNetworkOfferingId());
    if (offering.isSystemOnly()) {
      throw new InvalidParameterValueException("Can't update system networks");
    }
    _accountMgr.checkAccess(caller,null,network);
    List<Long> offeringIds=_networkMgr.listNetworkOfferingsForUpgrade(networkId);
    if (!offeringIds.isEmpty()) {
      sc.addAnd("id",SearchCriteria.Op.IN,offeringIds.toArray());
    }
 else {
      return new ArrayList<NetworkOffering>();
    }
  }
  if (id != null) {
    sc.addAnd("id",SearchCriteria.Op.EQ,id);
  }
  return _networkOfferingDao.search(sc,searchFilter);
}
