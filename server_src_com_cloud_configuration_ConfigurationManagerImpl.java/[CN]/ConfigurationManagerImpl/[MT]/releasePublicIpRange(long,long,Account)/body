{
  VlanVO vlan=_vlanDao.findById(vlanDbId);
  List<AccountVlanMapVO> acctVln=_accountVlanMapDao.listAccountVlanMapsByVlan(vlanDbId);
  if (acctVln == null || acctVln.isEmpty()) {
    throw new InvalidParameterValueException("Can't release Public IP range " + vlanDbId + " as it not dedicated to any account");
  }
  long allocIpCount=_publicIpAddressDao.countIPs(vlan.getDataCenterId(),vlanDbId,true);
  boolean success=true;
  if (allocIpCount > 0) {
    try {
      vlan=_vlanDao.acquireInLockTable(vlanDbId,30);
      if (vlan == null) {
        throw new CloudRuntimeException("Unable to acquire vlan configuration: " + vlanDbId);
      }
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("lock vlan " + vlanDbId + " is acquired");
      }
      List<IPAddressVO> ips=_publicIpAddressDao.listByVlanId(vlanDbId);
      for (      IPAddressVO ip : ips) {
        if (!ip.isOneToOneNat() && !ip.isSourceNat() && !(_firewallDao.countRulesByIpId(ip.getId()) > 0)) {
          if (s_logger.isDebugEnabled()) {
            s_logger.debug("Releasing Public IP addresses" + ip + " of vlan "+ vlanDbId+ " as part of Public IP"+ " range release to the system pool");
          }
          success=success && _networkMgr.disassociatePublicIpAddress(ip.getId(),userId,caller);
        }
      }
      if (!success) {
        s_logger.warn("Some Public IP addresses that were not in use failed to be released as a part of" + " vlan " + vlanDbId + "release to the system pool");
      }
    }
  finally {
      _vlanDao.releaseFromLockTable(vlanDbId);
    }
  }
  if (_accountVlanMapDao.remove(acctVln.get(0).getId())) {
    return true;
  }
 else {
    return false;
  }
}
