{
  VlanVO vlan=_vlanDao.findById(vlanDbId);
  boolean isAccountSpecific=false;
  final List<AccountVlanMapVO> acctVln=_accountVlanMapDao.listAccountVlanMapsByVlan(vlanDbId);
  if (acctVln != null && !acctVln.isEmpty()) {
    isAccountSpecific=true;
  }
  boolean isDomainSpecific=false;
  final List<DomainVlanMapVO> domainVln=_domainVlanMapDao.listDomainVlanMapsByVlan(vlanDbId);
  if (domainVln != null && !domainVln.isEmpty()) {
    isDomainSpecific=true;
  }
  if (!isAccountSpecific && !isDomainSpecific) {
    throw new InvalidParameterValueException("Can't release Public IP range " + vlanDbId + " as it not dedicated to any domain and any account");
  }
  final long allocIpCount=_publicIpAddressDao.countIPs(vlan.getDataCenterId(),vlanDbId,true);
  final List<IPAddressVO> ips=_publicIpAddressDao.listByVlanId(vlanDbId);
  boolean success=true;
  final List<IPAddressVO> ipsInUse=new ArrayList<IPAddressVO>();
  if (allocIpCount > 0) {
    try {
      vlan=_vlanDao.acquireInLockTable(vlanDbId,30);
      if (vlan == null) {
        throw new CloudRuntimeException("Unable to acquire vlan configuration: " + vlanDbId);
      }
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("lock vlan " + vlanDbId + " is acquired");
      }
      for (      final IPAddressVO ip : ips) {
        if (!ip.isOneToOneNat() && !ip.isSourceNat() && !(_firewallDao.countRulesByIpId(ip.getId()) > 0)) {
          if (s_logger.isDebugEnabled()) {
            s_logger.debug("Releasing Public IP addresses" + ip + " of vlan "+ vlanDbId+ " as part of Public IP"+ " range release to the system pool");
          }
          success=success && _ipAddrMgr.disassociatePublicIpAddress(ip.getId(),userId,caller);
        }
 else {
          ipsInUse.add(ip);
        }
      }
      if (!success) {
        s_logger.warn("Some Public IP addresses that were not in use failed to be released as a part of" + " vlan " + vlanDbId + "release to the system pool");
      }
    }
  finally {
      _vlanDao.releaseFromLockTable(vlanDbId);
    }
  }
  if (isAccountSpecific && _accountVlanMapDao.remove(acctVln.get(0).getId())) {
    for (    final IPAddressVO ip : ips) {
      if (!ipsInUse.contains(ip)) {
        UsageEventUtils.publishUsageEvent(EventTypes.EVENT_NET_IP_RELEASE,acctVln.get(0).getAccountId(),ip.getDataCenterId(),ip.getId(),ip.getAddress().toString(),ip.isSourceNat(),vlan.getVlanType().toString(),ip.getSystem(),ip.getClass().getName(),ip.getUuid());
      }
    }
    _resourceLimitMgr.decrementResourceCount(acctVln.get(0).getAccountId(),ResourceType.public_ip,new Long(ips.size()));
    return true;
  }
 else   if (isDomainSpecific && _domainVlanMapDao.remove(domainVln.get(0).getId())) {
    s_logger.debug("Remove the vlan from domain_vlan_map successfully.");
    return true;
  }
 else {
    return false;
  }
}
