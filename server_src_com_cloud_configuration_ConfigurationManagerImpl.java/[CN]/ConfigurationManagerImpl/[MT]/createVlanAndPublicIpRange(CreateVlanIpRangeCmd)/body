{
  Long zoneId=cmd.getZoneId();
  Long podId=cmd.getPodId();
  String startIP=cmd.getStartIp();
  String endIP=cmd.getEndIp();
  String vlanGateway=cmd.getGateway();
  String vlanNetmask=cmd.getNetmask();
  Long userId=UserContext.current().getUserId();
  String vlanId=cmd.getVlan();
  Boolean forVirtualNetwork=cmd.isForVirtualNetwork();
  Long networkId=cmd.getNetworkID();
  String accountName=cmd.getAccountName();
  Long domainId=cmd.getDomainId();
  Account account=null;
  if ((accountName != null) && (domainId != null)) {
    account=_accountDao.findActiveAccount(accountName,domainId);
    if (account == null) {
      throw new ServerApiException(BaseCmd.PARAM_ERROR,"Please specify a valid account.");
    }
  }
  if (forVirtualNetwork && networkId != null) {
    throw new InvalidParameterValueException("Can't specify networkId for Virtual network");
  }
  if (forVirtualNetwork && (vlanGateway == null || vlanNetmask == null || zoneId == null)) {
    throw new InvalidParameterValueException("Gateway, netmask and zoneId have to be passed in for virtual network");
  }
  if (networkId != null) {
    NetworkVO network=_networkDao.findById(networkId);
    if (network == null) {
      throw new InvalidParameterValueException("Unable to find network by id " + networkId);
    }
 else {
      if (network.getGuestType() == GuestIpType.Virtual) {
        throw new InvalidParameterValueException("Can't create direct vlan for network with GuestType " + network.getGuestType().toString());
      }
      String networkCidr=network.getCidr();
      String networkGateway=network.getGateway();
      Long networkZoneId=network.getDataCenterId();
      String[] splitResult=networkCidr.split("\\/");
      long size=Long.valueOf(splitResult[1]);
      String networkNetmask=NetUtils.getCidrNetmask(size);
      if (!NetUtils.sameSubnet(startIP,networkGateway,networkNetmask)) {
        throw new InvalidParameterValueException("Start ip is not in network cidr: " + networkCidr);
      }
      if (endIP != null) {
        if (!NetUtils.sameSubnet(endIP,networkGateway,networkNetmask)) {
          throw new InvalidParameterValueException("End ip is not in network cidr: " + networkCidr);
        }
      }
      vlanGateway=networkGateway;
      vlanNetmask=networkNetmask;
      zoneId=networkZoneId;
      URI uri=network.getBroadcastUri();
      if (uri != null) {
        String[] vlan=uri.toString().split("vlan:\\/\\/");
        vlanId=vlan[1];
      }
    }
  }
  return createVlanAndPublicIpRange(userId,zoneId,podId,startIP,endIP,vlanGateway,vlanNetmask,forVirtualNetwork,vlanId,account,networkId);
}
