{
  Long zoneId=cmd.getZoneId();
  Long podId=cmd.getPodId();
  String startIP=cmd.getStartIp();
  String endIP=cmd.getEndIp();
  String vlanGateway=cmd.getGateway();
  String vlanNetmask=cmd.getNetmask();
  Long userId=UserContext.current().getUserId();
  String vlanId=cmd.getVlan();
  Boolean forVirtualNetwork=cmd.isForVirtualNetwork();
  Long networkId=cmd.getNetworkID();
  String accountName=cmd.getAccountName();
  Long domainId=cmd.getDomainId();
  Account account=null;
  if ((accountName != null) && (domainId != null)) {
    account=_accountDao.findActiveAccount(accountName,domainId);
    if (account == null) {
      throw new ServerApiException(BaseCmd.PARAM_ERROR,"Please specify a valid account.");
    }
  }
  NetworkVO network=null;
  if (networkId != null) {
    network=_networkDao.findById(networkId);
    if (network == null) {
      throw new InvalidParameterValueException("Unable to find network by id " + networkId);
    }
 else {
      zoneId=network.getDataCenterId();
    }
  }
  DataCenterVO zone=_zoneDao.findById(zoneId);
  if (zone == null) {
    throw new InvalidParameterValueException("Unable to find zone by id " + zoneId);
  }
  if (forVirtualNetwork) {
    if (network == null) {
      networkId=_networkMgr.getSystemNetworkIdByZoneAndTrafficTypeAndGuestType(zoneId,TrafficType.Public,null);
    }
 else     if (network.getGuestType() != null || network.getTrafficType() != TrafficType.Public) {
      throw new InvalidParameterValueException("Can't find Public network by id=" + networkId);
    }
  }
 else {
    if (network == null) {
      if (zone.getNetworkType() == DataCenter.NetworkType.Basic) {
        networkId=_networkMgr.getSystemNetworkIdByZoneAndTrafficTypeAndGuestType(zoneId,TrafficType.Public,GuestIpType.DirectPodBased);
      }
 else {
        throw new InvalidParameterValueException("Nework id is required for Direct vlan creation ");
      }
    }
 else     if (network.getGuestType() == null || network.getGuestType() == GuestIpType.Virtual) {
      throw new InvalidParameterValueException("Can't create direct vlan for network id=" + networkId + " with GuestType: "+ network.getGuestType());
    }
  }
  if (endIP == null && startIP != null) {
    endIP=startIP;
  }
  if (forVirtualNetwork || zone.getNetworkType() == DataCenter.NetworkType.Basic) {
    if (vlanGateway == null || vlanNetmask == null || zoneId == null) {
      throw new InvalidParameterValueException("Gateway, netmask and zoneId have to be passed in for virtual and direct untagged networks");
    }
  }
 else {
    String networkCidr=network.getCidr();
    String networkGateway=network.getGateway();
    Long networkZoneId=network.getDataCenterId();
    String[] splitResult=networkCidr.split("\\/");
    long size=Long.valueOf(splitResult[1]);
    String networkNetmask=NetUtils.getCidrNetmask(size);
    if (!NetUtils.sameSubnet(startIP,networkGateway,networkNetmask)) {
      throw new InvalidParameterValueException("Start ip is not in network cidr: " + networkCidr);
    }
    if (endIP != null) {
      if (!NetUtils.sameSubnet(endIP,networkGateway,networkNetmask)) {
        throw new InvalidParameterValueException("End ip is not in network cidr: " + networkCidr);
      }
    }
    vlanGateway=networkGateway;
    vlanNetmask=networkNetmask;
    zoneId=networkZoneId;
    URI uri=network.getBroadcastUri();
    if (uri != null) {
      String[] vlan=uri.toString().split("vlan:\\/\\/");
      vlanId=vlan[1];
    }
  }
  return createVlanAndPublicIpRange(userId,zoneId,podId,startIP,endIP,vlanGateway,vlanNetmask,forVirtualNetwork,vlanId,account,networkId);
}
