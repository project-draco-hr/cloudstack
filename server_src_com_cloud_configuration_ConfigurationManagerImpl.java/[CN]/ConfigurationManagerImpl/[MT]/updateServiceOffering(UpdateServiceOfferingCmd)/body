{
  String displayText=cmd.getDisplayText();
  Long id=cmd.getId();
  String name=cmd.getServiceOfferingName();
  Integer sortKey=cmd.getSortKey();
  Long userId=CallContext.current().getCallingUserId();
  if (userId == null) {
    userId=Long.valueOf(User.UID_SYSTEM);
  }
  ServiceOffering offeringHandle=_entityMgr.findById(ServiceOffering.class,id);
  if (offeringHandle == null) {
    throw new InvalidParameterValueException("unable to find service offering " + id);
  }
  User user=_userDao.findById(userId);
  if (user == null || user.getRemoved() != null) {
    throw new InvalidParameterValueException("Unable to find active user by id " + userId);
  }
  Account account=_accountDao.findById(user.getAccountId());
  if (account.getType() == Account.ACCOUNT_TYPE_DOMAIN_ADMIN) {
    if (offeringHandle.getDomainId() == null) {
      throw new InvalidParameterValueException("Unable to update public service offering by id " + userId + " because it is domain-admin");
    }
    if (!_domainDao.isChildDomain(account.getDomainId(),offeringHandle.getDomainId())) {
      throw new InvalidParameterValueException("Unable to update service offering by another domain admin with id " + userId);
    }
  }
 else   if (account.getType() != Account.ACCOUNT_TYPE_ADMIN) {
    throw new InvalidParameterValueException("Unable to update service offering by id " + userId + " because it is not root-admin or domain-admin");
  }
  boolean updateNeeded=(name != null || displayText != null || sortKey != null);
  if (!updateNeeded) {
    return _serviceOfferingDao.findById(id);
  }
  ServiceOfferingVO offering=_serviceOfferingDao.createForUpdate(id);
  if (name != null) {
    offering.setName(name);
  }
  if (displayText != null) {
    offering.setDisplayText(displayText);
  }
  if (sortKey != null) {
    offering.setSortKey(sortKey);
  }
  if (_serviceOfferingDao.update(id,offering)) {
    offering=_serviceOfferingDao.findById(id);
    CallContext.current().setEventDetails("Service offering id=" + offering.getId());
    return offering;
  }
 else {
    return null;
  }
}
