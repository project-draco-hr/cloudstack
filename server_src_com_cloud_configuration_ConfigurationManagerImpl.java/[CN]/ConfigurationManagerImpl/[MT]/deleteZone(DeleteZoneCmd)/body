{
  final Long zoneId=cmd.getId();
  if (!validZone(zoneId)) {
    throw new InvalidParameterValueException("A zone with ID: " + zoneId + " does not exist.");
  }
  checkIfZoneIsDeletable(zoneId);
  return Transaction.execute(new TransactionCallback<Boolean>(){
    @Override public Boolean doInTransaction(    final TransactionStatus status){
      final List<VlanVO> vlans=_vlanDao.listByZone(zoneId);
      for (      final VlanVO vlan : vlans) {
        _vlanDao.remove(vlan.getId());
      }
      final boolean success=_zoneDao.remove(zoneId);
      if (success) {
        _capacityDao.removeBy(null,zoneId,null,null,null);
        final DedicatedResourceVO dr=_dedicatedDao.findByZoneId(zoneId);
        if (dr != null) {
          _dedicatedDao.remove(dr.getId());
          final List<DedicatedResourceVO> resourcesInGroup=_dedicatedDao.listByAffinityGroupId(dr.getAffinityGroupId());
          if (resourcesInGroup.isEmpty()) {
            _affinityGroupService.deleteAffinityGroup(dr.getAffinityGroupId(),null,null,null,null);
          }
        }
      }
      return success;
    }
  }
);
}
