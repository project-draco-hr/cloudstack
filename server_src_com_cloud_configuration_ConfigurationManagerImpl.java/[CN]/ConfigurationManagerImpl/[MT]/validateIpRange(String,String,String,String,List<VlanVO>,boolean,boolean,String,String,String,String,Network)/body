{
  String vlanGateway=null;
  String vlanNetmask=null;
  boolean sameSubnet=false;
  if (vlans != null && vlans.size() > 0) {
    for (    VlanVO vlan : vlans) {
      if (ipv4) {
        vlanGateway=vlan.getVlanGateway();
        vlanNetmask=vlan.getVlanNetmask();
        int val=checkIfSubsetOrSuperset(newVlanGateway,newVlanNetmask,vlan,startIP,endIP);
        if (val == 1) {
          throw new InvalidParameterValueException("The subnet you are trying to add is a superset of the existing subnet having gateway" + vlan.getVlanGateway() + " and netmask  "+ vlan.getVlanNetmask());
        }
 else         if (val == 0) {
          continue;
        }
 else         if (val == 2) {
          throw new InvalidParameterValueException("The subnet you are trying to add is a subset of the existing subnet having gateway" + vlan.getVlanGateway() + " and netmask  "+ vlan.getVlanNetmask());
        }
 else         if (val == 3) {
          sameSubnet=true;
        }
      }
      if (ipv6) {
        if (ip6Gateway != null && !ip6Gateway.equals(network.getIp6Gateway())) {
          throw new InvalidParameterValueException("The input gateway " + ip6Gateway + " is not same as network gateway "+ network.getIp6Gateway());
        }
        if (ip6Cidr != null && !ip6Cidr.equals(network.getIp6Cidr())) {
          throw new InvalidParameterValueException("The input cidr " + ip6Cidr + " is not same as network ciddr "+ network.getIp6Cidr());
        }
        ip6Gateway=network.getIp6Gateway();
        ip6Cidr=network.getIp6Cidr();
        _networkModel.checkIp6Parameters(startIPv6,endIPv6,ip6Gateway,ip6Cidr);
        sameSubnet=true;
      }
    }
  }
  if (newVlanGateway == null && newVlanNetmask == null && sameSubnet == false) {
    throw new InvalidParameterValueException("The ip range dose not belong to any of the existing subnets, Provide the netmask and gateway if you want to add new subnet");
  }
  Pair<String,String> vlanDetails=null;
  if (sameSubnet) {
    vlanDetails=new Pair<String,String>(vlanGateway,vlanNetmask);
  }
 else {
    vlanDetails=new Pair<String,String>(newVlanGateway,newVlanNetmask);
  }
  if (ipv4 && NetUtils.ipRangesOverlap(startIP,endIP,vlanDetails.first(),vlanDetails.first())) {
    throw new InvalidParameterValueException("The gateway ip should not be the part of the ip range being added.");
  }
  Pair<Boolean,Pair<String,String>> result=new Pair<Boolean,Pair<String,String>>(sameSubnet,vlanDetails);
  return result;
}
