{
  final String name=cmd.getOfferingName();
  final String description=cmd.getDisplayText();
  final String provisioningType=cmd.getProvisioningType();
  final Long numGibibytes=cmd.getDiskSize();
  final boolean isDisplayOfferingEnabled=cmd.getDisplayOffering() != null ? cmd.getDisplayOffering() : true;
  final boolean isCustomized=cmd.isCustomized() != null ? cmd.isCustomized() : false;
  final String tags=cmd.getTags();
  final Long domainId=cmd.getDomainId();
  if (!isCustomized && numGibibytes == null) {
    throw new InvalidParameterValueException("Disksize is required for a non-customized disk offering");
  }
  if (isCustomized && numGibibytes != null) {
    throw new InvalidParameterValueException("Disksize is not allowed for a customized disk offering");
  }
  boolean localStorageRequired=false;
  final String storageType=cmd.getStorageType();
  if (storageType != null) {
    if (storageType.equalsIgnoreCase(ServiceOffering.StorageType.local.toString())) {
      localStorageRequired=true;
    }
 else     if (!storageType.equalsIgnoreCase(ServiceOffering.StorageType.shared.toString())) {
      throw new InvalidParameterValueException("Invalid storage type " + storageType + " specified, valid types are: 'local' and 'shared'");
    }
  }
  final Boolean isCustomizedIops=cmd.isCustomizedIops();
  final Long minIops=cmd.getMinIops();
  final Long maxIops=cmd.getMaxIops();
  final Long bytesReadRate=cmd.getBytesReadRate();
  final Long bytesWriteRate=cmd.getBytesWriteRate();
  final Long iopsReadRate=cmd.getIopsReadRate();
  final Long iopsWriteRate=cmd.getIopsWriteRate();
  final Integer hypervisorSnapshotReserve=cmd.getHypervisorSnapshotReserve();
  final Long userId=CallContext.current().getCallingUserId();
  return createDiskOffering(userId,domainId,name,description,provisioningType,numGibibytes,tags,isCustomized,localStorageRequired,isDisplayOfferingEnabled,isCustomizedIops,minIops,maxIops,bytesReadRate,bytesWriteRate,iopsReadRate,iopsWriteRate,hypervisorSnapshotReserve);
}
