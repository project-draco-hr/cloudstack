{
  final String storagePath=destImageStore.getUrl();
  final String destPath=destData.getPath();
  try {
    final File downloadDirectory=_storage.getFile(determineStorageTemplatePath(storagePath,destPath));
    downloadDirectory.mkdirs();
    if (!downloadDirectory.exists()) {
      final String errMsg=format("Unable to create directory " + "download directory %1$s for download from S3.",downloadDirectory.getName());
      s_logger.error(errMsg);
      return new Answer(cmd,false,errMsg);
    }
    getDirectory(s3,s3.getBucketName(),destPath,downloadDirectory,new FileNamingStrategy(){
      @Override public String determineFileName(      final String key){
        return substringAfterLast(key,S3Utils.SEPARATOR);
      }
    }
);
    return new Answer(cmd,true,format("Successfully downloaded " + "from S3 to directory %2$s",downloadDirectory.getName()));
  }
 catch (  Exception e) {
    final String errMsg=format("Failed to download" + "due to $2%s",e.getMessage());
    s_logger.error(errMsg,e);
    return new Answer(cmd,false,errMsg);
  }
}
