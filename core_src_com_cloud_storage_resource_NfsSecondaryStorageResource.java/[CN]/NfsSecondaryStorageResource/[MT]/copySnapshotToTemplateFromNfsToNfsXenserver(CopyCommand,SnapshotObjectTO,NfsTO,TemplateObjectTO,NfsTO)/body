{
  String srcMountPoint=this.getRootDir(srcDataStore.getUrl());
  String snapshotPath=srcData.getPath();
  int index=snapshotPath.lastIndexOf("/");
  String snapshotName=snapshotPath.substring(index + 1);
  if (!snapshotName.startsWith("VHD-") && !snapshotName.endsWith(".vhd")) {
    snapshotName=snapshotName + ".vhd";
  }
  snapshotPath=snapshotPath.substring(0,index);
  snapshotPath=srcMountPoint + snapshotPath;
  String destMountPoint=this.getRootDir(destDataStore.getUrl());
  String destPath=destMountPoint + destData.getPath();
  String errMsg=null;
  try {
    this._storage.mkdir(destPath);
    String templateUuid=UUID.randomUUID().toString();
    String templateName=templateUuid + ".vhd";
    Script command=new Script(this.createTemplateFromSnapshotXenScript,cmd.getWait(),s_logger);
    command.add("-p",snapshotPath);
    command.add("-s",snapshotName);
    command.add("-n",templateName);
    command.add("-t",destPath);
    command.execute();
    Map<String,Object> params=new HashMap<String,Object>();
    params.put(StorageLayer.InstanceConfigKey,_storage);
    Processor processor=new VhdProcessor();
    processor.configure("Vhd Processor",params);
    FormatInfo info=processor.process(destPath,null,templateUuid);
    TemplateLocation loc=new TemplateLocation(_storage,destPath);
    loc.create(1,true,templateName);
    loc.addFormat(info);
    loc.save();
    TemplateObjectTO newTemplate=new TemplateObjectTO();
    newTemplate.setPath(destData.getPath() + File.separator + templateUuid);
    return new CopyCmdAnswer(newTemplate);
  }
 catch (  ConfigurationException e) {
    s_logger.debug("Failed to create template from snapshot: " + e.toString());
    errMsg=e.toString();
  }
catch (  InternalErrorException e) {
    s_logger.debug("Failed to create template from snapshot: " + e.toString());
    errMsg=e.toString();
  }
catch (  IOException e) {
    s_logger.debug("Failed to create template from snapshot: " + e.toString());
    errMsg=e.toString();
  }
  return new CopyCmdAnswer(errMsg);
}
