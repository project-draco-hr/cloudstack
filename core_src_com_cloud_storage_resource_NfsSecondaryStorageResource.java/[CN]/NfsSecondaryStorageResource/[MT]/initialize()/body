{
  final StartupStorageCommand cmd=new StartupStorageCommand(_parent,StoragePoolType.NetworkFilesystem,getTotalSize(),new HashMap<String,TemplateInfo>());
  cmd.setResourceType(Storage.StorageResourceType.SECONDARY_STORAGE);
  cmd.setIqn(null);
  fillNetworkInformation(cmd);
  cmd.setDataCenter(_dc);
  cmd.setPod(_pod);
  cmd.setGuid(_guid);
  cmd.setName(_guid);
  cmd.setVersion(NfsSecondaryStorageResource.class.getPackage().getImplementationVersion());
  final Map<String,TemplateInfo> tInfo=_dlMgr.gatherTemplateInfo();
  cmd.setTemplateInfo(tInfo);
  cmd.getHostDetails().put("mount.parent",_mountParent);
  cmd.getHostDetails().put("mount.path",_nfsPath);
  String tok[]=_nfsPath.split(":");
  cmd.setNfsShare("nfs://" + tok[0] + tok[1]);
  if (cmd.getHostDetails().get("orig.url") == null) {
    if (tok.length != 2) {
      throw new CloudRuntimeException("Not valid NFS path" + _nfsPath);
    }
    String nfsUrl="nfs://" + tok[0] + tok[1];
    cmd.getHostDetails().put("orig.url",nfsUrl);
  }
  InetAddress addr;
  try {
    addr=InetAddress.getByName(tok[0]);
    cmd.setPrivateIpAddress(addr.getHostAddress());
  }
 catch (  UnknownHostException e) {
    cmd.setPrivateIpAddress(tok[0]);
  }
  return new StartupCommand[]{cmd};
}
