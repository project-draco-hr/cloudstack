{
  String relativeTemplatePath=cmd.getTemplatePath();
  String parent=_parent;
  if (relativeTemplatePath.startsWith(File.separator)) {
    relativeTemplatePath=relativeTemplatePath.substring(1);
  }
  if (!parent.endsWith(File.separator)) {
    parent+=File.separator;
  }
  String absoluteTemplatePath=parent + relativeTemplatePath;
  File tmpltParent=new File(absoluteTemplatePath).getParentFile();
  if (!tmpltParent.exists()) {
    return new Answer(cmd,false,"template parent directory " + tmpltParent.getName() + " doesn't exist, Template path ( "+ relativeTemplatePath+ " ) is wrong");
  }
  File[] tmpltFiles=tmpltParent.listFiles();
  if (tmpltFiles == null || tmpltFiles.length == 0) {
    return new Answer(cmd,false,"No files under template parent directory " + tmpltParent.getName() + " Template path ( "+ relativeTemplatePath+ " ) is wrong");
  }
  boolean found=false;
  for (  File f : tmpltFiles) {
    if (f.getName().equals("template.properties")) {
      found=true;
      break;
    }
  }
  if (!found) {
    return new Answer(cmd,false,"Can not find template.properties, Template path ( " + relativeTemplatePath + " ) is wrong");
  }
  for (  File f : tmpltFiles) {
    if (!f.delete()) {
      return new Answer(cmd,false,"Unable to delete file " + f.getName() + " Template path ( "+ relativeTemplatePath+ " ) is wrong");
    }
  }
  if (!tmpltParent.delete()) {
    return new Answer(cmd,false,"Unable to delete directory " + tmpltParent.getName() + " Template path ( "+ relativeTemplatePath+ " ) is wrong");
  }
  return new Answer(cmd,true,null);
}
