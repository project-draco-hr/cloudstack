{
  DataStoreTO dstore=cmd.getDataStore();
  if (dstore instanceof NfsTO) {
    return _dlMgr.handleDownloadCommand(this,cmd);
  }
 else   if (dstore instanceof S3TO) {
    S3TO s3=(S3TO)cmd.getDataStore();
    String url=cmd.getUrl();
    String user=null;
    String password=null;
    if (cmd.getAuth() != null) {
      user=cmd.getAuth().getUserName();
      password=new String(cmd.getAuth().getPassword());
    }
    InputStream in=UriUtils.getInputStreamFromUrl(url,user,password);
    URI uri;
    URL urlObj;
    try {
      uri=new URI(url);
      urlObj=new URL(url);
    }
 catch (    URISyntaxException e) {
      throw new CloudRuntimeException("URI is incorrect: " + url);
    }
catch (    MalformedURLException e) {
      throw new CloudRuntimeException("URL is incorrect: " + url);
    }
    final String bucket=s3.getBucketName();
    String key=join(asList(determineS3TemplateDirectory(cmd.getAccountId(),cmd.getResourceId()),urlObj.getFile()),S3Utils.SEPARATOR);
    S3Utils.putObject(s3,in,bucket,key);
    return new Answer(cmd,true,format("Uploaded the contents of input stream from %1$s for template id %2$s to S3 bucket %3$s",url,cmd.getResourceId(),bucket));
  }
 else   if (dstore instanceof SwiftTO) {
    return new Answer(cmd,false,"Swift is not currently support DownloadCommand");
  }
 else {
    return new Answer(cmd,false,"Unsupported image data store: " + dstore);
  }
}
