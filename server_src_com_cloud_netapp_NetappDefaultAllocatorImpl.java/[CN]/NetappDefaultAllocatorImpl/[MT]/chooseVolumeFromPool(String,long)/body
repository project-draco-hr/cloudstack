{
  int pos=0;
  List<NetappVolumeVO> volumesOnPoolAscending=_netappMgr.listVolumesAscending(poolName);
  if (volumesOnPoolAscending == null) {
    return null;
  }
  if (_poolNameToLastVolumeIdAllocated.get(poolName) == null) {
    pos=0;
  }
 else {
    pos=_poolNameToLastVolumeIdAllocated.get(poolName);
  }
  _poolNameToLastVolumeIdAllocated.put(poolName,(pos + 1) % volumesOnPoolAscending.size());
  Object[] volumesOnPoolAscendingArray=volumesOnPoolAscending.toArray();
  int counter=0;
  while (counter < volumesOnPoolAscendingArray.length) {
    NetappVolumeVO vol=(NetappVolumeVO)volumesOnPoolAscendingArray[pos];
    long availableBytes;
    try {
      availableBytes=_netappMgr.returnAvailableVolumeSize(vol.getVolumeName(),vol.getUsername(),vol.getPassword(),vol.getIpAddress());
      if (lunSizeGb <= bytesToGb(availableBytes)) {
        return vol;
      }
      pos=(pos + 1) % volumesOnPoolAscendingArray.length;
      counter++;
    }
 catch (    ServerException e) {
      s_logger.debug("Ignoring failure to obtain volume size for volume " + vol.getVolumeName());
      continue;
    }
  }
  return null;
}
