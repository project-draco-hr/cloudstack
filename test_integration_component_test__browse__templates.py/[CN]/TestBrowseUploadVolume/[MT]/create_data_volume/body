def create_data_volume(self):
    diskoffering = DiskOffering.list(self.apiclient)
    self.assertTrue(isinstance(diskoffering, list), msg='DiskOffering list is not a list?')
    self.assertTrue((len(diskoffering) > 0), 'no disk offerings in the deployment')
    vol = Volume.create(self.apiclient, services=self.testdata['volume'], zoneid=self.zone.id, account=self.account.name, domainid=self.domain.id, diskofferingid=diskoffering[0].id)
    self.assertTrue((vol is not None), ('volume creation fails in domain %s as user %s' % (self.domain.name, self.account.name)))
    listed_vol = Volume.list(self.apiclient, id=vol.id)
    self.assertTrue(((listed_vol is not None) and isinstance(listed_vol, list)), ('invalid response from listVolumes for volume %s' % vol.id))
    self.assertTrue((listed_vol[0].id == vol.id), ('Volume returned by list volumes %s not matching with queried                    volume %s in domain %s' % (listed_vol[0].id, vol.id, self.account.name)))
    return listed_vol[0]
