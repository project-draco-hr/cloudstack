@attr(tags=['advanced'], required_hardware='false')
def test_vm_ha(self):
    'Test VM HA\n\n        # Validate the following:\n        # VM started on other host in cluster\n        '
    ping_timeout = Configurations.list(self.apiclient, name='ping.timeout')
    ping_interval = Configurations.list(self.apiclient, name='ping.interval')
    total_duration = int((float(ping_timeout[0].value) * float(ping_interval[0].value)))
    time.sleep(total_duration)
    duration = 0
    vm = None
    while (duration < total_duration):
        list_vms = VirtualMachine.list(self.apiclient, id=self.virtual_machine.id)
        self.assertTrue((isinstance(list_vms, list) and (len(list_vms) == 1)), msg='List VM response was empty')
        vm = list_vms[0]
        if ((vm.hostid != self.virtual_machine.hostid) and (vm.state == 'Running')):
            break
        else:
            time.sleep(10)
            duration = (duration + 10)
    self.assertEqual(vm.id, self.virtual_machine.id, 'VM ids do not match')
    self.assertEqual(vm.name, self.virtual_machine.name, 'VM names do not match')
    self.assertEqual(vm.state, 'Running', msg='VM is not in Running state')
    self.assertNotEqual(vm.hostid, self.virtual_machine.hostid, msg='VM is not started on another host as part of HA')
