{
  AccountService accountService=Mockito.mock(AccountService.class);
  Account account=Mockito.mock(Account.class);
  Mockito.when(accountService.getAccount(anyLong())).thenReturn(account);
  VolumeApiService volumeApiService=Mockito.mock(VolumeApiService.class);
  try {
    Mockito.when(volumeApiService.takeSnapshot(anyLong(),anyLong(),anyLong(),any(Account.class),anyBoolean(),isNull(Snapshot.LocationType.class))).thenReturn(null);
  }
 catch (  Exception e) {
    Assert.fail("Received exception when success expected " + e.getMessage());
  }
  createSnapshotCmd._accountService=accountService;
  createSnapshotCmd._volumeService=volumeApiService;
  try {
    createSnapshotCmd.execute();
  }
 catch (  ServerApiException exception) {
    Assert.assertEquals("Failed to create snapshot due to an internal error creating snapshot for volume 1",exception.getDescription());
  }
}
