{
  s_logger.debug("VM state transitted from :" + oldState + " to "+ newState+ " with event: "+ event+ "vm's original host id: "+ vm.getHostId()+ " new host id: "+ id);
  if (!transitionStatus) {
    return false;
  }
  Transaction txn=Transaction.open(Transaction.CLOUD_DB);
  try {
    txn.start();
    if (oldState == State.Starting) {
      if (event == Event.OperationSucceeded) {
        if (vm.getLastHostId() != null && vm.getLastHostId() != id) {
          releaseResource(vm,true,false,vm.getLastHostId());
        }
        vm.setLastHostId(id);
      }
 else       if (event == Event.OperationRetry || event == Event.OperationFailed) {
        releaseResource(vm,false,false,id);
        id=null;
      }
    }
 else     if (oldState == State.Running) {
      if (event == Event.AgentReportStopped) {
        releaseResource(vm,false,true,vm.getHostId());
      }
    }
 else     if (oldState == State.Migrating) {
      if (event == Event.AgentReportStopped) {
        releaseResource(vm,false,true,vm.getHostId());
      }
 else       if (event == Event.MigrationFailedOnSource) {
        releaseResource(vm,false,false,id);
        id=vm.getHostId();
      }
 else       if (event == Event.MigrationFailedOnDest) {
        releaseResource(vm,false,false,vm.getHostId());
      }
 else       if (event == Event.OperationSucceeded) {
        releaseResource(vm,false,false,vm.getHostId());
      }
    }
 else     if (oldState == State.Stopping) {
      if (event == Event.AgentReportStopped || event == Event.OperationSucceeded) {
        releaseResource(vm,false,true,vm.getHostId());
      }
    }
 else     if (oldState == State.Stopped) {
      if (event == Event.DestroyRequested) {
        releaseResource(vm,true,false,vm.getHostId());
        vm.setLastHostId(null);
      }
    }
    transitionStatus=vmDao.updateState(oldState,event,newState,vm,id);
    if (transitionStatus) {
      txn.commit();
    }
 else {
      s_logger.debug("Failed to transit vm's state");
      txn.rollback();
    }
  }
 catch (  Exception e) {
    s_logger.debug("Failed to transit vm's state, due to " + e.getMessage());
    txn.rollback();
  }
 finally {
    txn.close();
  }
  return transitionStatus;
}
