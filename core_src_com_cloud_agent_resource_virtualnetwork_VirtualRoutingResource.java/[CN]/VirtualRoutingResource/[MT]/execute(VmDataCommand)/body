{
  List<String[]> vmData=cmd.getVmData();
  for (  String[] vmDataEntry : vmData) {
    String folder=vmDataEntry[0];
    String file=vmDataEntry[1];
    String data=vmDataEntry[2];
    File tmpFile=null;
    byte[] dataBytes=null;
    if (data != null) {
      if (folder.equals("userdata")) {
        dataBytes=Base64.decodeBase64(data);
      }
 else {
        dataBytes=data.getBytes();
      }
    }
    try {
      tmpFile=File.createTempFile("vmdata_",null);
      FileOutputStream outStream=new FileOutputStream(tmpFile);
      if (dataBytes != null)       outStream.write(dataBytes);
      outStream.close();
    }
 catch (    IOException e) {
      String tmpDir=System.getProperty("java.io.tmpdir");
      s_logger.warn("Failed to create temporary file: is " + tmpDir + " full?",e);
      return new Answer(cmd,false,"Failed to create or write to temporary file: is " + tmpDir + " full? "+ e.getMessage());
    }
    final Script command=new Script(_vmDataPath,_timeout,s_logger);
    command.add("-r",cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP));
    command.add("-v",cmd.getVmIpAddress());
    command.add("-F",folder);
    command.add("-f",file);
    if (tmpFile != null) {
      command.add("-d",tmpFile.getAbsolutePath());
    }
    final String result=command.execute();
    if (tmpFile != null) {
      boolean deleted=tmpFile.delete();
      if (!deleted) {
        s_logger.warn("Failed to clean up temp file after sending vmdata");
        tmpFile.deleteOnExit();
      }
    }
    if (result != null) {
      return new Answer(cmd,false,result);
    }
  }
  return new Answer(cmd);
}
