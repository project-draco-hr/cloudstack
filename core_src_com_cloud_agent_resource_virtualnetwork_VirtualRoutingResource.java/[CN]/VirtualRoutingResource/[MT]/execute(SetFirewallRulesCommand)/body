{
  String[] results=new String[cmd.getRules().length];
  for (int i=0; i < cmd.getRules().length; i++) {
    results[i]="Failed";
  }
  String routerIp=cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);
  String egressDefault=cmd.getAccessDetail(NetworkElementCommand.FIREWALL_EGRESS_DEFAULT);
  if (routerIp == null) {
    return new SetFirewallRulesAnswer(cmd,false,results);
  }
  FirewallRuleTO[] allrules=cmd.getRules();
  FirewallRule.TrafficType trafficType=allrules[0].getTrafficType();
  String[][] rules=cmd.generateFwRules();
  String args=" -F";
  if (trafficType == FirewallRule.TrafficType.Egress) {
    args+="-E";
    if (egressDefault.equals("true")) {
      args+=" -P 1";
    }
 else     if (egressDefault.equals("System")) {
      args+=" -P 2";
    }
 else {
      args+=" -P 0";
    }
  }
  StringBuilder sb=new StringBuilder();
  String[] fwRules=rules[0];
  if (fwRules.length > 0) {
    for (int i=0; i < fwRules.length; i++) {
      sb.append(fwRules[i]).append(',');
    }
    args+=" -a " + sb.toString();
  }
  String result=null;
  if (trafficType == FirewallRule.TrafficType.Egress) {
    result=executeInVR(routerIp,"firewall_egress.sh",args);
  }
 else {
    result=executeInVR(routerIp,"firewall_ingress.sh",args);
  }
  if (result != null) {
    return new SetFirewallRulesAnswer(cmd,false,results);
  }
  return new SetFirewallRulesAnswer(cmd,true,null);
}
