{
  try {
    ExecutionResult rc=_vrDeployer.prepareCommand(cmd);
    if (!rc.isSuccess()) {
      s_logger.error("Failed to prepare VR command due to " + rc.getDetails());
      return new Answer(cmd,false,rc.getDetails());
    }
    if (cmd instanceof SetPortForwardingRulesVpcCommand) {
      return execute((SetPortForwardingRulesVpcCommand)cmd);
    }
 else     if (cmd instanceof SetPortForwardingRulesCommand) {
      return execute((SetPortForwardingRulesCommand)cmd);
    }
 else     if (cmd instanceof SetStaticRouteCommand) {
      return execute((SetStaticRouteCommand)cmd);
    }
 else     if (cmd instanceof SetStaticNatRulesCommand) {
      return execute((SetStaticNatRulesCommand)cmd);
    }
 else     if (cmd instanceof LoadBalancerConfigCommand) {
      return execute((LoadBalancerConfigCommand)cmd);
    }
 else     if (cmd instanceof SavePasswordCommand) {
      return execute((SavePasswordCommand)cmd);
    }
 else     if (cmd instanceof DhcpEntryCommand) {
      return execute((DhcpEntryCommand)cmd);
    }
 else     if (cmd instanceof CreateIpAliasCommand) {
      return execute((CreateIpAliasCommand)cmd);
    }
 else     if (cmd instanceof DnsMasqConfigCommand) {
      return execute((DnsMasqConfigCommand)cmd);
    }
 else     if (cmd instanceof DeleteIpAliasCommand) {
      return execute((DeleteIpAliasCommand)cmd);
    }
 else     if (cmd instanceof VmDataCommand) {
      return execute((VmDataCommand)cmd);
    }
 else     if (cmd instanceof CheckRouterCommand) {
      return execute((CheckRouterCommand)cmd);
    }
 else     if (cmd instanceof SetFirewallRulesCommand) {
      return execute((SetFirewallRulesCommand)cmd);
    }
 else     if (cmd instanceof BumpUpPriorityCommand) {
      return execute((BumpUpPriorityCommand)cmd);
    }
 else     if (cmd instanceof RemoteAccessVpnCfgCommand) {
      return execute((RemoteAccessVpnCfgCommand)cmd);
    }
 else     if (cmd instanceof VpnUsersCfgCommand) {
      return execute((VpnUsersCfgCommand)cmd);
    }
 else     if (cmd instanceof GetDomRVersionCmd) {
      return execute((GetDomRVersionCmd)cmd);
    }
 else     if (cmd instanceof Site2SiteVpnCfgCommand) {
      return execute((Site2SiteVpnCfgCommand)cmd);
    }
 else     if (cmd instanceof CheckS2SVpnConnectionsCommand) {
      return execute((CheckS2SVpnConnectionsCommand)cmd);
    }
 else     if (cmd instanceof SetMonitorServiceCommand) {
      return execute((SetMonitorServiceCommand)cmd);
    }
 else     if (cmd instanceof SetupGuestNetworkCommand) {
      return execute((SetupGuestNetworkCommand)cmd);
    }
 else     if (cmd instanceof SetNetworkACLCommand) {
      return execute((SetNetworkACLCommand)cmd);
    }
 else     if (cmd instanceof SetSourceNatCommand) {
      return execute((SetSourceNatCommand)cmd);
    }
 else     if (cmd instanceof IpAssocVpcCommand) {
      return execute((IpAssocVpcCommand)cmd);
    }
 else     if (cmd instanceof IpAssocCommand) {
      return execute((IpAssocCommand)cmd);
    }
 else {
      return Answer.createUnsupportedCommandAnswer(cmd);
    }
  }
 catch (  final IllegalArgumentException e) {
    return new Answer(cmd,false,e.getMessage());
  }
 finally {
    ExecutionResult rc=_vrDeployer.cleanupCommand(cmd);
    if (!rc.isSuccess()) {
      s_logger.error("Failed to cleanup VR command due to " + rc.getDetails());
    }
  }
}
