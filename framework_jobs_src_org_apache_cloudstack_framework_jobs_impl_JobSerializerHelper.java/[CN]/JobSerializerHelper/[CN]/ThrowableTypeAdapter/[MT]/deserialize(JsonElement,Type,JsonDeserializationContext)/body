{
  JsonObject obj=(JsonObject)json;
  String className=obj.get("class").getAsString();
  try {
    Class<Throwable> clazz=(Class<Throwable>)Class.forName(className);
    Throwable cause=s_gson.fromJson(obj.get("cause"),Throwable.class);
    String msg=obj.get("msg").getAsString();
    Constructor<Throwable> constructor=clazz.getConstructor(String.class,Throwable.class);
    Throwable th=constructor.newInstance(msg,cause);
    return th;
  }
 catch (  ClassNotFoundException e) {
    throw new JsonParseException("Unable to find " + className);
  }
catch (  NoSuchMethodException e) {
    throw new JsonParseException("Unable to find constructor for " + className);
  }
catch (  SecurityException e) {
    throw new JsonParseException("Unable to get over security " + className);
  }
catch (  InstantiationException e) {
    throw new JsonParseException("Unable to instantiate " + className);
  }
catch (  IllegalAccessException e) {
    throw new JsonParseException("Illegal access to " + className,e);
  }
catch (  IllegalArgumentException e) {
    throw new JsonParseException("Illegal argument to " + className,e);
  }
catch (  InvocationTargetException e) {
    throw new JsonParseException("Cannot invoke " + className,e);
  }
}
