def createVMs(self, hostId, number):
    self.template = get_template(self.apiclient, self.zone.id, self.services['ostype'])
    if (self.template == FAILED):
        assert False, ('get_template() failed to return template with description %s' % self.services['ostype'])
    self.logger.debug(('Using template %s ' % self.template.id))
    self.service_offering = ServiceOffering.create(self.apiclient, self.services['service_offering'])
    self.logger.debug(('Using service offering %s ' % self.service_offering.id))
    vms = []
    for i in range(0, number):
        self.services['vm']['zoneid'] = self.zone.id
        self.services['vm']['template'] = self.template.id
        self.services['vm']['displayname'] = ('vm' + str(i))
        self.services['vm']['hypervisor'] = self.hypervisor
        vm = VirtualMachine.create(self.apiclient, self.services['vm'], serviceofferingid=self.service_offering.id, hostid=hostId)
        vms.append(vm)
        self.cleanup.append(vm)
        self.logger.debug('VM create = {}'.format(vm.id))
    return vms
