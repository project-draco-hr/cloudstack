{
  Long templateId=(Long)params.get(BaseCmd.Properties.ID.getName());
  Long userId=(Long)params.get(BaseCmd.Properties.USER_ID.getName());
  Account account=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  Long sourceZoneId=(Long)params.get(BaseCmd.Properties.SOURCE_ZONE_ID.getName());
  Long destZoneId=(Long)params.get(BaseCmd.Properties.DEST_ZONE_ID.getName());
  if (userId == null) {
    userId=Long.valueOf(1);
  }
  VMTemplateVO template1=getManagementServer().findTemplateById(templateId.longValue());
  if (template1 == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find template with id " + templateId);
  }
  boolean isIso=Storage.ImageFormat.ISO.equals(template1.getFormat());
  if (isIso) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Please specify a valid template.");
  }
  if (account != null) {
    if (!isAdmin(account.getType())) {
      if (template1.getAccountId() != account.getId()) {
        throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"unable to copy template with id " + templateId);
      }
    }
 else {
      Account templateOwner=getManagementServer().findAccountById(template1.getAccountId());
      if ((templateOwner != null) && !getManagementServer().isChildDomain(account.getDomainId(),templateOwner.getDomainId())) {
        throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"Unable to copy template with id " + templateId + " to zone "+ destZoneId);
      }
    }
  }
  try {
    long jobId=getManagementServer().copyTemplateAsync(userId,templateId,sourceZoneId,destZoneId);
    if (jobId == 0) {
      s_logger.warn("Unable to schedule async-job for CopyTemplate command");
    }
 else {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("CopyTemplate command has been accepted, job id: " + jobId);
      }
    }
    templateId=waitInstanceCreation(jobId);
    List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.JOB_ID.getName(),Long.valueOf(jobId)));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.TEMPLATE_ID.getName(),Long.valueOf(templateId)));
    return returnValues;
  }
 catch (  Exception ex) {
    if (ex instanceof ServerApiException) {
      throw (ServerApiException)ex;
    }
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to copy template: " + ex.getMessage());
  }
}
