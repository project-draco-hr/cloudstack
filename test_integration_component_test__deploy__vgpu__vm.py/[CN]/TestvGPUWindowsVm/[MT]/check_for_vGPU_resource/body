@attr(tags=['advanced', 'basic', 'vgpu'], required_hardware='true')
def check_for_vGPU_resource(self, hostid, vminstancename, serviceofferingid, vgputype):
    '\n        Validate the VM for VGPU resources\n        '
    'Create SSH Client for Host Connection\n        '
    vgpu_host = list_hosts(self.apiclient, id=hostid)
    ssh_client = SshClient(host=vgpu_host[0].ipaddress, port=self.testdata['configurableData']['host']['publicport'], user=self.testdata['configurableData']['host']['username'], passwd=self.testdata['configurableData']['host']['password'])
    '\n        Get vGPU type model\n        '
    vgpu_type_model = ssh_client.execute((('xe vgpu-list vm-name-label=' + vminstancename) + ' params=type-model-name --minimal'))
    self.debug(('vgpu type model is %s and value is %s and length is %s' % (vgpu_type_model, vgpu_type_model[0], len(vgpu_type_model[0]))))
    if (vgputype is None):
        if (len(vgpu_type_model[0]) == 0):
            self.debug('This is non GPU instance')
            return
        else:
            self.fail(('Non vGPU VM has GPU cards @ host:%s' % vminstancename))
    self.assertNotEqual(len(vgpu_type_model), 0, 'The VM is NOT deployed with vGPU cards')
    '\n        List service offering from which VM is deployed\n        '
    list_service_offering_response = ServiceOffering.list(self.apiclient, id=serviceofferingid)
    ' Check whether the vgputype in the service offering is same as the one obtained by listing the vgpu type model\n        '
    self.debug(('VM vGPU type is: %s and vGPU type on XenServer is : %s' % (list_service_offering_response[0].serviceofferingdetails.vgpuType, vgpu_type_model[0])))
    self.assertEqual(list_service_offering_response[0].serviceofferingdetails.vgpuType, vgpu_type_model[0], 'VM does not have the correct GPU resources, verified on the host')
    '\n        Check whether the VM is deployed with the card which was mentioned in the service offering\n        '
    self.assertEqual(vgputype, list_service_offering_response[0].serviceofferingdetails.vgpuType, 'The VM is NOT deployed with correct cards, verified from CS')
    return
