@attr(tags=['advanced', 'basic', 'vgpu'], required_hardware='true')
def vgpu_serviceoffering_creation(self, gtype, nvidiamodel):
    self.testdata['vgpu']['service_offerings'][gtype]['serviceofferingdetails'] = [{'pciDevice': nvidiamodel, }, {'vgpuType': gtype, }]
    self.service_offering = ServiceOffering.create(self.apiclient, self.testdata['vgpu']['service_offerings'][gtype])
    list_service_response = ServiceOffering.list(self.apiclient, id=self.service_offering.id)
    if (list_service_response is None):
        raise unittest.SkipTest(('Check Service Offering list for %s service offering' % gtype))
    self.assertEqual(list_service_response[0].serviceofferingdetails.vgpuType, gtype, 'Failed To Create Service Offering . Check vGPU Service Offering list for K2 passthrough')
    self.assertEqual(list_service_response[0].displaytext, self.testdata['vgpu']['service_offerings'][gtype]['displaytext'], 'Check server displaytext in createServiceOfferings')
    self.assertEqual(list_service_response[0].name, self.testdata['vgpu']['service_offerings'][gtype]['name'], 'Check name in createServiceOffering')
    return self.service_offering
