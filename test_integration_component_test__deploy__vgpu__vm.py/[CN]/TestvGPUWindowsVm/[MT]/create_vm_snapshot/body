def create_vm_snapshot(self, vmcard):
    self.debug('Check if deployed VMs are in running state?')
    if vmcard:
        vmcard.getState(self.apiclient, 'Running')
    if hasattr(vmcard, 'vgpu'):
        self.check_for_vGPU_resource(vmcard.hostid, vmcard.instancename, vmcard.serviceofferingid, vmcard.vgpu)
    VmSnapshot.create(self.apiclient, vmcard.id, 'false', 'TestSnapshot', 'Display Text')
    list_snapshot_response = VmSnapshot.list(self.apiclient, virtualmachineid=vmcard.id, listall=True)
    self.assertEqual(isinstance(list_snapshot_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(list_snapshot_response, None, 'Check if snapshot exists in ListSnapshot')
    self.assertEqual(list_snapshot_response[0].state, 'Ready', 'Check the snapshot of vm is ready!')
    vgpu_host = list_hosts(self.apiclient, id=vmcard.hostid)
    ssh_client = SshClient(host=vgpu_host[0].ipaddress, port=self.testdata['configurabledata']['host']['publicport'], user=self.testdata['configurabledata']['host']['username'], passwd=self.testdata['configurabledata']['host']['password'])
    '\n        Get vGPU type model\n        '
    vgpu_snapshot = ssh_client.execute((('xe snapshot-list name-label=' + list_snapshot_response[0].name) + ' --minimal'))
    self.assertNotEqual(len(vgpu_snapshot[0]), 0, 'VM Snapshot is not created')
    self.__class__.vmsnapwomemory = 1
    return
