@attr(tags=['advanced', 'basic', 'vgpu'], required_hardware='true')
def deploy_vGPU_windows_vm(self, vgpuofferingid, vgput):
    '\n        Validate vGPU K1 windows instances\n        '
    self.virtual_machine = VirtualMachine.create(self.apiclient, self.testdata['virtual_machine'], accountid=self.account.name, zoneid=self.zone.id, domainid=self.account.domainid, serviceofferingid=vgpuofferingid, templateid=self.template.id)
    time.sleep(self.testdata['vgpu']['sleep'])
    list_vms = VirtualMachine.list(self.apiclient, id=self.virtual_machine.id)
    self.debug(('Verify listVirtualMachines response for virtual machine: %s' % self.virtual_machine.id))
    self.assertEqual(isinstance(list_vms, list), True, 'List VM response was not a valid list')
    self.assertNotEqual(len(list_vms), 0, 'List VM response was empty')
    vm = list_vms[0]
    self.assertEqual(vm.id, self.virtual_machine.id, 'Virtual Machine ids do not match')
    self.assertEqual(vm.name, self.virtual_machine.name, 'Virtual Machine names do not match')
    self.assertEqual(vm.state, 'Running', msg='VM is not in Running state')
    if (vgput != 'nonvgpuoffering'):
        self.assertEqual(vm.vgpu, vgput, msg='Failed to deploy VM with vGPU card')
    return
