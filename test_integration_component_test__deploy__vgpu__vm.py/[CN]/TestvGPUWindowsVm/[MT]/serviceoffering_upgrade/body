@attr(tags=['advanced', 'basic', 'vgpu'], required_hardware='true')
def serviceoffering_upgrade(self, sourcetype, sourcemodel, desttype, destmodel):
    self.sourcevgpuoffering = self.vgpu_serviceoffering_creation(sourcetype, sourcemodel)
    self.deploy_vGPU_windows_vm(self.sourcevgpuoffering.id, sourcetype)
    time.sleep(self.testdata['vgpu']['sleep'])
    vm = self.check_for_vm(sourcetype, self.sourcevgpuoffering.id, self.virtual_machine.id)
    self.check_for_vGPU_resource(vm.hostid, vm.instancename, vm.serviceofferingid, vm.vgpu)
    self.stop_vm()
    self.destvgpuoffering = self.vgpu_serviceoffering_creation(desttype, destmodel)
    cmd = changeServiceForVirtualMachine.changeServiceForVirtualMachineCmd()
    cmd.id = vm.id
    cmd.serviceofferingid = self.destvgpuoffering.id
    self.apiclient.changeServiceForVirtualMachine(cmd)
    self.debug(('Starting VM - ID: %s' % vm.id))
    self.start_vm()
    time.sleep(self.testdata['vgpu']['sleep'])
    vm = self.check_for_vm(desttype, self.destvgpuoffering.id, vm.id)
    self.check_for_vGPU_resource(vm.hostid, vm.instancename, vm.serviceofferingid, vm.vgpu)
    self.delete_vgpu_service_offering(self.destvgpuoffering)
    self.delete_vgpu_service_offering(self.sourcevgpuoffering)
    self.destroy_vm()
    return
