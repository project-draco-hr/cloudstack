{
  Account account=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  Long domainId=(Long)params.get(BaseCmd.Properties.DOMAIN_ID.getName());
  String accountName=(String)params.get(BaseCmd.Properties.ACCOUNT.getName());
  Integer type=(Integer)params.get(BaseCmd.Properties.RESOURCE_TYPE.getName());
  Long max=(Long)params.get(BaseCmd.Properties.MAX.getName());
  Long accountId=null;
  if (max == null) {
    max=new Long(-1);
  }
 else   if (max < -1) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Please specify either '-1' for an infinite limit, or a limit that is at least '0'.");
  }
  ResourceType resourceType;
  try {
    resourceType=ResourceType.values()[type];
  }
 catch (  ArrayIndexOutOfBoundsException e) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Please specify a valid resource type.");
  }
  if (account != null) {
    if (domainId != null) {
      if (!getManagementServer().isChildDomain(account.getDomainId(),domainId)) {
        throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"Unable to update resource limit for " + ((accountName == null) ? "" : "account " + accountName + " in ") + "domain "+ domainId+ ", permission denied");
      }
    }
 else     if (account.getType() == Account.ACCOUNT_TYPE_ADMIN) {
      domainId=DomainVO.ROOT_DOMAIN;
    }
    if (account.getType() == Account.ACCOUNT_TYPE_DOMAIN_ADMIN) {
      if ((domainId != null) && (accountName == null) && domainId.equals(account.getDomainId())) {
        throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"Unable to update resource limit for " + ((accountName == null) ? "" : "account " + accountName + " in ") + "domain "+ domainId+ ", permission denied");
      }
      Criteria c=new Criteria();
      c.addCriteria(Criteria.DOMAINID,DomainVO.ROOT_DOMAIN);
      c.addCriteria(Criteria.TYPE,resourceType);
      List<ResourceLimitVO> currentRootDomainLimits=getManagementServer().searchForLimits(c);
      ResourceLimitVO currentRootDomainLimit=(currentRootDomainLimits.size() == 0) ? null : currentRootDomainLimits.get(0);
      if (currentRootDomainLimit != null) {
        long currentRootDomainMax=currentRootDomainLimits.get(0).getMax();
        if ((max == -1 && currentRootDomainMax != -1) || max > currentRootDomainMax) {
          throw new ServerApiException(BaseCmd.PARAM_ERROR,"The current ROOT domain limit for resource type " + resourceType + " is "+ currentRootDomainMax+ " and cannot be exceeded.");
        }
      }
    }
  }
 else   if (domainId == null) {
    domainId=DomainVO.ROOT_DOMAIN;
  }
  if (domainId == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Unable to update resource limit, unable to determine domain in which to update limit.");
  }
 else   if (accountName != null) {
    Account userAccount=getManagementServer().findActiveAccount(accountName,domainId);
    if (userAccount == null) {
      throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find account by name " + accountName + " in domain with id "+ domainId);
    }
    accountId=userAccount.getId();
    domainId=userAccount.getDomainId();
  }
  ResourceLimitVO limit=null;
  try {
    if (accountId != null)     domainId=null;
    limit=getManagementServer().updateResourceLimit(domainId,accountId,resourceType,max);
  }
 catch (  InvalidParameterValueException paramException) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,paramException.getMessage());
  }
catch (  Exception ex) {
    s_logger.error("Exception updating resource limit",ex);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to update limit due to exception: " + ex.getMessage());
  }
  List<Pair<String,Object>> embeddedObject=new ArrayList<Pair<String,Object>>();
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  if (limit == null)   throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to update resource limit. Please contact Cloud Support.");
 else {
    if (limit.getDomainId() != null) {
      returnValues.add(new Pair<String,Object>(BaseCmd.Properties.DOMAIN_ID.getName(),limit.getDomainId()));
      returnValues.add(new Pair<String,Object>(BaseCmd.Properties.DOMAIN.getName(),getManagementServer().findDomainIdById(limit.getDomainId()).getName()));
    }
    if (limit.getAccountId() != null) {
      Account accountTemp=getManagementServer().findAccountById(limit.getAccountId());
      if (accountTemp != null) {
        returnValues.add(new Pair<String,Object>(BaseCmd.Properties.ACCOUNT.getName(),accountTemp.getAccountName()));
        returnValues.add(new Pair<String,Object>(BaseCmd.Properties.DOMAIN_ID.getName(),accountTemp.getDomainId()));
        returnValues.add(new Pair<String,Object>(BaseCmd.Properties.DOMAIN.getName(),getManagementServer().findDomainIdById(accountTemp.getDomainId()).getName()));
      }
    }
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.RESOURCE_TYPE.getName(),limit.getType().ordinal()));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.MAX.getName(),limit.getMax()));
    embeddedObject.add(new Pair<String,Object>("resourcelimit",new Object[]{returnValues}));
  }
  return embeddedObject;
}
