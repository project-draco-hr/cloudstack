{
  new File("sizeBased-test5.2").delete();
  new File("sizeBased-test5.3").delete();
  PatternLayout layout=new PatternLayout("%m\n");
  RollingFileAppender rfa=new RollingFileAppender();
  rfa.setName("ROLLING");
  rfa.setAppend(false);
  rfa.setLayout(layout);
  rfa.setFile("sizeBased-test5.log");
  FixedWindowRollingPolicy swrp=new FixedWindowRollingPolicy();
  SizeBasedTriggeringPolicy sbtp=new SizeBasedTriggeringPolicy();
  sbtp.setMaxFileSize(100);
  swrp.setMinIndex(0);
  swrp.setFileNamePattern("sizeBased-test5.%i");
  swrp.activateOptions();
  rfa.setRollingPolicy(swrp);
  rfa.setTriggeringPolicy(sbtp);
  rfa.activateOptions();
  root.addAppender(rfa);
  FileOutputStream os1=new FileOutputStream("sizeBased-test5.1");
  os1.close();
  FileOutputStream os0=new FileOutputStream("sizeBased-test5.0");
  for (int i=0; i < 25; i++) {
    if (i < 10) {
      logger.debug("Hello---" + i);
    }
 else     if (i < 100) {
      logger.debug("Hello--" + i);
    }
  }
  os0.close();
  if (new File("sizeBased-test5.3").exists()) {
    assertTrue(new File("sizeBased-test5.log").exists());
    assertTrue(new File("sizeBased-test5.0").exists());
    assertTrue(new File("sizeBased-test5.1").exists());
    assertTrue(new File("sizeBased-test5.2").exists());
    assertTrue(new File("sizeBased-test5.3").exists());
    assertTrue(Compare.compare(SizeBasedRollingTest.class,"sizeBased-test5.log","witness/rolling/sbr-test2.log"));
    assertTrue(Compare.compare(SizeBasedRollingTest.class,"sizeBased-test5.0","witness/rolling/sbr-test2.0"));
    assertTrue(Compare.compare(SizeBasedRollingTest.class,"sizeBased-test5.1","witness/rolling/sbr-test2.1"));
  }
 else {
    assertTrue(new File("sizeBased-test5.log").exists());
    assertTrue(new File("sizeBased-test5.0").exists());
    assertTrue(new File("sizeBased-test5.2").exists());
    assertTrue(Compare.compare(SizeBasedRollingTest.class,"sizeBased-test5.log","witness/rolling/sbr-test4.log"));
  }
}
