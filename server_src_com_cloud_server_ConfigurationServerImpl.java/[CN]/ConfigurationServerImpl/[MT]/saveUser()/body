{
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      TransactionLegacy txn=TransactionLegacy.currentTxn();
      String insertSql="INSERT INTO `cloud`.`account` (id, uuid, account_name, type, role_id, domain_id, account.default) VALUES (1, UUID(), 'system', '1', '1', '1', 1)";
      try {
        PreparedStatement stmt=txn.prepareAutoCloseStatement(insertSql);
        stmt.executeUpdate();
      }
 catch (      SQLException ex) {
        s_logger.debug("Looks like system account already exists");
      }
      insertSql="INSERT INTO `cloud`.`user` (id, uuid, username, password, account_id, firstname, lastname, created, user.default)" + " VALUES (1, UUID(), 'system', RAND(), 1, 'system', 'cloud', now(), 1)";
      try {
        PreparedStatement stmt=txn.prepareAutoCloseStatement(insertSql);
        stmt.executeUpdate();
      }
 catch (      SQLException ex) {
        s_logger.debug("Looks like system user already exists");
      }
      long id=2;
      String username="admin";
      String firstname="admin";
      String lastname="cloud";
      insertSql="INSERT INTO `cloud`.`account` (id, uuid, account_name, type, role_id, domain_id, account.default) VALUES (" + id + ", UUID(), '"+ username+ "', '1', '1', '1', 1)";
      try {
        PreparedStatement stmt=txn.prepareAutoCloseStatement(insertSql);
        stmt.executeUpdate();
      }
 catch (      SQLException ex) {
        s_logger.debug("Looks like admin account already exists");
      }
      insertSql="INSERT INTO `cloud`.`user` (id, uuid, username, password, account_id, firstname, lastname, created, state, user.default) " + "VALUES (" + id + ", UUID(), '"+ username+ "', RAND(), 2, '"+ firstname+ "','"+ lastname+ "',now(), 'disabled', 1)";
      try {
        PreparedStatement stmt=txn.prepareAutoCloseStatement(insertSql);
        stmt.executeUpdate();
      }
 catch (      SQLException ex) {
        s_logger.debug("Looks like admin user already exists");
      }
      try {
        String tableName="security_group";
        try {
          String checkSql="SELECT * from network_group";
          PreparedStatement stmt=txn.prepareAutoCloseStatement(checkSql);
          stmt.executeQuery();
          tableName="network_group";
        }
 catch (        Exception ex) {
        }
        insertSql="SELECT * FROM " + tableName + " where account_id=2 and name='default'";
        PreparedStatement stmt=txn.prepareAutoCloseStatement(insertSql);
        ResultSet rs=stmt.executeQuery();
        if (!rs.next()) {
          if (tableName.equals("security_group")) {
            insertSql="INSERT INTO " + tableName + " (uuid, name, description, account_id, domain_id) "+ "VALUES (UUID(), 'default', 'Default Security Group', 2, 1)";
          }
 else {
            insertSql="INSERT INTO " + tableName + " (name, description, account_id, domain_id, account_name) "+ "VALUES ('default', 'Default Security Group', 2, 1, 'admin')";
          }
          try {
            stmt=txn.prepareAutoCloseStatement(insertSql);
            stmt.executeUpdate();
          }
 catch (          SQLException ex) {
            s_logger.warn("Failed to create default security group for default admin account due to ",ex);
          }
        }
        rs.close();
      }
 catch (      Exception ex) {
        s_logger.warn("Failed to create default security group for default admin account due to ",ex);
      }
    }
  }
);
}
