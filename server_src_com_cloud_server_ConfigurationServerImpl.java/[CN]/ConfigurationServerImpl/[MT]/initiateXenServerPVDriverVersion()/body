{
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      TransactionLegacy txn=TransactionLegacy.currentTxn();
      String pvdriverversion=Config.XenServerPVdriverVersion.getDefaultValue();
      PreparedStatement pstmt=null;
      ResultSet rs1=null;
      ResultSet rs2=null;
      try {
        String oldValue=_configDao.getValue(Config.XenServerPVdriverVersion.key());
        if (oldValue == null) {
          String sql="select resource from host where hypervisor_type='XenServer' and removed is null and status not in ('Error', 'Removed') group by resource";
          pstmt=txn.prepareAutoCloseStatement(sql);
          rs1=pstmt.executeQuery();
          while (rs1.next()) {
            String resouce=rs1.getString(1);
            if (resouce == null)             continue;
            if (resouce.equalsIgnoreCase("com.cloud.hypervisor.xenserver.resource.XenServer56Resource") || resouce.equalsIgnoreCase("com.cloud.hypervisor.xenserver.resource.XenServer56FP1Resource") || resouce.equalsIgnoreCase("com.cloud.hypervisor.xenserver.resource.XenServer56SP2Resource")|| resouce.equalsIgnoreCase("com.cloud.hypervisor.xenserver.resource.XenServer600Resource")|| resouce.equalsIgnoreCase("com.cloud.hypervisor.xenserver.resource.XenServer602Resource")) {
              pvdriverversion="xenserver56";
              break;
            }
          }
          _configDao.getValueAndInitIfNotExist(Config.XenServerPVdriverVersion.key(),Config.XenServerPVdriverVersion.getCategory(),pvdriverversion,Config.XenServerPVdriverVersion.getDescription());
          sql="select id from vm_template where hypervisor_type='XenServer'  and format!='ISO' and removed is null";
          pstmt=txn.prepareAutoCloseStatement(sql);
          rs2=pstmt.executeQuery();
          List<Long> tmpl_ids=new ArrayList<Long>();
          while (rs2.next()) {
            tmpl_ids.add(rs2.getLong(1));
          }
          for (          Long tmpl_id : tmpl_ids) {
            templateDetailsInitIfNotExist(tmpl_id,"hypervisortoolsversion",pvdriverversion);
          }
        }
      }
 catch (      Exception e) {
        logger.debug("initiateXenServerPVDriverVersion failed due to " + e.toString());
      }
    }
  }
);
}
