{
  NetworkOfferingVO publicNetworkOffering=new NetworkOfferingVO(NetworkOfferingVO.SystemPublicNetwork,TrafficType.Public);
  publicNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(publicNetworkOffering);
  NetworkOfferingVO managementNetworkOffering=new NetworkOfferingVO(NetworkOfferingVO.SystemManagementNetwork,TrafficType.Management);
  managementNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(managementNetworkOffering);
  NetworkOfferingVO controlNetworkOffering=new NetworkOfferingVO(NetworkOfferingVO.SystemControlNetwork,TrafficType.Control);
  controlNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(controlNetworkOffering);
  NetworkOfferingVO storageNetworkOffering=new NetworkOfferingVO(NetworkOfferingVO.SystemStorageNetwork,TrafficType.Storage);
  storageNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(storageNetworkOffering);
  Map<Network.Service,Network.Provider> defaultDirectNetworkOfferingProviders=new HashMap<Network.Service,Network.Provider>();
  defaultDirectNetworkOfferingProviders.put(Service.Dhcp,Provider.DhcpServer);
  defaultDirectNetworkOfferingProviders.put(Service.Dns,Provider.DhcpServer);
  defaultDirectNetworkOfferingProviders.put(Service.UserData,Provider.DhcpServer);
  Map<Network.Service,Network.Provider> defaultDirectGuestNetworkOfferingProviders=new HashMap<Network.Service,Network.Provider>();
  defaultDirectGuestNetworkOfferingProviders.put(Service.Dhcp,Provider.DhcpServer);
  defaultDirectGuestNetworkOfferingProviders.put(Service.Dns,Provider.DhcpServer);
  defaultDirectGuestNetworkOfferingProviders.put(Service.UserData,Provider.DhcpServer);
  defaultDirectGuestNetworkOfferingProviders.put(Service.SecurityGroup,Provider.SecurityGroupProvider);
  Map<Network.Service,Network.Provider> defaultVirtualNetworkOfferingProviders=new HashMap<Network.Service,Network.Provider>();
  defaultVirtualNetworkOfferingProviders.put(Service.Dhcp,Provider.VirtualRouter);
  defaultVirtualNetworkOfferingProviders.put(Service.Dns,Provider.VirtualRouter);
  defaultVirtualNetworkOfferingProviders.put(Service.UserData,Provider.VirtualRouter);
  defaultVirtualNetworkOfferingProviders.put(Service.Firewall,Provider.VirtualRouter);
  defaultVirtualNetworkOfferingProviders.put(Service.Gateway,Provider.VirtualRouter);
  defaultVirtualNetworkOfferingProviders.put(Service.Lb,Provider.VirtualRouter);
  defaultVirtualNetworkOfferingProviders.put(Service.SourceNat,Provider.VirtualRouter);
  defaultVirtualNetworkOfferingProviders.put(Service.Vpn,Provider.VirtualRouter);
  NetworkOfferingVO guestNetworkOffering=new NetworkOfferingVO(NetworkOffering.SystemGuestNetwork,"System-Guest-Network",TrafficType.Guest,true,false,null,null,null,true,Availability.Optional,null,Network.Type.Shared);
  guestNetworkOffering.setState(NetworkOffering.State.Enabled);
  guestNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(guestNetworkOffering);
  for (  Service service : defaultDirectGuestNetworkOfferingProviders.keySet()) {
    NetworkOfferingServiceMapVO offService=new NetworkOfferingServiceMapVO(guestNetworkOffering.getId(),service,defaultDirectGuestNetworkOfferingProviders.get(service));
    _offeringServiceMapDao.persist(offService);
    s_logger.trace("Added service for the network offering: " + offService);
  }
  NetworkOfferingVO defaultGuestNetworkOffering=new NetworkOfferingVO(NetworkOffering.DefaultVirtualizedNetworkOffering,"Virtual Vlan",TrafficType.Guest,false,false,null,null,null,true,Availability.Required,null,Network.Type.Isolated);
  defaultGuestNetworkOffering.setState(NetworkOffering.State.Enabled);
  defaultGuestNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(defaultGuestNetworkOffering);
  for (  Service service : defaultVirtualNetworkOfferingProviders.keySet()) {
    NetworkOfferingServiceMapVO offService=new NetworkOfferingServiceMapVO(defaultGuestNetworkOffering.getId(),service,defaultVirtualNetworkOfferingProviders.get(service));
    _offeringServiceMapDao.persist(offService);
    s_logger.trace("Added service for the network offering: " + offService);
  }
  NetworkOfferingVO defaultGuestDirectNetworkOffering=new NetworkOfferingVO(NetworkOffering.DefaultDirectNetworkOffering,"Direct",TrafficType.Guest,false,true,null,null,null,true,Availability.Optional,null,Network.Type.Shared);
  defaultGuestDirectNetworkOffering.setState(NetworkOffering.State.Enabled);
  defaultGuestDirectNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(defaultGuestDirectNetworkOffering);
  for (  Service service : defaultDirectNetworkOfferingProviders.keySet()) {
    NetworkOfferingServiceMapVO offService=new NetworkOfferingServiceMapVO(defaultGuestDirectNetworkOffering.getId(),service,defaultDirectNetworkOfferingProviders.get(service));
    _offeringServiceMapDao.persist(offService);
    s_logger.trace("Added service for the network offering: " + offService);
  }
}
