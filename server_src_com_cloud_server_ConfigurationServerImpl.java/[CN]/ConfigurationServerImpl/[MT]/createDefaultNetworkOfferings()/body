{
  NetworkOfferingVO publicNetworkOffering=new NetworkOfferingVO(NetworkOfferingVO.SystemPublicNetwork,TrafficType.Public);
  publicNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(publicNetworkOffering);
  NetworkOfferingVO managementNetworkOffering=new NetworkOfferingVO(NetworkOfferingVO.SystemManagementNetwork,TrafficType.Management);
  managementNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(managementNetworkOffering);
  NetworkOfferingVO controlNetworkOffering=new NetworkOfferingVO(NetworkOfferingVO.SystemControlNetwork,TrafficType.Control);
  controlNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(controlNetworkOffering);
  NetworkOfferingVO storageNetworkOffering=new NetworkOfferingVO(NetworkOfferingVO.SystemStorageNetwork,TrafficType.Storage);
  storageNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(storageNetworkOffering);
  Map<Network.Service,Network.Provider> defaultSharedNetworkOfferingProviders=new HashMap<Network.Service,Network.Provider>();
  defaultSharedNetworkOfferingProviders.put(Service.Dhcp,Provider.VirtualRouter);
  defaultSharedNetworkOfferingProviders.put(Service.Dns,Provider.VirtualRouter);
  defaultSharedNetworkOfferingProviders.put(Service.UserData,Provider.VirtualRouter);
  Map<Network.Service,Network.Provider> defaultSharedSGNetworkOfferingProviders=new HashMap<Network.Service,Network.Provider>();
  defaultSharedSGNetworkOfferingProviders.put(Service.Dhcp,Provider.VirtualRouter);
  defaultSharedSGNetworkOfferingProviders.put(Service.Dns,Provider.VirtualRouter);
  defaultSharedSGNetworkOfferingProviders.put(Service.UserData,Provider.VirtualRouter);
  defaultSharedSGNetworkOfferingProviders.put(Service.SecurityGroup,Provider.SecurityGroupProvider);
  Map<Network.Service,Network.Provider> defaultIsolatedNetworkOfferingProviders=new HashMap<Network.Service,Network.Provider>();
  defaultIsolatedNetworkOfferingProviders.put(Service.Dhcp,Provider.VirtualRouter);
  defaultIsolatedNetworkOfferingProviders.put(Service.Dns,Provider.VirtualRouter);
  defaultIsolatedNetworkOfferingProviders.put(Service.UserData,Provider.VirtualRouter);
  defaultIsolatedNetworkOfferingProviders.put(Service.Firewall,Provider.VirtualRouter);
  defaultIsolatedNetworkOfferingProviders.put(Service.Gateway,Provider.VirtualRouter);
  defaultIsolatedNetworkOfferingProviders.put(Service.Lb,Provider.VirtualRouter);
  defaultIsolatedNetworkOfferingProviders.put(Service.SourceNat,Provider.VirtualRouter);
  defaultIsolatedNetworkOfferingProviders.put(Service.StaticNat,Provider.VirtualRouter);
  defaultIsolatedNetworkOfferingProviders.put(Service.PortForwarding,Provider.VirtualRouter);
  defaultIsolatedNetworkOfferingProviders.put(Service.Vpn,Provider.VirtualRouter);
  NetworkOfferingVO deafultSharedSGNetworkOffering=new NetworkOfferingVO(NetworkOffering.SystemGuestNetwork,"System-Guest-Network",TrafficType.Guest,false,false,null,null,null,true,Availability.Optional,null,Network.GuestType.Shared);
  deafultSharedSGNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(deafultSharedSGNetworkOffering);
  for (  Service service : defaultSharedSGNetworkOfferingProviders.keySet()) {
    NetworkOfferingServiceMapVO offService=new NetworkOfferingServiceMapVO(deafultSharedSGNetworkOffering.getId(),service,defaultSharedSGNetworkOfferingProviders.get(service));
    _offeringServiceMapDao.persist(offService);
    s_logger.trace("Added service for the network offering: " + offService);
  }
  NetworkOfferingVO defaultIsolatedNetworkOffering=new NetworkOfferingVO(NetworkOffering.DefaultVirtualizedNetworkOffering,"Virtual Vlan",TrafficType.Guest,false,false,null,null,null,true,Availability.Required,null,Network.GuestType.Isolated);
  defaultIsolatedNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(defaultIsolatedNetworkOffering);
  for (  Service service : defaultIsolatedNetworkOfferingProviders.keySet()) {
    NetworkOfferingServiceMapVO offService=new NetworkOfferingServiceMapVO(defaultIsolatedNetworkOffering.getId(),service,defaultIsolatedNetworkOfferingProviders.get(service));
    _offeringServiceMapDao.persist(offService);
    s_logger.trace("Added service for the network offering: " + offService);
  }
  NetworkOfferingVO defaultSharedNetworkOffering=new NetworkOfferingVO(NetworkOffering.DefaultDirectNetworkOffering,"Direct",TrafficType.Guest,false,true,null,null,null,true,Availability.Optional,null,Network.GuestType.Shared);
  defaultSharedNetworkOffering=_networkOfferingDao.persistDefaultNetworkOffering(defaultSharedNetworkOffering);
  for (  Service service : defaultSharedNetworkOfferingProviders.keySet()) {
    NetworkOfferingServiceMapVO offService=new NetworkOfferingServiceMapVO(defaultSharedNetworkOffering.getId(),service,defaultSharedNetworkOfferingProviders.get(service));
    _offeringServiceMapDao.persist(offService);
    s_logger.trace("Added service for the network offering: " + offService);
  }
}
