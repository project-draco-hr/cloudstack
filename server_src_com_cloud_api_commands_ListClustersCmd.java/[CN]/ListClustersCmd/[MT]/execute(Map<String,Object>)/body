{
  Long id=(Long)params.get(BaseCmd.Properties.ID.getName());
  String name=(String)params.get(BaseCmd.Properties.NAME.getName());
  Long podId=(Long)params.get(BaseCmd.Properties.POD_ID.getName());
  Long zoneId=(Long)params.get(BaseCmd.Properties.ZONE_ID.getName());
  Integer page=(Integer)params.get(BaseCmd.Properties.PAGE.getName());
  Integer pageSize=(Integer)params.get(BaseCmd.Properties.PAGESIZE.getName());
  Long startIndex=Long.valueOf(0);
  int pageSizeNum=50;
  if (pageSize != null) {
    pageSizeNum=pageSize.intValue();
  }
  if (page != null) {
    int pageNum=page.intValue();
    if (pageNum > 0) {
      startIndex=Long.valueOf(pageSizeNum * (pageNum - 1));
    }
  }
  Criteria c=new Criteria("id",Boolean.TRUE,startIndex,Long.valueOf(pageSizeNum));
  c.addCriteria(Criteria.ID,id);
  c.addCriteria(Criteria.NAME,name);
  c.addCriteria(Criteria.PODID,podId);
  c.addCriteria(Criteria.DATACENTERID,zoneId);
  List<ClusterVO> clusters=getManagementServer().searchForClusters(c);
  if (clusters == null) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"unable to find clusters");
  }
  List<Pair<String,Object>> clusterTags=new ArrayList<Pair<String,Object>>();
  Object[] cTag=new Object[clusters.size()];
  int i=0;
  for (  ClusterVO cluster : clusters) {
    List<Pair<String,Object>> clusterData=new ArrayList<Pair<String,Object>>();
    clusterData.add(new Pair<String,Object>(BaseCmd.Properties.ID.getName(),cluster.getId()));
    clusterData.add(new Pair<String,Object>(BaseCmd.Properties.NAME.getName(),cluster.getName()));
    HostPodVO pod=getManagementServer().findHostPodById(cluster.getPodId());
    clusterData.add(new Pair<String,Object>(BaseCmd.Properties.POD_ID.getName(),pod.getId()));
    clusterData.add(new Pair<String,Object>(BaseCmd.Properties.POD_NAME.getName(),pod.getName()));
    DataCenterVO zone=getManagementServer().findDataCenterById(cluster.getDataCenterId());
    clusterData.add(new Pair<String,Object>(BaseCmd.Properties.ZONE_ID.getName(),zone.getId()));
    clusterData.add(new Pair<String,Object>(BaseCmd.Properties.ZONE_NAME.getName(),zone.getName()));
    cTag[i++]=clusterData;
  }
  Pair<String,Object> clusterTag=new Pair<String,Object>("cluster",cTag);
  clusterTags.add(clusterTag);
  return clusterTags;
}
