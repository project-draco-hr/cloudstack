{
  when(psvo.getId()).thenReturn(physicalNetworkId);
  when(psvo.getDataCenterId()).thenReturn(dataCenterId);
  when(_element._physicalNetworkDao.findById(physicalNetworkId)).thenReturn(psvo);
  when(nspvo.getState()).thenReturn(PhysicalNetworkServiceProvider.State.Enabled);
  when(nspvo.getPhysicalNetworkId()).thenReturn(physicalNetworkId);
  when(_element._physicalNetworkServiceProviderDao.findByServiceProvider(physicalNetworkId,"StratosphereSsp")).thenReturn(nspvo);
  when(credential.getUsername()).thenReturn("foo");
  when(credential.getPassword()).thenReturn("bar");
  when(_element._sspCredentialDao.findByZone(dataCenterId.longValue())).thenReturn(credential);
  HashMap<String,String> details=new HashMap<String,String>();
  details.put("sspHost","v1Api");
  details.put("url","http://a.example.jp/");
  when(host.getDataCenterId()).thenReturn(dataCenterId);
  when(host.getDetails()).thenReturn(details);
  when(host.getDetail("sspHost")).thenReturn(details.get("sspHost"));
  when(host.getDetail("url")).thenReturn(details.get("url"));
  when(_element._resourceMgr.listAllHostsInOneZoneByType(Host.Type.L2Networking,dataCenterId)).thenReturn(Arrays.<HostVO>asList(host));
  when(_element._ntwkSrvcDao.canProviderSupportServiceInNetwork(networkId,Network.Service.Connectivity,_element.getProvider())).thenReturn(true);
}
