{
  String srcIp=loadBalancerTO.getSrcIp();
  int srcPort=loadBalancerTO.getSrcPort();
  String lbProtocol=getNetScalerProtocol(loadBalancerTO);
  String lbAlgorithm=loadBalancerTO.getAlgorithm();
  String nsVirtualServerName=generateNSVirtualServerName(srcIp,srcPort);
  AutoScaleVmGroupTO vmGroupTO=loadBalancerTO.getAutoScaleVmGroupTO();
  addLBVirtualServer(nsVirtualServerName,srcIp,srcPort,lbAlgorithm,lbProtocol,loadBalancerTO.getStickinessPolicies(),vmGroupTO);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Created load balancing virtual server " + nsVirtualServerName + " on the Netscaler device");
  }
  String serviceGroupName=generateAutoScaleServiceGroupName(srcIp,srcPort);
  com.citrix.netscaler.nitro.resource.config.basic.servicegroup serviceGroup=new com.citrix.netscaler.nitro.resource.config.basic.servicegroup();
  int memberPort=vmGroupTO.getMemberPort();
  try {
    serviceGroup.set_servicegroupname(serviceGroupName);
    serviceGroup.set_servicetype(lbProtocol);
    serviceGroup.set_autoscale("POLICY");
    serviceGroup.set_memberport(memberPort);
    serviceGroup.add(_netscalerService,serviceGroup);
  }
 catch (  Exception e) {
    throw e;
  }
  com.citrix.netscaler.nitro.resource.config.lb.lbvserver_servicegroup_binding vserver_servicegroup_binding=new com.citrix.netscaler.nitro.resource.config.lb.lbvserver_servicegroup_binding();
  try {
    vserver_servicegroup_binding.set_name(nsVirtualServerName);
    vserver_servicegroup_binding.set_servicegroupname(serviceGroupName);
    vserver_servicegroup_binding.add(_netscalerService,vserver_servicegroup_binding);
  }
 catch (  Exception e) {
    throw e;
  }
  enableAutoScaleConfig(loadBalancerTO);
  return true;
}
