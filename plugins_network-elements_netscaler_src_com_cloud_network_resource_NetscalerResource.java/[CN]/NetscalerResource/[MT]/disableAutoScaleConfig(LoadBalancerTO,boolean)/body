{
  String vmGroupIdentifier=generateAutoScaleVmGroupIdentifier(loadBalancerTO);
  String profileName=generateAutoScaleProfileName(vmGroupIdentifier);
  String timerName=generateAutoScaleTimerName(vmGroupIdentifier);
  String scaleDownActionName=generateAutoScaleScaleDownActionName(vmGroupIdentifier);
  String scaleUpActionName=generateAutoScaleScaleUpActionName(vmGroupIdentifier);
  String mtName=generateSnmpMetricTableName(vmGroupIdentifier);
  String monitorName=generateSnmpMonitorName(vmGroupIdentifier);
  String serviceGroupName=generateAutoScaleServiceGroupName(vmGroupIdentifier);
  AutoScaleVmGroupTO vmGroupTO=loadBalancerTO.getAutoScaleVmGroupTO();
  List<AutoScalePolicyTO> policies=vmGroupTO.getPolicies();
  String minMemberPolicyName=generateAutoScaleMinPolicyName(vmGroupIdentifier);
  String maxMemberPolicyName=generateAutoScaleMaxPolicyName(vmGroupIdentifier);
  try {
    removeAutoScalePolicy(timerName,minMemberPolicyName,isCleanUp);
    removeAutoScalePolicy(timerName,maxMemberPolicyName,isCleanUp);
    boolean isSnmp=false;
    for (    AutoScalePolicyTO autoScalePolicyTO : policies) {
      List<ConditionTO> conditions=autoScalePolicyTO.getConditions();
      for (      ConditionTO conditionTO : conditions) {
        CounterTO counterTO=conditionTO.getCounter();
        if (counterTO.getSource().equals("snmp")) {
          isSnmp=true;
          break;
        }
      }
      String policyId=Long.toString(autoScalePolicyTO.getId());
      String policyName=generateAutoScalePolicyName(vmGroupIdentifier,policyId);
      removeAutoScalePolicy(timerName,policyName,isCleanUp);
    }
    com.citrix.netscaler.nitro.resource.config.autoscale.autoscaleaction scaleDownAction=new com.citrix.netscaler.nitro.resource.config.autoscale.autoscaleaction();
    try {
      scaleDownAction.set_name(scaleDownActionName);
      scaleDownAction.delete(_netscalerService,scaleDownAction);
    }
 catch (    Exception e) {
      if (!isCleanUp)       throw e;
    }
    com.citrix.netscaler.nitro.resource.config.autoscale.autoscaleaction scaleUpAction=new com.citrix.netscaler.nitro.resource.config.autoscale.autoscaleaction();
    try {
      scaleUpAction.set_name(scaleUpActionName);
      scaleUpAction.delete(_netscalerService,scaleUpAction);
    }
 catch (    Exception e) {
      if (!isCleanUp)       throw e;
    }
    nstimer timer=new nstimer();
    try {
      timer.set_name(timerName);
      timer.delete(_netscalerService,timer);
    }
 catch (    Exception e) {
      if (!isCleanUp)       throw e;
    }
    com.citrix.netscaler.nitro.resource.config.autoscale.autoscaleprofile autoscaleProfile=new com.citrix.netscaler.nitro.resource.config.autoscale.autoscaleprofile();
    try {
      autoscaleProfile.set_name(profileName);
      autoscaleProfile.delete(_netscalerService,autoscaleProfile);
    }
 catch (    Exception e) {
      if (!isCleanUp)       throw e;
    }
    if (isSnmp) {
      servicegroup_lbmonitor_binding servicegroup_monitor_binding=new servicegroup_lbmonitor_binding();
      try {
        servicegroup_monitor_binding.set_monitor_name(monitorName);
        servicegroup_monitor_binding.set_servicegroupname(serviceGroupName);
        servicegroup_lbmonitor_binding.delete(_netscalerService,servicegroup_monitor_binding);
      }
 catch (      Exception e) {
        if (!isCleanUp)         throw e;
      }
      com.citrix.netscaler.nitro.resource.config.lb.lbmonitor monitor=new com.citrix.netscaler.nitro.resource.config.lb.lbmonitor();
      try {
        monitor.set_monitorname(monitorName);
        monitor.set_type("LOAD");
        monitor.delete(_netscalerService,monitor);
      }
 catch (      Exception e) {
        if (!isCleanUp)         throw e;
      }
      com.citrix.netscaler.nitro.resource.config.lb.lbmetrictable metricTable=new com.citrix.netscaler.nitro.resource.config.lb.lbmetrictable();
      try {
        metricTable.set_metrictable(mtName);
        metricTable.delete(_netscalerService,metricTable);
      }
 catch (      Exception e) {
        if (!isCleanUp)         throw e;
      }
    }
  }
 catch (  Exception ex) {
    if (!isCleanUp) {
      enableAutoScaleConfig(loadBalancerTO,true);
      throw ex;
    }
 else {
      throw ex;
    }
  }
  return true;
}
