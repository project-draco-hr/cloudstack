@attr(tags=['advanced', 'selfservice'], required_hardware='false')
def test_05_dedicate_range_different_accounts(self):
    'Dedicate two different vlan ranges to two different accounts\n\n        # Validate the following:\n        # 1. Create two accounts in root domain\n        # 2. Update the physical network with two different vlan ranges\n        # 3. Dedicate first vlan range to the account 1\n        # 4. Dedicate 2nd vlan range to account 2\n        # 5. Both the operations should be successful\n        '
    self.account1 = Account.create(self.apiclient, self.testdata['account'], domainid=self.domain.id)
    self.cleanup.append(self.account1)
    self.account2 = Account.create(self.apiclient, self.testdata['account'], domainid=self.domain.id)
    self.cleanup.append(self.account2)
    new_vlan = ((((self.physical_network.vlan + ',') + self.free_vlan['partial_range'][0]) + ',') + self.free_vlan['partial_range'][1])
    self.physical_network.update(self.apiclient, id=self.physical_network.id, vlan=new_vlan)
    dedicate_guest_vlan_range_response = PhysicalNetwork.dedicate(self.apiclient, self.free_vlan['partial_range'][0], physicalnetworkid=self.physical_network.id, account=self.account1.name, domainid=self.account1.domainid)
    list_dedicated_guest_vlan_range_response = PhysicalNetwork.listDedicated(self.apiclient, id=dedicate_guest_vlan_range_response.id)
    dedicated_guest_vlan_response = list_dedicated_guest_vlan_range_response[0]
    self.assertEqual(dedicated_guest_vlan_response.account, self.account1.name, 'Check account name is in listDedicatedGuestVlanRanges as the account the range is dedicated to')
    dedicate_guest_vlan_range_response = PhysicalNetwork.dedicate(self.apiclient, self.free_vlan['partial_range'][1], physicalnetworkid=self.physical_network.id, account=self.account2.name, domainid=self.account2.domainid)
    list_dedicated_guest_vlan_range_response = PhysicalNetwork.listDedicated(self.apiclient, id=dedicate_guest_vlan_range_response.id)
    dedicated_guest_vlan_response = list_dedicated_guest_vlan_range_response[0]
    self.assertEqual(dedicated_guest_vlan_response.account, self.account2.name, 'Check account name is in listDedicatedGuestVlanRanges as the account the range is dedicated to')
    return
