{
  if (verbose)   System.out.println("[" + this + "] INFO: Data received: "+ buf+ ".");
  int msgType=buf.readUnsignedShortLE();
  int msgFlags=buf.readUnsignedShortLE();
  long dataLenLong=buf.readSignedIntLE();
  if (dataLenLong > 4 * 1024 * 1024)   throw new RuntimeException("Clipboard packet is too long. Expected length: less than 4MiB. Actual length: " + dataLenLong + ".");
  int dataLen=(int)dataLenLong;
  ByteBuffer payload=buf.readBytes(dataLen);
  if ((msgFlags & CB_RESPONSE_OK) == CB_RESPONSE_OK)   payload.putMetadata("success",true);
  if ((msgFlags & CB_RESPONSE_FAIL) == CB_RESPONSE_FAIL)   payload.putMetadata(SUCCESS,false);
  if ((msgFlags & CB_ASCII_NAMES) == CB_ASCII_NAMES)   payload.putMetadata(ASCII_NAMES,true);
switch (msgType) {
case CB_MONITOR_READY:
    pushDataToPad("monitor_ready",payload);
  break;
case CB_FORMAT_LIST:
pushDataToPad("format_list",payload);
break;
case CB_FORMAT_LIST_RESPONSE:
pushDataToPad("format_list_response",payload);
break;
case CB_FORMAT_DATA_REQUEST:
pushDataToPad("format_data_request",payload);
break;
case CB_FORMAT_DATA_RESPONSE:
pushDataToPad("format_data_response",payload);
break;
case CB_TEMP_DIRECTORY:
throw new RuntimeException("[" + this + "] ERROR: Unexpected clipboard temporary directory PDU received from server. Data: "+ buf+ ".");
case CB_CLIP_CAPS:
pushDataToPad("clipboard_capabilities",payload);
break;
case CB_FILECONTENTS_REQUEST:
pushDataToPad("filecontent_request",payload);
break;
case CB_FILECONTENTS_RESPONSE:
pushDataToPad("filecontent_response",payload);
break;
case CB_LOCK_CLIPDATA:
pushDataToPad("lock_clipdata",payload);
break;
case CB_UNLOCK_CLIPDATA:
pushDataToPad("unlock_clipdata",payload);
break;
default :
throw new RuntimeException("[" + this + "] ERROR: Unknown clipboard PDU message type: "+ msgType+ ".");
}
buf.unref();
}
