@classmethod
def setUpClass(cls):
    try:
        cls._cleanup = []
        cls.testClient = super(Test42xBugsMgmtSvr, cls).getClsTestClient()
        cls.apiClient = cls.api_client = cls.testClient.getApiClient()
        cls.services = cls.testClient.getParsedTestDataConfig()
        cls.hypervisor = cls.testClient.getHypervisorInfo()
        cls.domain = get_domain(cls.api_client)
        cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
        cls.pod = get_pod(cls.apiClient, zone_id=cls.zone.id)
        cls.template = get_template(cls.api_client, cls.zone.id, cls.services['ostype'])
        cls.services['mode'] = cls.zone.networktype
        cls.services['hypervisor'] = cls.testClient.getHypervisorInfo()
        cls.service_offering = ServiceOffering.create(cls.apiClient, cls.services['service_offerings'])
        cls.account = Account.create(cls.api_client, cls.services['account'], domainid=cls.domain.id)
        cls.account_2 = Account.create(cls.api_client, cls.services['account2'], domainid=cls.domain.id)
        cls.user = cls.account.user[0]
        cls.userapiclient = cls.testClient.getUserApiClient(cls.user.username, cls.domain.name)
        cls._cleanup = [cls.account, cls.account_2, cls.service_offering]
    except Exception as e:
        cls.tearDownClass()
        raise Exception(('Warning: Exception in setup : %s' % e))
    return
