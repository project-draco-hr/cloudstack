{
  if (portStart != null && !NetUtils.isValidPort(portStart)) {
    throw new InvalidParameterValueException("publicPort is an invalid value: " + portStart);
  }
  if (portEnd != null && !NetUtils.isValidPort(portEnd)) {
    throw new InvalidParameterValueException("Public port range is an invalid value: " + portEnd);
  }
  if (portStart != null && portEnd != null && portStart > portEnd) {
    throw new InvalidParameterValueException("Start port can't be bigger than end port");
  }
  if (network.getTrafficType() != Networks.TrafficType.Guest) {
    throw new InvalidParameterValueException("Network ACL can be created just for networks of type " + Networks.TrafficType.Guest);
  }
  Map<Network.Capability,String> protocolCapabilities=_networkMgr.getNetworkServiceCapabilities(network.getId(),Service.Firewall);
  if (protocolCapabilities != null) {
    String supportedProtocols=protocolCapabilities.get(Capability.SupportedProtocols).toLowerCase();
    if (!supportedProtocols.contains(proto.toLowerCase())) {
      throw new InvalidParameterValueException("Protocol " + proto + " is not supported in zone "+ network.getDataCenterId());
    }
  }
}
