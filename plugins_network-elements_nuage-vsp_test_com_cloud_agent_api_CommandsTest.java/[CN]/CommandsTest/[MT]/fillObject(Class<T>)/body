{
  Constructor constructor=clazz.getDeclaredConstructors()[0];
  Object[] constructorArgs=new Object[constructor.getParameterTypes().length];
  for (int i=0; i < constructor.getParameterTypes().length; i++) {
    Class constructorArgType=constructor.getParameterTypes()[i];
    if (isNumericType(constructorArgType)) {
      constructorArgs[i]=constructorArgType.getName().length();
    }
 else     if (String.class.isAssignableFrom(constructorArgType)) {
      constructorArgs[i]=constructorArgType.getName();
    }
 else     if (Boolean.class.isAssignableFrom(constructorArgType) || boolean.class.isAssignableFrom(constructorArgType)) {
      constructorArgs[i]=constructorArgType.getName().length() % 2 == 0;
    }
 else     if (Map.class.isAssignableFrom(constructorArgType)) {
      constructorArgs[i]=Maps.newHashMap();
    }
 else {
      constructorArgs[i]=null;
    }
  }
  return (T)constructor.newInstance(constructorArgs);
}
