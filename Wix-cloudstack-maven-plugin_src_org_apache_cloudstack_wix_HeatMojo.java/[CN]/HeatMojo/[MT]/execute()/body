{
  try {
    CommandLine commandLine=new CommandLine("heat");
    if (dir != null && !dir.trim().isEmpty()) {
      commandLine.addArgument("dir");
      commandLine.addArgument(dir);
    }
    commandLine.addArgument("-gg");
    commandLine.addArgument("-cg");
    commandLine.addArgument("ClientPath");
    commandLine.addArgument("-ke");
    commandLine.addArgument("-sfrag");
    if (template == null || template.trim().isEmpty()) {
      commandLine.addArgument("-template");
      commandLine.addArgument("fragment");
    }
 else {
      commandLine.addArgument("-template");
      commandLine.addArgument(template);
    }
    if (outputFile != null) {
      commandLine.addArgument("-out");
      commandLine.addArgument(outputFile.getAbsolutePath());
    }
    if (directoryName != null) {
      commandLine.addArgument("-dr");
      commandLine.addArgument(directoryName);
    }
    if (vars != null) {
      commandLine.addArguments(vars,false);
    }
    DefaultExecutor executor=new DefaultExecutor();
    getLog().debug("working directory " + commandLine.toString());
    executor.setWorkingDirectory(getWorkingDirectory(workingDirectory));
    int exitValue=executor.execute(commandLine);
    if (exitValue != 0) {
      throw new MojoExecutionException("Problem executing heat, return code " + exitValue);
    }
  }
 catch (  ExecuteException e) {
    throw new MojoExecutionException("Problem executing heat",e);
  }
catch (  IOException e) {
    throw new MojoExecutionException("Problem executing heat",e);
  }
}
