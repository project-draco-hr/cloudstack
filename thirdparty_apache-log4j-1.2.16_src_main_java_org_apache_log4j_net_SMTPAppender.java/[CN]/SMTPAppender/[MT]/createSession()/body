{
  Properties props=null;
  try {
    props=new Properties(System.getProperties());
  }
 catch (  SecurityException ex) {
    props=new Properties();
  }
  String prefix="mail.smtp";
  if (smtpProtocol != null) {
    props.put("mail.transport.protocol",smtpProtocol);
    prefix="mail." + smtpProtocol;
  }
  if (smtpHost != null) {
    props.put(prefix + ".host",smtpHost);
  }
  if (smtpPort > 0) {
    props.put(prefix + ".port",String.valueOf(smtpPort));
  }
  Authenticator auth=null;
  if (smtpPassword != null && smtpUsername != null) {
    props.put(prefix + ".auth","true");
    auth=new Authenticator(){
      protected PasswordAuthentication getPasswordAuthentication(){
        return new PasswordAuthentication(smtpUsername,smtpPassword);
      }
    }
;
  }
  Session session=Session.getInstance(props,auth);
  if (smtpProtocol != null) {
    session.setProtocolForAddress("rfc822",smtpProtocol);
  }
  if (smtpDebug) {
    session.setDebug(smtpDebug);
  }
  return session;
}
