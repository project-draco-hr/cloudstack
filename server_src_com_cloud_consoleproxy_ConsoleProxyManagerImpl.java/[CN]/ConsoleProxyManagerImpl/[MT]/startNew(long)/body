{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Assign console proxy from a newly started instance for request from data center : " + dataCenterId);
  }
  long startEventId=EventUtils.saveStartedEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventTypes.EVENT_PROXY_CREATE,"Creating console proxy");
  Map<String,Object> context=createProxyInstance(dataCenterId);
  long proxyVmId=(Long)context.get("proxyVmId");
  if (proxyVmId == 0) {
    if (s_logger.isTraceEnabled()) {
      s_logger.trace("Creating proxy instance failed, data center id : " + dataCenterId);
    }
    EventUtils.saveEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventVO.LEVEL_ERROR,EventTypes.EVENT_PROXY_CREATE,"console proxy creation failed",startEventId);
    return null;
  }
  ConsoleProxyVO proxy=_consoleProxyDao.findById(proxyVmId);
  if (proxy != null) {
    EventUtils.saveEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventVO.LEVEL_INFO,EventTypes.EVENT_PROXY_CREATE,"Succesfully created console proxy",startEventId);
    SubscriptionMgr.getInstance().notifySubscribers(ConsoleProxyManager.ALERT_SUBJECT,this,new ConsoleProxyAlertEventArgs(ConsoleProxyAlertEventArgs.PROXY_CREATED,dataCenterId,proxy.getId(),proxy,null));
    return proxy;
  }
 else {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Unable to allocate console proxy storage, remove the console proxy record from DB, proxy id: " + proxyVmId);
    }
    SubscriptionMgr.getInstance().notifySubscribers(ConsoleProxyManager.ALERT_SUBJECT,this,new ConsoleProxyAlertEventArgs(ConsoleProxyAlertEventArgs.PROXY_CREATE_FAILURE,dataCenterId,proxyVmId,null,"Unable to allocate storage"));
    EventUtils.saveEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventVO.LEVEL_ERROR,EventTypes.EVENT_PROXY_CREATE,"console proxy creation failed",startEventId);
    destroyProxyDBOnly(proxyVmId);
  }
  return null;
}
