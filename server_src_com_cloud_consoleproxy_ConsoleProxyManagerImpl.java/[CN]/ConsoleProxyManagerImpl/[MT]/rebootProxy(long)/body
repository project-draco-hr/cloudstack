{
  AsyncJobExecutor asyncExecutor=BaseAsyncJobExecutor.getCurrentExecutor();
  if (asyncExecutor != null) {
    AsyncJobVO job=asyncExecutor.getJob();
    if (s_logger.isInfoEnabled()) {
      s_logger.info("Reboot console proxy " + proxyVmId + ", update async job-"+ job.getId());
    }
    _asyncMgr.updateAsyncJobAttachment(job.getId(),"console_proxy",proxyVmId);
  }
  final ConsoleProxyVO proxy=_consoleProxyDao.findById(proxyVmId);
  if (proxy == null || proxy.getState() == State.Destroyed) {
    return false;
  }
  if (proxy.getState() == State.Running && proxy.getHostId() != null) {
    final RebootCommand cmd=new RebootCommand(proxy.getInstanceName());
    final Answer answer=_agentMgr.easySend(proxy.getHostId(),cmd);
    if (answer != null) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Successfully reboot console proxy " + proxy.getName());
      }
      SubscriptionMgr.getInstance().notifySubscribers(ConsoleProxyManager.ALERT_SUBJECT,this,new ConsoleProxyAlertEventArgs(ConsoleProxyAlertEventArgs.PROXY_REBOOTED,proxy.getDataCenterId(),proxy.getId(),proxy,null));
      return true;
    }
 else {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("failed to reboot console proxy : " + proxy.getName());
      }
      return false;
    }
  }
 else {
    return startProxy(proxyVmId) != null;
  }
}
