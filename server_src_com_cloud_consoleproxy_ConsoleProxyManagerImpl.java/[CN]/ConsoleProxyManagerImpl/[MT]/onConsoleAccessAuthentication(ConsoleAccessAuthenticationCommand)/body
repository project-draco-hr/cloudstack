{
  long vmId=0;
  String ticketInUrl=cmd.getTicket();
  if (ticketInUrl == null) {
    s_logger.error("Access ticket could not be found, you could be running an old version of console proxy. vmId: " + cmd.getVmId());
    return new ConsoleAccessAuthenticationAnswer(cmd,false);
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Console authentication. Ticket in url for " + cmd.getHost() + ":"+ cmd.getPort()+ "-"+ cmd.getVmId()+ " is "+ ticketInUrl);
  }
  String ticket=ConsoleProxyServlet.genAccessTicket(cmd.getHost(),cmd.getPort(),cmd.getSid(),cmd.getVmId());
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Console authentication. Ticket in 1 minute boundary for " + cmd.getHost() + ":"+ cmd.getPort()+ "-"+ cmd.getVmId()+ " is "+ ticket);
  }
  if (!ticket.equals(ticketInUrl)) {
    Date now=new Date();
    String minuteEarlyTicket=ConsoleProxyServlet.genAccessTicket(cmd.getHost(),cmd.getPort(),cmd.getSid(),cmd.getVmId(),new Date(now.getTime() - 60 * 1000));
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Console authentication. Ticket in 2-minute boundary for " + cmd.getHost() + ":"+ cmd.getPort()+ "-"+ cmd.getVmId()+ " is "+ minuteEarlyTicket);
    }
    if (!minuteEarlyTicket.equals(ticketInUrl)) {
      s_logger.error("Access ticket expired or has been modified. vmId: " + cmd.getVmId() + "ticket in URL: "+ ticketInUrl+ ", tickets to check against: "+ ticket+ ","+ minuteEarlyTicket);
      return new ConsoleAccessAuthenticationAnswer(cmd,false);
    }
  }
  if (cmd.getVmId() != null && cmd.getVmId().isEmpty()) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Invalid vm id sent from proxy(happens when proxy session has terminated)");
    }
    return new ConsoleAccessAuthenticationAnswer(cmd,false);
  }
  try {
    vmId=Long.parseLong(cmd.getVmId());
  }
 catch (  NumberFormatException e) {
    s_logger.error("Invalid vm id " + cmd.getVmId() + " sent from console access authentication",e);
    return new ConsoleAccessAuthenticationAnswer(cmd,false);
  }
  VMInstanceVO vm=_instanceDao.findById(vmId);
  if (vm == null) {
    return new ConsoleAccessAuthenticationAnswer(cmd,false);
  }
  if (vm.getHostId() == null) {
    s_logger.warn("VM " + vmId + " lost host info, failed authentication request");
    return new ConsoleAccessAuthenticationAnswer(cmd,false);
  }
  HostVO host=_hostDao.findById(vm.getHostId());
  if (host == null) {
    s_logger.warn("VM " + vmId + "'s host does not exist, fail authentication request");
    return new ConsoleAccessAuthenticationAnswer(cmd,false);
  }
  String sid=cmd.getSid();
  if (sid == null || !sid.equals(vm.getVncPassword())) {
    s_logger.warn("sid " + sid + " in url does not match stored sid "+ vm.getVncPassword());
    return new ConsoleAccessAuthenticationAnswer(cmd,false);
  }
  return new ConsoleAccessAuthenticationAnswer(cmd,true);
}
