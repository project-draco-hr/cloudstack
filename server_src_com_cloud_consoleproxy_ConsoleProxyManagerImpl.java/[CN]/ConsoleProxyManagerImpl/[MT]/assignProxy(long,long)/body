{
  if (!isConsoleProxyVmRequired(dataCenterId)) {
    return null;
  }
  final Pair<ConsoleProxyManagerImpl,ConsoleProxyVO> result=new Pair<ConsoleProxyManagerImpl,ConsoleProxyVO>(this,null);
  _requestHandlerScheduler.execute(new Runnable(){
    @Override public void run(){
      Transaction txn=Transaction.open(Transaction.CLOUD_DB);
      try {
        ConsoleProxyVO proxy=doAssignProxy(dataCenterId,vmId);
synchronized (result) {
          result.second(proxy);
          result.notifyAll();
        }
      }
 catch (      Throwable e) {
        s_logger.warn("Unexpected exception " + e.getMessage(),e);
      }
 finally {
        StackMaid.current().exitCleanup();
        txn.close();
      }
    }
  }
);
synchronized (result) {
    try {
      result.wait(API_WAIT_TIMEOUT);
    }
 catch (    InterruptedException e) {
      s_logger.info("Waiting for console proxy assignment is interrupted");
    }
  }
  ConsoleProxyVO proxy=result.second();
  if (proxy == null) {
    return null;
  }
  if (proxy.getPublicIpAddress() == null) {
    s_logger.warn("Assigned console proxy does not have a valid public IP address");
    return null;
  }
  KeystoreVO ksVo=_ksDao.findByName(ConsoleProxyManager.CERTIFICATE_NAME);
  assert(ksVo != null);
  return new ConsoleProxyInfo(proxy.isSslEnabled(),proxy.getPublicIpAddress(),_consoleProxyPort,proxy.getPort(),ksVo.getDomainSuffix());
}
