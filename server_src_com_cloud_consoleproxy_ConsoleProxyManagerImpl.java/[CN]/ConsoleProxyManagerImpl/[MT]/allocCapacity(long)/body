{
  if (s_logger.isTraceEnabled()) {
    s_logger.trace("Allocate console proxy standby capacity for data center : " + dataCenterId);
  }
  ConsoleProxyVO proxy=null;
  String errorString=null;
  try {
    if (_allocProxyLock.lock(ACQUIRE_GLOBAL_LOCK_TIMEOUT_FOR_SYNC)) {
      try {
        proxy=assignProxyFromStoppedPool(dataCenterId);
        if (proxy == null) {
          if (s_logger.isInfoEnabled()) {
            s_logger.info("No stopped console proxy is available, need to allocate a new console proxy");
          }
          try {
            proxy=startNew(dataCenterId);
          }
 catch (          ConcurrentOperationException e) {
            s_logger.info("Concurrent Operation caught " + e);
          }
        }
 else {
          if (s_logger.isInfoEnabled()) {
            s_logger.info("Found a stopped console proxy, bring it up to running pool. proxy vm id : " + proxy.getId());
          }
        }
      }
  finally {
        _allocProxyLock.unlock();
      }
    }
 else {
      if (s_logger.isInfoEnabled()) {
        s_logger.info("Unable to acquire proxy allocation lock, skip for next time");
      }
    }
    if (proxy != null) {
      long proxyVmId=proxy.getId();
      proxy=startProxy(proxyVmId);
      if (proxy != null) {
        if (s_logger.isInfoEnabled()) {
          s_logger.info("Console proxy " + proxy.getHostName() + " is started");
        }
        SubscriptionMgr.getInstance().notifySubscribers(ConsoleProxyManager.ALERT_SUBJECT,this,new ConsoleProxyAlertEventArgs(ConsoleProxyAlertEventArgs.PROXY_UP,dataCenterId,proxy.getId(),proxy,null));
      }
    }
  }
 catch (  Exception e) {
    errorString=e.getMessage();
    throw e;
  }
 finally {
    if (proxy == null || proxy.getState() != State.Running)     SubscriptionMgr.getInstance().notifySubscribers(ConsoleProxyManager.ALERT_SUBJECT,this,new ConsoleProxyAlertEventArgs(ConsoleProxyAlertEventArgs.PROXY_CREATE_FAILURE,dataCenterId,0l,null,errorString));
  }
}
