{
  if (s_logger.isTraceEnabled()) {
    s_logger.trace("Allocate console proxy standby capacity for data center : " + dataCenterId);
  }
  boolean proxyFromStoppedPool=false;
  ConsoleProxyVO proxy=assignProxyFromStoppedPool(dataCenterId);
  if (proxy == null) {
    if (s_logger.isInfoEnabled()) {
      s_logger.info("No stopped console proxy is available, need to allocate a new console proxy");
    }
    if (_allocProxyLock.lock(ACQUIRE_GLOBAL_LOCK_TIMEOUT_FOR_SYNC)) {
      try {
        proxy=startNew(dataCenterId);
      }
 catch (      ConcurrentOperationException e) {
        s_logger.info("Concurrent Operation caught " + e);
      }
 finally {
        _allocProxyLock.unlock();
      }
    }
 else {
      if (s_logger.isInfoEnabled()) {
        s_logger.info("Unable to acquire synchronization lock to allocate proxy resource for standby capacity, wait for next scan");
      }
      return;
    }
  }
 else {
    if (s_logger.isInfoEnabled()) {
      s_logger.info("Found a stopped console proxy, bring it up to running pool. proxy vm id : " + proxy.getId());
    }
    proxyFromStoppedPool=true;
  }
  if (proxy != null) {
    long proxyVmId=proxy.getId();
    GlobalLock proxyLock=GlobalLock.getInternLock(getProxyLockName(proxyVmId));
    long accountId=proxy.getAccountId();
    long startEventId=EventUtils.saveStartedEvent(User.UID_SYSTEM,accountId,EventTypes.EVENT_PROXY_START,"Starting proxy : " + proxy.getName());
    try {
      if (proxyLock.lock(ACQUIRE_GLOBAL_LOCK_TIMEOUT_FOR_SYNC)) {
        try {
          proxy=startProxy(proxyVmId);
        }
  finally {
          proxyLock.unlock();
        }
      }
 else {
        if (s_logger.isInfoEnabled()) {
          s_logger.info("Unable to acquire synchronization lock to start proxy for standby capacity, proxy vm id : " + proxy.getId());
        }
        return;
      }
    }
  finally {
      proxyLock.releaseRef();
    }
    if (proxy == null) {
      if (s_logger.isInfoEnabled()) {
        s_logger.info("Unable to start console proxy for standby capacity, proxy vm Id : " + proxyVmId + ", will recycle it and start a new one");
      }
      EventUtils.saveEvent(User.UID_SYSTEM,accountId,EventVO.LEVEL_ERROR,EventTypes.EVENT_PROXY_START,"Failed to start console proxy",startEventId);
      if (proxyFromStoppedPool) {
        destroyProxy(proxyVmId);
      }
    }
 else {
      if (s_logger.isInfoEnabled()) {
        s_logger.info("Console proxy " + proxy.getName() + " is started");
      }
      EventUtils.saveEvent(User.UID_SYSTEM,accountId,EventVO.LEVEL_INFO,EventTypes.EVENT_PROXY_START,"Started console proxy: " + proxy.getName(),startEventId);
    }
  }
}
