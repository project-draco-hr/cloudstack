@classmethod
def create(cls, apiclient, services, account, domainid):
    cmd = createUser.createUserCmd()
    'Creates an user'
    cmd.account = account
    cmd.domainid = domainid
    cmd.email = services['email']
    cmd.firstname = services['firstname']
    cmd.lastname = services['lastname']
    if ('userUUID' in services):
        cmd.userid = '-'.join([services['userUUID'], random_gen()])
    mdf = hashlib.md5()
    mdf.update(services['password'])
    cmd.password = mdf.hexdigest()
    cmd.username = '-'.join([services['username'], random_gen()])
    user = apiclient.createUser(cmd)
    return User(user.__dict__)
