@classmethod
def create(cls, apiclient, services, name=None, networkdomain=None, parentdomainid=None):
    'Creates an domain'
    cmd = createDomain.createDomainCmd()
    if name:
        cmd.name = '-'.join([name, random_gen()])
    elif ('name' in services):
        cmd.name = '-'.join([services['name'], random_gen()])
    if networkdomain:
        cmd.networkdomain = networkdomain
    elif ('networkdomain' in services):
        cmd.networkdomain = services['networkdomain']
    if parentdomainid:
        cmd.parentdomainid = parentdomainid
    elif ('parentdomainid' in services):
        cmd.parentdomainid = services['parentdomainid']
    try:
        domain = apiclient.createDomain(cmd)
        if (domain is not None):
            return Domain(domain.__dict__)
    except Exception as e:
        raise e
