@classmethod
def add(cls, apiclient, services, physicalnetworkid, username=None, password=None):
    'Add external netscaler device to cloudstack'
    cmd = addNetscalerLoadBalancer.addNetscalerLoadBalancerCmd()
    cmd.physicalnetworkid = physicalnetworkid
    if username:
        cmd.username = username
    else:
        cmd.username = services['username']
    if password:
        cmd.password = password
    else:
        cmd.password = services['password']
    cmd.networkdevicetype = services['networkdevicetype']
    url = (('https://' + str(services['ipaddress'])) + '?')
    url = (((url + 'publicinterface=') + str(services['publicinterface'])) + '&')
    url = (((url + 'privateinterface=') + str(services['privateinterface'])) + '&')
    url = (((url + 'numretries=') + str(services['numretries'])) + '&')
    if ((not services['lbdevicededicated']) and ('lbdevicecapacity' in services)):
        url = (((url + 'lbdevicecapacity=') + str(services['lbdevicecapacity'])) + '&')
    url = ((url + 'lbdevicededicated=') + str(services['lbdevicededicated']))
    cmd.url = url
    return NetScaler(apiclient.addNetscalerLoadBalancer(cmd).__dict__)
