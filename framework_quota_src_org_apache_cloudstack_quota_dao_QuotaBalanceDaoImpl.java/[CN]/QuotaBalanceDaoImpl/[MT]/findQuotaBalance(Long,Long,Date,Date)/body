{
  return Transaction.execute(TransactionLegacy.USAGE_DB,new TransactionCallback<List<QuotaBalanceVO>>(){
    @Override public List<QuotaBalanceVO> doInTransaction(    final TransactionStatus status){
      List<QuotaBalanceVO> quotaUsageRecords=null;
      QueryBuilder<QuotaBalanceVO> qb=QueryBuilder.create(QuotaBalanceVO.class);
      if (accountId != null) {
        qb.and(qb.entity().getAccountId(),SearchCriteria.Op.EQ,accountId);
      }
      if (domainId != null) {
        qb.and(qb.entity().getDomainId(),SearchCriteria.Op.EQ,domainId);
      }
      if ((startDate != null) && (endDate != null) && startDate.before(endDate)) {
        qb.and(qb.entity().getUpdatedOn(),SearchCriteria.Op.BETWEEN,startDate,endDate);
      }
 else {
        return Collections.<QuotaBalanceVO>emptyList();
      }
      quotaUsageRecords=listBy(qb.create());
      if (quotaUsageRecords.size() == 0) {
        quotaUsageRecords.addAll(lastQuotaBalanceVO(accountId,domainId,startDate));
      }
      return quotaUsageRecords;
    }
  }
);
}
