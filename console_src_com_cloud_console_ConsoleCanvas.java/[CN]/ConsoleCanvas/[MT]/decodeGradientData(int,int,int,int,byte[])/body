{
  int dx, dy, c;
  byte[] prevRow=new byte[w * 3];
  byte[] thisRow=new byte[w * 3];
  byte[] pix=new byte[3];
  int[] est=new int[3];
  int offset=y * rfb.framebufferWidth + x;
  for (dy=0; dy < h; dy++) {
    for (c=0; c < 3; c++) {
      pix[c]=(byte)(prevRow[c] + buf[dy * w * 3 + c]);
      thisRow[c]=pix[c];
    }
    pixels24[offset++]=(pix[0] & 0xFF) << 16 | (pix[1] & 0xFF) << 8 | (pix[2] & 0xFF);
    for (dx=1; dx < w; dx++) {
      for (c=0; c < 3; c++) {
        est[c]=((prevRow[dx * 3 + c] & 0xFF) + (pix[c] & 0xFF) - (prevRow[(dx - 1) * 3 + c] & 0xFF));
        if (est[c] > 0xFF) {
          est[c]=0xFF;
        }
 else         if (est[c] < 0x00) {
          est[c]=0x00;
        }
        pix[c]=(byte)(est[c] + buf[(dy * w + dx) * 3 + c]);
        thisRow[dx * 3 + c]=pix[c];
      }
      pixels24[offset++]=(pix[0] & 0xFF) << 16 | (pix[1] & 0xFF) << 8 | (pix[2] & 0xFF);
    }
    System.arraycopy(thisRow,0,prevRow,0,w * 3);
    offset+=(rfb.framebufferWidth - w);
  }
}
