{
  s_logger.debug("release called with network: " + network.toString() + " nic: "+ nic.toString()+ " vm: "+ vm.toString());
  if (!midoInNetwork(network)) {
    return false;
  }
  UUID nicUUID=getNicUUID(nic);
  if (nic.getTrafficType() == Networks.TrafficType.Guest || (nic.getTrafficType() == Networks.TrafficType.Public && nic.getBroadcastType() == Networks.BroadcastDomainType.Mido)) {
    Bridge netBridge=getOrCreateNetworkBridge(network);
    Router providerRouter=api.getRouter(_providerRouterId);
    for (    Route route : providerRouter.getRoutes(new MultivaluedMapImpl())) {
      String routeDstAddr=route.getDstNetworkAddr();
      if (routeDstAddr != null && routeDstAddr.equals(nic.getIPv4Address())) {
        route.delete();
      }
    }
    for (    BridgePort p : netBridge.getPorts()) {
      UUID vifID=p.getVifId();
      if (vifID != null && vifID.equals(nicUUID)) {
        p.vifId(null).update();
        p.delete();
      }
    }
  }
  return true;
}
