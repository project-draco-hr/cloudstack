{
  logger.debug("associatePublicIP called with network: " + network.toString());
  boolean resources=false;
  Router tenantRouter=null;
  Router providerRouter=null;
  RouterPort[] ports=null;
  RouterPort tenantUplink=null;
  RouterPort providerDownlink=null;
  RuleChain preNat=null;
  RuleChain post=null;
  String accountIdStr=null;
  String routerName=null;
  for (  PublicIpAddress ip : ipAddress) {
    if (ip.isSourceNat()) {
      if (resources == false) {
        tenantRouter=getOrCreateGuestNetworkRouter(network);
        providerRouter=api.getRouter(_providerRouterId);
        ports=getOrCreateProviderRouterPorts(tenantRouter,providerRouter);
        tenantUplink=ports[0];
        providerDownlink=ports[1];
        accountIdStr=getAccountUuid(network);
        boolean isVpc=getIsVpc(network);
        long id=getRouterId(network,isVpc);
        routerName=getRouterName(isVpc,id);
        preNat=getChain(accountIdStr,routerName,RuleChainCode.TR_PRENAT);
        post=api.getChain(tenantRouter.getOutboundFilterId());
        resources=true;
      }
      applySourceNat(tenantRouter,providerRouter,tenantUplink,providerDownlink,preNat,post,ip);
    }
  }
  return true;
}
