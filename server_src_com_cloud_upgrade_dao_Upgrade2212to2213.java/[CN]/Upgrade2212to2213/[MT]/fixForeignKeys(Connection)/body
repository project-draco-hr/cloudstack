{
  HashMap<String,List<String>> foreignKeys=new HashMap<String,List<String>>();
  List<String> keys=new ArrayList<String>();
  keys.add("fk_networks__data_center_id");
  foreignKeys.put("networks",keys);
  s_logger.debug("Dropping old key fk_networks__data_center_id...");
  for (  String tableName : foreignKeys.keySet()) {
    DbUpgradeUtils.dropKeysIfExist(conn,tableName,foreignKeys.get(tableName),true);
  }
  try {
    PreparedStatement pstmt=conn.prepareStatement("ALTER TABLE `cloud`.`networks` ADD CONSTRAINT `fk_networks__data_center_id` FOREIGN KEY (`data_center_id`) REFERENCES `data_center`(`id`) ON DELETE CASCADE");
    pstmt.executeUpdate();
  }
 catch (  SQLException e) {
    throw new CloudRuntimeException("Unable to reinsert data center key for the network",e);
  }
  DbUpgradeUtils.dropPrimaryKeyIfExists(conn,"cloud_usage.usage_load_balancer_policy");
  DbUpgradeUtils.dropPrimaryKeyIfExists(conn,"cloud_usage.usage_port_forwarding");
}
