{
  HostVO host=hostDao.findById(hostId);
  if (HypervisorType.VMware.equals(host.getHypervisorType())) {
    List<StoragePoolVO> storagePools=storagePoolDao.findPoolsByProvider(SolidFireUtil.SHARED_PROVIDER_NAME);
    if (storagePools != null && storagePools.size() > 0) {
      List<Map<String,String>> targets=new ArrayList<>();
      for (      StoragePoolVO storagePool : storagePools) {
        if (storagePool.getClusterId().equals(host.getClusterId())) {
          long storagePoolId=storagePool.getId();
          StoragePoolDetailVO storagePoolDetail=storagePoolDetailsDao.findDetail(storagePoolId,SolidFireUtil.IQN);
          String iqn=storagePoolDetail.getValue();
          storagePoolDetail=storagePoolDetailsDao.findDetail(storagePoolId,SolidFireUtil.STORAGE_VIP);
          String sVip=storagePoolDetail.getValue();
          storagePoolDetail=storagePoolDetailsDao.findDetail(storagePoolId,SolidFireUtil.STORAGE_PORT);
          String sPort=storagePoolDetail.getValue();
          Map<String,String> details=new HashMap<>();
          details.put(ModifyTargetsCommand.IQN,iqn);
          details.put(ModifyTargetsCommand.STORAGE_HOST,sVip);
          details.put(ModifyTargetsCommand.STORAGE_PORT,sPort);
          targets.add(details);
        }
      }
      if (targets.size() > 0) {
        ModifyTargetsCommand cmd=new ModifyTargetsCommand();
        cmd.setAdd(add);
        cmd.setTargets(targets);
        sendModifyTargetsCommand(cmd,hostId);
      }
    }
  }
}
