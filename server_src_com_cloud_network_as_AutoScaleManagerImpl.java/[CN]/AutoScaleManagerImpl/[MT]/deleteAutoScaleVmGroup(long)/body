{
  final AutoScaleVmGroupVO autoScaleVmGroupVO=getEntityInDatabase(CallContext.current().getCallingAccount(),"AutoScale Vm Group",id,_autoScaleVmGroupDao);
  if (autoScaleVmGroupVO.getState().equals(AutoScaleVmGroup.State_New)) {
    return _autoScaleVmGroupDao.remove(id);
  }
  final String bakupState=autoScaleVmGroupVO.getState();
  autoScaleVmGroupVO.setState(AutoScaleVmGroup.State_Revoke);
  _autoScaleVmGroupDao.persist(autoScaleVmGroupVO);
  boolean success=false;
  try {
    success=configureAutoScaleVmGroup(id,bakupState);
  }
 catch (  final ResourceUnavailableException e) {
    autoScaleVmGroupVO.setState(bakupState);
    _autoScaleVmGroupDao.persist(autoScaleVmGroupVO);
  }
 finally {
    if (!success) {
      s_logger.warn("Could not delete AutoScale Vm Group id : " + id);
      return false;
    }
  }
  return Transaction.execute(new TransactionCallback<Boolean>(){
    @Override public Boolean doInTransaction(    final TransactionStatus status){
      boolean success=_autoScaleVmGroupDao.remove(id);
      if (!success) {
        s_logger.warn("Failed to remove AutoScale Group db object");
        return false;
      }
      success=_autoScaleVmGroupPolicyMapDao.removeByGroupId(id);
      if (!success) {
        s_logger.warn("Failed to remove AutoScale Group Policy mappings");
        return false;
      }
      s_logger.info("Successfully deleted autoscale vm group id : " + id);
      return success;
    }
  }
);
}
