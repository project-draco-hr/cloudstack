{
  final int duration=autoScalePolicyVOFinal.getDuration();
  final int quietTime=autoScalePolicyVOFinal.getQuietTime();
  if (duration < 0) {
    throw new InvalidParameterValueException("duration is an invalid value: " + duration);
  }
  if (quietTime < 0) {
    throw new InvalidParameterValueException("quiettime is an invalid value: " + quietTime);
  }
  return Transaction.execute(new TransactionCallback<AutoScalePolicyVO>(){
    @Override public AutoScalePolicyVO doInTransaction(    final TransactionStatus status){
      final AutoScalePolicyVO autoScalePolicyVO=_autoScalePolicyDao.persist(autoScalePolicyVOFinal);
      if (conditionIds != null) {
        final SearchBuilder<ConditionVO> conditionsSearch=_conditionDao.createSearchBuilder();
        conditionsSearch.and("ids",conditionsSearch.entity().getId(),Op.IN);
        conditionsSearch.done();
        final SearchCriteria<ConditionVO> sc=conditionsSearch.create();
        sc.setParameters("ids",conditionIds.toArray(new Object[0]));
        final List<ConditionVO> conditions=_conditionDao.search(sc,null);
        final ControlledEntity[] sameOwnerEntities=conditions.toArray(new ControlledEntity[conditions.size() + 1]);
        sameOwnerEntities[sameOwnerEntities.length - 1]=autoScalePolicyVO;
        _accountMgr.checkAccess(CallContext.current().getCallingAccount(),null,true,sameOwnerEntities);
        if (conditionIds.size() != conditions.size()) {
          throw new InvalidParameterValueException("Unable to find the condition specified");
        }
        final ArrayList<Long> counterIds=new ArrayList<Long>();
        for (        final ConditionVO condition : conditions) {
          if (counterIds.contains(condition.getCounterid())) {
            throw new InvalidParameterValueException("atleast two conditions in the conditionids have the same counter. It is not right to apply two different conditions for the same counter");
          }
          counterIds.add(condition.getCounterid());
        }
        _autoScalePolicyConditionMapDao.removeByAutoScalePolicyId(autoScalePolicyVO.getId());
        for (        final Long conditionId : conditionIds) {
          final AutoScalePolicyConditionMapVO policyConditionMapVO=new AutoScalePolicyConditionMapVO(autoScalePolicyVO.getId(),conditionId);
          _autoScalePolicyConditionMapDao.persist(policyConditionMapVO);
        }
      }
      return autoScalePolicyVO;
    }
  }
);
}
