{
  AutoScaleVmGroupVO asGroup=_autoScaleVmGroupDao.findById(groupId);
  if (asGroup == null) {
    s_logger.error("Can not find the groupid " + groupId + " for scaling up");
    return;
  }
  if (!checkConditionUp(asGroup,numVm)) {
    return;
  }
  for (int i=0; i < numVm; i++) {
    long vmId=createNewVM(asGroup);
    if (vmId == -1) {
      s_logger.error("Can not deploy new VM for scaling up in the group " + asGroup.getId() + ". Waiting for next round");
      break;
    }
    if (startNewVM(vmId)) {
      if (assignLBruleToNewVm(vmId,asGroup)) {
        AutoScaleVmGroupVmMapVO GroupVmVO=new AutoScaleVmGroupVmMapVO(asGroup.getId(),vmId);
        _autoScaleVmGroupVmMapDao.persist(GroupVmVO);
        List<AutoScaleVmGroupPolicyMapVO> GroupPolicyVOs=_autoScaleVmGroupPolicyMapDao.listByVmGroupId(groupId);
        for (        AutoScaleVmGroupPolicyMapVO GroupPolicyVO : GroupPolicyVOs) {
          AutoScalePolicyVO vo=_autoScalePolicyDao.findById(GroupPolicyVO.getPolicyId());
          if (vo.getAction().equals("scaleup")) {
            vo.setLastQuiteTime(new Date());
            _autoScalePolicyDao.persist(vo);
            break;
          }
        }
      }
 else {
        s_logger.error("Can not assign LB rule for this new VM");
        break;
      }
    }
 else {
      s_logger.error("Can not deploy new VM for scaling up in the group " + asGroup.getId() + ". Waiting for next round");
      break;
    }
  }
}
