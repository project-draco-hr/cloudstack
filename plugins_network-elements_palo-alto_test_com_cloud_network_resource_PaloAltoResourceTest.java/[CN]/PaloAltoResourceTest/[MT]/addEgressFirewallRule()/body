{
  if (_context.containsKey("enable_console_output") && _context.get("enable_console_output").equals("true")) {
    System.out.println("\nTEST: addEgressFirewallRule");
    System.out.println("---------------------------------------------------");
  }
  _context.put("has_public_interface","true");
  _context.put("has_private_interface","true");
  _context.put("has_src_nat_rule","true");
  _context.put("has_isolation_fw_rule","true");
  _context.put("has_service_tcp_80","true");
  _resource.setMockContext(_context);
  _resource.configure("PaloAltoResource",_resourceParams);
  long vlanId=3954;
  List<FirewallRuleTO> rules=new ArrayList<FirewallRuleTO>();
  List<String> cidrList=new ArrayList<String>();
  cidrList.add("0.0.0.0/0");
  FirewallRuleVO activeVO=new FirewallRuleVO(null,null,80,80,"tcp",1,1,1,Purpose.Firewall,cidrList,null,null,null,FirewallRule.TrafficType.Egress);
  FirewallRuleTO active=new FirewallRuleTO(activeVO,Long.toString(vlanId),null,Purpose.Firewall,FirewallRule.TrafficType.Egress);
  rules.add(active);
  SetFirewallRulesCommand cmd=new SetFirewallRulesCommand(rules);
  cmd.setContextParam(NetworkElementCommand.GUEST_VLAN_TAG,Long.toString(vlanId));
  cmd.setContextParam(NetworkElementCommand.GUEST_NETWORK_CIDR,"10.3.96.1/20");
  Answer answer=_resource.executeRequest(cmd);
  assertTrue(answer.getResult());
}
