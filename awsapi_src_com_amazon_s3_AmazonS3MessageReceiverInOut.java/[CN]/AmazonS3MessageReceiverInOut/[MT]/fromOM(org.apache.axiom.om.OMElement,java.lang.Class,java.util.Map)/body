{
  try {
    if (com.amazon.s3.GetBucketLoggingStatus.class.equals(type)) {
      return com.amazon.s3.GetBucketLoggingStatus.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.GetBucketLoggingStatusResponse.class.equals(type)) {
      return com.amazon.s3.GetBucketLoggingStatusResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.CopyObject.class.equals(type)) {
      return com.amazon.s3.CopyObject.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.CopyObjectResponse.class.equals(type)) {
      return com.amazon.s3.CopyObjectResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.GetBucketAccessControlPolicy.class.equals(type)) {
      return com.amazon.s3.GetBucketAccessControlPolicy.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.GetBucketAccessControlPolicyResponse.class.equals(type)) {
      return com.amazon.s3.GetBucketAccessControlPolicyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.ListBucket.class.equals(type)) {
      return com.amazon.s3.ListBucket.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.ListBucketResponse.class.equals(type)) {
      return com.amazon.s3.ListBucketResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.PutObject.class.equals(type)) {
      return com.amazon.s3.PutObject.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.PutObjectResponse.class.equals(type)) {
      return com.amazon.s3.PutObjectResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.CreateBucket.class.equals(type)) {
      return com.amazon.s3.CreateBucket.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.CreateBucketResponse.class.equals(type)) {
      return com.amazon.s3.CreateBucketResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.ListAllMyBuckets.class.equals(type)) {
      return com.amazon.s3.ListAllMyBuckets.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.ListAllMyBucketsResponse.class.equals(type)) {
      return com.amazon.s3.ListAllMyBucketsResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.GetObject.class.equals(type)) {
      return com.amazon.s3.GetObject.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.GetObjectResponse.class.equals(type)) {
      return com.amazon.s3.GetObjectResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.DeleteBucket.class.equals(type)) {
      return com.amazon.s3.DeleteBucket.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.DeleteBucketResponse.class.equals(type)) {
      return com.amazon.s3.DeleteBucketResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.SetBucketLoggingStatus.class.equals(type)) {
      return com.amazon.s3.SetBucketLoggingStatus.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.SetBucketLoggingStatusResponse.class.equals(type)) {
      return com.amazon.s3.SetBucketLoggingStatusResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.GetObjectAccessControlPolicy.class.equals(type)) {
      return com.amazon.s3.GetObjectAccessControlPolicy.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.GetObjectAccessControlPolicyResponse.class.equals(type)) {
      return com.amazon.s3.GetObjectAccessControlPolicyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.DeleteObject.class.equals(type)) {
      return com.amazon.s3.DeleteObject.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.DeleteObjectResponse.class.equals(type)) {
      return com.amazon.s3.DeleteObjectResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.SetBucketAccessControlPolicy.class.equals(type)) {
      return com.amazon.s3.SetBucketAccessControlPolicy.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.SetBucketAccessControlPolicyResponse.class.equals(type)) {
      return com.amazon.s3.SetBucketAccessControlPolicyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.SetObjectAccessControlPolicy.class.equals(type)) {
      return com.amazon.s3.SetObjectAccessControlPolicy.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.SetObjectAccessControlPolicyResponse.class.equals(type)) {
      return com.amazon.s3.SetObjectAccessControlPolicyResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.PutObjectInline.class.equals(type)) {
      return com.amazon.s3.PutObjectInline.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.PutObjectInlineResponse.class.equals(type)) {
      return com.amazon.s3.PutObjectInlineResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.GetObjectExtended.class.equals(type)) {
      return com.amazon.s3.GetObjectExtended.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
    if (com.amazon.s3.GetObjectExtendedResponse.class.equals(type)) {
      return com.amazon.s3.GetObjectExtendedResponse.Factory.parse(param.getXMLStreamReaderWithoutCaching());
    }
  }
 catch (  java.lang.Exception e) {
    throw org.apache.axis2.AxisFault.makeFault(e);
  }
  return null;
}
