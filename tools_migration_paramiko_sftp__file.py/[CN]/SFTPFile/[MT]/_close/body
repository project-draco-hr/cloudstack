def _close(self, async=False):
    if self._closed:
        return
    self.sftp._log(DEBUG, ('close(%s)' % hexlify(self.handle)))
    if self.pipelined:
        self.sftp._finish_responses(self)
    BufferedFile.close(self)
    try:
        if async:
            self.sftp._async_request(type(None), CMD_CLOSE, self.handle)
        else:
            self.sftp._request(CMD_CLOSE, self.handle)
    except EOFError:
        pass
    except (IOError, socket.error):
        pass
