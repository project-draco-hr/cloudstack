def prefetch(self):
    "\n        Pre-fetch the remaining contents of this file in anticipation of\n        future L{read} calls.  If reading the entire file, pre-fetching can\n        dramatically improve the download speed by avoiding roundtrip latency.\n        The file's contents are incrementally buffered in a background thread.\n        \n        The prefetched data is stored in a buffer until read via the L{read}\n        method.  Once data has been read, it's removed from the buffer.  The\n        data may be read in a random order (using L{seek}); chunks of the\n        buffer that haven't been read will continue to be buffered.\n\n        @since: 1.5.1\n        "
    size = self.stat().st_size
    chunks = []
    n = self._realpos
    while (n < size):
        chunk = min(self.MAX_REQUEST_SIZE, (size - n))
        chunks.append((n, chunk))
        n += chunk
    if (len(chunks) > 0):
        self._start_prefetch(chunks)
