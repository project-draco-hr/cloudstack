def readv(self, chunks):
    '\n        Read a set of blocks from the file by (offset, length).  This is more\n        efficient than doing a series of L{seek} and L{read} calls, since the\n        prefetch machinery is used to retrieve all the requested blocks at\n        once.\n        \n        @param chunks: a list of (offset, length) tuples indicating which\n            sections of the file to read\n        @type chunks: list(tuple(long, int))\n        @return: a list of blocks read, in the same order as in C{chunks}\n        @rtype: list(str)\n        \n        @since: 1.5.4\n        '
    self.sftp._log(DEBUG, ('readv(%s, %r)' % (hexlify(self.handle), chunks)))
    read_chunks = []
    for (offset, size) in chunks:
        if (self._data_in_prefetch_buffers(offset) or self._data_in_prefetch_requests(offset, size)):
            continue
        while (size > 0):
            chunk_size = min(size, self.MAX_REQUEST_SIZE)
            read_chunks.append((offset, chunk_size))
            offset += chunk_size
            size -= chunk_size
    self._start_prefetch(read_chunks)
    for x in chunks:
        self.seek(x[0])
        yield self.read(x[1])
