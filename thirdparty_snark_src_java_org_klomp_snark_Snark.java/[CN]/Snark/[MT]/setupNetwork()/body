{
  activity=NETWORK_SETUP;
  IOException lastException=null;
  if (user_port != -1) {
    port=user_port;
    try {
      serversocket=new ServerSocket(port);
    }
 catch (    IOException ioe) {
      lastException=ioe;
    }
  }
 else {
    for (port=MIN_PORT; serversocket == null && port <= MAX_PORT; port++) {
      try {
        serversocket=new ServerSocket(port);
      }
 catch (      IOException ioe) {
        lastException=ioe;
      }
    }
  }
  if (serversocket == null) {
    String message="Cannot accept incoming connections ";
    if (user_port == -1) {
      message=message + "tried ports " + MIN_PORT+ " - "+ MAX_PORT;
    }
 else {
      message=message + "on port " + user_port;
    }
    if (ip != null || user_port != -1) {
      abort(message,lastException);
    }
 else {
      log.log(Level.WARNING,message);
    }
    port=-1;
  }
 else {
    port=serversocket.getLocalPort();
    log.log(Level.FINE,"Listening on port: " + port);
  }
  meta=null;
  File f=null;
  try {
    InputStream in;
    f=new File(torrent);
    if (f.exists()) {
      in=new FileInputStream(f);
    }
 else {
      activity=GETTING_TORRENT;
      URL u=new URL(torrent);
      URLConnection c=u.openConnection();
      c.connect();
      in=c.getInputStream();
      if (c instanceof HttpURLConnection) {
        int code=((HttpURLConnection)c).getResponseCode();
        if (code / 100 != 2) {
          abort("Loading page '" + torrent + "' gave error code "+ code+ ", it probably doesn't exists");
        }
      }
    }
    meta=new MetaInfo(new BDecoder(in));
  }
 catch (  IOException ioe) {
    if (f != null && f.exists()) {
      if (ip == null) {
        abort("'" + torrent + "' exists,"+ " but is not a valid torrent metainfo file."+ System.getProperty("line.separator")+ "  (use --share to create a torrent from it"+ " and start sharing)",ioe);
      }
 else {
        log.log(Level.INFO,"Trying to create metainfo torrent for '" + torrent + "'");
        try {
          activity=CREATING_TORRENT;
          storage=new Storage(f,"http://" + ip + ":"+ port+ "/announce",slistener);
          storage.create();
          meta=storage.getMetaInfo();
        }
 catch (        IOException ioe2) {
          abort("Could not create torrent for '" + torrent + "'",ioe2);
        }
      }
    }
 else {
      abort("Cannot open '" + torrent + "'",ioe);
    }
  }
  log.log(Level.INFO,meta.toString());
}
