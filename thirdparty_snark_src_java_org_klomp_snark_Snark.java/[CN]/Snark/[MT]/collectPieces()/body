{
  if (storage == null) {
    try {
      activity=CHECKING_STORAGE;
      storage=new Storage(meta,slistener);
      storage.check();
    }
 catch (    IOException ioe) {
      abort("Could not create storage",ioe);
    }
  }
  activity=COLLECTING_PIECES;
  coordinator=new PeerCoordinator(id,meta,storage,clistener);
  HttpAcceptor httpacceptor;
  if (ip != null) {
    MetaInfo m=meta.reannounce("http://" + ip + ":"+ port+ "/announce");
    Tracker tracker=new Tracker(m);
    try {
      tracker.addPeer(meta.getHexInfoHash(),new PeerID(id,InetAddress.getByName(ip),port));
    }
 catch (    UnknownHostException oops) {
      abort("Could not start tracker for " + ip,oops);
    }
    httpacceptor=new HttpAcceptor(tracker);
  }
 else {
    httpacceptor=null;
  }
  PeerAcceptor peeracceptor=new PeerAcceptor(coordinator);
  acceptor=new ConnectionAcceptor(serversocket,httpacceptor,peeracceptor);
  acceptor.start();
  if (ip != null) {
    log.log(Level.INFO,"Torrent available on " + "http://" + ip + ":"+ port+ "/"+ meta.getHexInfoHash()+ ".torrent");
  }
  trackerclient=new TrackerClient(meta,coordinator,port);
  trackerclient.start();
  coordinator.setTracker(trackerclient);
}
