{
  ImageStoreImpl imgStore=(ImageStoreImpl)store;
  Map<String,String> details=_imageStoreDetailsDao.getDetails(imgStore.getId());
  return new S3TO(imgStore.getId(),imgStore.getUuid(),details.get(ApiConstants.S3_ACCESS_KEY),details.get(ApiConstants.S3_SECRET_KEY),details.get(ApiConstants.S3_END_POINT),details.get(ApiConstants.S3_BUCKET_NAME),details.get(ApiConstants.S3_HTTPS_FLAG) == null ? false : Boolean.parseBoolean(details.get(ApiConstants.S3_HTTPS_FLAG)),details.get(ApiConstants.S3_CONNECTION_TIMEOUT) == null ? null : Integer.valueOf(details.get(ApiConstants.S3_CONNECTION_TIMEOUT)),details.get(ApiConstants.S3_MAX_ERROR_RETRY) == null ? null : Integer.valueOf(details.get(ApiConstants.S3_MAX_ERROR_RETRY)),details.get(ApiConstants.S3_SOCKET_TIMEOUT) == null ? null : Integer.valueOf(details.get(ApiConstants.S3_SOCKET_TIMEOUT)),imgStore.getCreated(),_configDao.getValue(Config.S3EnableRRS.toString()) == null ? false : Boolean.parseBoolean(_configDao.getValue(Config.S3EnableRRS.toString())),_configDao.getValue(Config.S3EnableMultiPartUpload.toString()) == null ? true : Boolean.parseBoolean(_configDao.getValue(Config.S3EnableMultiPartUpload.toString())));
}
