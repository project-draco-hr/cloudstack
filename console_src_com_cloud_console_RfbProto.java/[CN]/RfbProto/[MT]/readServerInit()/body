{
  framebufferWidth=is.readUnsignedShort();
  framebufferHeight=is.readUnsignedShort();
  bitsPerPixel=is.readUnsignedByte();
  depth=is.readUnsignedByte();
  bigEndian=(is.readUnsignedByte() != 0);
  trueColour=(is.readUnsignedByte() != 0);
  redMax=is.readUnsignedShort();
  greenMax=is.readUnsignedShort();
  blueMax=is.readUnsignedShort();
  redShift=is.readUnsignedByte();
  greenShift=is.readUnsignedByte();
  blueShift=is.readUnsignedByte();
  byte[] pad=new byte[3];
  readFully(pad);
  int nameLength=is.readInt();
  byte[] name=new byte[nameLength];
  readFully(name);
  desktopName=new String(name);
  if (protocolTightVNC) {
    int nServerMessageTypes=is.readUnsignedShort();
    int nClientMessageTypes=is.readUnsignedShort();
    int nEncodingTypes=is.readUnsignedShort();
    is.readUnsignedShort();
    readCapabilityList(serverMsgCaps,nServerMessageTypes);
    readCapabilityList(clientMsgCaps,nClientMessageTypes);
    readCapabilityList(encodingCaps,nEncodingTypes);
  }
  if (s_logger.isInfoEnabled())   s_logger.info("Recv'd ServerInit w=" + framebufferWidth + " h="+ framebufferHeight+ " bits="+ bitsPerPixel+ " depth="+ depth+ " name="+ desktopName);
  inNormalProtocol=true;
}
