{
  String networkDomain=network.getNetworkDomain();
  String dhcpRange=getGuestDhcpRange(guestNic,network,_configMgr.getZone(network.getDataCenterId()));
  boolean result=true;
  Nic nic=_nicDao.findByInstanceIdAndNetworkId(network.getId(),router.getId());
  long guestVlanTag=Long.parseLong(nic.getBroadcastUri().getHost());
  String brd=NetUtils.long2Ip(NetUtils.ip2Long(guestNic.getIp4Address()) | ~NetUtils.ip2Long(guestNic.getNetmask()));
  Integer priority=null;
  if (isRedundant) {
    List<DomainRouterVO> routers=_routerDao.listByNetworkAndRole(network.getId(),Role.VIRTUAL_ROUTER);
    try {
      getUpdatedPriority(network,routers,_routerDao.findById(router.getId()));
    }
 catch (    InsufficientVirtualNetworkCapcityException e) {
      s_logger.error("Failed to get update priority!",e);
      throw new CloudRuntimeException("Failed to get update priority!");
    }
  }
  String defaultDns1=null;
  String defaultDns2=null;
  if (setupDns) {
    defaultDns1=guestNic.getDns1();
    defaultDns2=guestNic.getDns2();
  }
  NicProfile nicProfile=new NicProfile(nic,network,nic.getBroadcastUri(),nic.getIsolationUri(),_networkMgr.getNetworkRate(network.getId(),router.getId()),_networkMgr.isSecurityGroupSupportedInNetwork(network),_networkMgr.getNetworkTag(router.getHypervisorType(),network));
  SetupGuestNetworkCommand setupCmd=new SetupGuestNetworkCommand(dhcpRange,networkDomain,isRedundant,priority,defaultDns1,defaultDns2,add,_itMgr.toNicTO(nicProfile,router.getHypervisorType()));
  setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_IP,getRouterControlIp(router.getId()));
  setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP,getRouterIpInNetwork(network.getId(),router.getId()));
  setupCmd.setAccessDetail(NetworkElementCommand.GUEST_VLAN_TAG,String.valueOf(guestVlanTag));
  setupCmd.setAccessDetail(NetworkElementCommand.GUEST_NETWORK_GATEWAY,network.getGateway());
  setupCmd.setAccessDetail(NetworkElementCommand.GUEST_BRIDGE,brd);
  setupCmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME,router.getInstanceName());
  Commands cmds=new Commands(OnError.Stop);
  cmds.addCommand("setupguestnetwork",setupCmd);
  sendCommandsToRouter(router,cmds);
  SetupGuestNetworkAnswer setupAnswer=cmds.getAnswer(SetupGuestNetworkAnswer.class);
  String setup=add ? "set" : "destroy";
  if (!(setupAnswer != null && setupAnswer.getResult())) {
    s_logger.warn("Unable to " + setup + " guest network on router "+ router);
    result=false;
  }
  return result;
}
