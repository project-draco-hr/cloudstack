{
  LinkedHashMap<Network,NicProfile> networks=new LinkedHashMap<Network,NicProfile>(4);
  TreeSet<String> publicVlans=new TreeSet<String>();
  publicVlans.add(sourceNatIp.second().getVlanTag());
  networks=super.createRouterNetworks(owner,isRedundant,plan,null,sourceNatIp);
  List<PrivateGateway> privateGateways=_vpcMgr.getVpcPrivateGateways(vpcId);
  if (privateGateways != null && !privateGateways.isEmpty()) {
    for (    PrivateGateway privateGateway : privateGateways) {
      NicProfile privateNic=createPrivateNicProfileForGateway(privateGateway);
      Network privateNetwork=_networkModel.getNetwork(privateGateway.getNetworkId());
      networks.put(privateNetwork,privateNic);
    }
  }
  List<? extends Network> guestNetworks=_vpcMgr.getVpcNetworks(vpcId);
  for (  Network guestNetwork : guestNetworks) {
    if (guestNetwork.getState() == Network.State.Implemented) {
      NicProfile guestNic=createGuestNicProfileForVpcRouter(guestNetwork);
      networks.put(guestNetwork,guestNic);
    }
  }
  List<IPAddressVO> ips=_ipAddressDao.listByAssociatedVpc(vpcId,false);
  for (  IPAddressVO ip : ips) {
    PublicIp publicIp=PublicIp.createFromAddrAndVlan(ip,_vlanDao.findById(ip.getVlanId()));
    if ((ip.getState() == IpAddress.State.Allocated || ip.getState() == IpAddress.State.Allocating) && _vpcMgr.isIpAllocatedToVpc(ip) && !publicVlans.contains(publicIp.getVlanTag())) {
      s_logger.debug("Allocating nic for router in vlan " + publicIp.getVlanTag());
      NicProfile publicNic=new NicProfile();
      publicNic.setDefaultNic(false);
      publicNic.setIp4Address(publicIp.getAddress().addr());
      publicNic.setGateway(publicIp.getGateway());
      publicNic.setNetmask(publicIp.getNetmask());
      publicNic.setMacAddress(publicIp.getMacAddress());
      publicNic.setBroadcastType(BroadcastDomainType.Vlan);
      publicNic.setBroadcastUri(BroadcastDomainType.Vlan.toUri(publicIp.getVlanTag()));
      publicNic.setIsolationUri(IsolationType.Vlan.toUri(publicIp.getVlanTag()));
      NetworkOffering publicOffering=_networkModel.getSystemAccountNetworkOfferings(NetworkOffering.SystemPublicNetwork).get(0);
      List<? extends Network> publicNetworks=_networkMgr.setupNetwork(_systemAcct,publicOffering,plan,null,null,false);
      networks.put(publicNetworks.get(0),publicNic);
      publicVlans.add(publicIp.getVlanTag());
    }
  }
  return networks;
}
