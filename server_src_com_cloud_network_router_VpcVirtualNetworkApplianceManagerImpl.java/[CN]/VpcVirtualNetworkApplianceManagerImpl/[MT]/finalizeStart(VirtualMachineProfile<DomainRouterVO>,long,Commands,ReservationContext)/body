{
  if (!super.finalizeStart(profile,hostId,cmds,context)) {
    return false;
  }
 else   if (profile.getVirtualMachine().getVpcId() == null) {
    return true;
  }
  DomainRouterVO router=profile.getVirtualMachine();
  Map<Nic,Network> guestNics=new HashMap<Nic,Network>();
  Map<Nic,Network> publicNics=new HashMap<Nic,Network>();
  List<? extends Nic> routerNics=_nicDao.listByVmId(profile.getId());
  for (  Nic routerNic : routerNics) {
    Network network=_networkMgr.getNetwork(routerNic.getNetworkId());
    if (network.getTrafficType() == TrafficType.Guest) {
      guestNics.put(routerNic,network);
    }
 else     if (network.getTrafficType() == TrafficType.Public) {
      publicNics.put(routerNic,network);
    }
  }
  try {
    for (    Nic publicNic : publicNics.keySet()) {
      Network publicNtwk=publicNics.get(publicNic);
      IPAddressVO userIp=_ipAddressDao.findByIpAndSourceNetworkId(publicNtwk.getId(),publicNic.getIp4Address());
      PublicIp publicIp=new PublicIp(userIp,_vlanDao.findById(userIp.getVlanId()),NetUtils.createSequenceBasedMacAddress(userIp.getMacAddress()));
      if (!addPublicIpToVpc(router,publicNtwk,publicIp)) {
        s_logger.warn("Failed to add router router " + router + " to public network "+ publicNtwk);
        return false;
      }
    }
    for (    Nic guestNic : guestNics.keySet()) {
      Network guestNtwk=guestNics.get(guestNic);
      boolean setupDns=_networkMgr.setupDns(guestNtwk,Provider.VPCVirtualRouter);
      if (!addVpcRouterToGuestNetwork(router,guestNtwk,false,setupDns)) {
        s_logger.warn("Failed to add router router " + router + " to guest network "+ guestNtwk);
        return false;
      }
    }
  }
 catch (  Exception ex) {
    s_logger.warn("Failed to add router " + router + " to network due to exception ",ex);
    return false;
  }
  return true;
}
