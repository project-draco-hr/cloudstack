{
  final DomainRouterVO domainRouterVO=_routerDao.findById(profile.getId());
  final Long vpcId=domainRouterVO.getVpcId();
  if (vpcId != null) {
    if (domainRouterVO.getState() == State.Starting || domainRouterVO.getState() == State.Running) {
      String defaultDns1=null;
      String defaultDns2=null;
      final Iterator<NicProfile> it=profile.getNics().iterator();
      while (it.hasNext()) {
        final NicProfile nic=it.next();
        if (nic.getTrafficType() == TrafficType.Public || nic.getTrafficType() == TrafficType.Guest) {
          if (nic.getTrafficType() == TrafficType.Public) {
            defaultDns1=nic.getDns1();
            defaultDns2=nic.getDns2();
          }
          s_logger.debug("Removing nic " + nic + " of type "+ nic.getTrafficType()+ " from the nics passed on vm start. "+ "The nic will be plugged later");
          it.remove();
        }
      }
      final StringBuilder buf=profile.getBootArgsBuilder();
      final Vpc vpc=_entityMgr.findById(Vpc.class,vpcId);
      buf.append(" vpccidr=" + vpc.getCidr() + " domain="+ vpc.getNetworkDomain());
      buf.append(" dns1=").append(defaultDns1);
      if (defaultDns2 != null) {
        buf.append(" dns2=").append(defaultDns2);
      }
    }
  }
  return super.finalizeVirtualMachineProfile(profile,dest,context);
}
