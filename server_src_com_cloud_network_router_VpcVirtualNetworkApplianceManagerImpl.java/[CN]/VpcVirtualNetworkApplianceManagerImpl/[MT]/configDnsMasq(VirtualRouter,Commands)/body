{
  if (s_logger.isTraceEnabled()) {
    s_logger.trace("configDnsMasq(" + router.getHostName() + ", "+ cmds+ ")");
  }
  VpcVO vpc=_vpcDao.findById(router.getVpcId());
  DataCenterVO dcVo=_dcDao.findById(router.getDataCenterId());
  List<DnsmasqTO> ipList=new ArrayList<DnsmasqTO>();
  String cidr=vpc.getCidr();
  String[] cidrPair=cidr.split("\\/");
  String cidrAddress=cidrPair[0];
  long cidrSize=Long.parseLong(cidrPair[1]);
  String startIpOfSubnet=NetUtils.getIpRangeStartIpFromCidr(cidrAddress,cidrSize);
  DnsmasqTO dnsmasqTO=new DnsmasqTO(router.getPrivateIpAddress(),router.getPublicIpAddress(),NetUtils.getCidrNetmask(cidrSize),startIpOfSubnet);
  ipList.add(dnsmasqTO);
  DnsMasqConfigCommand dnsMasqConfigCmd=new DnsMasqConfigCommand(vpc.getNetworkDomain(),ipList,dcVo.getDns1(),dcVo.getDns2(),dcVo.getInternalDns1(),dcVo.getInternalDns2());
  dnsMasqConfigCmd.setAccessDetail(NetworkElementCommand.ROUTER_IP,getRouterControlIp(router.getId()));
  dnsMasqConfigCmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME,router.getInstanceName());
  dnsMasqConfigCmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP,router.getPublicIpAddress());
  dnsMasqConfigCmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE,dcVo.getNetworkType().toString());
  cmds.addCommand("dnsMasqConfig",dnsMasqConfigCmd);
}
