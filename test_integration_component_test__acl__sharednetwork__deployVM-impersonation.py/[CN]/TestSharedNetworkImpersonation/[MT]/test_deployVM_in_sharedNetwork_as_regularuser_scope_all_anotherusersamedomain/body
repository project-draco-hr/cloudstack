@attr(tags=['advanced'], required_hardware='false')
def test_deployVM_in_sharedNetwork_as_regularuser_scope_all_anotherusersamedomain(self):
    '\n\tValiate that regular user is able NOT able to deploy a VM for another user in the same  domain in a shared network with scope=all\n\t'
    self.apiclient.connection.apiKey = self.user_d11a_apikey
    self.apiclient.connection.securityKey = self.user_d11a_secretkey
    self.vmdata['name'] = (self.acldata['vmD11A']['name'] + '-shared-scope-all-domain-admin')
    self.vmdata['displayname'] = (self.acldata['vmD11A']['displayname'] + '-shared-scope-all-domain-admin')
    try:
        vm_d1a = VirtualMachine.create(self.apiclient, self.vmdata, zoneid=self.zone.id, serviceofferingid=self.service_offering.id, templateid=self.template.id, networkids=self.shared_network_all.id, accountid=self.account_d12a.name, domainid=self.account_d12a.domainid)
        self.fail('Regular user is allowed to deploy a VM for another user in the same domain in a shared network with scope=all')
    except Exception as e:
        self.debug(('When a regular user deploys a VM for another user in the same domain in a shared network with scope=all %s' % e))
        if (not CloudstackAclException.verifyMsginException(e, CloudstackAclException.NO_PERMISSION_TO_OPERATE_ACCOUNT)):
            self.fail('Error message validation failed when Regular user tries to deploy a VM for another user in the same domain in a shared network with scope=all')
