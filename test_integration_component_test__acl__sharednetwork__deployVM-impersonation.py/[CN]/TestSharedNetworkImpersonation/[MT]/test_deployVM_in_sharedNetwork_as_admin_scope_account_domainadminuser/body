@attr(tags=['advanced'], required_hardware='false')
def test_deployVM_in_sharedNetwork_as_admin_scope_account_domainadminuser(self):
    '\n\tValiate that ROOT admin is NOT able to deploy a VM for admin user in the same domain but in a different account in a shared network with scope=account\n\n\t'
    self.apiclient.connection.apiKey = self.default_apikey
    self.apiclient.connection.securityKey = self.default_secretkey
    self.vmdata['name'] = (self.acldata['vmD111']['name'] + '-shared-scope-domain-withsubdomainaccess-root-admin')
    self.vmdata['displayname'] = (self.acldata['vmD111']['displayname'] + '-shared-scope-domain-withsubdomainaccess-root-admin')
    try:
        vm = VirtualMachine.create(self.apiclient, self.vmdata, zoneid=self.zone.id, serviceofferingid=self.service_offering.id, templateid=self.template.id, networkids=self.shared_network_account_d111a.id, accountid=self.account_d111.name, domainid=self.account_d111.domainid)
        self.fail('ROOT admin is able to deploy a VM for admin user in the same domain but in a different account in a shared network with scope=account')
    except Exception as e:
        self.debug(('When a user from same domain but different account deploys a VM in a shared network with scope=account %s' % e))
        if (not CloudstackAclException.verifyMsginException(e, CloudstackAclException.UNABLE_TO_USE_NETWORK)):
            self.fail('Error message validation failed when ROOT admin tries to deploy a VM for admin user in the same domain but in a different account in a shared network with scope=account')
