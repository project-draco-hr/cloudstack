@attr(tags=['advanced', 'basic', 'selfservice'])
def test_20_update_vm_displayname_group(self):
    "\n        @Desc: Test to verify Update VM details\n        @Steps:\n        Step1: List all the VM's for a user\n        Step2: Deploy a VM with all parameters\n        Step3: Listing all the VM's again for the user\n        Step4: Verifying that list size is increased by 1\n        Step5: Updating VM details - displayname, group\n        Step6: Listing the VM deployed in step 2 by ID\n        Step7: Verifying that displayname, group details of the VM are updated\n        "
    list_vms_before = VirtualMachine.list(self.userapiclient, listall=self.services['listall'])
    self.assertIsNone(list_vms_before, 'Virtual Machine already exists for newly created user')
    self.services['virtual_machine']['keyboard'] = 'us'
    vm_created = VirtualMachine.create(self.userapiclient, self.services['virtual_machine'], accountid=self.account.name, domainid=self.account.domainid, serviceofferingid=self.service_offering.id, group='groupName')
    self.assertIsNotNone(vm_created, 'VM creation failed')
    self.cleanup.append(vm_created)
    self.assertEquals(self.services['virtual_machine']['displayname'], vm_created.displayname, 'Display name of VM is not as expected')
    self.assertEquals('groupName', vm_created.group, 'Group of VM is not as expected')
    list_vms_after = VirtualMachine.list(self.userapiclient, listall=self.services['listall'])
    status = validateList(list_vms_after)
    self.assertEquals(PASS, status[0], 'VM creation failed')
    self.assertEquals(1, len(list_vms_after), 'VM list count is not matching')
    vm_created.update(self.userapiclient, displayname='DisplayName', group='Group', haenable=False)
    list_vm = VirtualMachine.list(self.userapiclient, id=vm_created.id)
    status = validateList(list_vm)
    self.assertEquals(PASS, status[0], 'Listing of VM by Id failed')
    self.assertEquals(1, len(list_vm), 'Count of List VM by Id is not matching')
    self.assertEquals('DisplayName', list_vm[0].displayname, 'Displayname of VM is not updated')
    self.assertEquals('Group', list_vm[0].group, 'Group of VM is not updated')
    return
