{
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      TransactionLegacy txn=TransactionLegacy.currentTxn();
      try (PreparedStatement pstmt=txn.prepareAutoCloseStatement("DELETE FROM vm_work_job WHERE id IN (SELECT id FROM async_job WHERE (job_dispatcher='VmWorkJobPlaceHolder' OR job_dispatcher='VmWorkJobDispatcher') AND job_init_msid=?)")){
        pstmt.setLong(1,msid);
        pstmt.execute();
      }
 catch (      SQLException e) {
        logger.info("[ignored]" + "SQL failed to delete vm work job: " + e.getLocalizedMessage());
      }
catch (      Throwable e) {
        logger.info("[ignored]" + "caught an error during delete vm work job: " + e.getLocalizedMessage());
      }
      try (PreparedStatement pstmt=txn.prepareAutoCloseStatement("DELETE FROM async_job WHERE (job_dispatcher='VmWorkJobPlaceHolder' OR job_dispatcher='VmWorkJobDispatcher') AND job_init_msid=?")){
        pstmt.setLong(1,msid);
        pstmt.execute();
      }
 catch (      SQLException e) {
        logger.info("[ignored]" + "SQL failed to delete async job: " + e.getLocalizedMessage());
      }
catch (      Throwable e) {
        logger.info("[ignored]" + "caught an error during delete async job: " + e.getLocalizedMessage());
      }
    }
  }
);
}
