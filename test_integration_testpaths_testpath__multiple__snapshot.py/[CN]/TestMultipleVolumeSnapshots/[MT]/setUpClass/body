@classmethod
def setUpClass(cls):
    testClient = super(TestMultipleVolumeSnapshots, cls).getClsTestClient()
    cls.apiclient = testClient.getApiClient()
    cls.testdata = testClient.getParsedTestDataConfig()
    cls.domain = get_domain(cls.apiclient)
    cls.zone = get_zone(cls.apiclient, testClient.getZoneForTests())
    cls.hypervisor = cls.testClient.getHypervisorInfo()
    cls.template = get_template(cls.apiclient, cls.zone.id, cls.testdata['ostype'])
    cls._cleanup = []
    cls.skiptest = False
    clus_list = list_clusters(cls.apiclient)
    if ((cls.hypervisor.lower() not in ['vmware']) or (len(clus_list) < 2)):
        cls.skiptest = True
        return
    try:
        cls.account = Account.create(cls.apiclient, cls.testdata['account'], domainid=cls.domain.id)
        cls.userapiclient = testClient.getUserApiClient(UserName=cls.account.name, DomainName=cls.account.domain)
        cls.service_offering_zwps = ServiceOffering.create(cls.apiclient, cls.testdata['service_offering'], tags=ZONETAG1)
        cls.disk_offering_zwps = DiskOffering.create(cls.apiclient, cls.testdata['disk_offering'], tags=ZONETAG1)
        cls._cleanup = [cls.account, cls.service_offering_zwps, cls.disk_offering_zwps]
    except Exception as e:
        cls.tearDownClass()
        raise e
    return
