{
  final S3TO s3=cmd.getS3();
  final Long accountId=cmd.getAccountId();
  final Long templateId=cmd.getTemplateId();
  try {
    final String templatePath=determineStorageTemplatePath(cmd.getStoragePath(),accountId,templateId);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Found template id " + templateId + " account id "+ accountId+ " from directory "+ templatePath+ " to upload to S3.");
    }
    if (!_storage.isDirectory(templatePath)) {
      final String errMsg=format("S3 Sync Failure: Directory %1$s" + "for template id %2$s does not exist.",templatePath,templateId);
      s_logger.error(errMsg);
      return new Answer(cmd,false,errMsg);
    }
    if (!_storage.isFile(templatePath + "/template.properties")) {
      final String errMsg=format("S3 Sync Failure: Template id " + "%1$s does not exist on the file system.",templatePath);
      s_logger.error(errMsg);
      return new Answer(cmd,false,errMsg);
    }
    if (s_logger.isDebugEnabled()) {
      s_logger.debug(format("Pushing template id %1$s from %2$s to S3...",templateId,templatePath));
    }
    final String bucket=s3.getBucketName();
    putDirectory(s3,bucket,_storage.getFile(templatePath),new FilenameFilter(){
      @Override public boolean accept(      final File directory,      final String fileName){
        File fileToUpload=new File(directory.getAbsolutePath() + "/" + fileName);
        return !fileName.startsWith(".") && !fileToUpload.isDirectory();
      }
    }
,new ObjectNamingStrategy(){
      @Override public String determineKey(      final File file){
        s_logger.debug(String.format("Determining key using account id %1$s and template id %2$s",accountId,templateId));
        return join(S3Utils.SEPARATOR,determineS3TemplateDirectory(accountId,templateId),file.getName());
      }
    }
);
    return new Answer(cmd,true,format("Uploaded the contents of directory %1$s for template id %2$s to S3 bucket %3$s",templatePath,templateId,bucket));
  }
 catch (  Exception e) {
    final String errMsg=format("Failed to upload template id %1$s",templateId);
    s_logger.error(errMsg,e);
    return new Answer(cmd,false,errMsg);
  }
}
