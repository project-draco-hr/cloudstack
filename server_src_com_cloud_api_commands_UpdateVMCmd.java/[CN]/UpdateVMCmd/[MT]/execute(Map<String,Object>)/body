{
  Long userId=(Long)params.get(BaseCmd.Properties.USER_ID.getName());
  Account account=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  Long vmId=(Long)params.get(BaseCmd.Properties.ID.getName());
  String group=(String)params.get(BaseCmd.Properties.GROUP.getName());
  String displayName=(String)params.get(BaseCmd.Properties.DISPLAY_NAME.getName());
  Boolean enable=(Boolean)params.get(BaseCmd.Properties.HA_ENABLE.getName());
  UserVmVO vmInstance=null;
  if (userId == null) {
    userId=Long.valueOf(1);
  }
  if (group != null && group.isEmpty())   group=null;
  try {
    vmInstance=getManagementServer().findUserVMInstanceById(vmId.longValue());
  }
 catch (  Exception ex1) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"unable to find virtual machine by id");
  }
  if (vmInstance == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find virtual machine with id " + vmId);
  }
  if (account != null) {
    if (!isAdmin(account.getType()) && (account.getId() != vmInstance.getAccountId())) {
      throw new ServerApiException(BaseCmd.VM_INVALID_PARAM_ERROR,"unable to find a virtual machine with id " + vmId + " for this account");
    }
 else     if (!getManagementServer().isChildDomain(account.getDomainId(),vmInstance.getDomainId())) {
      throw new ServerApiException(BaseCmd.PARAM_ERROR,"Invalid virtual machine id (" + vmId + ") given, unable to update virtual machine.");
    }
  }
  if (displayName == null) {
    displayName=vmInstance.getDisplayName();
  }
  if (enable == null) {
    enable=vmInstance.isHaEnabled();
  }
  long accountId=vmInstance.getAccountId();
  try {
    getManagementServer().updateVirtualMachine(vmId,displayName,group,enable,userId,accountId);
  }
 catch (  Exception ex) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to update virtual machine" + vmId + ":  internal error.");
  }
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  returnValues.add(new Pair<String,Object>(BaseCmd.Properties.SUCCESS.getName(),Boolean.TRUE));
  return returnValues;
}
