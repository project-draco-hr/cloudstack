{
  Long zoneId=cmd.getZoneId();
  validateZone(zoneId);
  validateZoneWithResources(zoneId,"remove VMware datacenter to zone");
  VmwareDatacenterVO vmwareDatacenter;
  String vmwareDcName;
  String vCenterHost;
  String userName;
  String password;
  DatacenterMO dcMo=null;
  final VmwareDatacenterZoneMapVO vmwareDcZoneMap=_vmwareDcZoneMapDao.findByZoneId(zoneId);
  if (vmwareDcZoneMap == null) {
    throw new CloudRuntimeException("Zone " + zoneId + " is not associated with any VMware datacenter.");
  }
  final long vmwareDcId=vmwareDcZoneMap.getVmwareDcId();
  vmwareDatacenter=_vmwareDcDao.findById(vmwareDcId);
  vmwareDcName=vmwareDatacenter.getVmwareDatacenterName();
  vCenterHost=vmwareDatacenter.getVcenterHost();
  userName=vmwareDatacenter.getUser();
  password=vmwareDatacenter.getPassword();
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      _vmwareDcDao.remove(vmwareDcId);
      _vmwareDcZoneMapDao.remove(vmwareDcZoneMap.getId());
    }
  }
);
  VmwareContext context=null;
  try {
    context=VmwareContextFactory.create(vCenterHost,userName,password);
    try {
      dcMo=new DatacenterMO(context,vmwareDcName);
    }
 catch (    Throwable t) {
      String msg="Unable to find DC " + vmwareDcName + " in vCenter "+ vCenterHost;
      logger.error(msg);
      throw new DiscoveryException(msg);
    }
    assert(dcMo != null);
    dcMo.setCustomFieldValue(CustomFieldConstants.CLOUD_ZONE,"false");
    logger.info("Sucessfully reset custom field property cloud.zone over DC " + vmwareDcName);
  }
 catch (  Exception e) {
    String msg="Unable to reset custom field property cloud.zone over DC " + vmwareDcName + " due to : "+ VmwareHelper.getExceptionMessage(e);
    logger.error(msg);
    throw new CloudRuntimeException(msg);
  }
 finally {
    if (context != null) {
      context.close();
    }
    context=null;
  }
  return true;
}
