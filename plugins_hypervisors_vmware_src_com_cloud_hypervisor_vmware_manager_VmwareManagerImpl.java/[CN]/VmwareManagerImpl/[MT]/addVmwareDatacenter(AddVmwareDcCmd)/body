{
  VmwareDatacenterVO vmwareDc=null;
  Long zoneId=cmd.getZoneId();
  String userName=cmd.getUsername();
  String password=cmd.getPassword();
  String vCenterHost=cmd.getVcenter();
  String vmwareDcName=cmd.getName();
  if (userName == null) {
    throw new InvalidParameterValueException("Missing or invalid parameter username.");
  }
  if (password == null) {
    throw new InvalidParameterValueException("Missing or invalid parameter username.");
  }
  if (vmwareDcName == null) {
    throw new InvalidParameterValueException("Missing or invalid parameter name. Please provide valid VMware datacenter name.");
  }
  if (vCenterHost == null) {
    throw new InvalidParameterValueException("Missing or invalid parameter name. " + "Please provide valid VMware vCenter server's IP address or fully qualified domain name.");
  }
  if (zoneId == null) {
    throw new InvalidParameterValueException("Missing or invalid parameter name. " + "Please provide valid zone id.");
  }
  validateZone(zoneId);
  VmwareDatacenterZoneMapVO vmwareDcZoneMap=_vmwareDcZoneMapDao.findByZoneId(zoneId);
  if (vmwareDcZoneMap != null) {
    Long associatedVmwareDcId=vmwareDcZoneMap.getVmwareDcId();
    VmwareDatacenterVO associatedVmwareDc=_vmwareDcDao.findById(associatedVmwareDcId);
    if (associatedVmwareDc.getVcenterHost().equalsIgnoreCase(vCenterHost) && associatedVmwareDc.getVmwareDatacenterName().equalsIgnoreCase(vmwareDcName)) {
      s_logger.info("Ignoring API call addVmwareDc, because VMware DC " + vCenterHost + "/"+ vmwareDcName+ " is already associated with specified zone with id "+ zoneId);
      return associatedVmwareDc;
    }
 else {
      throw new CloudRuntimeException("Zone " + zoneId + " is already associated with a VMware datacenter. "+ "Only 1 VMware DC can be associated with a zone.");
    }
  }
  validateZoneWithResources(zoneId,"add VMware datacenter to zone");
  vmwareDc=_vmwareDcDao.getVmwareDatacenterByGuid(vmwareDcName + "@" + vCenterHost);
  if (vmwareDc != null) {
    throw new ResourceInUseException("This DC is already part of other CloudStack zone(s). Cannot add this DC to more zones.");
  }
  VmwareContext context=null;
  DatacenterMO dcMo=null;
  String dcCustomFieldValue;
  boolean addDcCustomFieldDef=false;
  boolean dcInUse=false;
  String guid;
  ManagedObjectReference dcMor;
  try {
    context=VmwareContextFactory.create(vCenterHost,userName,password);
    dcMo=new DatacenterMO(context,vmwareDcName);
    dcMor=dcMo.getMor();
    if (dcMor == null) {
      String msg="Unable to find VMware DC " + vmwareDcName + " in vCenter "+ vCenterHost+ ". ";
      s_logger.error(msg);
      throw new InvalidParameterValueException(msg);
    }
    guid=vmwareDcName + "@" + vCenterHost;
    dcCustomFieldValue=dcMo.getCustomFieldValue(CustomFieldConstants.CLOUD_ZONE);
    if (dcCustomFieldValue == null) {
      addDcCustomFieldDef=true;
    }
    dcInUse=Boolean.parseBoolean(dcCustomFieldValue);
    if (dcInUse) {
      throw new ResourceInUseException("This DC is being managed by other CloudStack deployment. Cannot add this DC to zone.");
    }
    vmwareDc=new VmwareDatacenterVO(guid,vmwareDcName,vCenterHost,userName,password);
    Transaction txn=Transaction.currentTxn();
    try {
      txn.start();
      vmwareDc=_vmwareDcDao.persist(vmwareDc);
      txn.commit();
    }
 catch (    Exception e) {
      txn.rollback();
      s_logger.error("Failed to persist VMware datacenter details to database. Exception: " + e.getMessage());
      throw new CloudRuntimeException(e.getMessage());
    }
    vmwareDcZoneMap=new VmwareDatacenterZoneMapVO(zoneId,vmwareDc.getId());
    txn=Transaction.currentTxn();
    try {
      txn.start();
      vmwareDcZoneMap=_vmwareDcZoneMapDao.persist(vmwareDcZoneMap);
      txn.commit();
    }
 catch (    Exception e) {
      txn.rollback();
      s_logger.error("Failed to associate VMware datacenter with zone " + zoneId + ". Exception: "+ e.getMessage());
      _vmwareDcDao.remove(vmwareDcZoneMap.getId());
      throw new CloudRuntimeException(e.getMessage());
    }
    if (addDcCustomFieldDef) {
      dcMo.ensureCustomFieldDef(CustomFieldConstants.CLOUD_ZONE);
    }
    dcMo.setCustomFieldValue(CustomFieldConstants.CLOUD_ZONE,"true");
  }
 catch (  Throwable e) {
    String msg="Failed to add VMware DC to zone ";
    if (e instanceof RemoteException) {
      msg="Encountered remote exception at vCenter. " + VmwareHelper.getExceptionMessage(e);
    }
 else {
      msg+="due to : " + e.getMessage();
    }
    throw new CloudRuntimeException(msg);
  }
 finally {
    if (context != null) {
      context.close();
    }
    context=null;
  }
  return vmwareDc;
}
