@attr(tags=['advanced', 'basic', 'smoke'], required_hardware='true')
def test_01_test_vm_volume_snapshot(self):
    '\n        @Desc: Test that Volume snapshot for root volume is allowed\n        when VM snapshot is present for the VM\n        @Steps:\n        1: Deploy a VM and create a VM snapshot for VM\n        2: Try to create snapshot for the root volume of the VM,\n        It should not fail\n        '
    virtual_machine = VirtualMachine.create(self.apiclient, self.services['virtual_machine'], accountid=self.account.name, domainid=self.account.domainid, serviceofferingid=self.service_offering.id)
    VmSnapshot.create(self.apiclient, virtual_machine.id)
    volumes = Volume.list(self.apiclient, virtualmachineid=virtual_machine.id, type='ROOT', listall=True)
    self.assertEqual(validateList(volumes)[0], PASS, 'Failed to get root volume of the VM')
    snapshot = Snapshot.create(self.apiclient, volumes[0].id, account=self.account.name, domainid=self.account.domainid)
    self.debug(('Snapshot created: ID - %s' % snapshot.id))
    snapshots = list_snapshots(self.apiclient, id=snapshot.id)
    self.assertEqual(validateList(snapshots)[0], PASS, 'Invalid snapshot list')
    self.assertEqual(snapshots[0].id, snapshot.id, 'Check resource id in list resources call')
    return
