@attr(tags=['advanced'], required_hardware='false')
def test_13_public_ips_limit(self):
    'Dedicate public IP range to an account having lesser public\n           ip limit than range\n\n        # Validate the following:\n        # 1. Create a user domain and account\n        # 2. Set the public IP limit of account to 1\n        # 3. Create a Public IP range of 2 IPs\n        # 4. Try to dedicate the range to account\n        # 5. Operation should fail as it exceeds the account limit\n        '
    user_domain = Domain.create(self.apiclient, services=self.testdata['domain'], parentdomainid=self.domain.id)
    self.cleanup.append(user_domain)
    account1 = Account.create(self.apiclient, self.testdata['account'], domainid=user_domain.id)
    self.cleanup.insert((-1), account1)
    Resources.updateLimit(self.apiclient, resourcetype=1, max=1, account=account1.name, domainid=account1.domainid)
    public_ip_range = PublicIpRange.create(self.apiclient, self.testdata['publiciprange'])
    self.cleanup.append(public_ip_range)
    with self.assertRaises(Exception):
        PublicIpRange.dedicate(self.apiclient, public_ip_range.vlan.id, account=account1.name, domainid=account1.domainid)
    return
