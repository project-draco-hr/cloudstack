{
  createCanvas(0,0);
  int delay=0;
  while (!dropMe) {
    try {
      status=STATUS_CONNECTING;
      connectAndAuthenticate();
      delay=0;
      status=STATUS_INITIALIZING;
      doProtocolInitialisation();
      vc.rfb=rfb;
      vc.setPixelFormat();
      vc.rfb.writeFramebufferUpdateRequest(0,0,vc.rfb.framebufferWidth,vc.rfb.framebufferHeight,false);
      status=STATUS_NORMAL_OPERATION;
      vc.processNormalProtocol();
    }
 catch (    AuthenticationException e) {
      status=STATUS_AUTHENTICATION_FAILURE;
      String msg=e.getMessage();
      Logger.log(Logger.INFO,msg);
    }
catch (    Exception e) {
      status=STATUS_ERROR;
      Logger.log(Logger.INFO,e.toString());
    }
 finally {
      String oldName=Thread.currentThread().getName();
      encodingsSaved=null;
      nEncodingsSaved=0;
synchronized (this) {
        if (rfb != null) {
          rfb.close();
        }
      }
    }
    if (dropMe) {
      break;
    }
    if (status == STATUS_AUTHENTICATION_FAILURE) {
      break;
    }
 else {
      Logger.log(Logger.INFO,"Exception caught, retrying in " + delay + "ms");
      try {
        Thread.sleep(delay);
      }
 catch (      InterruptedException e) {
      }
      delay=(int)((float)(delay + 700) * 1.5);
      if (delay > 3000) {
        Logger.log(Logger.INFO,"Delay value gets too large " + delay + ", stop retrying");
        break;
      }
    }
  }
  Logger.log(Logger.INFO,"RFB thread terminating");
}
