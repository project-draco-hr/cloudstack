{
  String responseName=null;
  String cmdClassName=null;
  String responseText=null;
  try {
    if (errorCode == BaseCmd.UNSUPPORTED_ACTION_ERROR || apiCommandParams == null || apiCommandParams.isEmpty()) {
      responseName="errorresponse";
    }
 else {
      Object cmdObj=apiCommandParams.get("command");
      if (cmdObj != null) {
        String cmdName=((String[])cmdObj)[0];
        cmdClassName=_apiCommands.getProperty(cmdName);
        if (cmdClassName != null) {
          Class<?> claz=Class.forName(cmdClassName);
          responseName=((BaseCmd)claz.newInstance()).getCommandName();
        }
 else {
          responseName="errorresponse";
        }
      }
    }
    ExceptionResponse apiResponse=new ExceptionResponse();
    apiResponse.setErrorCode(errorCode);
    apiResponse.setErrorText(errorText);
    apiResponse.setResponseName(responseName);
    if (ex != null) {
      if (ex instanceof ServerApiException || ex instanceof PermissionDeniedException || ex instanceof InvalidParameterValueException) {
        if (ex instanceof ServerApiException) {
          ServerApiException ref=(ServerApiException)ex;
          ArrayList<IdentityProxy> idList=ref.getIdProxyList();
          if (idList != null) {
            for (int i=0; i < idList.size(); i++) {
              IdentityProxy id=idList.get(i);
              apiResponse.addProxyObject(id.getTableName(),id.getValue(),id.getidFieldName());
            }
          }
        }
 else         if (ex instanceof PermissionDeniedException) {
          PermissionDeniedException ref=(PermissionDeniedException)ex;
          ArrayList<IdentityProxy> idList=ref.getIdProxyList();
          if (idList != null) {
            for (int i=0; i < idList.size(); i++) {
              IdentityProxy id=idList.get(i);
              apiResponse.addProxyObject(id.getTableName(),id.getValue(),id.getidFieldName());
            }
          }
        }
 else         if (ex instanceof InvalidParameterValueException) {
          InvalidParameterValueException ref=(InvalidParameterValueException)ex;
          ArrayList<IdentityProxy> idList=ref.getIdProxyList();
          if (idList != null) {
            for (int i=0; i < idList.size(); i++) {
              IdentityProxy id=idList.get(i);
              apiResponse.addProxyObject(id.getTableName(),id.getValue(),id.getidFieldName());
            }
          }
        }
      }
    }
    SerializationContext.current().setUuidTranslation(true);
    responseText=ApiResponseSerializer.toSerializedString(apiResponse,responseType);
  }
 catch (  Exception e) {
    s_logger.error("Exception responding to http request",e);
  }
  return responseText;
}
