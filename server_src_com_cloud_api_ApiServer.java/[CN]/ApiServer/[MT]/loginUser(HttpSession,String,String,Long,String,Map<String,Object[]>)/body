{
  if (domainId == null) {
    if (domainPath == null || domainPath.trim().length() == 0) {
      domainId=DomainVO.ROOT_DOMAIN;
    }
 else {
      Domain domainObj=_ms.findDomainByPath(domainPath);
      if (domainObj != null) {
        domainId=domainObj.getId();
      }
 else {
        throw new CloudAuthenticationException("Unable to find the domain from the path " + domainPath);
      }
    }
  }
  UserAccount userAcct=_ms.authenticateUser(username,password,domainId,requestParameters);
  if (userAcct != null) {
    String timezone=userAcct.getTimezone();
    float offsetInHrs=0f;
    if (timezone != null) {
      TimeZone t=TimeZone.getTimeZone(timezone);
      s_logger.info("Current user logged in under " + timezone + " timezone");
      java.util.Date date=new java.util.Date();
      long longDate=date.getTime();
      float offsetInMs=(t.getOffset(longDate));
      offsetInHrs=offsetInMs / (1000 * 60 * 60);
      s_logger.info("Timezone offset from UTC is: " + offsetInHrs);
    }
    Account account=_ms.findAccountById(userAcct.getAccountId());
    String hypervisorType=_ms.getConfigurationValue("hypervisor.type");
    if (hypervisorType == null)     hypervisorType="kvm";
    String directAttachNetworkGroupsEnabled=_ms.getConfigurationValue("direct.attach.network.groups.enabled");
    if (directAttachNetworkGroupsEnabled == null)     directAttachNetworkGroupsEnabled="false";
    String directAttachedUntaggedEnabled=_ms.getConfigurationValue("direct.attach.untagged.vlan.enabled");
    if (directAttachedUntaggedEnabled == null)     directAttachedUntaggedEnabled="false";
    String systemVmUseLocalStorage=_ms.getConfigurationValue("system.vm.use.local.storage");
    if (systemVmUseLocalStorage == null)     systemVmUseLocalStorage="false";
    session.setAttribute("userid",userAcct.getId());
    session.setAttribute("username",userAcct.getUsername());
    session.setAttribute("firstname",userAcct.getFirstname());
    session.setAttribute("lastname",userAcct.getLastname());
    session.setAttribute("accountobj",account);
    session.setAttribute("account",account.getAccountName());
    session.setAttribute("domainid",account.getDomainId());
    session.setAttribute("type",Short.valueOf(account.getType()).toString());
    session.setAttribute("hypervisortype",hypervisorType);
    session.setAttribute("directattachnetworkgroupsenabled",directAttachNetworkGroupsEnabled);
    session.setAttribute("directattacheduntaggedenabled",directAttachedUntaggedEnabled);
    session.setAttribute("systemvmuselocalstorage",systemVmUseLocalStorage);
    if (timezone != null) {
      session.setAttribute("timezone",timezone);
      session.setAttribute("timezoneoffset",Float.valueOf(offsetInHrs).toString());
    }
    SecureRandom sesssionKeyRandom=new SecureRandom();
    byte sessionKeyBytes[]=new byte[20];
    sesssionKeyRandom.nextBytes(sessionKeyBytes);
    String sessionKey=Base64.encodeBytes(sessionKeyBytes);
    session.setAttribute("sessionkey",sessionKey);
    return;
  }
  throw new CloudAuthenticationException("Unable to find user " + username + " in domain "+ domainId);
}
