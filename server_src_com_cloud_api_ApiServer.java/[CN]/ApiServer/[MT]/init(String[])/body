{
  BaseCmd.setComponents(new ApiResponseHelper());
  BaseListCmd.configure();
  processConfigFiles(apiConfig,false);
  String[] pluggableServicesApiConfigs=getPluggableServicesApiConfigs();
  processConfigFiles(pluggableServicesApiConfigs,true);
  ComponentLocator locator=ComponentLocator.getLocator(ManagementServer.Name);
  _accountMgr=locator.getManager(AccountManager.class);
  _asyncMgr=locator.getManager(AsyncJobManager.class);
  _systemAccount=_accountMgr.getSystemAccount();
  _systemUser=_accountMgr.getSystemUser();
  _dispatcher=ApiDispatcher.getInstance();
  _domainMgr=locator.getManager(DomainManager.class);
  int apiPort=8096;
  ConfigurationDao configDao=locator.getDao(ConfigurationDao.class);
  SearchCriteria<ConfigurationVO> sc=configDao.createSearchCriteria();
  sc.addAnd("name",SearchCriteria.Op.EQ,"integration.api.port");
  List<ConfigurationVO> values=configDao.search(sc,null);
  if ((values != null) && (values.size() > 0)) {
    ConfigurationVO apiPortConfig=values.get(0);
    apiPort=Integer.parseInt(apiPortConfig.getValue());
  }
  encodeApiResponse=Boolean.valueOf(configDao.getValue(Config.EncodeApiResponse.key()));
  String jsonType=configDao.getValue(Config.JavaScriptDefaultContentType.key());
  if (jsonType != null) {
    jsonContentType=jsonType;
  }
  ListenerThread listenerThread=new ListenerThread(this,apiPort);
  listenerThread.start();
}
