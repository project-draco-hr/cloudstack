{
  assert(args != null);
  @SuppressWarnings("unchecked") Pair<AsyncJob,String> eventInfo=(Pair<AsyncJob,String>)args;
  AsyncJob job=eventInfo.first();
  String jobEvent=eventInfo.second();
  if (s_logger.isTraceEnabled())   s_logger.trace("Handle asyjob publish event " + jobEvent);
  EventBus eventBus=null;
  try {
    eventBus=ComponentContext.getComponent(EventBus.class);
  }
 catch (  NoSuchBeanDefinitionException nbe) {
    return;
  }
  if (!job.getDispatcher().equalsIgnoreCase("ApiAsyncJobDispatcher")) {
    return;
  }
  User userJobOwner=_accountMgr.getUserIncludingRemoved(job.getUserId());
  Account jobOwner=_accountMgr.getAccount(userJobOwner.getAccountId());
  String info=job.getCmdInfo();
  String cmdEventType;
  if (info == null) {
    cmdEventType="unknown";
  }
 else {
    String marker="\"cmdEventType\"";
    int begin=info.indexOf(marker);
    cmdEventType=info.substring(begin + marker.length() + 2,info.indexOf(",",begin) - 1);
  }
  org.apache.cloudstack.framework.events.Event event=new org.apache.cloudstack.framework.events.Event("management-server",EventCategory.ASYNC_JOB_CHANGE_EVENT.getName(),jobEvent,(job.getInstanceType() != null ? job.getInstanceType().toString() : "unknown"),null);
  Map<String,String> eventDescription=new HashMap<String,String>();
  eventDescription.put("command",job.getCmd());
  eventDescription.put("user",userJobOwner.getUuid());
  eventDescription.put("account",jobOwner.getUuid());
  eventDescription.put("processStatus","" + job.getProcessStatus());
  eventDescription.put("resultCode","" + job.getResultCode());
  eventDescription.put("instanceUuid",(job.getInstanceId() != null ? ApiDBUtils.findJobInstanceUuid(job) : ""));
  eventDescription.put("instanceType",(job.getInstanceType() != null ? job.getInstanceType().toString() : "unknown"));
  eventDescription.put("commandEventType",cmdEventType);
  eventDescription.put("jobId",job.getUuid());
  eventDescription.put("jobResult",job.getResult());
  eventDescription.put("cmdInfo",job.getCmdInfo());
  eventDescription.put("status","" + job.getStatus());
  Map<String,String> configs=_configDao.getConfiguration("management-server",new HashMap<String,String>());
  if (Boolean.valueOf(configs.get("event.accountinfo"))) {
    DomainVO domain=_domainDao.findById(jobOwner.getDomainId());
    eventDescription.put("username",userJobOwner.getUsername());
    eventDescription.put("accountname",jobOwner.getAccountName());
    eventDescription.put("domainname",domain.getName());
  }
  event.setDescription(eventDescription);
  try {
    eventBus.publish(event);
  }
 catch (  EventBusException evx) {
    String errMsg="F" + "" + "ailed to publish async job event on the the event bus.";
    s_logger.warn(errMsg,evx);
    throw new CloudRuntimeException(errMsg);
  }
}
