{
  try {
    if (_apiCommands == null) {
      _apiCommands=new Properties();
    }
    Properties preProcessedCommands=new Properties();
    if (apiConfig != null) {
      for (      String configFile : apiConfig) {
        File commandsFile=PropertiesUtil.findConfigFile(configFile);
        preProcessedCommands.load(new FileInputStream(commandsFile));
      }
      for (      Object key : preProcessedCommands.keySet()) {
        String preProcessedCommand=preProcessedCommands.getProperty((String)key);
        String[] commandParts=preProcessedCommand.split(";");
        _apiCommands.put(key,commandParts[0]);
        if (pluggableServicesConfig) {
          s_pluggableServiceCommands.add(commandParts[0]);
        }
        if (commandParts.length > 1) {
          try {
            short cmdPermissions=Short.parseShort(commandParts[1]);
            if ((cmdPermissions & ADMIN_COMMAND) != 0) {
              s_adminCommands.add((String)key);
            }
            if ((cmdPermissions & RESOURCE_DOMAIN_ADMIN_COMMAND) != 0) {
              s_resourceDomainAdminCommands.add((String)key);
            }
            if ((cmdPermissions & DOMAIN_ADMIN_COMMAND) != 0) {
              s_resellerCommands.add((String)key);
            }
            if ((cmdPermissions & USER_COMMAND) != 0) {
              s_userCommands.add((String)key);
            }
          }
 catch (          NumberFormatException nfe) {
            s_logger.info("Malformed command.properties permissions value, key = " + key + ", value = "+ preProcessedCommand);
          }
        }
      }
      s_allCommands.addAll(s_adminCommands);
      s_allCommands.addAll(s_resourceDomainAdminCommands);
      s_allCommands.addAll(s_userCommands);
      s_allCommands.addAll(s_resellerCommands);
    }
  }
 catch (  FileNotFoundException fnfex) {
    s_logger.error("Unable to find properites file",fnfex);
  }
catch (  IOException ioex) {
    s_logger.error("Exception loading properties file",ioex);
  }
}
