{
  if (TRANSFERMANAGER_ACCESSKEY_MAP.containsKey(clientOptions.getAccessKey())) {
    return TRANSFERMANAGER_ACCESSKEY_MAP.get(clientOptions.getAccessKey());
  }
  final AWSCredentials basicAWSCredentials=new BasicAWSCredentials(clientOptions.getAccessKey(),clientOptions.getSecretKey());
  final ClientConfiguration configuration=new ClientConfiguration();
  if (clientOptions.isHttps() != null) {
    configuration.setProtocol(clientOptions.isHttps() ? HTTPS : HTTP);
  }
  if (clientOptions.getConnectionTimeout() != null) {
    configuration.setConnectionTimeout(clientOptions.getConnectionTimeout());
  }
  if (clientOptions.getMaxErrorRetry() != null) {
    configuration.setMaxErrorRetry(clientOptions.getMaxErrorRetry());
  }
  if (clientOptions.getSocketTimeout() != null) {
    configuration.setSocketTimeout(clientOptions.getSocketTimeout());
  }
  if (clientOptions.getUseTCPKeepAlive() != null) {
    configuration.setUseTcpKeepAlive(clientOptions.getUseTCPKeepAlive());
  }
  if (clientOptions.getConnectionTtl() != null) {
    configuration.setConnectionTTL(clientOptions.getConnectionTtl());
  }
  if (clientOptions.getSigner() != null) {
    configuration.setSignerOverride(clientOptions.getSigner());
  }
  LOGGER.debug(format("Creating S3 client with configuration: [protocol: %1$s, signer: %2$s, connectionTimeOut: %3$s, maxErrorRetry: %4$s, socketTimeout: %5$s, useTCPKeepAlive: %6$s, connectionTtl: %7$s]",configuration.getProtocol(),configuration.getSignerOverride(),configuration.getConnectionTimeout(),configuration.getMaxErrorRetry(),configuration.getSocketTimeout(),clientOptions.getUseTCPKeepAlive(),clientOptions.getConnectionTtl()));
  final AmazonS3Client client=new AmazonS3Client(basicAWSCredentials,configuration);
  if (isNotBlank(clientOptions.getEndPoint())) {
    LOGGER.debug(format("Setting the end point for S3 client with access key %1$s to %2$s.",clientOptions.getAccessKey(),clientOptions.getEndPoint()));
    client.setEndpoint(clientOptions.getEndPoint());
  }
  TRANSFERMANAGER_ACCESSKEY_MAP.put(clientOptions.getAccessKey(),new TransferManager(client));
  return TRANSFERMANAGER_ACCESSKEY_MAP.get(clientOptions.getAccessKey());
}
