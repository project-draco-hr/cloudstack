{
  long availableSize=0;
  NaElement xi=new NaElement("volume-list-info");
  xi.addNewChild("volume",volName);
  NaServer s=null;
  String volumeState=null;
  try {
    s=getServer(serverIp,userName,password);
    NaElement xo=s.invokeElem(xi);
    List volList=xo.getChildByName("volumes").getChildren();
    Iterator volIter=volList.iterator();
    while (volIter.hasNext()) {
      NaElement volInfo=(NaElement)volIter.next();
      availableSize=volInfo.getChildLongValue("size-available",-1);
      volumeState=volInfo.getChildContent("state");
    }
    if (volumeState != null) {
      return volumeState.equalsIgnoreCase("online") ? availableSize : -1;
    }
 else {
      return -1;
    }
  }
 catch (  NaException nae) {
    s_logger.warn("Failed to get volume size ",nae);
    throw new ServerException("Failed to get volume size",nae);
  }
catch (  IOException ioe) {
    s_logger.warn("Failed to get volume size ",ioe);
    throw new ServerException("Failed to get volume size",ioe);
  }
 finally {
    if (s != null)     s.close();
  }
}
