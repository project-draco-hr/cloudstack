{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Deallocate network: networkId: " + nic.getNetworkId() + ", ip: "+ nic.getIp4Address());
  }
  if (nic.getIp4Address() != null) {
    IPAddressVO ip=_ipAddressDao.findByIpAndSourceNetworkId(nic.getNetworkId(),nic.getIp4Address());
    if (ip != null) {
      Transaction txn=Transaction.currentTxn();
      txn.start();
      _networkMgr.markIpAsUnavailable(ip.getId());
      _ipAddressDao.unassignIpAddress(ip.getId());
      s_logger.debug("remove nic " + nic.getId() + " secondary ip ");
      List<String> nicSecIps=null;
      nicSecIps=_nicSecondaryIpDao.getSecondaryIpAddressesForNic(nic.getId());
      for (      String secIp : nicSecIps) {
        IPAddressVO pubIp=_ipAddressDao.findByIpAndSourceNetworkId(nic.getNetworkId(),secIp);
        _networkMgr.markIpAsUnavailable(pubIp.getId());
        _ipAddressDao.unassignIpAddress(pubIp.getId());
      }
      txn.commit();
    }
  }
  if (nic.getIp6Address() != null) {
    _ipv6Mgr.revokeDirectIpv6Address(nic.getNetworkId(),nic.getIp6Address());
  }
  nic.deallocate();
}
