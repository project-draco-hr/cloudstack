def __init__(self):
    self.isAsync = 'false'
    'the CPU number of the service offering'
    'Required'
    self.cpunumber = None
    'the CPU speed of the service offering in MHz.'
    'Required'
    self.cpuspeed = None
    'the display text of the service offering'
    'Required'
    self.displaytext = None
    'the total memory of the service offering in MB'
    'Required'
    self.memory = None
    'the name of the service offering'
    'Required'
    self.name = None
    'bytes read rate of the disk offering'
    self.bytesreadrate = None
    'bytes write rate of the disk offering'
    self.byteswriterate = None
    'The deployment planner heuristics used to deploy a VM of this offering. If null, value of global config vm.deployment.planner is used'
    self.deploymentplanner = None
    'the ID of the containing domain, null for public offerings'
    self.domainid = None
    'the host tag for this service offering.'
    self.hosttags = None
    'io requests read rate of the disk offering'
    self.iopsreadrate = None
    'io requests write rate of the disk offering'
    self.iopswriterate = None
    'is this a system vm offering'
    self.issystem = None
    'true if the virtual machine needs to be volatile so that on every reboot of VM, original root disk is dettached then destroyed and a fresh root disk is created and attached to VM'
    self.isvolatile = None
    'restrict the CPU usage to committed service offering'
    self.limitcpuuse = None
    'data transfer rate in megabits per second allowed. Supported only for non-System offering and system offerings having "domainrouter" systemvmtype'
    self.networkrate = None
    'the HA for the service offering'
    self.offerha = None
    'details for planner, used to store specific parameters'
    self.serviceofferingdetails = []
    'the storage type of the service offering. Values are local and shared.'
    self.storagetype = None
    'the system VM type. Possible types are "domainrouter", "consoleproxy" and "secondarystoragevm".'
    self.systemvmtype = None
    'the tags for this service offering.'
    self.tags = None
    self.required = ['cpunumber', 'cpuspeed', 'displaytext', 'memory', 'name']
