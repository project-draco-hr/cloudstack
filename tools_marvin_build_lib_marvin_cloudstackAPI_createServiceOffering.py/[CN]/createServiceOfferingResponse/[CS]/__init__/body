def __init__(self):
    'the id of the service offering'
    self.id = None
    'the number of CPU'
    self.cpunumber = None
    'the clock rate CPU speed in Mhz'
    self.cpuspeed = None
    'the date this service offering was created'
    self.created = None
    'is this a  default system vm offering'
    self.defaultuse = None
    'deployment strategy used to deploy VM.'
    self.deploymentplanner = None
    'bytes read rate of the service offering'
    self.diskBytesReadRate = None
    'bytes write rate of the service offering'
    self.diskBytesWriteRate = None
    'io requests read rate of the service offering'
    self.diskIopsReadRate = None
    'io requests write rate of the service offering'
    self.diskIopsWriteRate = None
    'an alternate display text of the service offering.'
    self.displaytext = None
    'Domain name for the offering'
    self.domain = None
    'the domain id of the service offering'
    self.domainid = None
    'the host tag for the service offering'
    self.hosttags = None
    'is this a system vm offering'
    self.issystem = None
    'true if the vm needs to be volatile, i.e., on every reboot of vm from API root disk is discarded and creates a new root disk'
    self.isvolatile = None
    'restrict the CPU usage to committed service offering'
    self.limitcpuuse = None
    'the memory in MB'
    self.memory = None
    'the name of the service offering'
    self.name = None
    'data transfer rate in megabits per second allowed.'
    self.networkrate = None
    'the ha support in the service offering'
    self.offerha = None
    'additional key/value details tied with this service offering'
    self.serviceofferingdetails = None
    'the storage type for this service offering'
    self.storagetype = None
    'is this a the systemvm type for system vm offering'
    self.systemvmtype = None
    'the tags for the service offering'
    self.tags = None
    'the list of resource tags associated with service offering. The resource tags are not used for Volume/VM placement on the specific host.'
    self.resourcetags = []
