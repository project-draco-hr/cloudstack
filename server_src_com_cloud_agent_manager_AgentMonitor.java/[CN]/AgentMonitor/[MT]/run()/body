{
  s_logger.info("Agent Monitor is started.");
  try {
    Thread.sleep(_pingTimeout * 2000);
  }
 catch (  InterruptedException e) {
    s_logger.info("Woke me up so early!");
  }
  while (!_stop) {
    try {
      Thread.sleep(60 * 1000);
    }
 catch (    InterruptedException e) {
      s_logger.info("Who woke me from my slumber?");
    }
    GlobalLock lock=GlobalLock.getInternLock("AgentMonitorLock");
    if (lock == null) {
      s_logger.error("Unable to acquire lock.  Better luck next time?");
      continue;
    }
    if (!lock.lock(10)) {
      s_logger.info("Someone else is already working on the agents.  Skipping my turn");
      continue;
    }
    try {
      long time=(System.currentTimeMillis() >> 10) - _pingTimeout;
      List<HostVO> hosts=_hostDao.findLostHosts(time);
      if (s_logger.isInfoEnabled()) {
        s_logger.info("Found " + hosts.size() + " hosts behind on ping. pingTimeout : "+ _pingTimeout+ ", mark time : "+ time);
      }
      for (      HostVO host : hosts) {
        if (host.getType().equals(Host.Type.ExternalFirewall) || host.getType().equals(Host.Type.ExternalLoadBalancer)) {
          continue;
        }
        if (host.getManagementServerId() == null || host.getManagementServerId() == _msId) {
          if (s_logger.isInfoEnabled()) {
            s_logger.info("Asking agent mgr to investgate why host " + host.getId() + " is behind on ping. last ping time: "+ host.getLastPinged());
          }
          _agentMgr.disconnect(host.getId(),Event.PingTimeout,true);
        }
      }
      hosts=_hostDao.listByStatus(Status.PrepareForMaintenance,Status.ErrorInMaintenance);
      for (      HostVO host : hosts) {
        long hostId=host.getId();
        DataCenterVO dcVO=_dcDao.findById(host.getDataCenterId());
        HostPodVO podVO=_podDao.findById(host.getPodId());
        String hostDesc="name: " + host.getName() + " (id:"+ host.getId()+ "), availability zone: "+ dcVO.getName()+ ", pod: "+ podVO.getName();
        if (host.getType() != Host.Type.Storage) {
          List<VMInstanceVO> vos=_vmDao.listByHostId(host.getId());
          if (vos.size() == 0) {
            _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,host.getDataCenterId(),host.getPodId(),"Migration Complete for host " + hostDesc,"Host [" + hostDesc + "] is ready for maintenance");
            _hostDao.updateStatus(host,Event.PreparationComplete,_msId);
          }
        }
 else {
          List<Long> ids=_volDao.findVmsStoredOnHost(hostId);
          boolean stillWorking=false;
          for (          Long id : ids) {
            VMInstanceVO instance=_vmDao.findById(id);
            if (instance != null && (instance.getState() == VirtualMachine.State.Starting || instance.getState() == VirtualMachine.State.Stopping || instance.getState() == VirtualMachine.State.Running || instance.getState() == VirtualMachine.State.Migrating)) {
              stillWorking=true;
              break;
            }
          }
          if (!stillWorking) {
            _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,host.getDataCenterId(),host.getPodId(),"All VMs Stopped for host " + hostDesc,"Host [" + hostDesc + "] is ready for maintenance");
            _hostDao.updateStatus(host,Event.PreparationComplete,_msId);
          }
        }
      }
    }
 catch (    Throwable th) {
      s_logger.error("Caught the following exception: ",th);
    }
 finally {
      lock.unlock();
    }
  }
  s_logger.info("Agent Monitor is leaving the building!");
}
