{
  s_logger.info("Agent Monitor is started.");
  while (!_stop) {
    try {
      Thread.sleep(60 * 1000);
    }
 catch (    InterruptedException e) {
      s_logger.info("Who woke me from my slumber?");
    }
    try {
      List<Long> behindAgents=findAgentsBehindOnPing();
      for (      Long agentId : behindAgents) {
        _agentMgr.disconnectWithInvestigation(agentId,Event.PingTimeout);
      }
      SearchCriteria2<HostVO,HostVO> sc=SearchCriteria2.create(HostVO.class);
      sc.addAnd(sc.getEntity().getResourceState(),Op.IN,ResourceState.PrepareForMaintenance,ResourceState.ErrorInMaintenance);
      List<HostVO> hosts=sc.list();
      for (      HostVO host : hosts) {
        long hostId=host.getId();
        DataCenterVO dcVO=_dcDao.findById(host.getDataCenterId());
        HostPodVO podVO=_podDao.findById(host.getPodId());
        String hostDesc="name: " + host.getName() + " (id:"+ hostId+ "), availability zone: "+ dcVO.getName()+ ", pod: "+ podVO.getName();
        if (host.getType() != Host.Type.Storage) {
          List<VMInstanceVO> vos=_vmDao.listByHostId(hostId);
          List<VMInstanceVO> vosMigrating=_vmDao.listVmsMigratingFromHost(hostId);
          if (vos.isEmpty() && vosMigrating.isEmpty()) {
            _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,host.getDataCenterId(),host.getPodId(),"Migration Complete for host " + hostDesc,"Host [" + hostDesc + "] is ready for maintenance");
            _resourceMgr.resourceStateTransitTo(host,ResourceState.Event.InternalEnterMaintenance,_msId);
          }
        }
      }
    }
 catch (    Throwable th) {
      s_logger.error("Caught the following exception: ",th);
    }
  }
  s_logger.info("Agent Monitor is leaving the building!");
}
