{
  Long zoneId=(Long)params.get(BaseCmd.Properties.ID.getName());
  String zoneName=(String)params.get(BaseCmd.Properties.NAME.getName());
  String dns1=(String)params.get(BaseCmd.Properties.DNS1.getName());
  String dns2=(String)params.get(BaseCmd.Properties.DNS2.getName());
  String dns3=(String)params.get(BaseCmd.Properties.INTERNAL_DNS1.getName());
  String dns4=(String)params.get(BaseCmd.Properties.INTERNAL_DNS2.getName());
  String vnet=(String)params.get(BaseCmd.Properties.VNET.getName());
  String guestCidr=(String)params.get(BaseCmd.Properties.GUEST_CIDR_ADDRESS.getName());
  Long userId=(Long)params.get(BaseCmd.Properties.USER_ID.getName());
  if (userId == null) {
    userId=Long.valueOf(User.UID_SYSTEM);
  }
  DataCenterVO zone=getManagementServer().findDataCenterById(zoneId);
  if (zone == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find zone by id " + zoneId);
  }
  if (zoneName == null) {
    zoneName=zone.getName();
  }
  DataCenterVO updatedZone=null;
  try {
    updatedZone=getManagementServer().editZone(userId,zoneId,zoneName,dns1,dns2,dns3,dns4,vnet,guestCidr);
  }
 catch (  Exception ex) {
    s_logger.error("Exception updating zone",ex);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,ex.getMessage());
  }
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  if (updatedZone == null) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to update zone; internal error.");
  }
 else {
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.SUCCESS.getName(),"true"));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.DISPLAY_TEXT.getName(),"Successfully updated zone."));
  }
  return returnValues;
}
