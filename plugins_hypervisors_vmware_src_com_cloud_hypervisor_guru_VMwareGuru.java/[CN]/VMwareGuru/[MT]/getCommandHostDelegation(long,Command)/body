{
  boolean needDelegation=false;
  if (cmd instanceof StorageSubSystemCommand) {
    Boolean fullCloneEnabled=VmwareFullClone.value();
    StorageSubSystemCommand c=(StorageSubSystemCommand)cmd;
    c.setExecuteInSequence(fullCloneEnabled);
  }
  if (cmd instanceof CopyCommand) {
    CopyCommand cpyCommand=(CopyCommand)cmd;
    DataTO srcData=cpyCommand.getSrcTO();
    DataStoreTO srcStoreTO=srcData.getDataStore();
    DataTO destData=cpyCommand.getDestTO();
    DataStoreTO destStoreTO=destData.getDataStore();
    boolean inSeq=true;
    if ((srcData.getObjectType() == DataObjectType.SNAPSHOT) || (destData.getObjectType() == DataObjectType.SNAPSHOT)) {
      inSeq=false;
    }
 else     if ((destStoreTO.getRole() == DataStoreRole.Image) || (destStoreTO.getRole() == DataStoreRole.ImageCache)) {
      inSeq=false;
    }
 else     if (!VmwareFullClone.value()) {
      inSeq=false;
    }
    cpyCommand.setExecuteInSequence(inSeq);
    if (srcData.getObjectType() == DataObjectType.VOLUME) {
      VolumeObjectTO volumeObjectTO=(VolumeObjectTO)srcData;
      if (Storage.ImageFormat.OVA == volumeObjectTO.getFormat()) {
        needDelegation=true;
      }
    }
    if (!needDelegation && !(HypervisorType.VMware == srcData.getHypervisorType() || HypervisorType.VMware == destData.getHypervisorType())) {
      return new Pair<Boolean,Long>(Boolean.FALSE,new Long(hostId));
    }
    if (destData.getObjectType() == DataObjectType.VOLUME && destStoreTO.getRole() == DataStoreRole.Primary && srcData.getObjectType() == DataObjectType.TEMPLATE && srcStoreTO.getRole() == DataStoreRole.Primary) {
      needDelegation=false;
    }
 else {
      needDelegation=true;
    }
  }
 else   if (cmd instanceof CreateEntityDownloadURLCommand) {
    DataTO srcData=((CreateEntityDownloadURLCommand)cmd).getData();
    if ((HypervisorType.VMware == srcData.getHypervisorType())) {
      needDelegation=true;
    }
    if (srcData.getObjectType() == DataObjectType.VOLUME) {
      VolumeObjectTO volumeObjectTO=(VolumeObjectTO)srcData;
      if (Storage.ImageFormat.OVA == volumeObjectTO.getFormat()) {
        needDelegation=true;
      }
    }
  }
  if (!needDelegation) {
    return new Pair<Boolean,Long>(Boolean.FALSE,new Long(hostId));
  }
  HostVO host=_hostDao.findById(hostId);
  long dcId=host.getDataCenterId();
  Pair<HostVO,SecondaryStorageVmVO> cmdTarget=_secStorageMgr.assignSecStorageVm(dcId,cmd);
  if (cmdTarget != null) {
    cmd.setContextParam("hypervisor",HypervisorType.VMware.toString());
    if (host.getType() == Host.Type.Routing) {
      Map<String,String> hostDetails=_hostDetailsDao.findDetails(hostId);
      cmd.setContextParam("guid",resolveNameInGuid(hostDetails.get("guid")));
      cmd.setContextParam("username",hostDetails.get("username"));
      cmd.setContextParam("password",hostDetails.get("password"));
      cmd.setContextParam("serviceconsole",_vmwareMgr.getServiceConsolePortGroupName());
      cmd.setContextParam("manageportgroup",_vmwareMgr.getManagementPortGroupName());
    }
    CommandExecLogVO execLog=new CommandExecLogVO(cmdTarget.first().getId(),cmdTarget.second().getId(),cmd.getClass().getSimpleName(),1);
    _cmdExecLogDao.persist(execLog);
    cmd.setContextParam("execid",String.valueOf(execLog.getId()));
    cmd.setContextParam("noderuninfo",String.format("%d-%d",_clusterMgr.getManagementNodeId(),_clusterMgr.getCurrentRunId()));
    cmd.setContextParam("vCenterSessionTimeout",String.valueOf(_vmwareMgr.getVcenterSessionTimeout()));
    if (cmd instanceof BackupSnapshotCommand || cmd instanceof CreatePrivateTemplateFromVolumeCommand || cmd instanceof CreatePrivateTemplateFromSnapshotCommand|| cmd instanceof CopyVolumeCommand|| cmd instanceof CopyCommand|| cmd instanceof CreateVolumeOVACommand|| cmd instanceof PrepareOVAPackingCommand|| cmd instanceof CreateVolumeFromSnapshotCommand) {
      String workerName=_vmwareMgr.composeWorkerName();
      long checkPointId=1;
      cmd.setContextParam("worker",workerName);
      cmd.setContextParam("checkpoint",String.valueOf(checkPointId));
      String workerName2=_vmwareMgr.composeWorkerName();
      long checkPointId2=1;
      cmd.setContextParam("worker2",workerName2);
      cmd.setContextParam("checkpoint2",String.valueOf(checkPointId2));
    }
    return new Pair<Boolean,Long>(Boolean.TRUE,cmdTarget.first().getId());
  }
  return new Pair<Boolean,Long>(Boolean.FALSE,new Long(hostId));
}
