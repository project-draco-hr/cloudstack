{
  final int EXTRACT_URL_LIFE_LIMIT_IN_SECONDS=_urlExpirationInterval;
  List<UploadVO> extractJobs=_uploadDao.listByModeAndStatus(Mode.HTTP_DOWNLOAD,Status.DOWNLOAD_URL_CREATED);
  for (  UploadVO extractJob : extractJobs) {
    if (getTimeDiff(extractJob.getLastUpdated()) > EXTRACT_URL_LIFE_LIMIT_IN_SECONDS) {
      String path=extractJob.getInstallPath();
      HostVO secStorage=ApiDBUtils.findHostById(extractJob.getHostId());
      s_logger.debug("Sending deletion of extract URL " + extractJob.getUploadUrl());
      DeleteEntityDownloadURLCommand cmd=new DeleteEntityDownloadURLCommand(path,extractJob.getType(),extractJob.getUploadUrl(),secStorage.getParent());
      HostVO ssvm=_ssvmMgr.pickSsvmHost(secStorage);
      if (ssvm == null) {
        s_logger.warn("There is no secondary storage VM for secondary storage host " + extractJob.getHostId());
        continue;
      }
      try {
        send(ssvm.getId(),cmd,null);
        _uploadDao.remove(extractJob.getId());
      }
 catch (      AgentUnavailableException e) {
        s_logger.warn("Unable to delete the link for " + extractJob.getType() + " id="+ extractJob.getTypeId()+ " url="+ extractJob.getUploadUrl(),e);
      }
    }
  }
}
