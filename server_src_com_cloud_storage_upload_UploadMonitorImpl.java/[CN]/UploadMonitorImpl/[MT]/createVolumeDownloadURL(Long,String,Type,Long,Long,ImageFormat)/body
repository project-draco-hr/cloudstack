{
  String errorString="";
  boolean success=false;
  try {
    List<HostVO> storageServers=_resourceMgr.listAllHostsInOneZoneByType(Host.Type.SecondaryStorage,dataCenterId);
    if (storageServers == null) {
      errorString="No Storage Server found at the datacenter - " + dataCenterId;
      throw new CloudRuntimeException(errorString);
    }
    UploadVO uploadJob=_uploadDao.createForUpdate(uploadId);
    uploadJob.setUploadState(Status.DOWNLOAD_URL_NOT_CREATED);
    uploadJob.setLastUpdated(new Date());
    _uploadDao.update(uploadJob.getId(),uploadJob);
    String uuid=UUID.randomUUID().toString() + "." + format.toString().toLowerCase();
    DataStore secStore=this.storeMgr.getDataStore(ApiDBUtils.findUploadById(uploadId).getDataStoreId(),DataStoreRole.Image);
    EndPoint ep=_epSelector.select(secStore);
    if (ep == null) {
      errorString="There is no secondary storage VM for secondary storage host " + secStore.getName();
      throw new CloudRuntimeException(errorString);
    }
    CreateEntityDownloadURLCommand cmd=new CreateEntityDownloadURLCommand(((ImageStoreEntity)secStore).getMountPoint(),path,uuid,null);
    Answer ans=ep.sendMessage(cmd);
    if (ans == null || !ans.getResult()) {
      errorString="Unable to create a link for " + type + " id:"+ entityId+ ","+ ans.getDetails();
      s_logger.warn(errorString);
      throw new CloudRuntimeException(errorString);
    }
    List<SecondaryStorageVmVO> ssVms=_secStorageVmDao.getSecStorageVmListInStates(SecondaryStorageVm.Role.templateProcessor,dataCenterId,State.Running);
    if (ssVms.size() > 0) {
      SecondaryStorageVmVO ssVm=ssVms.get(0);
      if (ssVm.getPublicIpAddress() == null) {
        errorString="A running secondary storage vm has a null public ip?";
        s_logger.error(errorString);
        throw new CloudRuntimeException(errorString);
      }
      String extractURL=generateCopyUrl(ssVm.getPublicIpAddress(),uuid);
      UploadVO vo=_uploadDao.createForUpdate();
      vo.setLastUpdated(new Date());
      vo.setUploadUrl(extractURL);
      vo.setUploadState(Status.DOWNLOAD_URL_CREATED);
      _uploadDao.update(uploadId,vo);
      success=true;
      return;
    }
    errorString="Couldnt find a running SSVM in the zone" + dataCenterId + ". Couldnt create the extraction URL.";
    throw new CloudRuntimeException(errorString);
  }
  finally {
    if (!success) {
      UploadVO uploadJob=_uploadDao.createForUpdate(uploadId);
      uploadJob.setLastUpdated(new Date());
      uploadJob.setErrorString(errorString);
      uploadJob.setUploadState(Status.ERROR);
      _uploadDao.update(uploadId,uploadJob);
    }
  }
}
