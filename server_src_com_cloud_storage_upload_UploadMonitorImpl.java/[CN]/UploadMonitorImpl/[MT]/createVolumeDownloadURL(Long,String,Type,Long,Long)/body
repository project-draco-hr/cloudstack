{
  List<HostVO> storageServers=_serverDao.listByTypeDataCenter(Host.Type.SecondaryStorage,dataCenterId);
  if (storageServers == null)   throw new CloudRuntimeException("No Storage Server found at the datacenter - " + dataCenterId);
  UploadVO uploadJob=_uploadDao.createForUpdate(uploadId);
  uploadJob.setUploadState(Status.DOWNLOAD_URL_NOT_CREATED);
  uploadJob.setLastUpdated(new Date());
  _uploadDao.update(uploadJob.getId(),uploadJob);
  CreateEntityDownloadURLCommand cmd=new CreateEntityDownloadURLCommand(path);
  long result=send(ApiDBUtils.findUploadById(uploadId).getHostId(),cmd,null);
  if (result == -1) {
    String errorString="Unable to create a link for " + type + " id:"+ entityId;
    s_logger.warn(errorString);
    throw new CloudRuntimeException(errorString);
  }
  List<SecondaryStorageVmVO> ssVms=_secStorageVmDao.getSecStorageVmListInStates(dataCenterId,State.Running);
  if (ssVms.size() > 0) {
    SecondaryStorageVmVO ssVm=ssVms.get(0);
    if (ssVm.getPublicIpAddress() == null) {
      s_logger.warn("A running secondary storage vm has a null public ip?");
      throw new CloudRuntimeException("SSVM has null public IP - couldnt create the URL");
    }
    String extractURL=generateCopyUrl(ssVm.getPublicIpAddress(),path);
    UploadVO vo=_uploadDao.createForUpdate();
    vo.setLastUpdated(new Date());
    vo.setUploadUrl(extractURL);
    vo.setUploadState(Status.DOWNLOAD_URL_CREATED);
    if (extractURL == null) {
      vo.setUploadState(Status.ERROR);
      vo.setErrorString("Could not create the download URL");
    }
    _uploadDao.update(uploadId,vo);
    return;
  }
  throw new CloudRuntimeException("Couldnt find a running SSVM in the zone" + dataCenterId + ". Couldnt create the extraction URL.");
}
