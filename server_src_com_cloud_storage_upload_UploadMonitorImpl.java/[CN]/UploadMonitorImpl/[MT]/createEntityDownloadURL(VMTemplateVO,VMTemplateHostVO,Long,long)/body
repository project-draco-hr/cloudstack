{
  List<HostVO> storageServers=_serverDao.listByTypeDataCenter(Host.Type.SecondaryStorage,dataCenterId);
  if (storageServers == null)   throw new CloudRuntimeException("No Storage Server found at the datacenter - " + dataCenterId);
  Type type=(template.getFormat() == ImageFormat.ISO) ? Type.ISO : Type.TEMPLATE;
  List<UploadVO> extractURLList=_uploadDao.listByTypeUploadStatus(template.getId(),type,UploadVO.Status.DOWNLOAD_URL_CREATED);
  if (extractURLList.size() > 0)   return extractURLList.get(0);
  HostVO sserver=storageServers.get(0);
  UploadVO uploadTemplateObj=new UploadVO(sserver.getId(),template.getId(),new Date(),Status.DOWNLOAD_URL_NOT_CREATED,0,type,Mode.HTTP_DOWNLOAD);
  _uploadDao.persist(uploadTemplateObj);
  CreateEntityDownloadURLCommand cmd=new CreateEntityDownloadURLCommand(vmTemplateHost.getInstallPath());
  long result=send(sserver.getId(),cmd,null);
  if (result == -1) {
    s_logger.warn("Unable to create a link for the template/iso ");
    throw new CloudRuntimeException("Unable to create a link at the SSVM");
  }
  List<SecondaryStorageVmVO> ssVms=_secStorageVmDao.getSecStorageVmListInStates(dataCenterId,State.Running);
  if (ssVms.size() > 0) {
    SecondaryStorageVmVO ssVm=ssVms.get(0);
    if (ssVm.getPublicIpAddress() == null) {
      s_logger.warn("A running secondary storage vm has a null public ip?");
      throw new CloudRuntimeException("SSVM has null public IP - couldnt create the URL");
    }
    String extractURL=generateCopyUrl(ssVm.getPublicIpAddress(),vmTemplateHost.getInstallPath());
    UploadVO vo=_uploadDao.createForUpdate();
    vo.setLastUpdated(new Date());
    vo.setUploadUrl(extractURL);
    vo.setUploadState(Status.DOWNLOAD_URL_CREATED);
    if (extractURL == null) {
      vo.setUploadState(Status.ERROR);
      vo.setErrorString("Could not create the download URL");
    }
    _uploadDao.update(uploadTemplateObj.getId(),vo);
    return _uploadDao.findById(uploadTemplateObj.getId(),true);
  }
  throw new CloudRuntimeException("Couldnt find a running SSVM in the zone" + dataCenterId + ".couldnt create the extraction URL.");
}
