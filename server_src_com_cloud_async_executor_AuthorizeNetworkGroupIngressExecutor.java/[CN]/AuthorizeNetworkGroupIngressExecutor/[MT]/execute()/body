{
  Gson gson=GsonHelper.getBuilder().create();
  AsyncJobManager asyncMgr=getAsyncJobMgr();
  AsyncJobVO job=getJob();
  ManagementServer managementServer=asyncMgr.getExecutorContext().getManagementServer();
  NetworkGroupIngressParam param=gson.fromJson(job.getCmdInfo(),NetworkGroupIngressParam.class);
  AccountVO account=param.getAccount();
  if (getSyncSource() == null) {
    NetworkGroupVO networkGroup=managementServer.findNetworkGroupByName(param.getAccount().getId(),param.getGroupName());
    if (networkGroup == null) {
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.PARAM_ERROR,"Unable to find network group " + param.getGroupName() + " for account "+ account.getAccountName()+ " (id: "+ account.getId()+ ")");
    }
 else {
      asyncMgr.syncAsyncJobExecution(job.getId(),"NetworkGroup",networkGroup.getId());
    }
    return true;
  }
 else {
    try {
      List<IngressRuleVO> addedRules=managementServer.authorizeNetworkGroupIngress(account,param.getGroupName(),param.getProtocol(),param.getStartPort(),param.getEndPort(),param.getCidrList(),param.getAuthorizedGroups());
      if ((addedRules != null) && !addedRules.isEmpty()) {
        asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_SUCCEEDED,0,composeResultObject(managementServer,account.getId(),param.getGroupName(),addedRules));
      }
 else {
        if (addedRules == null) {
          asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"Failed to authorize network group ingress for group: " + param.getGroupName() + " for account: "+ account.getAccountName()+ " (id: "+ account.getId()+ ")");
        }
 else {
          asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.PARAM_ERROR,"Failed to authorize network group ingress for group: " + param.getGroupName() + ", ingress rules already exist.");
        }
      }
    }
 catch (    Exception e) {
      s_logger.warn("Failed to authorize network group ingress from group: " + param.getGroupName() + " for account: "+ account.getAccountName()+ " (id: "+ account.getId()+ ")",e);
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"Failed to authorize network group ingress from group: " + param.getGroupName() + " for account: "+ account.getAccountName()+ " (id: "+ account.getId()+ ")");
    }
  }
  return true;
}
