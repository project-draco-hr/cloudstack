def pollAsyncJob(self, cmd, response, jobId):
    commandName = cmd.__class__.__name__.replace('Cmd', '')
    cmd = queryAsyncJobResult.queryAsyncJobResultCmd()
    cmd.jobid = jobId
    while (self.asyncTimeout > 0):
        asyncResponse = queryAsyncJobResult.queryAsyncJobResultResponse()
        responseName = asyncResponse.__class__.__name__.lower()
        asyncResponseXml = self.make_request(cmd, asyncResponse, True)
        dom = xml.dom.minidom.parseString(asyncResponseXml)
        elements = dom.getElementsByTagName(responseName)
        if (len(elements) == 0):
            raise cloudstackException.cloudstackAPIException(("can't find %s" % responseName))
        self.hasErrorCode(elements, responseName)
        jobstatus = self.getText(elements[0].getElementsByTagName('jobstatus'))
        if (jobstatus == '2'):
            jobResult = self.getText(elements[0].getElementsByTagName('jobresult'))
            raise cloudstackException.cloudstackAPIException(commandName, jobResult)
        elif (jobstatus == '1'):
            jobResultEle = elements[0].getElementsByTagName('jobresult')
            return self.paraseResultFromElement(jobResultEle, response)
        time.sleep(5)
    raise cloudstackException.cloudstackAPIException(commandName, 'Async job timeout')
