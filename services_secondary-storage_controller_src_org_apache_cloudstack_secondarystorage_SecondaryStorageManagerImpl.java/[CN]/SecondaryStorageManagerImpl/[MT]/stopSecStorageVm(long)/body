{
  SecondaryStorageVmVO secStorageVm=_secStorageVmDao.findById(secStorageVmId);
  if (secStorageVm == null) {
    String msg="Stopping secondary storage vm failed: secondary storage vm " + secStorageVmId + " no longer exists";
    if (logger.isDebugEnabled()) {
      logger.debug(msg);
    }
    return false;
  }
  try {
    if (secStorageVm.getHostId() != null) {
      GlobalLock secStorageVmLock=GlobalLock.getInternLock(getSecStorageVmLockName(secStorageVm.getId()));
      try {
        if (secStorageVmLock.lock(ACQUIRE_GLOBAL_LOCK_TIMEOUT_FOR_SYNC)) {
          try {
            _itMgr.stop(secStorageVm.getUuid());
            return true;
          }
  finally {
            secStorageVmLock.unlock();
          }
        }
 else {
          String msg="Unable to acquire secondary storage vm lock : " + secStorageVm.toString();
          logger.debug(msg);
          return false;
        }
      }
  finally {
        secStorageVmLock.releaseRef();
      }
    }
    return true;
  }
 catch (  ResourceUnavailableException e) {
    if (logger.isDebugEnabled()) {
      logger.debug("Stopping secondary storage vm " + secStorageVm.getHostName() + " faled : exception "+ e.toString());
    }
    return false;
  }
}
