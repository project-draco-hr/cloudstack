import xml.dom.minidom
import json
from optparse import OptionParser
from textwrap import dedent
import os
import sys
import urllib2
if (__name__ == '__main__'):
    parser = OptionParser()
    parser.add_option('-o', '--output', dest='output', help='The path to the generated code entities, default is .')
    parser.add_option('-s', '--specfile', dest='spec', help='The path and name of the api spec xml file, default is /etc/cloud/cli/commands.xml')
    parser.add_option('-e', '--endpoint', dest='endpoint', help='The endpoint mgmt server (with open 8096) where apis are discovered, default is localhost')
    (options, args) = parser.parse_args()
    folder = '.'
    if (options.output is not None):
        folder = options.output
    apiModule = (folder + '/cloudstackAPI')
    if (not os.path.exists(apiModule)):
        try:
            os.mkdir(apiModule)
        except:
            print ('Failed to create folder %s, due to %s' % (apiModule, sys.exc_info()))
            print parser.print_help()
            exit(2)
    apiSpecFile = '/etc/cloud/cli/commands.xml'
    if (options.spec is not None):
        apiSpecFile = options.spec
        if (not os.path.exists(apiSpecFile)):
            print ('the spec file %s does not exists' % apiSpecFile)
            print parser.print_help()
            exit(1)
    cg = codeGenerator(folder)
    if (options.spec is not None):
        cg.generateCodeFromXML(apiSpecFile)
    elif (options.endpoint is not None):
        endpointUrl = ('http://%s:8096/client/api?command=listApis&response=json' % options.endpoint)
        cg.generateCodeFromJSON(endpointUrl)
