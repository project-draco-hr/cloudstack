{
  URI uri=URI.create("vlan://123");
  Network network=mock(Network.class);
  when(network.getId()).thenReturn(1L);
  when(network.getBroadcastDomainType()).thenReturn(BroadcastDomainType.Vlan);
  when(network.getDataCenterId()).thenReturn(1L);
  when(network.getBroadcastUri()).thenReturn(uri);
  when(network.getCidr()).thenReturn("1.1.1.0/24");
  when(network.getState()).thenReturn(Network.State.Implemented);
  Ip ip=mock(Ip.class);
  when(ip.addr()).thenReturn("1.2.3.4");
  IpAddress ipAddress=mock(IpAddress.class);
  when(ipAddress.getAddress()).thenReturn(ip);
  when(ipAddress.getVlanId()).thenReturn(1L);
  when(_networkModel.getIp(anyLong())).thenReturn(ipAddress);
  when(_networkModel.isProviderSupportServiceInNetwork(network.getId(),Service.StaticNat,Provider.CiscoVnmc)).thenReturn(true);
  List<CiscoVnmcControllerVO> devices=new ArrayList<CiscoVnmcControllerVO>();
  devices.add(mock(CiscoVnmcControllerVO.class));
  when(_ciscoVnmcDao.listByPhysicalNetwork(network.getPhysicalNetworkId())).thenReturn(devices);
  when(_networkAsa1000vMapDao.findByNetworkId(network.getId())).thenReturn(mock(NetworkAsa1000vMapVO.class));
  HostVO hostVO=mock(HostVO.class);
  when(hostVO.getId()).thenReturn(1L);
  when(_hostDao.findById(anyLong())).thenReturn(hostVO);
  VlanVO vlanVO=mock(VlanVO.class);
  when(vlanVO.getVlanTag()).thenReturn(null);
  when(_vlanDao.findById(anyLong())).thenReturn(vlanVO);
  StaticNat rule=mock(StaticNat.class);
  when(rule.getSourceIpAddressId()).thenReturn(1L);
  when(rule.getDestIpAddress()).thenReturn("1.2.3.4");
  when(rule.isForRevoke()).thenReturn(false);
  List<StaticNat> rules=new ArrayList<StaticNat>();
  rules.add(rule);
  Answer answer=mock(Answer.class);
  when(answer.getResult()).thenReturn(true);
  when(_agentMgr.easySend(anyLong(),any(SetStaticNatRulesCommand.class))).thenReturn(answer);
  assertTrue(_element.applyStaticNats(network,rules));
}
