@attr(tags=['advanced', 'nuagevsp'], required_hardware='false')
def test_nuage_vpc_network(self):
    ' Test basic VPC Network functionality with Nuage VSP SDN plugin\n        '
    self.debug('Creating Nuage VSP VPC offering...')
    vpc_offering = self.create_VpcOffering(self.test_data['nuagevsp']['vpc_offering'])
    self.validate_VpcOffering(vpc_offering, state='Enabled')
    self.debug('Creating a VPC with Nuage VSP VPC offering...')
    vpc = self.create_Vpc(vpc_offering, cidr='10.1.0.0/16')
    self.validate_Vpc(vpc, state='Enabled')
    self.debug('Creating Nuage VSP VPC Network offering...')
    network_offering = self.create_NetworkOffering(self.test_data['nuagevsp']['vpc_network_offering'])
    self.validate_NetworkOffering(network_offering, state='Enabled')
    acl_list = self.create_NetworkAclList(name='acl', description='acl', vpc=vpc)
    acl_item = self.create_NetworkAclRule(self.test_data['ingress_rule'], acl_list=acl_list)
    self.debug('Creating a VPC network with Nuage VSP VPC Network offering...')
    vpc_network = self.create_Network(network_offering, vpc=vpc, acl_list=acl_list)
    self.validate_Network(vpc_network, state='Implemented')
    vr = self.get_Router(vpc_network)
    self.check_Router_state(vr, state='Running')
    vm = self.create_VM(vpc_network)
    self.check_VM_state(vm, state='Running')
    self.verify_vsd_network(self.domain.id, vpc_network, vpc)
    self.verify_vsd_router(vr)
    self.verify_vsd_vm(vm)
    self.verify_vsd_firewall_rule(acl_item)
