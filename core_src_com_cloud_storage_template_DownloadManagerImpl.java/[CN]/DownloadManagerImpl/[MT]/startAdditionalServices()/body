{
  Script command=new Script("/bin/bash",s_logger);
  command.add("-c");
  command.add("if [ -d /etc/apache2 ] ; then service apache2 stop; else service httpd stop; fi ");
  String result=command.execute();
  if (result != null) {
    s_logger.warn("Error in stopping httpd service err=" + result);
  }
  String port=Integer.toString(TemplateConstants.DEFAULT_TMPLT_COPY_PORT);
  String intf=TemplateConstants.DEFAULT_TMPLT_COPY_INTF;
  command=new Script("/bin/bash",s_logger);
  command.add("-c");
  command.add("iptables -I INPUT -i " + intf + " -p tcp -m state --state NEW -m tcp --dport "+ port+ " -j ACCEPT;"+ "iptables -I INPUT -i "+ intf+ " -p tcp -m state --state NEW -m tcp --dport "+ "443"+ " -j ACCEPT;");
  result=command.execute();
  if (result != null) {
    s_logger.warn("Error in opening up httpd port err=" + result);
    return;
  }
  command=new Script("/bin/bash",s_logger);
  command.add("-c");
  command.add("if [ -d /etc/apache2 ] ; then service apache2 start; else service httpd start; fi ");
  result=command.execute();
  if (result != null) {
    s_logger.warn("Error in starting httpd service err=" + result);
    return;
  }
  command=new Script("mkdir",s_logger);
  command.add("-p");
  command.add("/var/www/html/copy/template");
  result=command.execute();
  if (result != null) {
    s_logger.warn("Error in creating directory =" + result);
    return;
  }
  command=new Script("/bin/bash",s_logger);
  command.add("-c");
  command.add("ln -sf " + publicTemplateRepo + " /var/www/html/copy/template");
  result=command.execute();
  if (result != null) {
    s_logger.warn("Error in linking  err=" + result);
    return;
  }
}
