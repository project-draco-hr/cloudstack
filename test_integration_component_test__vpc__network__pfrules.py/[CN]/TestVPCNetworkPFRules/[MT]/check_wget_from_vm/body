def check_wget_from_vm(self, vm, public_ip, network=None, testnegative=False, isVmAccessible=True):
    import urllib
    self.debug(('Checking if we can wget from a VM=%s http server on public_ip=%s' % (vm.name, public_ip.ipaddress.ipaddress)))
    try:
        if (not isVmAccessible):
            self.create_natrule(vm, public_ip, network)
        sshClient = vm.get_ssh_client()
        sshClient.execute('service httpd start')
        time.sleep(5)
        ssh_response = str(sshClient.execute('service httpd status')).lower()
        self.debug(('httpd service status is: %s' % ssh_response))
        if (not ('running' in ssh_response)):
            raise Exception('Failed to start httpd service')
        urllib.urlretrieve(('http://%s/test.html' % public_ip.ipaddress.ipaddress), filename='test.html')
        if (not testnegative):
            self.debug(('Successesfull to wget from VM=%s http server on public_ip=%s' % (vm.name, public_ip.ipaddress.ipaddress)))
        else:
            self.fail(('Successesfull to wget from VM=%s http server on public_ip=%s' % (vm.name, public_ip.ipaddress.ipaddress)))
    except Exception as e:
        if (not testnegative):
            self.fail(('Failed to wget from VM=%s http server on public_ip=%s: %s' % (vm.name, public_ip.ipaddress.ipaddress, e)))
        else:
            self.debug(('Failed to wget from VM=%s http server on public_ip=%s: %s' % (vm.name, public_ip.ipaddress.ipaddress, e)))
