{
  ParsePosition startpos=pos;
  int p=pos.getIndex();
  try {
    int YYYY=Integer.valueOf(dateString.substring(p,p + 4)).intValue();
    p+=4;
    if (dateString.charAt(p) != '-') {
      throw new IllegalArgumentException();
    }
    p++;
    int MM=Integer.valueOf(dateString.substring(p,p + 2)).intValue() - 1;
    p+=2;
    if (dateString.charAt(p) != '-') {
      throw new IllegalArgumentException();
    }
    p++;
    int DD=Integer.valueOf(dateString.substring(p,p + 2)).intValue();
    p+=2;
    if (dateString.charAt(p) != 'T') {
      throw new IllegalArgumentException();
    }
    p++;
    int hh=Integer.valueOf(dateString.substring(p,p + 2)).intValue();
    p+=2;
    if (dateString.charAt(p) != ':') {
      throw new IllegalArgumentException();
    }
    p++;
    int mm=Integer.valueOf(dateString.substring(p,p + 2)).intValue();
    p+=2;
    if (dateString.charAt(p) != ':') {
      throw new IllegalArgumentException();
    }
    p++;
    int ss=0;
    ss=Integer.valueOf(dateString.substring(p,p + 2)).intValue();
    p+=2;
    calendar.set(YYYY,MM,DD,hh,mm,ss);
    calendar.set(Calendar.MILLISECOND,0);
    p=parseTZ(p,dateString);
  }
 catch (  IllegalArgumentException ex) {
    super.setTimeZone(TimeZone.getTimeZone("GMT"));
    super.applyPattern("yyyy-MM-dd HH:mm:ss");
    return super.parse(dateString,startpos);
  }
catch (  Exception ex) {
    super.setTimeZone(TimeZone.getTimeZone("GMT"));
    return super.parse(dateString,startpos);
  }
 finally {
    pos.setIndex(p);
  }
  return calendar.getTime();
}
