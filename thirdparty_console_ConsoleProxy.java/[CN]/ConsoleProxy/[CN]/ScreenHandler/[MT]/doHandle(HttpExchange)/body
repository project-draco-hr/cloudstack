{
  String queries=t.getRequestURI().getQuery();
  Map<String,String> queryMap=getQueryMap(queries);
  int width=0;
  int height=0;
  int port=0;
  String ws=queryMap.get("w");
  String hs=queryMap.get("h");
  String host=queryMap.get("host");
  String portStr=queryMap.get("port");
  String sid=queryMap.get("sid");
  if (ws == null || hs == null || host == null || portStr == null || sid == null) {
    throw new IllegalArgumentException();
  }
  try {
    width=Integer.parseInt(ws);
    height=Integer.parseInt(hs);
    port=Integer.parseInt(portStr);
  }
 catch (  NumberFormatException e) {
    throw new IllegalArgumentException(e);
  }
  ConsoleViewer viewer=getVncViewer(host,port,sid);
  if (viewer.status != ConsoleViewer.STATUS_NORMAL_OPERATION) {
    File f=new File("./notready.jpg");
    long length=f.length();
    FileInputStream fis=new FileInputStream(f);
    Headers hds=t.getResponseHeaders();
    hds.set("Content-Type","image/jpeg");
    hds.set("Cache-Control","no-cache");
    hds.set("Cache-Control","no-store");
    t.sendResponseHeaders(200,length);
    OutputStream os=t.getResponseBody();
    try {
      while (true) {
        byte[] b=new byte[8192];
        int n=fis.read(b);
        if (n < 0) {
          break;
        }
        os.write(b,0,n);
      }
    }
  finally {
      os.close();
      fis.close();
    }
    Logger.log(Logger.INFO,"Console not ready, sent dummy JPG response");
    return;
  }
{
    Image scaledImage=viewer.vc.memImage.getScaledInstance(width,height,Image.SCALE_DEFAULT);
    BufferedImage bufferedImage=new BufferedImage(width,height,BufferedImage.TYPE_3BYTE_BGR);
    Graphics2D bufImageGraphics=bufferedImage.createGraphics();
    bufImageGraphics.drawImage(scaledImage,0,0,null);
    ByteArrayOutputStream bos=new ByteArrayOutputStream(8196);
    javax.imageio.ImageIO.write(bufferedImage,"jpg",bos);
    byte[] bs=bos.toByteArray();
    Headers hds=t.getResponseHeaders();
    hds.set("Content-Type","image/jpeg");
    hds.set("Cache-Control","no-cache");
    hds.set("Cache-Control","no-store");
    t.sendResponseHeaders(200,bs.length);
    OutputStream os=t.getResponseBody();
    os.write(bs);
    os.close();
  }
}
