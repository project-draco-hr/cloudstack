def test_6_multipleDestroyRequests(self):
    '\n        Start a few Vms, destroy them, destroy them again before they reach\n        expunging state, make sure the resource count remains consistent\n        '
    mdf = hashlib.md5()
    mdf.update('password')
    mdf_pass = mdf.hexdigest()
    api = self.testClient.getApiClient()
    acct = createAccount.createAccountCmd()
    acct.accounttype = 0
    name = ''.join((random.choice((string.ascii_uppercase + string.digits)) for x in range(10)))
    acct.firstname = name
    acct.lastname = name
    acct.password = mdf_pass
    acct.username = name
    acct.email = 'puser@example.com'
    acct.account = name
    acct.domainid = 1
    acctResponse = api.createAccount(acct)
    vmlist = []
    for i in range(0, 5):
        resp = api.deployVirtualMachine(self.deployCmd(name))
        vmlist.append(resp.id)
    for vm in vmlist:
        api.destroyVirtualMachine(self.destroyCmd(vm))
        time.sleep(1)
        api.destroyVirtualMachine(self.destroyCmd(vm))
    acctVms = self.listVmsInAccount(name)
    if (acctVms is not None):
        self.debug(('%d vms found in account: %s.' % (len(acctVms), name)))
        self.assertEqual(5, len(acctVms))
        listacctresponse = self.listAccounts(name)
        self.assertEqual((int(listacctresponse[0].vmrunning) + int(listacctresponse[0].vmstopped)), int(listacctresponse[0].vmtotal))
