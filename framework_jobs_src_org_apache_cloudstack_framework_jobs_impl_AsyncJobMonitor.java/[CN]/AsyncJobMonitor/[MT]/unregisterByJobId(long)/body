{
synchronized (this) {
    Iterator<Map.Entry<Long,ActiveTaskRecord>> it=_activeTasks.entrySet().iterator();
    while (it.hasNext()) {
      Map.Entry<Long,ActiveTaskRecord> entry=it.next();
      if (entry.getValue().getJobId() == jobId) {
        logger.info("Remove Job-" + entry.getValue().getJobId() + " from job monitoring due to job cancelling");
        if (entry.getValue().isPoolThread())         _activePoolThreads.decrementAndGet();
 else         _activeInplaceThreads.decrementAndGet();
        it.remove();
      }
    }
  }
}
