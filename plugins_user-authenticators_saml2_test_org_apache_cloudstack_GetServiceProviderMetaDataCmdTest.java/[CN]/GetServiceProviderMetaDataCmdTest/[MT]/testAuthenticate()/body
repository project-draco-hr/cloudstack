{
  GetServiceProviderMetaDataCmd cmd=new GetServiceProviderMetaDataCmd();
  Field apiServerField=GetServiceProviderMetaDataCmd.class.getDeclaredField("_apiServer");
  apiServerField.setAccessible(true);
  apiServerField.set(cmd,apiServer);
  Field managerField=GetServiceProviderMetaDataCmd.class.getDeclaredField("_samlAuthManager");
  managerField.setAccessible(true);
  managerField.set(cmd,samlAuthManager);
  String spId="someSPID";
  String url="someUrl";
  KeyPair kp=SAMLUtils.generateRandomKeyPair();
  X509Certificate cert=SAMLUtils.generateRandomX509Certificate(kp);
  SAMLProviderMetadata providerMetadata=new SAMLProviderMetadata();
  providerMetadata.setEntityId("random");
  providerMetadata.setSigningCertificate(cert);
  providerMetadata.setEncryptionCertificate(cert);
  providerMetadata.setKeyPair(kp);
  providerMetadata.setSsoUrl("http://test.local");
  providerMetadata.setSloUrl("http://test.local");
  Mockito.when(samlAuthManager.getSPMetadata()).thenReturn(providerMetadata);
  String result=cmd.authenticate("command",null,session,InetAddress.getByName("127.0.0.1"),HttpUtils.RESPONSE_TYPE_JSON,new StringBuilder(),req,resp);
  Assert.assertTrue(result.contains("md:EntityDescriptor"));
}
