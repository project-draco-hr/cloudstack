{
  if (services.contains(Service.SourceNat)) {
    List<NiciraNvpDeviceVO> devices=niciraNvpDao.listByPhysicalNetwork(network.getPhysicalNetworkId());
    if (devices.isEmpty()) {
      s_logger.error("No NiciraNvp Controller on physical network " + network.getPhysicalNetworkId());
      return false;
    }
    NiciraNvpDeviceVO niciraNvpDevice=devices.get(0);
    HostVO niciraNvpHost=hostDao.findById(niciraNvpDevice.getHostId());
    hostDao.loadDetails(niciraNvpHost);
    NiciraNvpRouterMappingVO routermapping=niciraNvpRouterMappingDao.findByNetworkId(network.getId());
    if (routermapping == null) {
      s_logger.error("No logical router uuid found for network " + network.getDisplayText());
      return false;
    }
    List<String> cidrs=new ArrayList<String>();
    for (    PublicIpAddress ip : ipAddress) {
      if (ip.getState() == IpAddress.State.Releasing) {
        continue;
      }
      cidrs.add(ip.getAddress().addr() + "/" + NetUtils.getCidrSize(ip.getNetmask()));
    }
    ConfigurePublicIpsOnLogicalRouterCommand cmd=new ConfigurePublicIpsOnLogicalRouterCommand(routermapping.getLogicalRouterUuid(),niciraNvpHost.getDetail("l3gatewayserviceuuid"),cidrs);
    ConfigurePublicIpsOnLogicalRouterAnswer answer=(ConfigurePublicIpsOnLogicalRouterAnswer)agentMgr.easySend(niciraNvpHost.getId(),cmd);
    return answer.getResult();
  }
 else {
    s_logger.debug("No need to provision ip addresses as we are not providing L3 services.");
  }
  return true;
}
