{
  s_logger.debug("entering NiciraNvpElement implement function for network " + network.getDisplayText() + " (state "+ network.getState()+ ")");
  if (!canHandle(network,Service.Connectivity)) {
    return false;
  }
  if (network.getBroadcastUri() == null) {
    s_logger.error("Nic has no broadcast Uri with the LSwitch Uuid");
    return false;
  }
  List<NiciraNvpDeviceVO> devices=niciraNvpDao.listByPhysicalNetwork(network.getPhysicalNetworkId());
  if (devices.isEmpty()) {
    s_logger.error("No NiciraNvp Controller on physical network " + network.getPhysicalNetworkId());
    return false;
  }
  NiciraNvpDeviceVO niciraNvpDevice=devices.get(0);
  HostVO niciraNvpHost=hostDao.findById(niciraNvpDevice.getHostId());
  hostDao.loadDetails(niciraNvpHost);
  Account owner=context.getAccount();
  if (networkModel.isProviderSupportServiceInNetwork(network.getId(),Service.SourceNat,Provider.NiciraNvp)) {
    s_logger.debug("Apparently we are supposed to provide SourceNat on this network");
    PublicIp sourceNatIp=ipAddrMgr.assignSourceNatIpAddressToGuestNetwork(owner,network);
    String publicCidr=sourceNatIp.getAddress().addr() + "/" + NetUtils.getCidrSize(sourceNatIp.getVlanNetmask());
    String internalCidr=network.getGateway() + "/" + network.getCidr().split("/")[1];
    String vtag=sourceNatIp.getVlanTag();
    BroadcastDomainType tiep=BroadcastDomainType.toEnumValue(vtag);
    if (tiep == BroadcastDomainType.Vlan) {
      vtag=BroadcastDomainType.Vlan.getValueFrom(BroadcastDomainType.fromString(vtag));
    }
 else     if (tiep != BroadcastDomainType.UnDecided) {
      throw new CloudRuntimeException("only vlans are supported for sourceNatIp, at this moment: " + vtag);
    }
    long vlanid=(Vlan.UNTAGGED.equals(sourceNatIp.getVlanTag())) ? 0 : Long.parseLong(vtag);
    CreateLogicalRouterCommand cmd=new CreateLogicalRouterCommand(niciraNvpHost.getDetail("l3gatewayserviceuuid"),vlanid,BroadcastDomainType.getValue(network.getBroadcastUri()),"router-" + network.getDisplayText(),publicCidr,sourceNatIp.getGateway(),internalCidr,context.getDomain().getName() + "-" + context.getAccount().getAccountName());
    CreateLogicalRouterAnswer answer=(CreateLogicalRouterAnswer)agentMgr.easySend(niciraNvpHost.getId(),cmd);
    if (answer.getResult() == false) {
      s_logger.error("Failed to create Logical Router for network " + network.getDisplayText());
      return false;
    }
    NiciraNvpRouterMappingVO routermapping=new NiciraNvpRouterMappingVO(answer.getLogicalRouterUuid(),network.getId());
    niciraNvpRouterMappingDao.persist(routermapping);
  }
  return true;
}
