{
  if (!canHandle(network)) {
    return false;
  }
  if (network.getBroadcastUri() == null) {
    s_logger.error("Nic has no broadcast Uri with the LSwitch Uuid");
    return false;
  }
  NicVO nicVO=_nicDao.findById(nic.getId());
  List<NiciraNvpDeviceVO> devices=_niciraNvpDao.listByPhysicalNetwork(network.getPhysicalNetworkId());
  if (devices.isEmpty()) {
    s_logger.error("No NiciraNvp Controller on physical network " + network.getPhysicalNetworkId());
    return false;
  }
  NiciraNvpDeviceVO niciraNvpDevice=devices.get(0);
  HostVO niciraNvpHost=_hostDao.findById(niciraNvpDevice.getHostId());
  NiciraNvpNicMappingVO nicMap=_niciraNvpNicMappingDao.findByNicUuid(nicVO.getUuid());
  if (nicMap == null) {
    s_logger.error("No mapping for nic " + nic.getName());
    return false;
  }
  DeleteLogicalSwitchPortCommand cmd=new DeleteLogicalSwitchPortCommand(nicMap.getLogicalSwitchUuid(),nicMap.getLogicalSwitchPortUuid());
  DeleteLogicalSwitchPortAnswer answer=(DeleteLogicalSwitchPortAnswer)_agentMgr.easySend(niciraNvpHost.getId(),cmd);
  if (answer == null || !answer.getResult()) {
    s_logger.error("DeleteLogicalSwitchPortCommand failed");
    return false;
  }
  _niciraNvpNicMappingDao.remove(nicMap.getId());
  return true;
}
