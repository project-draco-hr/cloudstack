{
  int user_port=-1;
  String ip=null;
  String torrent=null;
  Level level=Level.INFO;
  int i=0;
  while (i < args.length) {
    if (args[i].equals("--debug")) {
      level=Level.FINE;
      i++;
      if (i < args.length) {
        try {
          level=Level.parse(args[i]);
        }
 catch (        IllegalArgumentException iae) {
        }
        i++;
      }
    }
 else     if (args[i].equals("--port")) {
      if (args.length - 1 < i + 1) {
        usage("--port needs port number to listen on");
      }
      try {
        user_port=Integer.parseInt(args[i + 1]);
      }
 catch (      NumberFormatException nfe) {
        usage("--port argument must be a number (" + nfe + ")");
      }
      i+=2;
    }
 else     if (args[i].equals("--share")) {
      if (args.length - 1 < i + 1) {
        usage("--share needs local ip-address or host-name");
      }
      ip=args[i + 1];
      i+=2;
    }
 else     if (args[i].equals("--no-commands") || args[i].equals("--show-peers")) {
      i++;
    }
 else     if (args[i].equals("--help")) {
      usage(null);
    }
 else {
      torrent=args[i];
      i++;
      break;
    }
  }
  log.setLevel(level);
  Snark.setLogLevel(level);
  if (torrent == null || i != args.length) {
    if (torrent != null && torrent.startsWith("-")) {
      usage("Unknown option '" + torrent + "'.");
    }
 else {
      usage("Need exactly one <url>, <file> or <dir>.");
    }
  }
  Snark snark=new Snark(torrent,ip,user_port,slistener,clistener);
  return snark;
}
