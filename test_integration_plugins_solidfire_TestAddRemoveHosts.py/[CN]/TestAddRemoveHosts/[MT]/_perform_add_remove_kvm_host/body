def _perform_add_remove_kvm_host(self, primary_storage_id):
    sf_vag_id = self._get_sf_vag_id(self.cluster.id, primary_storage_id)
    kvm_login = self.testdata[TestData.kvm]
    kvm_hosts = []
    kvm_hosts.append(TestData.kvm_1_ip_address)
    host_iscsi_iqns = self._get_kvm_host_iscsi_iqns(kvm_hosts, kvm_login[TestData.username], kvm_login[TestData.password])
    sf_vag = self._get_sf_vag(sf_vag_id)
    sf_vag_initiators = self._get_sf_vag_initiators(sf_vag)
    self._verifyVag(host_iscsi_iqns, sf_vag_initiators)
    sf_vag_initiators_len_orig = len(sf_vag_initiators)
    host = Host.create(self.apiClient, self.cluster, self.testdata[TestData.newKvmHost], hypervisor='KVM')
    self.assertTrue(isinstance(host, Host), "'host' is not a 'Host'.")
    kvm_hosts = []
    kvm_hosts.append(TestData.kvm_1_ip_address)
    kvm_hosts.append(TestData.ip_address_of_new_kvm_host)
    host_iscsi_iqns = self._get_kvm_host_iscsi_iqns(kvm_hosts, kvm_login[TestData.username], kvm_login[TestData.password])
    sf_vag = self._get_sf_vag(sf_vag_id)
    sf_vag_initiators = self._get_sf_vag_initiators(sf_vag)
    self._verifyVag(host_iscsi_iqns, sf_vag_initiators)
    sf_vag_initiators_len_new = len(sf_vag_initiators)
    self.assertEqual(sf_vag_initiators_len_new, (sf_vag_initiators_len_orig + 1), "sf_vag_initiators_len_new' != sf_vag_initiators_len_orig + 1")
    host.delete(self.apiClient)
    kvm_hosts = []
    kvm_hosts.append(TestData.kvm_1_ip_address)
    host_iscsi_iqns = self._get_kvm_host_iscsi_iqns(kvm_hosts, kvm_login[TestData.username], kvm_login[TestData.password])
    sf_vag = self._get_sf_vag(sf_vag_id)
    sf_vag_initiators = self._get_sf_vag_initiators(sf_vag)
    self._verifyVag(host_iscsi_iqns, sf_vag_initiators)
    sf_vag_initiators_len_new = len(sf_vag_initiators)
    self.assertEqual(sf_vag_initiators_len_new, sf_vag_initiators_len_orig, "sf_vag_initiators_len_new' != sf_vag_initiators_len_orig")
