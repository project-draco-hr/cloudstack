def test_add_remove_host_with_solidfire_plugin_4(self):
    if (TestData.hypervisor_type != TestData.xenServer):
        return
    primarystorage2 = self.testdata[TestData.primaryStorage2]
    primary_storage_2 = StoragePool.create(self.apiClient, primarystorage2, scope=primarystorage2[TestData.scope], zoneid=self.zone.id, clusterid=self.cluster.id, provider=primarystorage2[TestData.provider], tags=primarystorage2[TestData.tags], capacityiops=primarystorage2[TestData.capacityIops], capacitybytes=primarystorage2[TestData.capacityBytes], hypervisor=primarystorage2[TestData.hypervisor])
    self.cleanup.append(primary_storage_2)
    sf_iscsi_name = self._get_iqn_2(primary_storage_2)
    primarystorage = self.testdata[TestData.primaryStorage]
    primary_storage = StoragePool.create(self.apiClient, primarystorage, scope=primarystorage[TestData.scope], zoneid=self.zone.id, provider=primarystorage[TestData.provider], tags=primarystorage[TestData.tags], capacityiops=primarystorage[TestData.capacityIops], capacitybytes=primarystorage[TestData.capacityBytes], hypervisor=primarystorage[TestData.hypervisor])
    self.cleanup.append(primary_storage)
    self.virtual_machine = VirtualMachine.create(self.apiClient, self.testdata[TestData.virtualMachine], accountid=self.account.name, zoneid=self.zone.id, serviceofferingid=self.compute_offering.id, templateid=self.template.id, domainid=self.domain.id, startvm=True)
    self._perform_add_remove_xenserver_host(primary_storage_2.id, sf_iscsi_name)
