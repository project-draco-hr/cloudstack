{
  Account caller=UserContext.current().getCaller();
  User callerUser=_accountMgr.getActiveUser(UserContext.current().getCallerUserId());
  DomainRouterVO router=_routerDao.findById(routerId);
  if (router == null) {
    throw new InvalidParameterValueException("Unable to find router by id " + routerId + ".");
  }
  _accountMgr.checkAccess(caller,null,router);
  Account owner=_accountMgr.getAccount(router.getAccountId());
  DataCenter dc=_dcDao.findById(router.getDataCenterIdToDeployIn());
  HostPodVO pod=null;
  if (router.getPodIdToDeployIn() != null) {
    pod=_podDao.findById(router.getPodIdToDeployIn());
  }
  DeployDestination dest=new DeployDestination(dc,pod,null,null);
  ReservationContext context=new ReservationContextImpl(null,null,callerUser,owner);
  List<NicVO> nics=_nicDao.listByVmId(routerId);
  for (  NicVO nic : nics) {
    if (!_networkMgr.startNetwork(nic.getNetworkId(),dest,context)) {
      s_logger.warn("Failed to start network id=" + nic.getNetworkId() + " as a part of domR start");
      throw new CloudRuntimeException("Failed to start network id=" + nic.getNetworkId() + " as a part of domR start");
    }
  }
  UserVO user=_userDao.findById(UserContext.current().getCallerUserId());
  Map<Param,Object> params=new HashMap<Param,Object>();
  if (reprogramNetwork) {
    params.put(Param.ReProgramNetwork,true);
  }
 else {
    params.put(Param.ReProgramNetwork,false);
  }
  return startVirtualRouter(router,user,caller,params);
}
