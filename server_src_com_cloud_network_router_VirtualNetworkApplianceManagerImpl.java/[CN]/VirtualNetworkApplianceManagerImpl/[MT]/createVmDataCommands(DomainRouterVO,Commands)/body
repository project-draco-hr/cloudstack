{
  long networkId=router.getNetworkId();
  List<UserVmVO> vms=_userVmDao.listByNetworkIdAndStates(networkId,State.Running,State.Migrating,State.Stopping);
  DataCenterVO dc=_dcDao.findById(router.getDataCenterIdToDeployIn());
  for (  UserVmVO vm : vms) {
    boolean createVmData=true;
    if (dc.getNetworkType() == NetworkType.Basic && router.getPodIdToDeployIn().longValue() != vm.getPodIdToDeployIn().longValue()) {
      createVmData=false;
    }
    if (createVmData) {
      NicVO nic=_nicDao.findByInstanceIdAndNetworkId(networkId,vm.getId());
      if (nic != null) {
        s_logger.debug("Creating user data entry for vm " + vm + " on domR "+ router);
        String serviceOffering=_serviceOfferingDao.findByIdIncludingRemoved(vm.getServiceOfferingId()).getDisplayText();
        String zoneName=_dcDao.findById(router.getDataCenterIdToDeployIn()).getName();
        cmds.addCommand("vmdata",generateVmDataCommand(router,nic.getIp4Address(),vm.getUserData(),serviceOffering,zoneName,nic.getIp4Address(),vm.getHostName(),vm.getInstanceName(),vm.getId(),null));
      }
    }
  }
}
