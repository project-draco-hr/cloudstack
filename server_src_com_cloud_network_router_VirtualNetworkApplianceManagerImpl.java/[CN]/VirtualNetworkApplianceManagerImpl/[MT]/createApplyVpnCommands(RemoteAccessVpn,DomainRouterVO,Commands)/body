{
  List<VpnUserVO> vpnUsers=_vpnUsersDao.listByAccount(vpn.getAccountId());
  List<VpnUser> addUsers=new ArrayList<VpnUser>();
  List<VpnUser> removeUsers=new ArrayList<VpnUser>();
  for (  VpnUser user : vpnUsers) {
    if (user.getState() == VpnUser.State.Add) {
      addUsers.add(user);
    }
 else     if (user.getState() == VpnUser.State.Revoke) {
      removeUsers.add(user);
    }
  }
  VpnUsersCfgCommand addUsersCmd=new VpnUsersCfgCommand(addUsers,removeUsers);
  addUsersCmd.setAccessDetail(NetworkElementCommand.ROUTER_IP,router.getPrivateIpAddress());
  addUsersCmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP,router.getGuestIpAddress());
  addUsersCmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME,router.getInstanceName());
  IpAddress ip=_networkMgr.getIp(vpn.getServerAddressId());
  RemoteAccessVpnCfgCommand startVpnCmd=new RemoteAccessVpnCfgCommand(true,ip.getAddress().addr(),vpn.getLocalIp(),vpn.getIpRange(),vpn.getIpsecPresharedKey());
  startVpnCmd.setAccessDetail(NetworkElementCommand.ROUTER_IP,router.getPrivateIpAddress());
  startVpnCmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP,router.getGuestIpAddress());
  startVpnCmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME,router.getInstanceName());
  DataCenterVO dcVo=_dcDao.findById(router.getDataCenterIdToDeployIn());
  startVpnCmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE,dcVo.getNetworkType().toString());
  cmds.addCommand("users",addUsersCmd);
  cmds.addCommand("startVpn",startVpnCmd);
}
