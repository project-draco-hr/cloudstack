{
  if (publicNetwork.getTrafficType() != TrafficType.Public) {
    s_logger.warn("Network " + publicNetwork + " is not of type "+ TrafficType.Public);
    return false;
  }
  boolean result=true;
  try {
    NicProfile defaultNic=new NicProfile();
    defaultNic.setDefaultNic(true);
    defaultNic.setIp4Address(sourceNatIp.getAddress().addr());
    defaultNic.setGateway(sourceNatIp.getGateway());
    defaultNic.setNetmask(sourceNatIp.getNetmask());
    defaultNic.setMacAddress(sourceNatIp.getMacAddress());
    defaultNic.setBroadcastType(BroadcastDomainType.Vlan);
    defaultNic.setBroadcastUri(BroadcastDomainType.Vlan.toUri(sourceNatIp.getVlanTag()));
    defaultNic.setIsolationUri(IsolationType.Vlan.toUri(sourceNatIp.getVlanTag()));
    NicProfile publicNic=_itMgr.addVmToNetwork(router,publicNetwork,defaultNic);
    if (publicNic != null) {
      publicNic.setDefaultNic(true);
      if (sourceNatIp != null) {
        IPAddressVO ipVO=_ipAddressDao.findById(sourceNatIp.getId());
        PublicIp publicIp=new PublicIp(ipVO,_vlanDao.findById(ipVO.getVlanId()),NetUtils.createSequenceBasedMacAddress(ipVO.getMacAddress()));
        result=setupPublicNetwork(publicNetwork,router,false,publicIp);
      }
    }
 else {
      result=false;
      s_logger.warn("Failed to add router " + router + " to the public network "+ publicNetwork);
    }
  }
 catch (  Exception ex) {
    s_logger.warn("Failed to add router " + router + " to the public network "+ publicNetwork+ " due to ",ex);
  }
 finally {
    if (!result) {
      s_logger.debug("Removing the router " + router + " from public network "+ publicNetwork+ " as a part of cleanup");
      if (removeRouterFromPublicNetwork(router,publicNetwork)) {
        s_logger.debug("Removed the router " + router + " from public network "+ publicNetwork+ " as a part of cleanup");
      }
 else {
        s_logger.warn("Failed to remove the router " + router + " from public network "+ publicNetwork+ " as a part of cleanup");
      }
    }
  }
  return result;
}
