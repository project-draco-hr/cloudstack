{
  UserContext context=UserContext.current();
  context.setAccountId(1);
  if (masterRouter.getState() == State.Running && backupRouter.getState() == State.Running) {
    HostVO masterHost=_hostDao.findById(masterRouter.getHostId());
    HostVO backupHost=_hostDao.findById(backupRouter.getHostId());
    if (masterHost.getStatus() == Status.Up && backupHost.getStatus() == Status.Up) {
      String title="Reboot " + backupRouter.getInstanceName() + " to ensure redundant virtual routers work";
      if (s_logger.isDebugEnabled()) {
        s_logger.debug(title);
      }
      _alertMgr.sendAlert(AlertManager.ALERT_TYPE_DOMAIN_ROUTER,backupRouter.getDataCenterIdToDeployIn(),backupRouter.getPodIdToDeployIn(),title,title);
      try {
        rebootRouter(backupRouter.getId(),false);
      }
 catch (      ConcurrentOperationException e) {
        s_logger.warn("Fail to reboot " + backupRouter.getInstanceName(),e);
      }
catch (      ResourceUnavailableException e) {
        s_logger.warn("Fail to reboot " + backupRouter.getInstanceName(),e);
      }
catch (      InsufficientCapacityException e) {
        s_logger.warn("Fail to reboot " + backupRouter.getInstanceName(),e);
      }
    }
  }
}
