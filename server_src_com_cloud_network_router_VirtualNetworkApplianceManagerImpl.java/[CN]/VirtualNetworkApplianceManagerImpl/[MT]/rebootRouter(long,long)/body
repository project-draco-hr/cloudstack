{
  AsyncJobExecutor asyncExecutor=BaseAsyncJobExecutor.getCurrentExecutor();
  if (asyncExecutor != null) {
    AsyncJobVO job=asyncExecutor.getJob();
    if (s_logger.isInfoEnabled()) {
      s_logger.info("Reboot router " + routerId + ", update async job-"+ job.getId());
    }
    _asyncMgr.updateAsyncJobAttachment(job.getId(),"domain_router",routerId);
  }
  final DomainRouterVO router=_routerDao.findById(routerId);
  if (router == null || router.getState() == State.Destroyed) {
    return false;
  }
  EventVO event=new EventVO();
  event.setUserId(1L);
  event.setAccountId(router.getAccountId());
  event.setType(EventTypes.EVENT_ROUTER_REBOOT);
  event.setState(Event.State.Started);
  event.setDescription("Rebooting Router with Id: " + routerId);
  event.setStartId(startEventId);
  _eventDao.persist(event);
  event=new EventVO();
  event.setUserId(1L);
  event.setAccountId(router.getAccountId());
  event.setType(EventTypes.EVENT_ROUTER_REBOOT);
  event.setStartId(startEventId);
  return false;
}
