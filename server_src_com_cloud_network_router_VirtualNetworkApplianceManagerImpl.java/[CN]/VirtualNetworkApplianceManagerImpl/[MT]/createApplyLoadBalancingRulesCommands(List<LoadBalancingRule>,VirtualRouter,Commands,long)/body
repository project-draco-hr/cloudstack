{
  final LoadBalancerTO[] lbs=new LoadBalancerTO[rules.size()];
  int i=0;
  final boolean inline=false;
  for (  final LoadBalancingRule rule : rules) {
    final boolean revoked=rule.getState().equals(FirewallRule.State.Revoke);
    final String protocol=rule.getProtocol();
    final String algorithm=rule.getAlgorithm();
    final String uuid=rule.getUuid();
    final String srcIp=rule.getSourceIp().addr();
    final int srcPort=rule.getSourcePortStart();
    final List<LbDestination> destinations=rule.getDestinations();
    final List<LbStickinessPolicy> stickinessPolicies=rule.getStickinessPolicies();
    final LoadBalancerTO lb=new LoadBalancerTO(uuid,srcIp,srcPort,protocol,algorithm,revoked,false,inline,destinations,stickinessPolicies);
    lbs[i++]=lb;
  }
  String routerPublicIp=null;
  if (router instanceof DomainRouterVO) {
    final DomainRouterVO domr=_routerDao.findById(router.getId());
    routerPublicIp=domr.getPublicIpAddress();
  }
  final Network guestNetwork=_networkModel.getNetwork(guestNetworkId);
  final Nic nic=_nicDao.findByNtwkIdAndInstanceId(guestNetwork.getId(),router.getId());
  final NicProfile nicProfile=new NicProfile(nic,guestNetwork,nic.getBroadcastUri(),nic.getIsolationUri(),_networkModel.getNetworkRate(guestNetwork.getId(),router.getId()),_networkModel.isSecurityGroupSupportedInNetwork(guestNetwork),_networkModel.getNetworkTag(router.getHypervisorType(),guestNetwork));
  final NetworkOffering offering=_networkOfferingDao.findById(guestNetwork.getNetworkOfferingId());
  String maxconn=null;
  if (offering.getConcurrentConnections() == null) {
    maxconn=_configDao.getValue(Config.NetworkLBHaproxyMaxConn.key());
  }
 else {
    maxconn=offering.getConcurrentConnections().toString();
  }
  final LoadBalancerConfigCommand cmd=new LoadBalancerConfigCommand(lbs,routerPublicIp,getRouterIpInNetwork(guestNetworkId,router.getId()),router.getPrivateIpAddress(),_itMgr.toNicTO(nicProfile,router.getHypervisorType()),router.getVpcId(),maxconn,offering.isKeepAliveEnabled());
  cmd.lbStatsVisibility=_configDao.getValue(Config.NetworkLBHaproxyStatsVisbility.key());
  cmd.lbStatsUri=_configDao.getValue(Config.NetworkLBHaproxyStatsUri.key());
  cmd.lbStatsAuth=_configDao.getValue(Config.NetworkLBHaproxyStatsAuth.key());
  cmd.lbStatsPort=_configDao.getValue(Config.NetworkLBHaproxyStatsPort.key());
  cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP,getRouterControlIp(router.getId()));
  cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP,getRouterIpInNetwork(guestNetworkId,router.getId()));
  cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME,router.getInstanceName());
  final DataCenterVO dcVo=_dcDao.findById(router.getDataCenterId());
  cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE,dcVo.getNetworkType().toString());
  cmds.addCommand(cmd);
}
