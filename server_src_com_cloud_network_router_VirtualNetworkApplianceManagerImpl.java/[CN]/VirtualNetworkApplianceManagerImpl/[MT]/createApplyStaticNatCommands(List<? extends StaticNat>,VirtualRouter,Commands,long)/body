{
  List<StaticNatRuleTO> rulesTO=null;
  if (rules != null) {
    rulesTO=new ArrayList<StaticNatRuleTO>();
    for (    final StaticNat rule : rules) {
      final IpAddress sourceIp=_networkModel.getIp(rule.getSourceIpAddressId());
      final StaticNatRuleTO ruleTO=new StaticNatRuleTO(0,sourceIp.getAddress().addr(),null,null,rule.getDestIpAddress(),null,null,null,rule.isForRevoke(),false);
      rulesTO.add(ruleTO);
    }
  }
  final SetStaticNatRulesCommand cmd=new SetStaticNatRulesCommand(rulesTO,router.getVpcId());
  cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP,getRouterControlIp(router.getId()));
  cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP,getRouterIpInNetwork(guestNetworkId,router.getId()));
  cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME,router.getInstanceName());
  final DataCenterVO dcVo=_dcDao.findById(router.getDataCenterId());
  cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE,dcVo.getNetworkType().toString());
  cmds.addCommand(cmd);
}
