{
  final State newState=transition.getToState();
  final VirtualMachine.Event event=transition.getEvent();
  if (event == VirtualMachine.Event.FollowAgentPowerOnReport && newState == State.Running) {
    if (vo.getType() == VirtualMachine.Type.DomainRouter) {
      if (opaque != null && opaque instanceof Pair<?,?>) {
        Pair<?,?> pair=(Pair<?,?>)opaque;
        Object first=pair.first();
        Object second=pair.second();
        if (second != null && second instanceof Long) {
          Long powerHostId=(Long)second;
          Long hostId=null;
          if (first != null && first instanceof Long) {
            hostId=(Long)first;
          }
          if (hostId == null || (hostId.longValue() != powerHostId.longValue())) {
            s_logger.info("Schedule a router reboot task as router " + vo.getId() + " is powered-on out-of-band, need to reboot to refresh network rules");
            _executor.schedule(new RebootTask(vo.getId()),1000,TimeUnit.MICROSECONDS);
          }
        }
      }
    }
  }
  return true;
}
