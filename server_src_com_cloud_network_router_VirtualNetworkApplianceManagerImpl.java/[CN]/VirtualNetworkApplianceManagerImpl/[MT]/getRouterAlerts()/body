{
  try {
    List<DomainRouterVO> routers=_routerDao.listByStateAndManagementServer(State.Running,mgmtSrvrId);
    s_logger.debug("Found " + routers.size() + " running routers. ");
    for (    final DomainRouterVO router : routers) {
      String serviceMonitoringFlag=SetServiceMonitor.valueIn(router.getDataCenterId());
      if (!Boolean.parseBoolean(serviceMonitoringFlag) || router.getVpcId() != null) {
        continue;
      }
      String privateIP=router.getPrivateIpAddress();
      if (privateIP != null) {
        OpRouterMonitorServiceVO opRouterMonitorServiceVO=_opRouterMonitorServiceDao.findById(router.getId());
        GetRouterAlertsCommand command=null;
        if (opRouterMonitorServiceVO == null) {
          command=new GetRouterAlertsCommand(new String("1970-01-01 00:00:00"));
        }
 else {
          command=new GetRouterAlertsCommand(opRouterMonitorServiceVO.getLastAlertTimestamp());
        }
        command.setAccessDetail(NetworkElementCommand.ROUTER_IP,router.getPrivateIpAddress());
        try {
          final Answer origAnswer=_agentMgr.easySend(router.getHostId(),command);
          GetRouterAlertsAnswer answer=null;
          if (origAnswer == null) {
            s_logger.warn("Unable to get alerts from router " + router.getHostName());
            continue;
          }
          if (origAnswer instanceof GetRouterAlertsAnswer) {
            answer=(GetRouterAlertsAnswer)origAnswer;
          }
 else {
            s_logger.warn("Unable to get alerts from router " + router.getHostName());
            continue;
          }
          if (!answer.getResult()) {
            s_logger.warn("Unable to get alerts from router " + router.getHostName() + " "+ answer.getDetails());
            continue;
          }
          String alerts[]=answer.getAlerts();
          if (alerts != null) {
            String lastAlertTimeStamp=answer.getTimeStamp();
            SimpleDateFormat sdfrmt=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
            sdfrmt.setLenient(false);
            try {
              sdfrmt.parse(lastAlertTimeStamp);
            }
 catch (            ParseException e) {
              s_logger.warn("Invalid last alert timestamp received while collecting alerts from router: " + router.getInstanceName());
              continue;
            }
            for (            String alert : alerts) {
              _alertMgr.sendAlert(AlertType.ALERT_TYPE_DOMAIN_ROUTER,router.getDataCenterId(),router.getPodIdToDeployIn(),"Monitoring Service on VR " + router.getInstanceName(),alert);
            }
            if (opRouterMonitorServiceVO == null) {
              opRouterMonitorServiceVO=new OpRouterMonitorServiceVO(router.getId(),router.getHostName(),lastAlertTimeStamp);
              _opRouterMonitorServiceDao.persist(opRouterMonitorServiceVO);
            }
 else {
              opRouterMonitorServiceVO.setLastAlertTimestamp(lastAlertTimeStamp);
              _opRouterMonitorServiceDao.update(opRouterMonitorServiceVO.getId(),opRouterMonitorServiceVO);
            }
          }
        }
 catch (        Exception e) {
          s_logger.warn("Error while collecting alerts from router: " + router.getInstanceName(),e);
          continue;
        }
      }
    }
  }
 catch (  Exception e) {
    s_logger.warn("Error while collecting alerts from router",e);
  }
}
