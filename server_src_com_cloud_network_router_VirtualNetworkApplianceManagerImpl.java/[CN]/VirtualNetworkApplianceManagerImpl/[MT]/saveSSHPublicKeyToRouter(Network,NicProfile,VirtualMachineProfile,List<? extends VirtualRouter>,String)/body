{
  final UserVmVO vm=_userVmDao.findById(profile.getVirtualMachine().getId());
  _userVmDao.loadDetails(vm);
  final VirtualMachineProfile updatedProfile=profile;
  return applyRules(network,routers,"save SSHkey entry",false,null,false,new RuleApplier(){
    @Override public boolean execute(    Network network,    VirtualRouter router) throws ResourceUnavailableException {
      Commands cmds=new Commands(Command.OnError.Stop);
      NicVO nicVo=_nicDao.findById(nic.getId());
      VMTemplateVO template=_templateDao.findByIdIncludingRemoved(updatedProfile.getTemplateId());
      if (template != null && template.getEnablePassword()) {
        createPasswordCommand(router,updatedProfile,nicVo,cmds);
      }
      createVmDataCommand(router,vm,nicVo,SSHPublicKey,cmds);
      return sendCommandsToRouter(router,cmds);
    }
  }
);
}
