{
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    final TransactionStatus status){
      final List<Long> routerGuestNtwkIds=_routerDao.getRouterNetworks(router.getId());
      for (      final Long guestNtwkId : routerGuestNtwkIds) {
        final UserStatisticsVO userStats=_userStatsDao.lock(router.getAccountId(),router.getDataCenterId(),guestNtwkId,null,router.getId(),router.getType().toString());
        if (userStats != null) {
          final long currentBytesRcvd=userStats.getCurrentBytesReceived();
          userStats.setCurrentBytesReceived(0);
          userStats.setNetBytesReceived(userStats.getNetBytesReceived() + currentBytesRcvd);
          final long currentBytesSent=userStats.getCurrentBytesSent();
          userStats.setCurrentBytesSent(0);
          userStats.setNetBytesSent(userStats.getNetBytesSent() + currentBytesSent);
          _userStatsDao.update(userStats.getId(),userStats);
          logger.debug("Successfully updated user statistics as a part of domR " + router + " reboot/stop");
        }
 else {
          logger.warn("User stats were not created for account " + router.getAccountId() + " and dc "+ router.getDataCenterId());
        }
      }
    }
  }
);
}
