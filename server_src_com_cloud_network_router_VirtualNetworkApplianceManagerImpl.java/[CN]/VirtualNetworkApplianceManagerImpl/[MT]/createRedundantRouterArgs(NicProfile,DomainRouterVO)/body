{
  final StringBuilder buf=new StringBuilder();
  final long networkId=nic.getNetworkId();
  final NetworkVO network=_networkDao.findById(networkId);
  final boolean isRedundant=router.getIsRedundantRouter();
  if (isRedundant) {
    buf.append(" redundant_router=1");
    final List<DomainRouterVO> routers=_routerDao.listByNetworkAndRole(nic.getNetworkId(),Role.VIRTUAL_ROUTER);
    try {
      final int priority=getUpdatedPriority(network,routers,router);
      router.setPriority(priority);
      router=_routerDao.persist(router);
    }
 catch (    final InsufficientVirtualNetworkCapacityException e) {
      s_logger.error("Failed to get update priority!",e);
      throw new CloudRuntimeException("Failed to get update priority!");
    }
  }
  return buf;
}
