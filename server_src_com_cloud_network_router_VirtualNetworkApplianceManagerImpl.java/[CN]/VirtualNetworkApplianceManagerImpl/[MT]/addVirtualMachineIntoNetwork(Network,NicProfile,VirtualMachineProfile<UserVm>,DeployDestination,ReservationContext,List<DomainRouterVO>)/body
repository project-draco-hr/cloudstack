{
  List<VirtualRouter> rets=new ArrayList<VirtualRouter>(routers.size());
  for (  DomainRouterVO router : routers) {
    if (router.getState() != State.Running) {
      s_logger.warn("Unable to add virtual machine " + profile.getVirtualMachine() + " to the router "+ router+ " as the router is not in Running state");
      continue;
    }
    boolean sendPasswordAndVmData=true;
    boolean sendDnsDhcpData=true;
    _userVmDao.loadDetails((UserVmVO)profile.getVirtualMachine());
    DataCenter dc=dest.getDataCenter();
    Long podId=null;
    if (dc.getNetworkType() == NetworkType.Basic) {
      podId=dest.getPod().getId();
      if (router.getPodIdToDeployIn().longValue() != podId.longValue()) {
        sendPasswordAndVmData=false;
        if (_dnsBasicZoneUpdates.equalsIgnoreCase("pod")) {
          sendDnsDhcpData=false;
        }
      }
    }
    Commands cmds=new Commands(OnError.Stop);
    String routerControlIpAddress=null;
    List<NicVO> nics=_nicDao.listByVmId(router.getId());
    for (    NicVO n : nics) {
      NetworkVO nc=_networkDao.findById(n.getNetworkId());
      if (nc.getTrafficType() == TrafficType.Control) {
        routerControlIpAddress=n.getIp4Address();
      }
    }
    if (sendDnsDhcpData) {
      DhcpEntryCommand dhcpCommand=new DhcpEntryCommand(nic.getMacAddress(),nic.getIp4Address(),profile.getVirtualMachine().getHostName());
      dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_IP,routerControlIpAddress);
      dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP,router.getGuestIpAddress());
      dhcpCommand.setAccessDetail(NetworkElementCommand.ROUTER_NAME,router.getInstanceName());
      dhcpCommand.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE,dc.getNetworkType().toString());
      cmds.addCommand("dhcp",dhcpCommand);
    }
    if (sendPasswordAndVmData) {
      String password=(String)profile.getParameter(VirtualMachineProfile.Param.VmPassword);
      String userData=profile.getVirtualMachine().getUserData();
      String sshPublicKey=profile.getVirtualMachine().getDetail("SSH.PublicKey");
      if (password != null && network.isDefault()) {
        final String encodedPassword=PasswordGenerator.rot13(password);
        SavePasswordCommand cmd=new SavePasswordCommand(encodedPassword,nic.getIp4Address(),profile.getVirtualMachine().getHostName());
        cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP,router.getPrivateIpAddress());
        cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP,router.getGuestIpAddress());
        cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME,router.getInstanceName());
        cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE,dc.getNetworkType().toString());
        cmds.addCommand("password",cmd);
      }
      String serviceOffering=_serviceOfferingDao.findByIdIncludingRemoved(profile.getServiceOfferingId()).getDisplayText();
      String zoneName=_dcDao.findById(network.getDataCenterId()).getName();
      cmds.addCommand("vmdata",generateVmDataCommand(router,nic.getIp4Address(),userData,serviceOffering,zoneName,nic.getIp4Address(),profile.getVirtualMachine().getHostName(),profile.getVirtualMachine().getInstanceName(),profile.getId(),sshPublicKey));
    }
    if (cmds.size() > 0) {
      boolean podLevelException=false;
      if (dc.getNetworkType() == NetworkType.Basic && podId != null && profile.getVirtualMachine().getType() == VirtualMachine.Type.User && network.getTrafficType() == TrafficType.Guest && network.getGuestType() == GuestIpType.Direct) {
        podLevelException=true;
      }
      try {
        _agentMgr.send(router.getHostId(),cmds);
      }
 catch (      OperationTimedoutException e) {
        throw new AgentUnavailableException("Unable to reach the agent ",router.getHostId(),e);
      }
      Answer answer=cmds.getAnswer("dhcp");
      if (!answer.getResult()) {
        s_logger.error("Unable to set dhcp entry for " + profile + " on domR: "+ router.getHostName()+ " due to "+ answer.getDetails());
        if (podLevelException) {
          throw new ResourceUnavailableException("Unable to set dhcp entry for " + profile + " due to "+ answer.getDetails(),Pod.class,podId);
        }
        throw new ResourceUnavailableException("Unable to set dhcp entry for " + profile + " due to "+ answer.getDetails(),DataCenter.class,router.getDataCenterIdToDeployIn());
      }
      answer=cmds.getAnswer("password");
      if (answer != null && !answer.getResult()) {
        s_logger.error("Unable to set password for " + profile + " due to "+ answer.getDetails());
        if (podLevelException) {
          throw new ResourceUnavailableException("Unable to set password due to " + answer.getDetails(),Pod.class,podId);
        }
        throw new ResourceUnavailableException("Unable to set password due to " + answer.getDetails(),DataCenter.class,router.getDataCenterIdToDeployIn());
      }
      answer=cmds.getAnswer("vmdata");
      if (answer != null && !answer.getResult()) {
        s_logger.error("Unable to set VM data for " + profile + " due to "+ answer.getDetails());
        if (podLevelException) {
          throw new ResourceUnavailableException("Unable to set VM data due to " + answer.getDetails(),Pod.class,podId);
        }
        throw new ResourceUnavailableException("Unable to set VM data due to " + answer.getDetails(),DataCenter.class,router.getDataCenterIdToDeployIn());
      }
    }
    rets.add(router);
  }
  return rets;
}
