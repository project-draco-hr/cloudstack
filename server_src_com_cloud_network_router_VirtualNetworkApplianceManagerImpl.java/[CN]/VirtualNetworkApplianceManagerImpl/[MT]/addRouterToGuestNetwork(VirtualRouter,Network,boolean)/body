{
  if (_networkMgr.isVmPartOfNetwork(router.getId(),network.getId())) {
    s_logger.debug("Router " + router + " is already part of the network "+ network);
    return true;
  }
  boolean result=false;
  try {
    DomainRouterVO routerVO=_routerDao.findById(router.getId());
    s_logger.debug("Plugging nic for vpc virtual router " + router + " in network "+ network);
    _routerDao.addRouterToGuestNetwork(routerVO,network);
    NicProfile guestNic=_itMgr.addVmToNetwork(router,network);
    if (guestNic != null) {
      result=setupGuestNetwork(network,router,true,isRedundant,guestNic);
    }
 else {
      s_logger.warn("Failed to add router " + router + " to guest network "+ network);
    }
  }
 catch (  Exception ex) {
    s_logger.warn("Failed to add router " + router + " to network "+ network);
  }
 finally {
    if (!result) {
      s_logger.debug("Removing the router " + router + " from network "+ network+ " as a part of cleanup");
      if (removeRouterFromGuestNetwork(router,network,isRedundant)) {
        s_logger.debug("Removed the router " + router + " from network "+ network+ " as a part of cleanup");
      }
 else {
        s_logger.warn("Failed to remove the router " + router + " from network "+ network+ " as a part of cleanup");
      }
    }
  }
  return result;
}
