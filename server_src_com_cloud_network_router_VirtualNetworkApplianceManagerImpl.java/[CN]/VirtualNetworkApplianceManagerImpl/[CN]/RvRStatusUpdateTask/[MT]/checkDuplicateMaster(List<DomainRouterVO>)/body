{
  Map<Long,DomainRouterVO> networkRouterMaps=new HashMap<Long,DomainRouterVO>();
  for (  DomainRouterVO router : routers) {
    List<Long> routerGuestNtwkIds=_routerDao.getRouterNetworks(router.getId());
    for (    Long routerGuestNtwkId : routerGuestNtwkIds) {
      if (router.getRedundantState() == RedundantState.MASTER) {
        if (networkRouterMaps.containsKey(routerGuestNtwkId)) {
          DomainRouterVO dupRouter=networkRouterMaps.get(routerGuestNtwkId);
          String title="More than one redundant virtual router is in MASTER state! Router " + router.getHostName() + " and router "+ dupRouter.getHostName();
          String context="Virtual router (name: " + router.getHostName() + ", id: "+ router.getId()+ " and router (name: "+ dupRouter.getHostName()+ ", id: "+ router.getId()+ ") are both in MASTER state! If the problem persist, restart both of routers. ";
          _alertMgr.sendAlert(AlertManager.ALERT_TYPE_DOMAIN_ROUTER,router.getDataCenterId(),router.getPodIdToDeployIn(),title,context);
          _alertMgr.sendAlert(AlertManager.ALERT_TYPE_DOMAIN_ROUTER,dupRouter.getDataCenterId(),dupRouter.getPodIdToDeployIn(),title,context);
          s_logger.warn(context);
        }
 else {
          networkRouterMaps.put(routerGuestNtwkId,router);
        }
      }
    }
  }
}
