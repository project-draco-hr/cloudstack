{
  try {
    final List<DomainRouterVO> routers=_routerDao.listIsolatedByHostId(null);
    s_logger.debug("Found " + routers.size() + " routers to update status. ");
    updateSite2SiteVpnConnectionState(routers);
    final List<NetworkVO> networks=_networkDao.listRedundantNetworks();
    s_logger.debug("Found " + networks.size() + " networks to update RvR status. ");
    for (    final NetworkVO network : networks) {
      if (!_vrUpdateQueue.offer(network.getId(),500,TimeUnit.MILLISECONDS)) {
        s_logger.warn("Cannot insert into virtual router update queue! Adjustment of router.check.interval and router.check.poolsize maybe needed.");
        break;
      }
    }
  }
 catch (  final Exception ex) {
    s_logger.error("Fail to complete the CheckRouterTask! ",ex);
  }
}
