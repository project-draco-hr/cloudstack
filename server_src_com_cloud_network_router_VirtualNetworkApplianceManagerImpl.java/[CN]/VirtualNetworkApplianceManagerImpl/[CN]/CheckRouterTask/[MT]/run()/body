{
  try {
    final List<DomainRouterVO> routers=_routerDao.listIsolatedByHostId(null);
    s_logger.debug("Found " + routers.size() + " routers. ");
    updateRoutersRedundantState(routers);
    updateSite2SiteVpnConnectionState(routers);
    checkDuplicateMaster(routers);
    checkSanity(routers);
  }
 catch (  Exception ex) {
    s_logger.error("Fail to complete the CheckRouterTask! ",ex);
  }
}
