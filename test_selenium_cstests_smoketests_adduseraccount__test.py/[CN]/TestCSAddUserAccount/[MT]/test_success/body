def test_success(self):
    self.browser.set_url(smokecfg['cssite'])
    self.loginpage = loginpage.LoginPage(self.browser.get_browser())
    shared.Shared.wait_for_element(self.browser.get_browser(), 'class_name', 'select-language', waittime=300)
    self.loginpage.set_language(smokecfg['language'])
    shared.Shared.wait_for_element(self.browser.get_browser(), 'class_name', 'fields', waittime=300)
    self.loginpage.set_username(smokecfg['username'])
    self.loginpage.set_password(smokecfg['password'])
    self.loginpage.login()
    shared.Shared.wait_for_element(self.browser.browser, 'id', 'navigation')
    time.sleep(3)
    self.dashboardpage = dashboardpage.DashboardPage(self.browser.get_browser())
    self.dashboardpage.navigate_to('accounts')
    activeitem = self.dashboardpage.get_active_item()
    if (activeitem.find('accounts') < 0):
        self.assertRaises(ValueError, self.dashboardpage.get_active_item(), activeitem)
    self.accountspage = accountspage.AccountsPage(self.browser.get_browser())
    self.accountspage.add_account(username=smokecfg['new user account']['username'], password=smokecfg['new user account']['password'], email=smokecfg['new user account']['email'], firstname=smokecfg['new user account']['firstname'], lastname=smokecfg['new user account']['lastname'], domain=smokecfg['new user account']['domain'], type=smokecfg['new user account']['type'], timezone=smokecfg['new user account']['timezone'])
    self.loginpage.logout()
    shared.Shared.wait_for_element(self.browser.browser, 'class_name', 'login')
