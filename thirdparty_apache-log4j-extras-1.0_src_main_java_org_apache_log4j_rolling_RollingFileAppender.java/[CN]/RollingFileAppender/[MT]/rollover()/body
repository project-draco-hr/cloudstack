{
  if (rollingPolicy != null) {
    Exception exception=null;
synchronized (this) {
      if (lastRolloverAsyncAction != null) {
        lastRolloverAsyncAction.close();
      }
      try {
        RolloverDescription rollover=rollingPolicy.rollover(getFile());
        if (rollover != null) {
          if (rollover.getActiveFileName().equals(getFile())) {
            closeWriter();
            boolean success=true;
            if (rollover.getSynchronous() != null) {
              success=false;
              try {
                success=rollover.getSynchronous().execute();
              }
 catch (              Exception ex) {
                exception=ex;
              }
            }
            if (success) {
              if (rollover.getAppend()) {
                fileLength=new File(rollover.getActiveFileName()).length();
              }
 else {
                fileLength=0;
              }
              if (rollover.getAsynchronous() != null) {
                lastRolloverAsyncAction=rollover.getAsynchronous();
                new Thread(lastRolloverAsyncAction).start();
              }
              setFile(rollover.getActiveFileName(),rollover.getAppend(),bufferedIO,bufferSize);
            }
 else {
              setFile(rollover.getActiveFileName(),true,bufferedIO,bufferSize);
              if (exception == null) {
                LogLog.warn("Failure in post-close rollover action");
              }
 else {
                LogLog.warn("Exception in post-close rollover action",exception);
              }
            }
          }
 else {
            Writer newWriter=createWriter(new FileOutputStream(rollover.getActiveFileName(),rollover.getAppend()));
            closeWriter();
            setFile(rollover.getActiveFileName());
            this.qw=createQuietWriter(newWriter);
            boolean success=true;
            if (rollover.getSynchronous() != null) {
              success=false;
              try {
                success=rollover.getSynchronous().execute();
              }
 catch (              Exception ex) {
                exception=ex;
              }
            }
            if (success) {
              if (rollover.getAppend()) {
                fileLength=new File(rollover.getActiveFileName()).length();
              }
 else {
                fileLength=0;
              }
              if (rollover.getAsynchronous() != null) {
                lastRolloverAsyncAction=rollover.getAsynchronous();
                new Thread(lastRolloverAsyncAction).start();
              }
            }
            writeHeader();
          }
          return true;
        }
      }
 catch (      Exception ex) {
        exception=ex;
      }
    }
    if (exception != null) {
      LogLog.warn("Exception during rollover, rollover deferred.",exception);
    }
  }
  return false;
}
