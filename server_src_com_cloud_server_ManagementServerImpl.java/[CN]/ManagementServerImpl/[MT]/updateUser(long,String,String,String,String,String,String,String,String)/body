{
  UserVO user=_userDao.findById(userId);
  Long accountId=user.getAccountId();
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("updating user with id: " + userId);
  }
  UserAccount userAccount=_userAccountDao.findById(userId);
  try {
    if (apiKey != null && secretKey != null) {
      Pair<User,Account> apiKeyOwner=findUserByApiKey(apiKey);
      if (apiKeyOwner != null) {
        User usr=apiKeyOwner.first();
        if (usr.getId() != userId)         throw new InvalidParameterValueException("The api key:" + apiKey + " exists in the system for user id:"+ userId+ " ,please provide a unique key");
 else {
        }
      }
    }
    _userDao.update(userId,username,password,firstname,lastname,email,accountId,timezone,apiKey,secretKey);
    EventUtils.saveEvent(new Long(1),Long.valueOf(1),EventVO.LEVEL_INFO,EventTypes.EVENT_USER_UPDATE,"User, " + username + " for accountId = "+ accountId+ " domainId = "+ userAccount.getDomainId()+ " and timezone = "+ timezone+ " was updated.");
  }
 catch (  Throwable th) {
    s_logger.error("error updating user",th);
    EventUtils.saveEvent(Long.valueOf(1),Long.valueOf(1),EventVO.LEVEL_ERROR,EventTypes.EVENT_USER_UPDATE,"Error updating user, " + username + " for accountId = "+ accountId+ " and domainId = "+ userAccount.getDomainId());
    return false;
  }
  return true;
}
