{
  Integer capacityType=cmd.getType();
  Long zoneId=cmd.getZoneId();
  Long podId=cmd.getPodId();
  Long clusterId=cmd.getClusterId();
  zoneId=_accountMgr.checkAccessAndSpecifyAuthority(UserContext.current().getCaller(),zoneId);
  List<SummedCapacity> summedCapacities=new ArrayList<SummedCapacity>();
  if (zoneId == null && podId == null) {
    List<SummedCapacity> summedCapacitiesAtZone=_capacityDao.listCapacitiesGroupedByLevelAndType(capacityType,zoneId,podId,clusterId,1,cmd.getPageSizeVal());
    if (summedCapacitiesAtZone != null) {
      summedCapacities.addAll(summedCapacitiesAtZone);
    }
  }
  if (podId == null) {
    List<SummedCapacity> summedCapacitiesAtPod=_capacityDao.listCapacitiesGroupedByLevelAndType(capacityType,zoneId,podId,clusterId,2,cmd.getPageSizeVal());
    if (summedCapacitiesAtPod != null) {
      summedCapacities.addAll(summedCapacitiesAtPod);
    }
    List<SummedCapacity> summedCapacitiesForSecStorage=getSecStorageUsed(zoneId,capacityType);
    if (summedCapacitiesForSecStorage != null) {
      summedCapacities.addAll(summedCapacitiesForSecStorage);
    }
  }
  List<SummedCapacity> summedCapacitiesAtCluster=_capacityDao.listCapacitiesGroupedByLevelAndType(capacityType,zoneId,podId,clusterId,3,cmd.getPageSizeVal());
  if (summedCapacitiesAtCluster != null) {
    summedCapacities.addAll(summedCapacitiesAtCluster);
  }
  Collections.sort(summedCapacities,new Comparator<SummedCapacity>(){
    @Override public int compare(    SummedCapacity arg0,    SummedCapacity arg1){
      if (arg0.getPercentUsed() < arg1.getPercentUsed()) {
        return 1;
      }
 else       if (arg0.getPercentUsed() == arg1.getPercentUsed()) {
        return 0;
      }
      return -1;
    }
  }
);
  List<CapacityVO> capacities=new ArrayList<CapacityVO>();
  Integer pageSize=null;
  try {
    pageSize=Integer.valueOf(cmd.getPageSizeVal().toString());
  }
 catch (  IllegalArgumentException e) {
    throw new InvalidParameterValueException("pageSize " + cmd.getPageSizeVal() + " is out of Integer range is not supported for this call");
  }
  summedCapacities=summedCapacities.subList(0,summedCapacities.size() < cmd.getPageSizeVal() ? summedCapacities.size() : pageSize);
  for (  SummedCapacity summedCapacity : summedCapacities) {
    CapacityVO capacity=new CapacityVO(summedCapacity.getDataCenterId(),summedCapacity.getPodId(),summedCapacity.getClusterId(),summedCapacity.getCapacityType(),summedCapacity.getPercentUsed());
    capacities.add(capacity);
  }
  return capacities;
}
