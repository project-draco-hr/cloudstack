{
  List<DiskOfferingVO> dol=new ArrayList<DiskOfferingVO>();
  DomainVO domainRecord=_domainDao.findById(account.getDomainId());
  boolean includePublicOfferings=true;
  if (domainRecord != null) {
    while (true) {
      SearchBuilder<DiskOfferingVO> sb=_diskOfferingDao.createSearchBuilder();
      sb.and("name",sb.entity().getName(),SearchCriteria.Op.LIKE);
      sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
      SearchCriteria<DiskOfferingVO> sc=sb.create();
      if (keyword != null) {
        includePublicOfferings=false;
        SearchCriteria<DiskOfferingVO> ssc=_diskOfferingDao.createSearchCriteria();
        ssc.addOr("displayText",SearchCriteria.Op.LIKE,"%" + keyword + "%");
        ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
        sc.addAnd("name",SearchCriteria.Op.SC,ssc);
      }
      if (name != null) {
        includePublicOfferings=false;
        sc.setParameters("name","%" + name + "%");
      }
      if (id != null) {
        includePublicOfferings=false;
        sc.setParameters("id",id);
      }
      sc.addAnd("domainId",SearchCriteria.Op.EQ,domainRecord.getId());
      dol.addAll(_diskOfferingDao.search(sc,searchFilter));
      if (domainRecord.getParent() != null) {
        domainRecord=_domainDao.findById(domainRecord.getParent());
      }
 else {
        break;
      }
    }
  }
 else {
    s_logger.error("Could not find the domainId for account:" + account.getAccountName());
    throw new CloudAuthenticationException("Could not find the domainId for account:" + account.getAccountName());
  }
  if (includePublicOfferings) {
    dol.addAll(_diskOfferingDao.findPublicDiskOfferings());
  }
  return dol;
}
