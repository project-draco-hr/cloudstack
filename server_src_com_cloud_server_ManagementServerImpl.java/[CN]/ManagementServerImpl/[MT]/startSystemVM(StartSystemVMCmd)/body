{
  Long id=cmd.getId();
  VMInstanceVO systemVm=_vmInstanceDao.findByIdTypes(id,VirtualMachine.Type.ConsoleProxy,VirtualMachine.Type.SecondaryStorageVm);
  if (systemVm == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find a system vm with id " + id);
  }
  if (systemVm.getType().equals(VirtualMachine.Type.ConsoleProxy)) {
    long eventId=EventUtils.saveScheduledEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventTypes.EVENT_PROXY_START,"Starting console proxy with Id: " + id);
    try {
      checkIfStoragePoolAvailable(id);
    }
 catch (    StorageUnavailableException e) {
      s_logger.warn(e.getMessage());
      return null;
    }
catch (    Exception e) {
      s_logger.warn(e.getMessage());
      return null;
    }
    return startConsoleProxy(id,eventId);
  }
 else {
    long eventId=EventUtils.saveScheduledEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventTypes.EVENT_SSVM_START,"Starting secondary storage Vm Id: " + id);
    try {
      checkIfStoragePoolAvailable(id);
    }
 catch (    StorageUnavailableException e) {
      s_logger.warn(e.getMessage());
      return null;
    }
catch (    Exception e) {
      s_logger.warn(e.getMessage());
      return null;
    }
    return startSecondaryStorageVm(id,eventId);
  }
}
