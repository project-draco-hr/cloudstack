{
  URI uri=new URI(url);
  if ((uri.getScheme() == null) || (!uri.getScheme().equalsIgnoreCase("ftp"))) {
    throw new IllegalArgumentException("Unsupported scheme for url: " + url);
  }
  String host=uri.getHost();
  try {
    InetAddress hostAddr=InetAddress.getByName(host);
    if (hostAddr.isAnyLocalAddress() || hostAddr.isLinkLocalAddress() || hostAddr.isLoopbackAddress()|| hostAddr.isMulticastAddress()) {
      throw new IllegalArgumentException("Illegal host specified in url");
    }
    if (hostAddr instanceof Inet6Address) {
      throw new IllegalArgumentException("IPV6 addresses not supported (" + hostAddr.getHostAddress() + ")");
    }
  }
 catch (  UnknownHostException uhe) {
    throw new IllegalArgumentException("Unable to resolve " + host);
  }
  if (_dcDao.findById(zoneId) == null) {
    throw new IllegalArgumentException("Please specify a valid zone.");
  }
  VolumeVO volume=findVolumeById(volumeId);
  String secondaryStorageURL=_storageMgr.getSecondaryStorageURL(zoneId);
  StoragePoolVO srcPool=_poolDao.findById(volume.getPoolId());
  Long sourceHostId=_storageMgr.findHostIdForStoragePool(srcPool);
  CopyVolumeCommand cvCmd=new CopyVolumeCommand(volume.getId(),volume.getPath(),srcPool,secondaryStorageURL,true);
  CopyVolumeAnswer cvAnswer=(CopyVolumeAnswer)_agentMgr.easySend(sourceHostId,cvCmd);
  if (cvAnswer == null || !cvAnswer.getResult()) {
    throw new InternalErrorException("Failed to copy the volume from the source primary storage pool to secondary storage.");
  }
}
