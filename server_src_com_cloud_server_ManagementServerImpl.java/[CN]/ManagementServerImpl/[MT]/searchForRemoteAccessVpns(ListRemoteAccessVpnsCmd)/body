{
  Account account=UserContext.current().getAccount();
  String accountName=cmd.getAccountName();
  Long domainId=cmd.getDomainId();
  Long accountId=null;
  Account ipAddressOwner=null;
  String ipAddress=cmd.getPublicIp();
  if (ipAddress != null) {
    IPAddressVO ipAddressVO=_publicIpAddressDao.findById(ipAddress);
    if (ipAddressVO == null) {
      throw new InvalidParameterValueException("Unable to list remote access vpns, IP address " + ipAddress + " not found.");
    }
 else {
      Long ipAddrAcctId=ipAddressVO.getAllocatedToAccountId();
      if (ipAddrAcctId == null) {
        throw new InvalidParameterValueException("Unable to list remote access vpns, IP address " + ipAddress + " is not associated with an account.");
      }
      ipAddressOwner=_accountDao.findById(ipAddrAcctId);
    }
  }
  if ((account == null) || isAdmin(account.getType())) {
    if (domainId != null) {
      if ((account != null) && !_domainDao.isChildDomain(account.getDomainId(),domainId)) {
        throw new PermissionDeniedException("Unable to list remote access vpns for domain id " + domainId + ", permission denied.");
      }
      if (accountName != null) {
        Account userAccount=_accountDao.findActiveAccount(accountName,domainId);
        if (userAccount != null) {
          accountId=userAccount.getId();
        }
 else {
          throw new InvalidParameterValueException("Unable to find account " + accountName + " in domain "+ domainId);
        }
      }
    }
 else     if (ipAddressOwner != null) {
      if ((account != null) && !_domainDao.isChildDomain(account.getDomainId(),ipAddressOwner.getDomainId())) {
        throw new PermissionDeniedException("Unable to list remote access vpn  for IP address " + ipAddress + ", permission denied.");
      }
    }
 else {
      domainId=((account == null) ? DomainVO.ROOT_DOMAIN : account.getDomainId());
    }
  }
 else {
    accountId=account.getId();
  }
  Filter searchFilter=new Filter(RemoteAccessVpnVO.class,"vpnServerAddress",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  Object id=cmd.getId();
  Object zoneId=cmd.getZoneId();
  SearchBuilder<RemoteAccessVpnVO> sb=_remoteAccessVpnDao.createSearchBuilder();
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("zoneId",sb.entity().getZoneId(),SearchCriteria.Op.EQ);
  sb.and("accountId",sb.entity().getAccountId(),SearchCriteria.Op.EQ);
  sb.and("ipAddress",sb.entity().getVpnServerAddress(),SearchCriteria.Op.EQ);
  if ((accountId == null) && (domainId != null)) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  }
  SearchCriteria<RemoteAccessVpnVO> sc=sb.create();
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (ipAddress != null) {
    sc.setParameters("ipAddress",ipAddress);
  }
  if (zoneId != null) {
    sc.setParameters("zoneId",zoneId);
  }
  if (accountId != null) {
    sc.setParameters("accountId",accountId);
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById(domainId);
    sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
  }
  return _remoteAccessVpnDao.search(sc,searchFilter);
}
