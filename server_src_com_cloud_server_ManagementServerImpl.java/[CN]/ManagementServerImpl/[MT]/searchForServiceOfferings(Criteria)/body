{
  Filter searchFilter=new Filter(ServiceOfferingVO.class,c.getOrderBy(),c.getAscending(),c.getOffset(),c.getLimit());
  SearchCriteria<ServiceOfferingVO> sc=_offeringsDao.createSearchCriteria();
  Object name=c.getCriteria(Criteria.NAME);
  Object vmIdObj=c.getCriteria(Criteria.INSTANCEID);
  Object id=c.getCriteria(Criteria.ID);
  Object keyword=c.getCriteria(Criteria.KEYWORD);
  if (keyword != null) {
    SearchCriteria<ServiceOfferingVO> ssc=_offeringsDao.createSearchCriteria();
    ssc.addOr("displayText",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("name",SearchCriteria.Op.SC,ssc);
  }
  if (id != null) {
    sc.addAnd("id",SearchCriteria.Op.EQ,id);
  }
  if (name != null) {
    sc.addAnd("name",SearchCriteria.Op.LIKE,"%" + name + "%");
  }
  if (vmIdObj != null) {
    UserVmVO vm=_userVmDao.findById((Long)vmIdObj);
    if (vm != null) {
      ServiceOfferingVO offering=_offeringsDao.findById(vm.getServiceOfferingId());
      sc.addAnd("id",SearchCriteria.Op.NEQ,offering.getId());
      sc.addAnd("guestIpType",SearchCriteria.Op.EQ,offering.getGuestIpType());
      sc.addAnd("useLocalStorage",SearchCriteria.Op.EQ,offering.getUseLocalStorage());
    }
  }
  return _offeringsDao.search(sc,searchFilter);
}
