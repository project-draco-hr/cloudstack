{
  Long volumeId=cmd.getVolumeId();
  if (volumeId != null) {
    VolumeVO volume=_volumeDao.findById(volumeId);
    if (volume == null) {
      throw new InvalidParameterValueException("unable to find a volume with id " + volumeId);
    }
    checkAccountPermissions(volume.getAccountId(),volume.getDomainId(),"volume",volumeId);
  }
  Account account=(Account)UserContext.current().getAccountObject();
  Long domainId=cmd.getDomainId();
  String accountName=cmd.getAccountName();
  Long accountId=null;
  if ((account == null) || isAdmin(account.getType())) {
    if (account != null && account.getType() == Account.ACCOUNT_TYPE_DOMAIN_ADMIN)     accountId=account.getId();
    if (domainId != null && accountName != null) {
      Account userAccount=_accountDao.findActiveAccount(accountName,domainId);
      if (userAccount != null) {
        accountId=userAccount.getId();
      }
    }
  }
 else {
    accountId=account.getId();
  }
  Filter searchFilter=new Filter(SnapshotVO.class,"created",false,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchCriteria<SnapshotVO> sc=_snapshotDao.createSearchCriteria();
  Object name=cmd.getSnapshotName();
  Object id=cmd.getId();
  Object keyword=cmd.getKeyword();
  Object snapshotTypeStr=cmd.getSnapshotType();
  String interval=cmd.getIntervalType();
  sc.addAnd("status",SearchCriteria.Op.EQ,Snapshot.Status.BackedUp);
  if (volumeId != null) {
    sc.addAnd("volumeId",SearchCriteria.Op.EQ,volumeId);
  }
  if (name != null) {
    sc.addAnd("name",SearchCriteria.Op.LIKE,"%" + name + "%");
  }
  if (id != null) {
    sc.addAnd("id",SearchCriteria.Op.EQ,id);
  }
  if (keyword != null) {
    SearchCriteria<SnapshotVO> ssc=_snapshotDao.createSearchCriteria();
    ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("name",SearchCriteria.Op.SC,ssc);
  }
  if (accountId != null) {
    sc.addAnd("accountId",SearchCriteria.Op.EQ,accountId);
  }
  if (snapshotTypeStr != null) {
    SnapshotType snapshotType=SnapshotVO.getSnapshotType((String)snapshotTypeStr);
    if (snapshotType == null) {
      throw new InvalidParameterValueException("Unsupported snapshot type " + snapshotTypeStr);
    }
    sc.addAnd("snapshotType",SearchCriteria.Op.EQ,snapshotType.ordinal());
  }
 else {
    sc.addAnd("snapshotType",SearchCriteria.Op.NEQ,Snapshot.SnapshotType.TEMPLATE.ordinal());
  }
  if (interval != null && volumeId != null) {
    IntervalType intervalType=DateUtil.IntervalType.getIntervalType(interval);
    if (intervalType == null) {
      throw new InvalidParameterValueException("Unsupported interval type " + intervalType);
    }
    SnapshotPolicyVO snapPolicy=_snapMgr.getPolicyForVolumeByInterval((Long)volumeId,(short)intervalType.ordinal());
    if (snapPolicy == null) {
      s_logger.warn("Policy with interval " + intervalType + " not assigned to volume: "+ volumeId);
      return new ArrayList<SnapshotVO>();
    }
    return _snapMgr.listSnapsforPolicy(snapPolicy.getId(),searchFilter);
  }
  return _snapshotDao.search(sc,searchFilter);
}
