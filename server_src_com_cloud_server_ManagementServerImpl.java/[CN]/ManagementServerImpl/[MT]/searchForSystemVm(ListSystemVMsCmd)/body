{
  String type=cmd.getSystemVmType();
  Long zoneId=_accountMgr.checkAccessAndSpecifyAuthority(UserContext.current().getCaller(),cmd.getZoneId());
  Long id=cmd.getId();
  String name=cmd.getSystemVmName();
  String state=cmd.getState();
  String keyword=cmd.getKeyword();
  Long podId=cmd.getPodId();
  Long hostId=cmd.getHostId();
  Filter searchFilter=new Filter(VMInstanceVO.class,"id",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchBuilder<VMInstanceVO> sb=_vmInstanceDao.createSearchBuilder();
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("hostName",sb.entity().getHostName(),SearchCriteria.Op.LIKE);
  sb.and("state",sb.entity().getState(),SearchCriteria.Op.EQ);
  sb.and("dataCenterId",sb.entity().getDataCenterIdToDeployIn(),SearchCriteria.Op.EQ);
  sb.and("podId",sb.entity().getPodIdToDeployIn(),SearchCriteria.Op.EQ);
  sb.and("hostId",sb.entity().getHostId(),SearchCriteria.Op.EQ);
  sb.and("type",sb.entity().getType(),SearchCriteria.Op.EQ);
  sb.and("nulltype",sb.entity().getType(),SearchCriteria.Op.IN);
  SearchCriteria<VMInstanceVO> sc=sb.create();
  if (keyword != null) {
    SearchCriteria<VMInstanceVO> ssc=_vmInstanceDao.createSearchCriteria();
    ssc.addOr("hostName",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("state",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("hostName",SearchCriteria.Op.SC,ssc);
  }
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (name != null) {
    sc.setParameters("hostName",name);
  }
  if (state != null) {
    sc.setParameters("state",state);
  }
  if (zoneId != null) {
    sc.setParameters("dataCenterId",zoneId);
  }
  if (podId != null) {
    sc.setParameters("podId",podId);
  }
  if (hostId != null) {
    sc.setParameters("hostId",hostId);
  }
  if (type != null) {
    sc.setParameters("type",type);
  }
 else {
    sc.setParameters("nulltype",VirtualMachine.Type.SecondaryStorageVm,VirtualMachine.Type.ConsoleProxy);
  }
  return _vmInstanceDao.search(sc,searchFilter);
}
