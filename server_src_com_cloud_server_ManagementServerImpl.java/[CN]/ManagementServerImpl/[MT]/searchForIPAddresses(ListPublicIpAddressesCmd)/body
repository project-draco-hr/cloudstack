{
  Account account=(Account)UserContext.current().getAccountObject();
  Long domainId=cmd.getDomainId();
  String accountName=cmd.getAccountName();
  Long accountId=null;
  if ((account == null) || isAdmin(account.getType())) {
    if (domainId != null) {
      if ((account != null) && !_domainDao.isChildDomain(account.getDomainId(),domainId)) {
        throw new PermissionDeniedException("Unable to list IP addresses for domain " + domainId + ", permission denied.");
      }
      if (accountName != null) {
        Account userAccount=_accountDao.findActiveAccount(accountName,domainId);
        if (userAccount != null) {
          accountId=userAccount.getId();
        }
 else {
          throw new InvalidParameterValueException("Unable to find account " + accountName + " in domain "+ domainId);
        }
      }
    }
 else {
      domainId=((account == null) ? DomainVO.ROOT_DOMAIN : account.getDomainId());
    }
  }
 else {
    accountId=account.getId();
  }
  Boolean isAllocated=cmd.isAllocatedOnly();
  if (isAllocated == null) {
    isAllocated=Boolean.TRUE;
  }
  Filter searchFilter=new Filter(IPAddressVO.class,"address",false,cmd.getStartIndex(),cmd.getPageSizeVal());
  Object zone=cmd.getZoneId();
  Object address=cmd.getIpAddress();
  Object vlan=cmd.getVlanId();
  Object keyword=cmd.getKeyword();
  Object forVirtualNetwork=cmd.isForVirtualNetwork();
  SearchBuilder<IPAddressVO> sb=_publicIpAddressDao.createSearchBuilder();
  sb.and("accountIdEQ",sb.entity().getAccountId(),SearchCriteria.Op.EQ);
  sb.and("dataCenterId",sb.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  sb.and("address",sb.entity().getAddress(),SearchCriteria.Op.LIKE);
  sb.and("vlanDbId",sb.entity().getVlanDbId(),SearchCriteria.Op.EQ);
  if ((accountId == null) && (domainId != null)) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  }
  if (forVirtualNetwork != null) {
    SearchBuilder<VlanVO> vlanSearch=_vlanDao.createSearchBuilder();
    vlanSearch.and("vlanType",vlanSearch.entity().getVlanType(),SearchCriteria.Op.EQ);
    sb.join("vlanSearch",vlanSearch,sb.entity().getVlanDbId(),vlanSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  }
  if ((isAllocated != null) && (isAllocated == true)) {
    sb.and("allocated",sb.entity().getAllocated(),SearchCriteria.Op.NNULL);
  }
  SearchCriteria<IPAddressVO> sc=sb.create();
  if (accountId != null) {
    sc.setParameters("accountIdEQ",accountId);
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById(domainId);
    sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
  }
  if (forVirtualNetwork != null) {
    VlanType vlanType=(Boolean)forVirtualNetwork ? VlanType.VirtualNetwork : VlanType.DirectAttached;
    sc.setJoinParameters("vlanSearch","vlanType",vlanType);
  }
  if (zone != null) {
    sc.setParameters("dataCenterId",zone);
  }
  if ((address == null) && (keyword != null)) {
    address=keyword;
  }
  if (address != null) {
    sc.setParameters("address",address + "%");
  }
  if (vlan != null) {
    sc.setParameters("vlanDbId",vlan);
  }
  return _publicIpAddressDao.search(sc,searchFilter);
}
