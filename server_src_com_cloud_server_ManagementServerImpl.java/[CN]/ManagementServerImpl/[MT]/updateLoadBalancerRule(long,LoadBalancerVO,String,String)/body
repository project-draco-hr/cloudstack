{
  String updatedPrivatePort=((privatePort == null) ? loadBalancer.getPrivatePort() : privatePort);
  String updatedAlgorithm=((algorithm == null) ? loadBalancer.getAlgorithm() : algorithm);
  Transaction txn=Transaction.currentTxn();
  try {
    txn.start();
    loadBalancer.setPrivatePort(updatedPrivatePort);
    loadBalancer.setAlgorithm(updatedAlgorithm);
    _loadBalancerDao.update(loadBalancer.getId(),loadBalancer);
    List<FirewallRuleVO> fwRules=_firewallRulesDao.listByLoadBalancerId(loadBalancer.getId());
    if ((fwRules != null) && !fwRules.isEmpty()) {
      for (      FirewallRuleVO fwRule : fwRules) {
        fwRule.setPrivatePort(updatedPrivatePort);
        fwRule.setAlgorithm(updatedAlgorithm);
        _firewallRulesDao.update(fwRule.getId(),fwRule);
      }
    }
    txn.commit();
  }
 catch (  RuntimeException ex) {
    s_logger.warn("Unhandled exception trying to update load balancer rule",ex);
    txn.rollback();
    throw ex;
  }
 finally {
    txn.close();
  }
  List<FirewallRuleVO> allLbRules=new ArrayList<FirewallRuleVO>();
  IPAddressVO ipAddress=_publicIpAddressDao.findById(loadBalancer.getIpAddress());
  List<IPAddressVO> ipAddrs=_networkMgr.listPublicIpAddressesInVirtualNetwork(loadBalancer.getAccountId(),ipAddress.getDataCenterId(),null);
  for (  IPAddressVO ipv : ipAddrs) {
    List<FirewallRuleVO> rules=_firewallRulesDao.listIPForwarding(ipv.getAddress(),false);
    allLbRules.addAll(rules);
  }
  IPAddressVO ip=_publicIpAddressDao.findById(loadBalancer.getIpAddress());
  DomainRouterVO router=_routerDao.findBy(ip.getAccountId(),ip.getDataCenterId());
  _networkMgr.updateFirewallRules(loadBalancer.getIpAddress(),allLbRules,router);
  return _loadBalancerDao.findById(loadBalancer.getId());
}
