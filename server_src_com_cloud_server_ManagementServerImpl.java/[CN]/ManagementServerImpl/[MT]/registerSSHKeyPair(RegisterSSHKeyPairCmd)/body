{
  Account caller=CallContext.current().getCallingAccount();
  Account owner=_accountMgr.finalizeOwner(caller,cmd.getAccountName(),cmd.getDomainId(),cmd.getProjectId());
  SSHKeyPairVO existingPair=_sshKeyPairDao.findByName(owner.getAccountId(),owner.getDomainId(),cmd.getName());
  if (existingPair != null) {
    throw new InvalidParameterValueException("A key pair with name '" + cmd.getName() + "' already exists for this account.");
  }
  existingPair=_sshKeyPairDao.findByPublicKey(owner.getAccountId(),owner.getDomainId(),cmd.getPublicKey());
  if (existingPair != null) {
    throw new InvalidParameterValueException("A key pair with name '" + cmd.getPublicKey() + "' already exists for this account.");
  }
  String name=cmd.getName();
  String key=cmd.getPublicKey();
  try {
    key=URLDecoder.decode(key,"UTF-8");
  }
 catch (  UnsupportedEncodingException e) {
  }
  String publicKey=SSHKeysHelper.getPublicKeyFromKeyMaterial(key);
  if (publicKey == null) {
    throw new InvalidParameterValueException("Public key is invalid");
  }
  String fingerprint=SSHKeysHelper.getPublicKeyFingerprint(publicKey);
  return createAndSaveSSHKeyPair(name,fingerprint,publicKey,null,owner);
}
