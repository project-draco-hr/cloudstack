{
  VolumeVO volume=findVolumeById(volumeId);
  if (volume.getStatus() != AsyncInstanceCreateStatus.Created) {
    throw new InvalidParameterValueException("VolumeId: " + volumeId + " is not in Created state but "+ volume.getStatus()+ ". Cannot take snapshot.");
  }
  if (volume.getState() == Volume.State.Allocated) {
    throw new InvalidParameterValueException("VolumeId: " + volumeId + " is not Created, need to attach it to vm at first, then you can take snapshot.");
  }
  StoragePoolVO storagePoolVO=findPoolById(volume.getPoolId());
  if (storagePoolVO == null) {
    throw new InvalidParameterValueException("VolumeId: " + volumeId + " does not have a valid storage pool. Is it destroyed?");
  }
  if (storagePoolVO.isLocal()) {
    throw new InvalidParameterValueException("Cannot create a snapshot from a volume residing on a local storage pool, poolId: " + volume.getPoolId());
  }
  Long instanceId=volume.getInstanceId();
  if (instanceId != null) {
    if (findUserVMInstanceById(instanceId) == null) {
      throw new InvalidParameterValueException("Snapshots of volumes attached to System or router VM are not allowed");
    }
  }
  long policyId=Snapshot.MANUAL_POLICY_ID;
  long jobId=_snapMgr.createSnapshotAsync(userId,volumeId,policyId);
  return jobId;
}
