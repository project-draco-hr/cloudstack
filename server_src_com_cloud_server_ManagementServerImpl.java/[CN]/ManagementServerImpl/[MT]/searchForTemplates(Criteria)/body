{
  Filter searchFilter=new Filter(VMTemplateVO.class,c.getOrderBy(),c.getAscending(),c.getOffset(),c.getLimit());
  Object name=c.getCriteria(Criteria.NAME);
  Object isPublic=c.getCriteria(Criteria.ISPUBLIC);
  Object id=c.getCriteria(Criteria.ID);
  Object keyword=c.getCriteria(Criteria.KEYWORD);
  Long creator=(Long)c.getCriteria(Criteria.CREATED_BY);
  SearchBuilder<VMTemplateVO> sb=_templateDao.createSearchBuilder();
  sb.and("name",sb.entity().getName(),SearchCriteria.Op.LIKE);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("publicTemplate",sb.entity().isPublicTemplate(),SearchCriteria.Op.EQ);
  sb.and("format",sb.entity().getFormat(),SearchCriteria.Op.NEQ);
  sb.and("accountId",sb.entity().getAccountId(),SearchCriteria.Op.EQ);
  SearchCriteria<VMTemplateVO> sc=sb.create();
  if (keyword != null) {
    SearchCriteria<VMTemplateVO> ssc=_templateDao.createSearchCriteria();
    ssc.addOr("displayName",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("group",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("instanceName",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("state",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("name",SearchCriteria.Op.SC,ssc);
  }
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (name != null) {
    sc.setParameters("name","%" + name + "%");
  }
  if (isPublic != null) {
    sc.setParameters("publicTemplate",isPublic);
  }
  if (creator != null) {
    sc.setParameters("accountId",creator);
  }
  sc.setParameters("format",ImageFormat.ISO);
  return _templateDao.search(sc,searchFilter);
}
