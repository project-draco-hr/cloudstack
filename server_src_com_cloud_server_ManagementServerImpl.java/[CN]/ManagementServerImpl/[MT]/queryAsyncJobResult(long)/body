{
  AsyncJobVO job=_asyncMgr.getAsyncJob(jobId);
  if (job == null) {
    if (s_logger.isDebugEnabled())     s_logger.debug("queryAsyncJobResult error: Permission denied, invalid job id " + jobId);
    throw new PermissionDeniedException("Permission denied, invalid job id " + jobId);
  }
  if (!UserContext.current().isApiServer() && job.getAccountId() != UserContext.current().getAccountId()) {
    if (s_logger.isDebugEnabled())     s_logger.debug("Mismatched account id in job and user context, perform further securty check. job id: " + jobId + ", job owner account: "+ job.getAccountId()+ ", accound id in current context: "+ UserContext.current().getAccountId());
    Account account=UserContext.current().getAccount();
    if (account != null) {
      if (isAdmin(account.getType())) {
        Account jobAccount=_accountDao.findById(job.getAccountId());
        if (jobAccount == null) {
          if (s_logger.isDebugEnabled()) {
            s_logger.debug("queryAsyncJobResult error: Permission denied, account no long exist for account id in context, job id: " + jobId + ", accountId  "+ job.getAccountId());
          }
          throw new PermissionDeniedException("Permission denied, invalid job ownership, job id: " + jobId);
        }
        if (!_domainDao.isChildDomain(account.getDomainId(),jobAccount.getDomainId())) {
          if (s_logger.isDebugEnabled()) {
            s_logger.debug("queryAsyncJobResult error: Permission denied, invalid ownership for job " + jobId + ", job account owner: "+ job.getAccountId()+ " in domain: "+ jobAccount.getDomainId()+ ", account id in context: "+ account.getId()+ " in domain: "+ account.getDomainId());
          }
          throw new PermissionDeniedException("Permission denied, invalid job ownership, job id: " + jobId);
        }
      }
 else {
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("queryAsyncJobResult error: Permission denied, invalid ownership for job " + jobId + ", job account owner: "+ job.getAccountId()+ ", account id in context: "+ account.getId());
        }
        throw new PermissionDeniedException("Permission denied, invalid job ownership, job id: " + jobId);
      }
    }
  }
  return _asyncMgr.queryAsyncJobResult(jobId);
}
