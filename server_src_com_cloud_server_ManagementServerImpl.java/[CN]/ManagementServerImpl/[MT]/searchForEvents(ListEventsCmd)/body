{
  Account caller=UserContext.current().getCaller();
  List<Long> permittedAccounts=new ArrayList<Long>();
  boolean isAdmin=false;
  String accountName=cmd.getAccountName();
  Long domainId=cmd.getDomainId();
  Long projectId=cmd.getProjectId();
  if ((caller == null) || isAdmin(caller.getType())) {
    isAdmin=true;
    if (domainId != null) {
      if ((caller != null) && !_domainDao.isChildDomain(caller.getDomainId(),domainId)) {
        throw new PermissionDeniedException("Invalid domain id (" + domainId + ") given, unable to list events.");
      }
      if (accountName != null) {
        Account userAccount=_accountDao.findAccount(accountName,domainId);
        if (userAccount != null) {
          permittedAccounts.add(userAccount.getId());
        }
 else {
          throw new InvalidParameterValueException("Unable to find account " + accountName + " in domain "+ domainId);
        }
      }
    }
 else {
      domainId=((caller == null) ? DomainVO.ROOT_DOMAIN : caller.getDomainId());
    }
  }
 else {
    permittedAccounts.add(caller.getId());
  }
  if (projectId != null) {
    permittedAccounts.clear();
    Project project=_projectMgr.getProject(projectId);
    if (project == null) {
      throw new InvalidParameterValueException("Unable to find project by id " + projectId);
    }
    if (!_projectMgr.canAccessProjectAccount(caller,project.getProjectAccountId())) {
      throw new InvalidParameterValueException("Account " + caller + " can't access project id="+ projectId);
    }
    permittedAccounts.add(project.getProjectAccountId());
  }
 else   if (caller.getType() == Account.ACCOUNT_TYPE_NORMAL) {
    permittedAccounts.addAll(_projectMgr.listPermittedProjectAccounts(caller.getId()));
  }
  Filter searchFilter=new Filter(EventVO.class,"createDate",false,cmd.getStartIndex(),cmd.getPageSizeVal());
  Object id=cmd.getId();
  Object type=cmd.getType();
  Object level=cmd.getLevel();
  Date startDate=cmd.getStartDate();
  Date endDate=cmd.getEndDate();
  Object keyword=cmd.getKeyword();
  Integer entryTime=cmd.getEntryTime();
  Integer duration=cmd.getDuration();
  if ((entryTime != null) && (duration != null)) {
    if (entryTime <= duration) {
      throw new InvalidParameterValueException("Entry time must be greater than duration");
    }
    return listPendingEvents(entryTime,duration);
  }
  SearchBuilder<EventVO> sb=_eventDao.createSearchBuilder();
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("levelL",sb.entity().getLevel(),SearchCriteria.Op.LIKE);
  sb.and("levelEQ",sb.entity().getLevel(),SearchCriteria.Op.EQ);
  sb.and("accountId",sb.entity().getAccountId(),SearchCriteria.Op.IN);
  sb.and("accountName",sb.entity().getAccountName(),SearchCriteria.Op.LIKE);
  sb.and("domainIdEQ",sb.entity().getDomainId(),SearchCriteria.Op.EQ);
  sb.and("type",sb.entity().getType(),SearchCriteria.Op.EQ);
  sb.and("createDateB",sb.entity().getCreateDate(),SearchCriteria.Op.BETWEEN);
  sb.and("createDateG",sb.entity().getCreateDate(),SearchCriteria.Op.GTEQ);
  sb.and("createDateL",sb.entity().getCreateDate(),SearchCriteria.Op.LTEQ);
  if ((permittedAccounts.isEmpty()) && (accountName == null) && (domainId != null)&& isAdmin) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  }
  SearchCriteria<EventVO> sc=sb.create();
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (keyword != null) {
    SearchCriteria<EventVO> ssc=_eventDao.createSearchCriteria();
    ssc.addOr("type",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("description",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("level",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("level",SearchCriteria.Op.SC,ssc);
  }
  if (level != null) {
    sc.setParameters("levelEQ",level);
  }
  if (!permittedAccounts.isEmpty()) {
    sc.setParameters("accountId",permittedAccounts.toArray());
  }
 else   if (domainId != null) {
    if (accountName != null) {
      sc.setParameters("domainIdEQ",domainId);
      sc.setParameters("accountName","%" + accountName + "%");
    }
 else     if (isAdmin) {
      DomainVO domain=_domainDao.findById(domainId);
      sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
    }
  }
  if (type != null) {
    sc.setParameters("type",type);
  }
  if (startDate != null && endDate != null) {
    sc.setParameters("createDateB",startDate,endDate);
  }
 else   if (startDate != null) {
    sc.setParameters("createDateG",startDate);
  }
 else   if (endDate != null) {
    sc.setParameters("createDateL",endDate);
  }
  return _eventDao.searchAllEvents(sc,searchFilter);
}
