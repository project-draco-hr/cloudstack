{
  Filter searchFilter=new Filter(ServiceOfferingVO.class,"created",false,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchCriteria<ServiceOfferingVO> sc=_offeringsDao.createSearchCriteria();
  Account caller=UserContext.current().getCaller();
  Object name=cmd.getServiceOfferingName();
  Object id=cmd.getId();
  Object keyword=cmd.getKeyword();
  Long vmId=cmd.getVirtualMachineId();
  Long domainId=cmd.getDomainId();
  Boolean isSystem=cmd.getIsSystem();
  String vm_type_str=cmd.getSystemVmType();
  if (caller.getType() != Account.ACCOUNT_TYPE_ADMIN && isSystem) {
    throw new InvalidParameterValueException("Only ROOT admins can access system's offering");
  }
  if (domainId != null && caller.getType() != Account.ACCOUNT_TYPE_ADMIN) {
    if (!isPermissible(caller.getDomainId(),domainId)) {
      throw new PermissionDeniedException("The account:" + caller.getAccountName() + " does not fall in the same domain hierarchy as the service offering");
    }
  }
  if ((caller.getType() == Account.ACCOUNT_TYPE_NORMAL || caller.getType() == Account.ACCOUNT_TYPE_DOMAIN_ADMIN) || caller.getType() == Account.ACCOUNT_TYPE_RESOURCE_DOMAIN_ADMIN) {
    if (isSystem) {
      throw new InvalidParameterValueException("Only root admins can access system's offering");
    }
    return searchServiceOfferingsInternal(caller,name,id,vmId,keyword,searchFilter);
  }
  if (caller.getDomainId() != 1 && isSystem) {
    throw new InvalidParameterValueException("Non ROOT admins cannot access system's offering");
  }
  if (keyword != null) {
    SearchCriteria<ServiceOfferingVO> ssc=_offeringsDao.createSearchCriteria();
    ssc.addOr("displayText",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("name",SearchCriteria.Op.SC,ssc);
  }
 else   if (vmId != null) {
    UserVmVO vmInstance=_userVmDao.findById(vmId);
    if ((vmInstance == null) || (vmInstance.getRemoved() != null)) {
      throw new InvalidParameterValueException("unable to find a virtual machine with id " + vmId);
    }
    _accountMgr.checkAccess(caller,null,vmInstance);
    ServiceOfferingVO offering=_offeringsDao.findByIdIncludingRemoved(vmInstance.getServiceOfferingId());
    sc.addAnd("id",SearchCriteria.Op.NEQ,offering.getId());
    sc.addAnd("useLocalStorage",SearchCriteria.Op.EQ,offering.getUseLocalStorage());
  }
  if (id != null) {
    sc.addAnd("id",SearchCriteria.Op.EQ,id);
  }
  if (isSystem != null) {
    sc.addAnd("systemUse",SearchCriteria.Op.EQ,isSystem);
  }
  if (name != null) {
    sc.addAnd("name",SearchCriteria.Op.LIKE,"%" + name + "%");
  }
  if (domainId != null) {
    sc.addAnd("domainId",SearchCriteria.Op.EQ,domainId);
  }
  if (vm_type_str != null) {
    sc.addAnd("vm_type",SearchCriteria.Op.EQ,vm_type_str);
  }
  sc.addAnd("systemUse",SearchCriteria.Op.EQ,isSystem);
  sc.addAnd("removed",SearchCriteria.Op.NULL);
  return _offeringsDao.search(sc,searchFilter);
}
