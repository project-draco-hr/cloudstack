{
  Account account=UserContext.current().getCaller();
  Long domainId=cmd.getDomainId();
  Long accountId=cmd.getId();
  String accountName=null;
  Boolean isRecursive=cmd.isRecursive();
  if (isRecursive == null) {
    isRecursive=false;
  }
  if (accountId != null && accountId == 1) {
    List<AccountVO> emptyList=new ArrayList<AccountVO>();
    return emptyList;
  }
  if ((account == null) || isAdmin(account.getType())) {
    accountName=cmd.getSearchName();
    if (domainId == null) {
      domainId=((account == null) ? DomainVO.ROOT_DOMAIN : account.getDomainId());
      isRecursive=true;
    }
 else     if (account != null) {
      if (!_domainDao.isChildDomain(account.getDomainId(),domainId)) {
        throw new ServerApiException(BaseCmd.PARAM_ERROR,"Invalid domain id (" + domainId + ") given, unable to list accounts");
      }
    }
  }
 else {
    accountId=account.getId();
    accountName=account.getAccountName();
  }
  Filter searchFilter=new Filter(AccountVO.class,"id",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  Object type=cmd.getAccountType();
  Object state=cmd.getState();
  Object isCleanupRequired=cmd.isCleanupRequired();
  Object keyword=cmd.getKeyword();
  SearchBuilder<AccountVO> sb=_accountDao.createSearchBuilder();
  sb.and("accountName",sb.entity().getAccountName(),SearchCriteria.Op.LIKE);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("nid",sb.entity().getId(),SearchCriteria.Op.NEQ);
  sb.and("type",sb.entity().getType(),SearchCriteria.Op.EQ);
  sb.and("state",sb.entity().getState(),SearchCriteria.Op.EQ);
  sb.and("needsCleanup",sb.entity().getNeedsCleanup(),SearchCriteria.Op.EQ);
  if ((accountId == null) && (domainId != null) && isRecursive) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  }
 else   if ((accountId == null) && (domainId != null) && !isRecursive) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.EQ);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  }
  SearchCriteria<AccountVO> sc=sb.create();
  if (keyword != null) {
    SearchCriteria<AccountVO> ssc=_accountDao.createSearchCriteria();
    ssc.addOr("accountName",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("state",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("accountName",SearchCriteria.Op.SC,ssc);
  }
  if (accountName != null) {
    sc.setParameters("accountName","%" + accountName + "%");
  }
  if (accountId != null) {
    sc.setParameters("id",accountId);
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById(domainId);
    if (isRecursive) {
      sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
    }
 else {
      sc.setJoinParameters("domainSearch","path",domain.getPath());
    }
    sc.setParameters("nid",1L);
  }
 else {
    sc.setParameters("nid",1L);
  }
  if (type != null) {
    sc.setParameters("type",type);
  }
  if (state != null) {
    sc.setParameters("state",state);
  }
  if (isCleanupRequired != null) {
    sc.setParameters("needsCleanup",isCleanupRequired);
  }
  return _accountDao.search(sc,searchFilter);
}
