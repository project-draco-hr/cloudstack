{
  TemplateFilter isoFilter=TemplateFilter.valueOf(cmd.getIsoFilter());
  List<Account> permittedAccounts=new ArrayList<Account>();
  Account caller=UserContext.current().getCaller();
  Long domainId=cmd.getDomainId();
  String accountName=cmd.getAccountName();
  Long projectId=cmd.getProjectId();
  if (accountName != null && domainId != null) {
    permittedAccounts.add(_accountMgr.finalizeOwner(caller,accountName,domainId,null));
  }
  boolean skipProjectTemplates=true;
  if (projectId != null) {
    if (projectId == -1) {
      List<Long> permittedAccountIds=_projectMgr.listPermittedProjectAccounts(caller.getId());
      for (      Long permittedAccountId : permittedAccountIds) {
        permittedAccounts.add(_accountMgr.getAccount(permittedAccountId));
      }
    }
 else {
      permittedAccounts.clear();
      Project project=_projectMgr.getProject(projectId);
      if (project == null) {
        throw new InvalidParameterValueException("Unable to find project by id " + projectId);
      }
      if (!_projectMgr.canAccessProjectAccount(caller,project.getProjectAccountId())) {
        throw new InvalidParameterValueException("Account " + caller + " can't access project id="+ projectId);
      }
      permittedAccounts.add(_accountMgr.getAccount(project.getProjectAccountId()));
      skipProjectTemplates=false;
    }
  }
  boolean isAccountSpecific=(isAdmin(caller.getType())) && (accountName != null) && (domainId != null);
  HypervisorType hypervisorType=HypervisorType.getType(cmd.getHypervisor());
  return listTemplates(cmd.getId(),cmd.getIsoName(),cmd.getKeyword(),isoFilter,true,cmd.isBootable(),cmd.getPageSizeVal(),cmd.getStartIndex(),cmd.getZoneId(),hypervisorType,isAccountSpecific,true,cmd.listInReadyState(),permittedAccounts,caller,skipProjectTemplates);
}
