{
  boolean success=true;
{
    SearchCriteria<DomainVO> sc=_domainDao.createSearchCriteria();
    sc.addAnd("parent",SearchCriteria.Op.EQ,domainId);
    List<DomainVO> domains=_domainDao.search(sc,null);
    for (    DomainVO domain : domains) {
      success=(success && cleanupDomain(domain.getId(),domain.getAccountId()));
    }
  }
{
    SearchCriteria<AccountVO> sc=_accountDao.createSearchCriteria();
    sc.addAnd("domainId",SearchCriteria.Op.EQ,domainId);
    List<AccountVO> accounts=_accountDao.search(sc,null);
    for (    AccountVO account : accounts) {
      success=(success && _accountMgr.cleanupAccount(account,UserContext.current().getCallerUserId(),UserContext.current().getCaller()));
      String description="Account:" + account.getAccountId();
      if (success) {
        EventUtils.saveEvent(User.UID_SYSTEM,account.getAccountId(),EventVO.LEVEL_INFO,EventTypes.EVENT_ACCOUNT_DELETE,"Successfully deleted " + description);
      }
 else {
        EventUtils.saveEvent(User.UID_SYSTEM,account.getAccountId(),EventVO.LEVEL_ERROR,EventTypes.EVENT_ACCOUNT_DELETE,"Error deleting " + description);
      }
    }
  }
  boolean deleteDomainSuccess=_domainDao.remove(domainId);
  if (!deleteDomainSuccess) {
    EventUtils.saveEvent(new Long(1),ownerId,EventVO.LEVEL_ERROR,EventTypes.EVENT_DOMAIN_DELETE,"Domain with id " + domainId + " was not deleted");
  }
 else {
    EventUtils.saveEvent(new Long(1),ownerId,EventVO.LEVEL_INFO,EventTypes.EVENT_DOMAIN_DELETE,"Domain with id " + domainId + " was deleted");
  }
  return success && deleteDomainSuccess;
}
