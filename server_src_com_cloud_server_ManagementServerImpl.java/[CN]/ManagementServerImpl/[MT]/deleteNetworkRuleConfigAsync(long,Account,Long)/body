{
  NetworkRuleConfigVO netRule=_networkRuleConfigDao.findById(networkRuleId);
  long accountId=Account.ACCOUNT_ID_SYSTEM;
  if (netRule != null) {
    SecurityGroupVO sg=_securityGroupDao.findById(netRule.getSecurityGroupId());
    if (account != null) {
      if (!BaseCmd.isAdmin(account.getType())) {
        if ((sg.getAccountId() != account.getId())) {
          throw new PermissionDeniedException("Unable to delete port forwarding service rule " + networkRuleId + "; account: "+ account.getAccountName()+ " is not the owner");
        }
      }
 else       if (!isChildDomain(account.getDomainId(),sg.getDomainId())) {
        throw new PermissionDeniedException("Unable to delete port forwarding service rule " + networkRuleId + "; account: "+ account.getAccountName()+ " is not an admin in the domain hierarchy.");
      }
    }
    if (sg != null) {
      accountId=sg.getAccountId();
    }
  }
 else {
    return 0L;
  }
  Gson gson=GsonHelper.getBuilder().create();
  AsyncJobVO job=new AsyncJobVO();
  job.setUserId(UserContext.current().getUserId());
  job.setAccountId(accountId);
  job.setCmd("DeleteNetworkRuleConfig");
  job.setCmdInfo(gson.toJson(networkRuleId));
  return _asyncMgr.submitAsyncJob(job);
}
