{
  Account caller=UserContext.current().getCaller();
  Long domainId=cmd.getDomainId();
  boolean isRecursive=cmd.isRecursive();
  List<Long> permittedAccounts=new ArrayList<Long>();
  ListProjectResourcesCriteria listProjectResourcesCriteria=_accountMgr.buildACLSearchParameters(caller,domainId,isRecursive,cmd.getAccountName(),null,permittedAccounts,cmd.listAll(),null);
  Filter searchFilter=new Filter(AsyncJobVO.class,"id",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchBuilder<AsyncJobVO> sb=_jobDao.createSearchBuilder();
  sb.and("accountIdIN",sb.entity().getAccountId(),SearchCriteria.Op.IN);
  SearchBuilder<AccountVO> accountSearch=null;
  boolean accountJoinIsDone=false;
  if (permittedAccounts.isEmpty() && domainId != null) {
    accountSearch=_accountDao.createSearchBuilder();
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("domainId",domainSearch.entity().getId(),SearchCriteria.Op.EQ);
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("accountSearch",accountSearch,sb.entity().getAccountId(),accountSearch.entity().getId(),JoinBuilder.JoinType.INNER);
    accountJoinIsDone=true;
    accountSearch.join("domainSearch",domainSearch,accountSearch.entity().getDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  }
  if (listProjectResourcesCriteria != null) {
    if (accountSearch == null) {
      accountSearch=_accountDao.createSearchBuilder();
    }
    if (listProjectResourcesCriteria == Project.ListProjectResourcesCriteria.ListProjectResourcesOnly) {
      accountSearch.and("type",accountSearch.entity().getType(),SearchCriteria.Op.EQ);
    }
 else     if (listProjectResourcesCriteria == Project.ListProjectResourcesCriteria.SkipProjectResources) {
      accountSearch.and("type",accountSearch.entity().getType(),SearchCriteria.Op.NEQ);
    }
    if (!accountJoinIsDone) {
      sb.join("accountSearch",accountSearch,sb.entity().getAccountId(),accountSearch.entity().getId(),JoinBuilder.JoinType.INNER);
    }
  }
  Object keyword=cmd.getKeyword();
  Object startDate=cmd.getStartDate();
  SearchCriteria<AsyncJobVO> sc=sb.create();
  if (listProjectResourcesCriteria != null) {
    sc.setJoinParameters("accountSearch","type",Account.ACCOUNT_TYPE_PROJECT);
  }
  if (!permittedAccounts.isEmpty()) {
    sc.setParameters("accountIdIN",permittedAccounts.toArray());
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById(domainId);
    if (isRecursive) {
      sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
    }
 else {
      sc.setJoinParameters("domainSearch","domainId",domainId);
    }
  }
  if (keyword != null) {
    sc.addAnd("cmd",SearchCriteria.Op.LIKE,"%" + keyword + "%");
  }
  if (startDate != null) {
    sc.addAnd("created",SearchCriteria.Op.GTEQ,startDate);
  }
  return _jobDao.search(sc,searchFilter);
}
