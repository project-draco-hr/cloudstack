{
  Filter searchFilter=new Filter(AsyncJobVO.class,"id",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchBuilder<AsyncJobVO> sb=_jobDao.createSearchBuilder();
  Object accountId=null;
  Long domainId=cmd.getDomainId();
  Account account=UserContext.current().getAccount();
  if ((account == null) || isAdmin(account.getType())) {
    String accountName=cmd.getAccountName();
    if ((accountName != null) && (domainId != null)) {
      Account userAccount=_accountDao.findActiveAccount(accountName,domainId);
      if (userAccount != null) {
        accountId=userAccount.getId();
      }
 else {
        throw new InvalidParameterValueException("Failed to list async jobs for account " + accountName + " in domain "+ domainId+ "; account not found.");
      }
    }
 else     if (domainId != null) {
      if ((account != null) && !_domainDao.isChildDomain(account.getDomainId(),domainId)) {
        throw new PermissionDeniedException("Failed to list async jobs for domain " + domainId + "; permission denied.");
      }
      SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
      domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
      SearchBuilder<AccountVO> accountSearch=_accountDao.createSearchBuilder();
      accountSearch.join("domainSearch",domainSearch,accountSearch.entity().getDomainId(),domainSearch.entity().getId(),JoinType.INNER);
      sb.join("accountSearch",accountSearch,sb.entity().getAccountId(),accountSearch.entity().getId(),JoinType.INNER);
    }
  }
 else {
    accountId=account.getId();
  }
  Object keyword=cmd.getKeyword();
  Object startDate=cmd.getStartDate();
  SearchCriteria<AsyncJobVO> sc=_jobDao.createSearchCriteria();
  if (keyword != null) {
    sc.addAnd("cmd",SearchCriteria.Op.LIKE,"%" + keyword + "%");
  }
  if (accountId != null) {
    sc.addAnd("accountId",SearchCriteria.Op.EQ,accountId);
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById(domainId);
    sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
  }
  if (startDate != null) {
    sc.addAnd("created",SearchCriteria.Op.GTEQ,startDate);
  }
  return _jobDao.search(sc,searchFilter);
}
