{
  Long id=cmd.getId();
  String name=cmd.getRouterName();
  String state=cmd.getState();
  Long zone=cmd.getZoneId();
  Long pod=cmd.getPodId();
  Long hostId=cmd.getHostId();
  String keyword=cmd.getKeyword();
  Long networkId=cmd.getNetworkId();
  Account caller=UserContext.current().getCaller();
  List<Long> permittedAccounts=new ArrayList<Long>();
  Ternary<Long,Boolean,ListProjectResourcesCriteria> domainIdRecursiveListProject=new Ternary<Long,Boolean,ListProjectResourcesCriteria>(cmd.getDomainId(),cmd.isRecursive(),null);
  _accountMgr.buildACLSearchParameters(caller,id,cmd.getAccountName(),cmd.getProjectId(),permittedAccounts,domainIdRecursiveListProject,cmd.listAll());
  Long domainId=domainIdRecursiveListProject.first();
  Boolean isRecursive=domainIdRecursiveListProject.second();
  ListProjectResourcesCriteria listProjectResourcesCriteria=domainIdRecursiveListProject.third();
  Filter searchFilter=new Filter(DomainRouterVO.class,"id",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchBuilder<DomainRouterVO> sb=_routerDao.createSearchBuilder();
  _accountMgr.buildACLSearchBuilder(sb,domainId,isRecursive,permittedAccounts,listProjectResourcesCriteria);
  sb.and("name",sb.entity().getHostName(),SearchCriteria.Op.LIKE);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("accountId",sb.entity().getAccountId(),SearchCriteria.Op.IN);
  sb.and("state",sb.entity().getState(),SearchCriteria.Op.EQ);
  sb.and("dataCenterId",sb.entity().getDataCenterIdToDeployIn(),SearchCriteria.Op.EQ);
  sb.and("podId",sb.entity().getPodIdToDeployIn(),SearchCriteria.Op.EQ);
  sb.and("hostId",sb.entity().getHostId(),SearchCriteria.Op.EQ);
  if (networkId != null) {
    SearchBuilder<NicVO> nicSearch=_nicDao.createSearchBuilder();
    nicSearch.and("networkId",nicSearch.entity().getNetworkId(),SearchCriteria.Op.EQ);
    SearchBuilder<NetworkVO> networkSearch=_networkDao.createSearchBuilder();
    networkSearch.and("networkId",networkSearch.entity().getId(),SearchCriteria.Op.EQ);
    nicSearch.join("networkSearch",networkSearch,nicSearch.entity().getNetworkId(),networkSearch.entity().getId(),JoinBuilder.JoinType.INNER);
    sb.join("nicSearch",nicSearch,sb.entity().getId(),nicSearch.entity().getInstanceId(),JoinBuilder.JoinType.INNER);
  }
  SearchCriteria<DomainRouterVO> sc=sb.create();
  _accountMgr.buildACLSearchCriteria(sc,domainId,isRecursive,permittedAccounts,listProjectResourcesCriteria);
  if (keyword != null) {
    SearchCriteria<DomainRouterVO> ssc=_routerDao.createSearchCriteria();
    ssc.addOr("hostName",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("instanceName",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("state",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("hostName",SearchCriteria.Op.SC,ssc);
  }
  if (name != null) {
    sc.setParameters("name","%" + name + "%");
  }
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (state != null) {
    sc.setParameters("state",state);
  }
  if (zone != null) {
    sc.setParameters("dataCenterId",zone);
  }
  if (pod != null) {
    sc.setParameters("podId",pod);
  }
  if (hostId != null) {
    sc.setParameters("hostId",hostId);
  }
  if (networkId != null) {
    sc.setJoinParameters("nicSearch","networkId",networkId);
  }
  return _routerDao.search(sc,searchFilter);
}
