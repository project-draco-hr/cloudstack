{
  Account caller=UserContext.current().getCaller();
  Pair<List<Long>,Long> accountDomainPair=_accountMgr.finalizeAccountDomainForList(caller,cmd.getAccountName(),cmd.getDomainId(),cmd.getProjectId());
  List<Long> permittedAccounts=accountDomainPair.first();
  Long domainId=accountDomainPair.second();
  Filter searchFilter=new Filter(DomainRouterVO.class,"id",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  Object id=cmd.getId();
  Object name=cmd.getRouterName();
  Object state=cmd.getState();
  Object zone=cmd.getZoneId();
  Object pod=cmd.getPodId();
  Object hostId=cmd.getHostId();
  Object keyword=cmd.getKeyword();
  Object networkId=cmd.getNetworkId();
  SearchBuilder<DomainRouterVO> sb=_routerDao.createSearchBuilder();
  sb.and("name",sb.entity().getHostName(),SearchCriteria.Op.LIKE);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("accountId",sb.entity().getAccountId(),SearchCriteria.Op.IN);
  sb.and("state",sb.entity().getState(),SearchCriteria.Op.EQ);
  sb.and("dataCenterId",sb.entity().getDataCenterIdToDeployIn(),SearchCriteria.Op.EQ);
  sb.and("podId",sb.entity().getPodIdToDeployIn(),SearchCriteria.Op.EQ);
  sb.and("hostId",sb.entity().getHostId(),SearchCriteria.Op.EQ);
  if ((permittedAccounts.isEmpty()) && (domainId != null)) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  }
  if (networkId != null) {
    SearchBuilder<NicVO> nicSearch=_nicDao.createSearchBuilder();
    nicSearch.and("networkId",nicSearch.entity().getNetworkId(),SearchCriteria.Op.EQ);
    SearchBuilder<NetworkVO> networkSearch=_networkDao.createSearchBuilder();
    networkSearch.and("networkId",networkSearch.entity().getId(),SearchCriteria.Op.EQ);
    nicSearch.join("networkSearch",networkSearch,nicSearch.entity().getNetworkId(),networkSearch.entity().getId(),JoinBuilder.JoinType.INNER);
    sb.join("nicSearch",nicSearch,sb.entity().getId(),nicSearch.entity().getInstanceId(),JoinBuilder.JoinType.INNER);
  }
  SearchCriteria<DomainRouterVO> sc=sb.create();
  if (keyword != null) {
    SearchCriteria<DomainRouterVO> ssc=_routerDao.createSearchCriteria();
    ssc.addOr("hostName",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("instanceName",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("state",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("hostName",SearchCriteria.Op.SC,ssc);
  }
  if (name != null) {
    sc.setParameters("name","%" + name + "%");
  }
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (!permittedAccounts.isEmpty()) {
    sc.setParameters("accountId",permittedAccounts.toArray());
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById(domainId);
    sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
  }
  if (state != null) {
    sc.setParameters("state",state);
  }
  if (zone != null) {
    sc.setParameters("dataCenterId",zone);
  }
  if (pod != null) {
    sc.setParameters("podId",pod);
  }
  if (hostId != null) {
    sc.setParameters("hostId",hostId);
  }
  if (networkId != null) {
    sc.setJoinParameters("nicSearch","networkId",networkId);
  }
  return _routerDao.search(sc,searchFilter);
}
