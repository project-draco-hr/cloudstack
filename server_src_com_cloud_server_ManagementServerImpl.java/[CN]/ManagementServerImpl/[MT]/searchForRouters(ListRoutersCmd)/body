{
  Long domainId=cmd.getDomainId();
  String accountName=cmd.getAccountName();
  Long accountId=null;
  Account account=(Account)UserContext.current().getAccountObject();
  if (domainId != null) {
    if ((account != null) && !_domainDao.isChildDomain(account.getDomainId(),domainId)) {
      throw new PermissionDeniedException("Invalid domain id (" + domainId + ") given, unable to list routers");
    }
    if (accountName != null) {
      Account userAccount=_accountDao.findActiveAccount(accountName,domainId);
      if (userAccount != null) {
        accountId=userAccount.getId();
      }
 else {
        throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"Unable to find account " + accountName + " in domain "+ domainId);
      }
    }
  }
 else {
    domainId=((account == null) ? DomainVO.ROOT_DOMAIN : account.getDomainId());
  }
  Filter searchFilter=new Filter(DomainRouterVO.class,"id",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  Object name=cmd.getRouterName();
  Object state=cmd.getState();
  Object zone=cmd.getZoneId();
  Object pod=cmd.getPodId();
  Object hostId=cmd.getHostId();
  Object keyword=cmd.getKeyword();
  SearchBuilder<DomainRouterVO> sb=_routerDao.createSearchBuilder();
  sb.and("name",sb.entity().getName(),SearchCriteria.Op.LIKE);
  sb.and("accountId",sb.entity().getAccountId(),SearchCriteria.Op.IN);
  sb.and("state",sb.entity().getState(),SearchCriteria.Op.EQ);
  sb.and("dataCenterId",sb.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  sb.and("podId",sb.entity().getPodId(),SearchCriteria.Op.EQ);
  sb.and("hostId",sb.entity().getHostId(),SearchCriteria.Op.EQ);
  if ((accountId == null) && (domainId != null)) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId());
  }
  SearchCriteria<DomainRouterVO> sc=sb.create();
  if (keyword != null) {
    SearchCriteria<DomainRouterVO> ssc=_routerDao.createSearchCriteria();
    ssc.addOr("displayName",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("instanceName",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("state",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("name",SearchCriteria.Op.SC,ssc);
  }
  if (name != null) {
    sc.setParameters("name","%" + name + "%");
  }
  if (accountId != null) {
    sc.setParameters("accountId",accountId);
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById(domainId);
    sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
  }
  if (state != null) {
    sc.setParameters("state",state);
  }
  if (zone != null) {
    sc.setParameters("dataCenterId",zone);
  }
  if (pod != null) {
    sc.setParameters("podId",pod);
  }
  if (hostId != null) {
    sc.setParameters("hostId",hostId);
  }
  return _routerDao.search(sc,searchFilter);
}
