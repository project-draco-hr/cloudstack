{
  Filter searchFilter=new Filter(VolumeVO.class,c.getOrderBy(),c.getAscending(),c.getOffset(),c.getLimit());
  Object[] accountIds=(Object[])c.getCriteria(Criteria.ACCOUNTID);
  Object type=c.getCriteria(Criteria.VTYPE);
  Long vmInstanceId=(Long)c.getCriteria(Criteria.INSTANCEID);
  Object zone=c.getCriteria(Criteria.DATACENTERID);
  Object pod=c.getCriteria(Criteria.PODID);
  Object domainId=c.getCriteria(Criteria.DOMAINID);
  Object id=c.getCriteria(Criteria.ID);
  Object keyword=c.getCriteria(Criteria.KEYWORD);
  Object name=c.getCriteria(Criteria.NAME);
  SearchBuilder<VolumeVO> sb=_volumeDao.createSearchBuilder();
  sb.and("name",sb.entity().getName(),SearchCriteria.Op.LIKE);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("accountIdEQ",sb.entity().getAccountId(),SearchCriteria.Op.EQ);
  sb.and("accountIdIN",sb.entity().getAccountId(),SearchCriteria.Op.IN);
  sb.and("volumeType",sb.entity().getVolumeType(),SearchCriteria.Op.LIKE);
  sb.and("instanceId",sb.entity().getInstanceId(),SearchCriteria.Op.EQ);
  sb.and("dataCenterId",sb.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  sb.and("podId",sb.entity().getPodId(),SearchCriteria.Op.EQ);
  sb.and("domRNameLabel",sb.entity().getName(),SearchCriteria.Op.NLIKE);
  sb.and("domPNameLabel",sb.entity().getName(),SearchCriteria.Op.NLIKE);
  sb.and("domSNameLabel",sb.entity().getName(),SearchCriteria.Op.NLIKE);
  sb.and("status",sb.entity().getStatus(),SearchCriteria.Op.EQ);
  sb.and("destroyed",sb.entity().getDestroyed(),SearchCriteria.Op.EQ);
  if ((accountIds == null) && (domainId != null)) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId());
  }
  SearchCriteria<VolumeVO> sc=sb.create();
  if (keyword != null) {
    SearchCriteria<VolumeVO> ssc=_volumeDao.createSearchCriteria();
    ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("nameLabel",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("volumeType",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("name",SearchCriteria.Op.SC,ssc);
  }
  if (name != null) {
    sc.setParameters("name","%" + name + "%");
  }
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (accountIds != null) {
    if ((accountIds.length == 1) && (accountIds[0] != null)) {
      sc.setParameters("accountIdEQ",accountIds[0]);
    }
 else {
      sc.setParameters("accountIdIN",accountIds);
    }
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById((Long)domainId);
    sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
  }
  if (type != null) {
    sc.setParameters("volumeType","%" + type + "%");
  }
  if (vmInstanceId != null) {
    sc.setParameters("instanceId",vmInstanceId);
  }
  if (zone != null) {
    sc.setParameters("dataCenterId",zone);
  }
  if (pod != null) {
    sc.setParameters("podId",pod);
  }
  sc.setParameters("domRNameLabel","r-%");
  sc.setParameters("domPNameLabel","v-%");
  sc.setParameters("domSNameLabel","s-%");
  sc.setParameters("destroyed",false);
  return _volumeDao.search(sc,searchFilter);
}
