{
  Filter searchFilter=new Filter(IPAddressVO.class,c.getOrderBy(),c.getAscending(),c.getOffset(),c.getLimit());
  Object[] accountIds=(Object[])c.getCriteria(Criteria.ACCOUNTID);
  Object zone=c.getCriteria(Criteria.DATACENTERID);
  Object address=c.getCriteria(Criteria.IPADDRESS);
  Object domainId=c.getCriteria(Criteria.DOMAINID);
  Object vlan=c.getCriteria(Criteria.VLAN);
  Object isAllocated=c.getCriteria(Criteria.ISALLOCATED);
  Object keyword=c.getCriteria(Criteria.KEYWORD);
  Object forVirtualNetwork=c.getCriteria(Criteria.FOR_VIRTUAL_NETWORK);
  SearchBuilder<IPAddressVO> sb=_publicIpAddressDao.createSearchBuilder();
  sb.and("accountIdEQ",sb.entity().getAccountId(),SearchCriteria.Op.EQ);
  sb.and("accountIdIN",sb.entity().getAccountId(),SearchCriteria.Op.IN);
  sb.and("dataCenterId",sb.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  sb.and("address",sb.entity().getAddress(),SearchCriteria.Op.LIKE);
  sb.and("vlanDbId",sb.entity().getVlanDbId(),SearchCriteria.Op.EQ);
  if ((accountIds == null) && (domainId != null)) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId());
  }
  if (forVirtualNetwork != null) {
    SearchBuilder<VlanVO> vlanSearch=_vlanDao.createSearchBuilder();
    vlanSearch.and("vlanType",vlanSearch.entity().getVlanType(),SearchCriteria.Op.EQ);
    sb.join("vlanSearch",vlanSearch,sb.entity().getVlanDbId(),vlanSearch.entity().getId());
  }
  if ((isAllocated != null) && ((Boolean)isAllocated == true)) {
    sb.and("allocated",sb.entity().getAllocated(),SearchCriteria.Op.NNULL);
  }
  SearchCriteria<IPAddressVO> sc=sb.create();
  if (accountIds != null) {
    if ((accountIds.length == 1) && (accountIds[0] != null)) {
      sc.setParameters("accountIdEQ",accountIds[0]);
    }
 else {
      sc.setParameters("accountIdIN",accountIds);
    }
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById((Long)domainId);
    sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
  }
  if (forVirtualNetwork != null) {
    VlanType vlanType=(Boolean)forVirtualNetwork ? VlanType.VirtualNetwork : VlanType.DirectAttached;
    sc.setJoinParameters("vlanSearch","vlanType",vlanType);
  }
  if (zone != null) {
    sc.setParameters("dataCenterId",zone);
  }
  if ((address == null) && (keyword != null)) {
    address=keyword;
  }
  if (address != null) {
    sc.setParameters("address",address + "%");
  }
  if (vlan != null) {
    sc.setParameters("vlanDbId",vlan);
  }
  return _publicIpAddressDao.search(sc,searchFilter);
}
