{
  Filter searchFilter=new Filter(HostVO.class,"id",Boolean.TRUE,startIndex,pageSize);
  SearchBuilder<HostVO> sb=_hostDao.createSearchBuilder();
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("name",sb.entity().getName(),SearchCriteria.Op.LIKE);
  sb.and("type",sb.entity().getType(),SearchCriteria.Op.LIKE);
  sb.and("status",sb.entity().getStatus(),SearchCriteria.Op.EQ);
  sb.and("dataCenterId",sb.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  sb.and("podId",sb.entity().getPodId(),SearchCriteria.Op.EQ);
  sb.and("clusterId",sb.entity().getClusterId(),SearchCriteria.Op.EQ);
  sb.and("resourceState",sb.entity().getResourceState(),SearchCriteria.Op.EQ);
  String haTag=_haMgr.getHaTag();
  SearchBuilder<HostTagVO> hostTagSearch=null;
  if (haHosts != null && haTag != null && !haTag.isEmpty()) {
    hostTagSearch=_hostTagsDao.createSearchBuilder();
    if ((Boolean)haHosts) {
      hostTagSearch.and().op("tag",hostTagSearch.entity().getTag(),SearchCriteria.Op.EQ);
    }
 else {
      hostTagSearch.and().op("tag",hostTagSearch.entity().getTag(),SearchCriteria.Op.NEQ);
      hostTagSearch.or("tagNull",hostTagSearch.entity().getTag(),SearchCriteria.Op.NULL);
    }
    hostTagSearch.cp();
    sb.join("hostTagSearch",hostTagSearch,sb.entity().getId(),hostTagSearch.entity().getHostId(),JoinBuilder.JoinType.LEFTOUTER);
  }
  SearchCriteria<HostVO> sc=sb.create();
  if (keyword != null) {
    SearchCriteria<HostVO> ssc=_hostDao.createSearchCriteria();
    ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("status",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("type",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("name",SearchCriteria.Op.SC,ssc);
  }
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (name != null) {
    sc.setParameters("name","%" + name + "%");
  }
  if (type != null) {
    sc.setParameters("type","%" + type);
  }
  if (state != null) {
    sc.setParameters("status",state);
  }
  if (zone != null) {
    sc.setParameters("dataCenterId",zone);
  }
  if (pod != null) {
    sc.setParameters("podId",pod);
  }
  if (cluster != null) {
    sc.setParameters("clusterId",cluster);
  }
  if (resourceState != null) {
    sc.setParameters("resourceState",resourceState);
  }
  if (haHosts != null && haTag != null && !haTag.isEmpty()) {
    sc.setJoinParameters("hostTagSearch","tag",haTag);
  }
  return _hostDao.search(sc,searchFilter);
}
