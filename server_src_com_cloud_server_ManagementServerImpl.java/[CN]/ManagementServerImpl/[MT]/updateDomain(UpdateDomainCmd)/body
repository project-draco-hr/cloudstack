{
  Long domainId=cmd.getId();
  String domainName=cmd.getDomainName();
  String networkDomain=cmd.getNetworkDomain();
  DomainVO domain=_domainDao.findById(domainId);
  if (domain == null) {
    throw new InvalidParameterValueException("Unable to find domain " + domainId);
  }
 else   if (domain.getParent() == null && domainName != null) {
    throw new InvalidParameterValueException("ROOT domain can not be edited with a new name");
  }
  Account caller=UserContext.current().getCaller();
  _accountMgr.checkAccess(caller,domain,null);
  if (domainName != null) {
    SearchCriteria<DomainVO> sc=_domainDao.createSearchCriteria();
    sc.addAnd("name",SearchCriteria.Op.EQ,domainName);
    List<DomainVO> domains=_domainDao.search(sc,null);
    if (!domains.isEmpty()) {
      throw new InvalidParameterValueException("Failed to update domain id=" + domainId + "; domain with name "+ domainName+ " already exists in the system");
    }
  }
  if (networkDomain != null) {
    if (!NetUtils.verifyDomainName(networkDomain)) {
      throw new InvalidParameterValueException("Invalid network domain. Total length shouldn't exceed 190 chars. Each domain label must be between 1 and 63 characters long, can contain ASCII letters 'a' through 'z', the digits '0' through '9', " + "and the hyphen ('-'); can't start or end with \"-\"");
    }
  }
  Transaction txn=Transaction.currentTxn();
  txn.start();
  if (domainName != null) {
    String updatedDomainPath=getUpdatedDomainPath(domain.getPath(),domainName);
    updateDomainChildren(domain,updatedDomainPath);
    domain.setName(domainName);
    domain.setPath(updatedDomainPath);
  }
  if (networkDomain != null) {
    domain.setNetworkDomain(networkDomain);
  }
  _domainDao.update(domainId,domain);
  txn.commit();
  return _domainDao.findById(domainId);
}
