{
  Long domainId=cmd.getId();
  String domainName=cmd.getDomainName();
  DomainVO domain=_domainDao.findById(domainId);
  if (domain == null) {
    throw new InvalidParameterValueException("Unable to find domain " + domainId);
  }
 else   if (domain.getParent() == null) {
    throw new InvalidParameterValueException("ROOT domain can not be edited");
  }
  Account account=UserContext.current().getAccount();
  if ((account != null) && !isChildDomain(account.getDomainId(),domain.getId())) {
    throw new PermissionDeniedException("Unable to update domain " + domainId + ", permission denied");
  }
  if (domainName == null || domainName.equals(domain.getName())) {
    return _domainDao.findById(domainId);
  }
  SearchCriteria<DomainVO> sc=_domainDao.createSearchCriteria();
  sc.addAnd("name",SearchCriteria.Op.EQ,domainName);
  List<DomainVO> domains=_domainDao.search(sc,null);
  if ((domains == null) || domains.isEmpty()) {
    domain=_domainDao.findById(domainId);
    String updatedDomainPath=getUpdatedDomainPath(domain.getPath(),domainName);
    updateDomainChildren(domain,updatedDomainPath);
    _domainDao.update(domainId,domainName,updatedDomainPath);
    EventUtils.saveEvent(new Long(1),domain.getAccountId(),EventVO.LEVEL_INFO,EventTypes.EVENT_DOMAIN_UPDATE,"Domain, " + domainName + " was updated");
    return _domainDao.findById(domainId);
  }
 else {
    domain=_domainDao.findById(domainId);
    EventUtils.saveEvent(new Long(1),domain.getAccountId(),EventVO.LEVEL_ERROR,EventTypes.EVENT_DOMAIN_UPDATE,"Failed to update domain " + domain.getName() + " with name "+ domainName+ ", name in use.");
    s_logger.error("Domain with name " + domainName + " already exists in the system");
    throw new CloudRuntimeException("Failed to update domain " + domainId);
  }
}
