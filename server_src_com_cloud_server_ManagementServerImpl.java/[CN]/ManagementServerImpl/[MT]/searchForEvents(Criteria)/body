{
  Filter searchFilter=new Filter(EventVO.class,c.getOrderBy(),c.getAscending(),c.getOffset(),c.getLimit());
  Object[] userIds=(Object[])c.getCriteria(Criteria.USERID);
  Object[] accountIds=(Object[])c.getCriteria(Criteria.ACCOUNTID);
  Object username=c.getCriteria(Criteria.USERNAME);
  Object accountName=c.getCriteria(Criteria.ACCOUNTNAME);
  Object type=c.getCriteria(Criteria.TYPE);
  Object level=c.getCriteria(Criteria.LEVEL);
  Date startDate=(Date)c.getCriteria(Criteria.STARTDATE);
  Date endDate=(Date)c.getCriteria(Criteria.ENDDATE);
  Object domainId=c.getCriteria(Criteria.DOMAINID);
  Object keyword=c.getCriteria(Criteria.KEYWORD);
  SearchBuilder<EventVO> sb=_eventDao.createSearchBuilder();
  sb.and("levelL",sb.entity().getLevel(),SearchCriteria.Op.LIKE);
  sb.and("userIdEQ",sb.entity().getUserId(),SearchCriteria.Op.EQ);
  sb.and("userIdIN",sb.entity().getUserId(),SearchCriteria.Op.IN);
  sb.and("accountIdEQ",sb.entity().getAccountId(),SearchCriteria.Op.EQ);
  sb.and("accountIdIN",sb.entity().getAccountId(),SearchCriteria.Op.IN);
  sb.and("accountName",sb.entity().getAccountName(),SearchCriteria.Op.LIKE);
  sb.and("domainIdEQ",sb.entity().getDomainId(),SearchCriteria.Op.EQ);
  sb.and("type",sb.entity().getType(),SearchCriteria.Op.EQ);
  sb.and("levelEQ",sb.entity().getLevel(),SearchCriteria.Op.EQ);
  sb.and("createDateB",sb.entity().getCreateDate(),SearchCriteria.Op.BETWEEN);
  sb.and("createDateG",sb.entity().getCreateDate(),SearchCriteria.Op.GTEQ);
  sb.and("createDateL",sb.entity().getCreateDate(),SearchCriteria.Op.LTEQ);
  if ((accountIds == null) && (accountName == null) && (domainId != null)) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId());
  }
  SearchCriteria<EventVO> sc=sb.create();
  if (keyword != null) {
    SearchCriteria<EventVO> ssc=_eventDao.createSearchCriteria();
    ssc.addOr("type",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("description",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("level",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("level",SearchCriteria.Op.SC,ssc);
  }
  if (level != null)   sc.setParameters("levelEQ",level);
  if (userIds == null && username != null) {
    List<UserVO> users=findUsersLike((String)username);
    if (users == null || users.size() == 0) {
      return new ArrayList<EventVO>();
    }
    userIds=new Long[users.size()];
    for (int i=0; i < users.size(); i++) {
      userIds[i]=users.get(i).getId();
    }
  }
  if (userIds != null) {
    if (userIds.length == 1) {
      if ((userIds[0] != null) && !((Long)userIds[0]).equals(Long.valueOf(-1))) {
        sc.setParameters("userIdEQ",userIds[0]);
      }
    }
 else {
      sc.setParameters("userIdIN",userIds);
    }
  }
  if (accountIds != null) {
    if (accountIds.length == 1) {
      if ((accountIds[0] != null) && !((Long)accountIds[0]).equals(Long.valueOf(-1))) {
        sc.setParameters("accountIdEQ",accountIds[0]);
      }
    }
 else {
      sc.setParameters("accountIdIN",accountIds);
    }
  }
 else   if (domainId != null) {
    if (accountName != null) {
      sc.setParameters("domainIdEQ",domainId);
      sc.setParameters("accountName","%" + accountName + "%");
      sc.addAnd("removed",SearchCriteria.Op.NULL);
    }
 else {
      DomainVO domain=_domainDao.findById((Long)domainId);
      sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
    }
  }
  if (type != null) {
    sc.setParameters("type",type);
  }
  if (startDate != null && endDate != null) {
    startDate=massageDate(startDate,0,0,0);
    endDate=massageDate(endDate,23,59,59);
    sc.setParameters("createDateB",startDate,endDate);
  }
 else   if (startDate != null) {
    startDate=massageDate(startDate,0,0,0);
    sc.setParameters("createDateG",startDate);
  }
 else   if (endDate != null) {
    endDate=massageDate(endDate,23,59,59);
    sc.setParameters("createDateL",endDate);
  }
  return _eventDao.searchAllEvents(sc,searchFilter);
}
