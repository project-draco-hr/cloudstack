{
  if (accountId != null && vlanType == VlanType.VirtualNetwork) {
    long ipResourceLimit=_accountMgr.findCorrectResourceLimit(_accountDao.findById(accountId),ResourceType.public_ip);
    long accountIpRange=NetUtils.ip2Long(endIP) - NetUtils.ip2Long(startIP) + 1;
    s_logger.debug(" IPResourceLimit " + ipResourceLimit + " accountIpRange "+ accountIpRange);
    if (ipResourceLimit != -1 && accountIpRange > ipResourceLimit) {
      throw new InvalidParameterValueException(" Public IP Resource Limit is set to " + ipResourceLimit + " which is less than the IP range of "+ accountIpRange+ " provided");
    }
    String params="\nsourceNat=" + false + "\ndcId="+ zoneId;
    Transaction txn=Transaction.currentTxn();
    try {
      txn.start();
      VlanVO vlan=_configMgr.createVlanAndPublicIpRange(userId,vlanType,zoneId,accountId,podId,vlanId,vlanGateway,vlanNetmask,startIP,endIP);
      associateIpAddressListToAccount(userId,accountId,zoneId,vlan.getId());
      txn.commit();
      return vlan;
    }
 catch (    Exception e) {
      txn.rollback();
      long startIPLong=NetUtils.ip2Long(startIP);
      long endIPLong=NetUtils.ip2Long(endIP);
      while (startIPLong <= endIPLong) {
        EventUtils.saveEvent(userId,accountId,EventVO.LEVEL_ERROR,EventTypes.EVENT_NET_IP_ASSIGN,"Unable to assign public IP " + NetUtils.long2Ip(startIPLong),params);
        startIPLong+=1;
      }
      throw new Exception(e.getMessage());
    }
  }
  return _configMgr.createVlanAndPublicIpRange(userId,vlanType,zoneId,accountId,podId,vlanId,vlanGateway,vlanNetmask,startIP,endIP);
}
