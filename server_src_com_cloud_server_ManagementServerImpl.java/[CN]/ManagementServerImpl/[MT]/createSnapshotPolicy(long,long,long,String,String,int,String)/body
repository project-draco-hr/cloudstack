{
  IntervalType type=DateUtil.IntervalType.getIntervalType(intervalType);
  if (type == null) {
    throw new InvalidParameterValueException("Unsupported interval type " + intervalType);
  }
  TimeZone timeZone=TimeZone.getTimeZone(timeZoneStr);
  String timezoneId=timeZone.getID();
  if (!timezoneId.equals(timeZoneStr)) {
    s_logger.warn("Using timezone: " + timezoneId + " for running this snapshot policy as an equivalent of "+ timeZoneStr);
  }
  try {
    DateUtil.getNextRunTime(type,schedule,timezoneId,null);
  }
 catch (  Exception e) {
    throw new InvalidParameterValueException("Invalid schedule: " + schedule + " for interval type: "+ intervalType);
  }
  int intervalMaxSnaps=type.getMax();
  if (maxSnaps > intervalMaxSnaps) {
    throw new InvalidParameterValueException("maxSnaps exceeds limit: " + intervalMaxSnaps + " for interval type: "+ intervalType);
  }
  if (_volumeDao.findById(volumeId).getState() == Volume.State.Allocated) {
    throw new InvalidParameterValueException("Cant create snapshot policy on this volume, pls attach it to a VM at first");
  }
  return _snapMgr.createPolicy(userId,accountId,volumeId,schedule,(short)type.ordinal(),maxSnaps,timezoneId);
}
