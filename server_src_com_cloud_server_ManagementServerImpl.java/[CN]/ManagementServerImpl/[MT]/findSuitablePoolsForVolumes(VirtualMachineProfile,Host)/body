{
  List<VolumeVO> volumes=_volumeDao.findCreatedByInstance(vmProfile.getId());
  Map<Volume,List<StoragePool>> suitableVolumeStoragePools=new HashMap<Volume,List<StoragePool>>();
  for (  VolumeVO volume : volumes) {
    DiskOfferingVO diskOffering=_diskOfferingDao.findById(volume.getDiskOfferingId());
    DiskProfile diskProfile=new DiskProfile(volume,diskOffering,vmProfile.getHypervisorType());
    DataCenterDeployment plan=new DataCenterDeployment(host.getDataCenterId(),host.getPodId(),host.getClusterId(),host.getId(),null,null);
    ExcludeList avoid=new ExcludeList();
    boolean foundPools=false;
    for (    StoragePoolAllocator allocator : _storagePoolAllocators) {
      List<StoragePool> poolList=allocator.allocateToPool(diskProfile,vmProfile,plan,avoid,StoragePoolAllocator.RETURN_UPTO_ALL);
      if (poolList != null && !poolList.isEmpty()) {
        suitableVolumeStoragePools.put(volume,poolList);
        foundPools=true;
        break;
      }
    }
    if (!foundPools) {
      suitableVolumeStoragePools.clear();
      break;
    }
  }
  return suitableVolumeStoragePools;
}
