{
  Long id=cmd.getId();
  String name=cmd.getGroupName();
  String keyword=cmd.getKeyword();
  Account caller=UserContext.current().getCaller();
  List<Long> permittedAccounts=new ArrayList<Long>();
  Ternary<Long,Boolean,ListProjectResourcesCriteria> domainIdRecursiveListProject=new Ternary<Long,Boolean,ListProjectResourcesCriteria>(cmd.getDomainId(),cmd.isRecursive(),null);
  _accountMgr.buildACLSearchParameters(caller,id,cmd.getAccountName(),cmd.getProjectId(),permittedAccounts,domainIdRecursiveListProject,cmd.listAll(),false);
  Long domainId=domainIdRecursiveListProject.first();
  Boolean isRecursive=domainIdRecursiveListProject.second();
  ListProjectResourcesCriteria listProjectResourcesCriteria=domainIdRecursiveListProject.third();
  Filter searchFilter=new Filter(InstanceGroupVO.class,"id",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchBuilder<InstanceGroupVO> sb=_vmGroupDao.createSearchBuilder();
  sb.and("accountIdIN",sb.entity().getAccountId(),SearchCriteria.Op.IN);
  sb.and("domainId",sb.entity().getDomainId(),SearchCriteria.Op.EQ);
  if (((permittedAccounts.isEmpty()) && (domainId != null) && isRecursive)) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  }
  if (listProjectResourcesCriteria != null) {
    if (listProjectResourcesCriteria == Project.ListProjectResourcesCriteria.ListProjectResourcesOnly) {
      sb.and("accountType",sb.entity().getAccountType(),SearchCriteria.Op.EQ);
    }
 else     if (listProjectResourcesCriteria == Project.ListProjectResourcesCriteria.SkipProjectResources) {
      sb.and("accountType",sb.entity().getAccountType(),SearchCriteria.Op.NEQ);
    }
  }
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("name",sb.entity().getName(),SearchCriteria.Op.LIKE);
  SearchCriteria<InstanceGroupVO> sc=sb.create();
  if (listProjectResourcesCriteria != null) {
    sc.setParameters("accountType",Account.ACCOUNT_TYPE_PROJECT);
  }
  if (!permittedAccounts.isEmpty()) {
    sc.setParameters("accountIdIN",permittedAccounts.toArray());
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById(domainId);
    if (isRecursive) {
      sc.setJoinParameters("domainSearch","path",domain.getPath() + "%");
    }
 else {
      sc.setParameters("domainId",domainId);
    }
  }
  if (keyword != null) {
    SearchCriteria<InstanceGroupVO> ssc=_vmGroupDao.createSearchCriteria();
    ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
  }
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (name != null) {
    sc.setParameters("name","%" + name + "%");
  }
  return _vmGroupDao.search(sc,searchFilter);
}
