{
  if (cmd.getPrivateKey() != null && cmd.getAlias() != null) {
    throw new InvalidParameterValueException("Can't change the alias for private key certification");
  }
  if (cmd.getPrivateKey() == null) {
    if (cmd.getAlias() == null) {
      throw new InvalidParameterValueException("alias can't be empty, if it's a certification chain");
    }
    if (cmd.getCertIndex() == null) {
      throw new InvalidParameterValueException("index can't be empty, if it's a certifciation chain");
    }
  }
  String certificate=cmd.getCertificate();
  String key=cmd.getPrivateKey();
  try {
    if (certificate != null) {
      certificate=URLDecoder.decode(certificate,"UTF-8");
    }
    if (key != null) {
      key=URLDecoder.decode(key,"UTF-8");
    }
  }
 catch (  UnsupportedEncodingException e) {
  }
 finally {
  }
  if (cmd.getPrivateKey() != null && !_ksMgr.validateCertificate(certificate,key,cmd.getDomainSuffix())) {
    throw new InvalidParameterValueException("Failed to pass certificate validation check");
  }
  if (cmd.getPrivateKey() != null) {
    _ksMgr.saveCertificate(ConsoleProxyManager.CERTIFICATE_NAME,certificate,key,cmd.getDomainSuffix());
  }
 else {
    _ksMgr.saveCertificate(cmd.getAlias(),certificate,cmd.getCertIndex(),cmd.getDomainSuffix());
  }
  _consoleProxyMgr.setManagementState(ConsoleProxyManagementState.ResetSuspending);
  List<SecondaryStorageVmVO> alreadyRunning=_secStorageVmDao.getSecStorageVmListInStates(null,State.Running,State.Migrating,State.Starting);
  for (  SecondaryStorageVmVO ssVmVm : alreadyRunning) {
    _secStorageVmMgr.rebootSecStorageVm(ssVmVm.getId());
  }
  return "Certificate has been updated, we will stop all running console proxy VMs and secondary storage VMs to propagate the new certificate, please give a few minutes for console access service to be up again";
}
