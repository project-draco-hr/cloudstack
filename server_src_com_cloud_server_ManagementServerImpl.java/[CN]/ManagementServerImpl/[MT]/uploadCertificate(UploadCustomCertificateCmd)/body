{
  if (_certDao.listAll().size() > 0) {
    throw new ResourceAllocationException("There is already a custom certificate in the db");
  }
  String certificatePath=cmd.getPath();
  Long certVOId=_certDao.persistCustomCertToDb(certificatePath);
  if (certVOId != null && certVOId != 0) {
    List<ConsoleProxyVO> cpList=_consoleProxyDao.listAll();
    List<HostVO> cpHosts=_hostDao.listAllConsoleProxyHosts(com.cloud.host.Host.Type.ConsoleProxy);
    Map<String,Long> hostNameToHostIdMap=new HashMap<String,Long>();
    for (    HostVO cpHost : cpHosts) {
      hostNameToHostIdMap.put(cpHost.getName(),cpHost.getId());
    }
    for (    ConsoleProxyVO cp : cpList) {
      Long cpHostId=hostNameToHostIdMap.get(cp.getName());
      UpdateCertificateCommand certCmd=new UpdateCertificateCommand(_certDao.findById(certVOId).getCertificate());
      try {
        Answer updateCertAns=_agentMgr.send(cpHostId,certCmd);
        if (updateCertAns.getResult() == true) {
          long eventId=saveScheduledEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventTypes.EVENT_PROXY_REBOOT,"rebooting console proxy with Id: " + cp.getId());
          _consoleProxyMgr.rebootProxy(cp.getId(),eventId);
        }
      }
 catch (      AgentUnavailableException e) {
        s_logger.warn("Unable to send update certificate command to the console proxy resource",e);
      }
catch (      OperationTimedoutException e) {
        s_logger.warn("Unable to send update certificate command to the console proxy resource",e);
      }
    }
    return true;
  }
 else {
    return false;
  }
}
