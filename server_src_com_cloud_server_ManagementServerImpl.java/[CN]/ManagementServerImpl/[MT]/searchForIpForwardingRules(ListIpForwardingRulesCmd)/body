{
  String ipAddress=cmd.getPublicIpAddress();
  Account account=UserContext.current().getAccount();
  IPAddressVO ipAddressVO=_publicIpAddressDao.findById(ipAddress);
  if (ipAddressVO == null) {
    throw new InvalidParameterValueException("Unable to find IP address " + ipAddress);
  }
  Account addrOwner=_accountDao.findById(ipAddressVO.getAccountId());
  if ((account != null) && isAdmin(account.getType())) {
    if (ipAddressVO.getAccountId() != null) {
      if ((addrOwner != null) && !_domainDao.isChildDomain(account.getDomainId(),addrOwner.getDomainId())) {
        throw new PermissionDeniedException("Unable to list ip forwarding rules for address " + ipAddress + ", permission denied for account "+ account.getId());
      }
    }
  }
 else {
    if (account != null) {
      if ((ipAddressVO.getAccountId() == null) || (account.getId() != ipAddressVO.getAccountId().longValue())) {
        throw new PermissionDeniedException("Unable to list ip forwarding rules for address " + ipAddress + ", permission denied for account "+ account.getId());
      }
    }
  }
  Filter searchFilter=new Filter(FirewallRuleVO.class,"id",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchCriteria<FirewallRuleVO> sc=_firewallRulesDao.createSearchCriteria();
  if (ipAddress != null) {
    sc.addAnd("publicIpAddress",SearchCriteria.Op.EQ,ipAddress);
  }
  sc.addAnd("protocol",SearchCriteria.Op.EQ,NetUtils.NAT_PROTO);
  return _firewallRulesDao.search(sc,searchFilter);
}
