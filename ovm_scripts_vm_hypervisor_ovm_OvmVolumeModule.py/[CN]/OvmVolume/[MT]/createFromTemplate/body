@staticmethod
def createFromTemplate(poolUuid, templateUrl):
    try:
        if (not exists(templateUrl)):
            raise Exception(('Cannot find template:%s' % templateUrl))
        sr = OvmStoragePool()._getSrByNameLable(poolUuid)
        volDirUuid = get_uuid()
        volUuid = get_uuid()
        priStorageMountPoint = sr.mountpoint
        volDir = join(priStorageMountPoint, 'running_pool', volDirUuid)
        if exists(volDir):
            raise Exception(('Volume dir %s alreay existed, can not override' % volDir))
        os.makedirs(volDir)
        OvmStoragePool()._checkDirSizeForImage(volDir, templateUrl)
        volName = (volUuid + '.raw')
        tgt = join(volDir, volName)
        cpVolCmd = ['cp', templateUrl, tgt]
        doCmd(cpVolCmd)
        volSize = os.path.getsize(tgt)
        vol = OvmVolume()
        vol.name = volName
        vol.path = tgt
        vol.size = volSize
        vol.uuid = volUuid
        vol.poolUuid = poolUuid
        rs = fromOvmVlolume(vol)
        logger.debug(OvmVolume.createFromTemplate, rs)
        return rs
    except Exception as e:
        errmsg = fmt_err_msg(e)
        logger.error(OvmVolume.createFromTemplate, errmsg)
        raise XmlRpcFault(toErrCode(OvmVolume, OvmVolume.createFromTemplate), errmsg)
