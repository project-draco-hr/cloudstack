{
  DataTO srcData=cmd.getSrcTO();
  TemplateObjectTO template=(TemplateObjectTO)srcData;
  DataStoreTO srcStore=srcData.getDataStore();
  if (!(srcStore instanceof NfsTO)) {
    return new CopyCmdAnswer("unsupported protocol");
  }
  NfsTO nfsImageStore=(NfsTO)srcStore;
  DataTO destData=cmd.getDestTO();
  DataStoreTO destStore=destData.getDataStore();
  DataStoreTO primaryStore=destStore;
  String secondaryStorageUrl=nfsImageStore.getUrl();
  assert(secondaryStorageUrl != null);
  String templateUrl=secondaryStorageUrl + "/" + srcData.getPath();
  Pair<String,String> templateInfo=VmwareStorageLayoutHelper.decodeTemplateRelativePathAndNameFromUrl(secondaryStorageUrl,templateUrl,template.getName());
  VmwareContext context=hostService.getServiceContext(cmd);
  try {
    VmwareHypervisorHost hyperHost=hostService.getHyperHost(context,cmd);
    String templateUuidName=deriveTemplateUuidOnHost(hyperHost,primaryStore.getUuid(),templateInfo.second());
    DatacenterMO dcMo=new DatacenterMO(context,hyperHost.getHyperHostDatacenter());
    VirtualMachineMO templateMo=VmwareHelper.pickOneVmOnRunningHost(dcMo.findVmByNameAndLabel(templateUuidName),true);
    if (templateMo == null) {
      if (s_logger.isInfoEnabled())       s_logger.info("Template " + templateInfo.second() + " is not setup yet, setup template from secondary storage with uuid name: "+ templateUuidName);
      ManagedObjectReference morDs=HypervisorHostHelper.findDatastoreWithBackwardsCompatibility(hyperHost,primaryStore.getUuid());
      assert(morDs != null);
      DatastoreMO primaryStorageDatastoreMo=new DatastoreMO(context,morDs);
      copyTemplateFromSecondaryToPrimary(hyperHost,primaryStorageDatastoreMo,secondaryStorageUrl,templateInfo.first(),templateInfo.second(),templateUuidName);
    }
 else {
      s_logger.info("Template " + templateInfo.second() + " has already been setup, skip the template setup process in primary storage");
    }
    TemplateObjectTO newTemplate=new TemplateObjectTO();
    newTemplate.setPath(templateUuidName);
    return new CopyCmdAnswer(newTemplate);
  }
 catch (  Throwable e) {
    if (e instanceof RemoteException) {
      hostService.invalidateServiceContext(context);
    }
    String msg="Unable to copy template to primary storage due to exception:" + VmwareHelper.getExceptionMessage(e);
    s_logger.error(msg,e);
    return new CopyCmdAnswer(msg);
  }
}
