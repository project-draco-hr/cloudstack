{
  SearchBuilder<IPAddressVO> VlanDbIdSearch=createSearchBuilder();
  VlanDbIdSearch.and("vlanDbId",VlanDbIdSearch.entity().getVlanDbId(),SearchCriteria.Op.EQ);
  VlanDbIdSearch.and("sourceNat",VlanDbIdSearch.entity().getSourceNat(),SearchCriteria.Op.EQ);
  VlanDbIdSearch.done();
  Transaction txn=Transaction.currentTxn();
  try {
    txn.start();
    SearchCriteria<IPAddressVO> sc=VlanDbIdSearch.create();
    sc.setParameters("vlanDbId",vlanDbId);
    sc.setParameters("sourceNat",sourceNat);
    List<IPAddressVO> ipList=this.lock(sc,null,true);
    List<String> ipStringList=new ArrayList<String>();
    for (    IPAddressVO ip : ipList) {
      ip.setAccountId(accountId);
      ip.setAllocated(new Date());
      ip.setDomainId(domainId);
      ip.setSourceNat(sourceNat);
      if (!update(ip.getAddress(),ip)) {
        s_logger.debug("Unable to retrieve ip address " + ip.getAddress());
        return null;
      }
      ipStringList.add(ip.getAddress());
    }
    txn.commit();
    return ipStringList;
  }
 catch (  Exception e) {
    s_logger.warn("Unable to assign IP",e);
  }
  return null;
}
