def _check_system_vms(self, system_vms, primary_storage_id):
    sf_active_volumes = sf_util.get_active_sf_volumes(self.sfe)
    sf_vag_id = sf_util.get_vag_id(self.cs_api, self.cluster.id, primary_storage_id, self)
    for system_vm in system_vms:
        cs_root_volume = self._get_root_volume_for_system_vm(system_vm.id, 'Ready')
        sf_root_volume = sf_util.check_and_get_sf_volume(sf_active_volumes, cs_root_volume.name, self)
        sf_volume_size = sf_util.get_volume_size_with_hsr(self.cs_api, cs_root_volume, self)
        sf_util.check_size_and_iops(sf_root_volume, cs_root_volume, sf_volume_size, self)
        self._check_iops_against_iops_of_system_offering(cs_root_volume, self.testdata[TestData.systemOffering])
        sf_util.check_vag(sf_root_volume, sf_vag_id, self)
        if (TestData.hypervisor_type == TestData.xenServer):
            sr_name = sf_util.format_iqn(sf_root_volume.iqn)
            sf_util.check_xen_sr(sr_name, self.xen_session, self)
        elif (TestData.hypervisor_type == TestData.kvm):
            list_hosts_response = list_hosts(self.apiClient, type='Routing')
            sf_util.check_kvm_access_to_volume(sf_root_volume.iqn, list_hosts_response, self.testdata[TestData.kvm], self)
        else:
            self.assertTrue(False, 'Invalid hypervisor type')
