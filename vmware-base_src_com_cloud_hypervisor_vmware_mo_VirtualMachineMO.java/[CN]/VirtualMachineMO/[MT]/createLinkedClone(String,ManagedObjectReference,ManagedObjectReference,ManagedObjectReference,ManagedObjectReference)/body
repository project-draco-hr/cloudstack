{
  assert(morBaseSnapshot != null);
  assert(morFolder != null);
  assert(morResourcePool != null);
  assert(morDs != null);
  VirtualDisk[] independentDisks=getAllIndependentDiskDevice();
  VirtualMachineRelocateSpec rSpec=new VirtualMachineRelocateSpec();
  if (independentDisks.length > 0) {
    VirtualMachineRelocateSpecDiskLocator[] diskLocator=new VirtualMachineRelocateSpecDiskLocator[independentDisks.length];
    for (int i=0; i < diskLocator.length; i++) {
      diskLocator[i]=new VirtualMachineRelocateSpecDiskLocator();
      diskLocator[i].setDatastore(morDs);
      diskLocator[i].setDiskId(independentDisks[i].getKey());
      diskLocator[i].setDiskMoveType(VirtualMachineRelocateDiskMoveOptions._moveAllDiskBackingsAndDisallowSharing);
    }
    rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions._createNewChildDiskBacking);
    rSpec.setDisk(diskLocator);
  }
 else {
    rSpec.setDiskMoveType(VirtualMachineRelocateDiskMoveOptions._createNewChildDiskBacking);
  }
  rSpec.setPool(morResourcePool);
  VirtualMachineCloneSpec cloneSpec=new VirtualMachineCloneSpec();
  cloneSpec.setPowerOn(false);
  cloneSpec.setTemplate(false);
  cloneSpec.setLocation(rSpec);
  cloneSpec.setSnapshot(morBaseSnapshot);
  ManagedObjectReference morTask=_context.getService().cloneVM_Task(_mor,morFolder,cloneName,cloneSpec);
  String result=_context.getServiceUtil().waitForTask(morTask);
  if (result.equals("sucess")) {
    _context.waitForTaskProgressDone(morTask);
    return true;
  }
 else {
    s_logger.error("VMware cloneVM_Task failed due to " + TaskMO.getTaskFailureInfo(_context,morTask));
  }
  return false;
}
