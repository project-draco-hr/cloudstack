{
  if (s_logger.isTraceEnabled())   s_logger.trace("vCenter API trace - detachDisk(). target MOR: " + _mor.getValue() + ", vmdkDatastorePath: "+ vmdkDatastorePath+ ", deleteBacking: "+ deleteBackingFile);
  Pair<VirtualDisk,String> deviceInfo=getDiskDevice(vmdkDatastorePath,false);
  if (deviceInfo == null) {
    s_logger.warn("vCenter API trace - detachDisk() done (failed)");
    throw new Exception("No such disk device: " + vmdkDatastorePath);
  }
  if (deviceInfo.second() != null && deviceInfo.second().contains("ide")) {
    if (getPowerState() == VirtualMachinePowerState.POWERED_ON) {
      throw new Exception("Removing a virtual disk over IDE controller is not supported while VM is running in VMware hypervisor. " + "Please re-try when VM is not running.");
    }
  }
  List<Pair<String,ManagedObjectReference>> chain=getDiskDatastorePathChain(deviceInfo.first(),true);
  VirtualMachineConfigSpec reConfigSpec=new VirtualMachineConfigSpec();
  VirtualDeviceConfigSpec deviceConfigSpec=new VirtualDeviceConfigSpec();
  deviceConfigSpec.setDevice(deviceInfo.first());
  if (deleteBackingFile) {
    deviceConfigSpec.setFileOperation(VirtualDeviceConfigSpecFileOperation.DESTROY);
  }
  deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.REMOVE);
  reConfigSpec.getDeviceChange().add(deviceConfigSpec);
  ManagedObjectReference morTask=_context.getService().reconfigVMTask(_mor,reConfigSpec);
  boolean result=_context.getVimClient().waitForTask(morTask);
  if (!result) {
    if (s_logger.isTraceEnabled())     s_logger.trace("vCenter API trace - detachDisk() done (failed)");
    throw new Exception("Failed to detach disk due to " + TaskMO.getTaskFailureInfo(_context,morTask));
  }
  _context.waitForTaskProgressDone(morTask);
  SnapshotDescriptor snapshotDescriptor=null;
  try {
    snapshotDescriptor=getSnapshotDescriptor();
  }
 catch (  Exception e) {
    s_logger.info("Unable to retrieve snapshot descriptor, will skip updating snapshot reference");
  }
  if (snapshotDescriptor != null) {
    for (    Pair<String,ManagedObjectReference> pair : chain) {
      DatastoreFile dsFile=new DatastoreFile(pair.first());
      snapshotDescriptor.removeDiskReferenceFromSnapshot(dsFile.getFileName());
    }
    Pair<DatacenterMO,String> dcPair=getOwnerDatacenter();
    String dsPath=getSnapshotDescriptorDatastorePath();
    assert(dsPath != null);
    String url=getContext().composeDatastoreBrowseUrl(dcPair.second(),dsPath);
    getContext().uploadResourceContent(url,snapshotDescriptor.getVmsdContent());
  }
  if (s_logger.isTraceEnabled())   s_logger.trace("vCenter API trace - detachDisk() done (successfully)");
  return chain;
}
