{
  if (s_logger.isTraceEnabled())   s_logger.trace("vCenter API trace - detachIso(). target MOR: " + _mor.getValue() + ", isoDatastorePath: "+ isoDatastorePath);
  VirtualDevice device=getIsoDevice();
  if (device == null) {
    if (s_logger.isTraceEnabled())     s_logger.trace("vCenter API trace - detachIso() done(failed)");
    throw new Exception("Unable to find a CDROM device");
  }
  VirtualCdromRemotePassthroughBackingInfo backingInfo=new VirtualCdromRemotePassthroughBackingInfo();
  backingInfo.setDeviceName("");
  device.setBacking(backingInfo);
  VirtualMachineConfigSpec reConfigSpec=new VirtualMachineConfigSpec();
  VirtualDeviceConfigSpec deviceConfigSpec=new VirtualDeviceConfigSpec();
  deviceConfigSpec.setDevice(device);
  deviceConfigSpec.setOperation(VirtualDeviceConfigSpecOperation.EDIT);
  reConfigSpec.getDeviceChange().add(deviceConfigSpec);
  ManagedObjectReference morTask=_context.getService().reconfigVMTask(_mor,reConfigSpec);
  boolean result=_context.getVimClient().waitForTask(morTask);
  if (!result) {
    if (s_logger.isTraceEnabled())     s_logger.trace("vCenter API trace - detachIso() done(failed)");
    throw new Exception("Failed to detachIso due to " + TaskMO.getTaskFailureInfo(_context,morTask));
  }
  _context.waitForTaskProgressDone(morTask);
  if (s_logger.isTraceEnabled())   s_logger.trace("vCenter API trace - detachIso() done(successfully)");
}
