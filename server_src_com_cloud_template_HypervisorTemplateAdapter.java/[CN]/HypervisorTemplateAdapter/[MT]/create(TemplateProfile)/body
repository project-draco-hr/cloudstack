{
  VMTemplateVO template=persistTemplate(profile);
  if (template == null) {
    throw new CloudRuntimeException("Unable to persist the template " + profile.getTemplate());
  }
  List<DataStore> imageStores=this.storeMgr.getImageStoresByScope(new ZoneScope(profile.getZoneId()));
  if (imageStores == null || imageStores.size() == 0) {
    throw new CloudRuntimeException("Unable to find image store to download template " + profile.getTemplate());
  }
  for (  DataStore imageStore : imageStores) {
    TemplateInfo tmpl=this.imageFactory.getTemplate(template.getId(),imageStore);
    CreateTemplateContext<TemplateApiResult> context=new CreateTemplateContext<TemplateApiResult>(null,tmpl);
    AsyncCallbackDispatcher<HypervisorTemplateAdapter,TemplateApiResult> caller=AsyncCallbackDispatcher.create(this);
    caller.setCallback(caller.getTarget().createTemplateAsyncCallBack(null,null));
    caller.setContext(context);
    this.imageService.createTemplateAsync(tmpl,imageStore,caller);
  }
  _resourceLimitMgr.incrementResourceCount(profile.getAccountId(),ResourceType.template);
  return template;
}
