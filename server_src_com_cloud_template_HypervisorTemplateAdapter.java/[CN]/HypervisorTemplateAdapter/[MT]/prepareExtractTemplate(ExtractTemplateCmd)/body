{
  TemplateProfile profile=super.prepareExtractTemplate(extractcmd);
  VMTemplateVO template=(VMTemplateVO)profile.getTemplate();
  Long zoneId=profile.getZoneId();
  Long templateId=template.getId();
  if (template.getHypervisorType() == HypervisorType.VMware) {
    PrepareOVAPackingCommand cmd=null;
    String zoneName="";
    List<HostVO> secondaryStorageHosts;
    if (!template.isCrossZones() && zoneId != null) {
      DataCenterVO zone=_dcDao.findById(zoneId);
      zoneName=zone.getName();
      secondaryStorageHosts=_ssvmMgr.listSecondaryStorageHostsInOneZone(zoneId);
      s_logger.debug("Attempting to mark template host refs for template: " + template.getName() + " as destroyed in zone: "+ zoneName);
      for (      HostVO secondaryStorageHost : secondaryStorageHosts) {
        long hostId=secondaryStorageHost.getId();
        List<VMTemplateHostVO> templateHostVOs=_tmpltHostDao.listByHostTemplate(hostId,templateId);
        for (        VMTemplateHostVO templateHostVO : templateHostVOs) {
          if (templateHostVO.getDownloadState() == Status.DOWNLOAD_IN_PROGRESS) {
            String errorMsg="Please specify a template that is not currently being downloaded.";
            s_logger.debug("Template: " + template.getName() + " is currently being downloaded to secondary storage host: "+ secondaryStorageHost.getName()+ ".");
            throw new CloudRuntimeException(errorMsg);
          }
          String installPath=templateHostVO.getInstallPath();
          if (installPath != null) {
            HostVO ssvmhost=_ssvmMgr.pickSsvmHost(secondaryStorageHost);
            if (ssvmhost == null) {
              s_logger.warn("prepareOVAPacking (hyervisorTemplateAdapter): There is no secondary storage VM for secondary storage host " + secondaryStorageHost.getName());
              throw new CloudRuntimeException("PrepareExtractTemplate: can't locate ssvm for SecStorage Host.");
            }
            cmd=new PrepareOVAPackingCommand(secondaryStorageHost.getStorageUrl(),installPath);
            if (cmd == null) {
              s_logger.debug("Fang: PrepareOVAPacking cmd can't created. cmd is null .");
              throw new CloudRuntimeException("PrepareExtractTemplate: can't create a new cmd to packing ova.");
            }
 else {
              cmd.setContextParam("hypervisor",HypervisorType.VMware.toString());
            }
            Answer answer=null;
            s_logger.debug("Fang: PrepareOVAPAcking cmd, before send out. cmd: " + cmd.toString());
            try {
              answer=_agentMgr.send(ssvmhost.getId(),cmd);
            }
 catch (            AgentUnavailableException e) {
              s_logger.warn("Unable to packOVA for template: id: " + templateId + ", name "+ ssvmhost.getName(),e);
            }
catch (            OperationTimedoutException e) {
              s_logger.warn("Unable to packOVA for template timeout. template id: " + templateId);
              e.printStackTrace();
            }
            if (answer == null || !answer.getResult()) {
              s_logger.debug("Failed to create OVA for template " + templateHostVO + " due to "+ ((answer == null) ? "answer is null" : answer.getDetails()));
              throw new CloudRuntimeException("PrepareExtractTemplate: Failed to create OVA for template extraction. ");
            }
          }
        }
      }
    }
 else {
      s_logger.debug("Failed to create OVA for template " + template + " due to zone non-existing.");
      throw new CloudRuntimeException("PrepareExtractTemplate: Failed to create OVA for template extraction. ");
    }
  }
  return profile;
}
