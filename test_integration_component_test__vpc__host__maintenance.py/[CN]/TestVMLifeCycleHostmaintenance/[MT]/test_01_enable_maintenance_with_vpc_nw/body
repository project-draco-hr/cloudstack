@attr(tags=['advanced', 'intervlan'])
def test_01_enable_maintenance_with_vpc_nw(self):
    ' Test enable Maintenance Mode on Hosts which have VPC elements\n        '
    self.validate_vm_deployment()
    self.debug('Stop the host on which the VPC virtual router is running')
    try:
        Host.enableMaintenance(self.apiclient, id=self.vpcvr.hostid)
    except Exception as e:
        self.fail(('Failed to enable maintenance mode on host: %s' % e))
    self.debug('Check if all instances belonging to the account are up again?')
    routers = Router.list(self.apiclient, account=self.account.name, domainid=self.account.account.domainid, listall=True)
    self.assertEqual(isinstance(routers, list), True, 'List routers shall return a valid VPCVR for account')
    for router in routers:
        self.assertEqual(router.state, 'Running', 'Router state should be running after migration')
    vms = VirtualMachine.list(self.apiclient, account=self.account.name, domainid=self.account.account.domainid, listall=True)
    self.assertEqual(isinstance(vms, list), True, 'VM response should return instances running for account')
    for vm in vms:
        self.assertEqual(vm.state, 'Ruuning', 'Vm state should be running after migration')
    return
