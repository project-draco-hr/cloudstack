{
  _name=name;
  final ComponentLocator locator=ComponentLocator.getCurrentLocator();
  ConfigurationDao configDao=locator.getDao(ConfigurationDao.class);
  if (configDao == null) {
    throw new ConfigurationException("Unable to get the configuration dao.");
  }
  final Map<String,String> configs=configDao.getConfiguration("AgentManager",params);
  _port=NumbersUtil.parseInt(configs.get("port"),8250);
  final int workers=NumbersUtil.parseInt(configs.get("workers"),5);
  String value=configs.get("ping.interval");
  _pingInterval=NumbersUtil.parseInt(value,60);
  value=configs.get("wait");
  _wait=NumbersUtil.parseInt(value,1800);
  value=configs.get("alert.wait");
  _alertWait=NumbersUtil.parseInt(value,1800);
  value=configs.get("update.wait");
  _updateWait=NumbersUtil.parseInt(value,600);
  value=configs.get("ping.timeout");
  final float multiplier=value != null ? Float.parseFloat(value) : 2.5f;
  _pingTimeout=(long)(multiplier * _pingInterval);
  s_logger.info("Ping Timeout is " + _pingTimeout);
  value=configs.get(Config.DirectAgentLoadSize.key());
  int threads=NumbersUtil.parseInt(value,16);
  _instance=configs.get("instance.name");
  if (_instance == null) {
    _instance="DEFAULT";
  }
  _nodeId=ManagementServerNode.getManagementServerId();
  s_logger.info("Configuring AgentManagerImpl. management server node id(msid): " + _nodeId);
  _hostDao.markHostsAsDisconnected(_nodeId);
  _monitor=ComponentLocator.inject(AgentMonitor.class,_nodeId,_hostDao,_vmDao,_dcDao,_podDao,this,_alertMgr,_pingTimeout);
  registerForHostEvents(_monitor,true,true,false);
  _executor=new ThreadPoolExecutor(threads,threads,60l,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>(),new NamedThreadFactory("AgentTaskPool"));
  _connection=new NioServer("AgentManager",_port,workers + 10,this);
  s_logger.info("Listening on " + _port + " with "+ workers+ " workers");
  return true;
}
