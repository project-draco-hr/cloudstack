{
  final Map<String,String> configs=_configDao.getConfiguration("AgentManager",params);
  _port=NumbersUtil.parseInt(configs.get("port"),8250);
  final int workers=NumbersUtil.parseInt(configs.get("workers"),5);
  _pingInterval=_configDepot.get(PingInterval);
  _wait=_configDepot.get(Wait);
  _alertWait=_configDepot.get(AlertWait);
  _pingTimeout=_configDepot.get(PingTimeout);
  s_logger.info("Ping Timeout is " + _pingTimeout);
  ConfigValue<Integer> threads=_configDepot.get(DirectAgentLoadSize);
  _nodeId=ManagementServerNode.getManagementServerId();
  s_logger.info("Configuring AgentManagerImpl. management server node id(msid): " + _nodeId);
  long lastPing=(System.currentTimeMillis() >> 10) - (long)(_pingTimeout.value() * _pingInterval.value());
  _hostDao.markHostsAsDisconnected(_nodeId,lastPing);
  registerForHostEvents(new BehindOnPingListener(),true,true,false);
  _executor=new ThreadPoolExecutor(threads.value(),threads.value(),60l,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>(),new NamedThreadFactory("AgentTaskPool"));
  _connectExecutor=new ThreadPoolExecutor(100,500,60l,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>(),new NamedThreadFactory("AgentConnectTaskPool"));
  _connectExecutor.allowCoreThreadTimeOut(true);
  _connection=new NioServer("AgentManager",_port,workers + 10,this);
  s_logger.info("Listening on " + _port + " with "+ workers+ " workers");
  ConfigValue<Integer> size=_configDepot.get(DirectAgentPoolSize);
  _directAgentExecutor=new ScheduledThreadPoolExecutor(size.value(),new NamedThreadFactory("DirectAgent"));
  s_logger.debug("Created DirectAgentAttache pool with size: " + size.value());
  _monitorExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory("AgentMonitor"));
  return true;
}
