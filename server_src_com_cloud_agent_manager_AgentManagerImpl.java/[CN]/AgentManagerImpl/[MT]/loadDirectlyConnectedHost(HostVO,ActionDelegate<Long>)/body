{
  String resourceName=host.getResource();
  ServerResource resource=null;
  try {
    Class<?> clazz=Class.forName(resourceName);
    Constructor constructor=clazz.getConstructor();
    resource=(ServerResource)constructor.newInstance();
  }
 catch (  ClassNotFoundException e) {
    s_logger.warn("Unable to find class " + host.getResource(),e);
    return;
  }
catch (  InstantiationException e) {
    s_logger.warn("Unablet to instantiate class " + host.getResource(),e);
    return;
  }
catch (  IllegalAccessException e) {
    s_logger.warn("Illegal access " + host.getResource(),e);
    return;
  }
catch (  SecurityException e) {
    s_logger.warn("Security error on " + host.getResource(),e);
    return;
  }
catch (  NoSuchMethodException e) {
    s_logger.warn("NoSuchMethodException error on " + host.getResource(),e);
    return;
  }
catch (  IllegalArgumentException e) {
    s_logger.warn("IllegalArgumentException error on " + host.getResource(),e);
    return;
  }
catch (  InvocationTargetException e) {
    s_logger.warn("InvocationTargetException error on " + host.getResource(),e);
    return;
  }
  _hostDao.loadDetails(host);
  HashMap<String,Object> params=new HashMap<String,Object>(host.getDetails().size() + 5);
  params.putAll(host.getDetails());
  params.remove("private.network.device");
  params.put("private.network.device",_privateNic);
  params.remove("public.network.device");
  params.put("public.network.device",_publicNic);
  params.remove("guest.network.device");
  params.put("guest.network.device",_guestNic);
  params.put("guid",host.getGuid());
  params.put("zone",Long.toString(host.getDataCenterId()));
  if (host.getPodId() != null) {
    params.put("pod",Long.toString(host.getPodId()));
  }
  if (host.getClusterId() != null) {
    params.put("cluster",Long.toString(host.getClusterId()));
  }
  String guid=null;
  ClusterVO cluster=_clusterDao.findById(host.getClusterId());
  if (cluster.getGuid() == null) {
    guid=host.getDetail("pool");
  }
 else {
    guid=cluster.getGuid();
  }
  if (guid == null || guid.isEmpty()) {
    throw new CloudRuntimeException("Can not find guid for cluster " + cluster.getId() + " name "+ cluster.getName());
  }
  params.put("pool",guid);
  params.put("ipaddress",host.getPrivateIpAddress());
  params.put("secondary.storage.vm","false");
  params.put("max.template.iso.size",_configDao.getValue("max.template.iso.size"));
  try {
    resource.configure(host.getName(),params);
  }
 catch (  ConfigurationException e) {
    s_logger.warn("Unable to configure resource due to ",e);
    return;
  }
  if (!resource.start()) {
    s_logger.warn("Unable to start the resource");
    return;
  }
  _executor.execute(new SimulateStartTask(host.getId(),resource,host.getDetails(),actionDelegate));
}
