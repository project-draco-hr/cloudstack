{
  if (type == Host.Type.Storage || type == Host.Type.ConsoleProxy) {
    return;
  }
  if (serverPrivateIP == null) {
    return;
  }
  String cidrAddress=pod.getCidrAddress();
  long cidrSize=pod.getCidrSize();
  String cidrSubnet=NetUtils.getCidrSubNet(cidrAddress,cidrSize);
  String serverSubnet=NetUtils.getSubNet(serverPrivateIP,serverPrivateNetmask);
  if (!cidrSubnet.equals(serverSubnet)) {
    s_logger.warn("The private ip address of the server (" + serverPrivateIP + ") is not compatible with the CIDR of pod: "+ pod.getName()+ " and zone: "+ dc.getName());
    throw new IllegalArgumentException("The private ip address of the server (" + serverPrivateIP + ") is not compatible with the CIDR of pod: "+ pod.getName()+ " and zone: "+ dc.getName());
  }
  String cidrNetmask=NetUtils.getCidrSubNet("255.255.255.255",cidrSize);
  long cidrNetmaskNumeric=NetUtils.ip2Long(cidrNetmask);
  long serverNetmaskNumeric=NetUtils.ip2Long(serverPrivateNetmask);
  if (serverNetmaskNumeric > cidrNetmaskNumeric) {
    throw new IllegalArgumentException("The private ip address of the server (" + serverPrivateIP + ") is not compatible with the CIDR of pod: "+ pod.getName()+ " and zone: "+ dc.getName());
  }
}
