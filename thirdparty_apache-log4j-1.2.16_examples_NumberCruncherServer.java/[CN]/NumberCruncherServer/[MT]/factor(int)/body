{
  try {
    NDC.push(getClientHost());
  }
 catch (  java.rmi.server.ServerNotActiveException e) {
    NDC.push("localhost");
  }
  NDC.push(String.valueOf(number));
  logger.info("Beginning to factor.");
  if (number <= 0) {
    throw new IllegalArgumentException(number + " is not a positive integer.");
  }
 else   if (number == 1)   return new int[]{1};
  Vector factors=new Vector();
  int n=number;
  for (int i=2; (i <= n) && (i * i <= number); i++) {
    logger.debug("Trying to see if " + i + " is a factor.");
    if ((n % i) == 0) {
      logger.info("Found factor " + i);
      factors.addElement(new Integer(i));
      do {
        n/=i;
      }
 while ((n % i) == 0);
    }
    delay(100);
  }
  if (n != 1) {
    logger.info("Found factor " + n);
    factors.addElement(new Integer(n));
  }
  int len=factors.size();
  int[] result=new int[len];
  for (int i=0; i < len; i++) {
    result[i]=((Integer)factors.elementAt(i)).intValue();
  }
  NDC.remove();
  return result;
}
