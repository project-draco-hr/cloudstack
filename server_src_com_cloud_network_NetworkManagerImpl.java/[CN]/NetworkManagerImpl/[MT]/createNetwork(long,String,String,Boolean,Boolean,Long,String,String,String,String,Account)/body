{
  Account ctxAccount=UserContext.current().getCaller();
  Long userId=UserContext.current().getCallerUserId();
  NetworkOfferingVO networkOffering=_networkOfferingDao.findById(networkOfferingId);
  DataCenterVO zone=_dcDao.findById(zoneId);
  Transaction txn=Transaction.currentTxn();
  txn.start();
  DataCenterDeployment plan=new DataCenterDeployment(zoneId,null,null,null);
  NetworkVO userNetwork=new NetworkVO();
  userNetwork.setNetworkDomain(networkDomain);
  if (ctxAccount.getType() == Account.ACCOUNT_TYPE_ADMIN) {
    if (cidr != null && gateway != null) {
      userNetwork.setCidr(cidr);
      userNetwork.setGateway(gateway);
      if (vlanId != null) {
        userNetwork.setBroadcastUri(URI.create("vlan://" + vlanId));
        userNetwork.setBroadcastDomainType(BroadcastDomainType.Vlan);
        if (!vlanId.equalsIgnoreCase(Vlan.UNTAGGED)) {
          userNetwork.setBroadcastDomainType(BroadcastDomainType.Vlan);
        }
 else {
          userNetwork.setBroadcastDomainType(BroadcastDomainType.Native);
        }
      }
    }
  }
  List<NetworkVO> networks=setupNetwork(owner,networkOffering,userNetwork,plan,name,displayText,isShared,isDefault,true);
  Network network=null;
  if (networks == null || networks.isEmpty()) {
    throw new CloudRuntimeException("Fail to create a network");
  }
 else {
    if (networks.size() > 0 && networks.get(0).getGuestType() == GuestIpType.Virtual && networks.get(0).getTrafficType() == TrafficType.Guest) {
      Network defaultGuestNetwork=networks.get(0);
      for (      Network nw : networks) {
        if (nw.getCidr() != null && nw.getCidr().equals(zone.getGuestNetworkCidr())) {
          defaultGuestNetwork=nw;
        }
      }
      network=defaultGuestNetwork;
    }
 else {
      network=networks.get(0);
    }
    if (network.getGuestType() == GuestIpType.Virtual) {
      s_logger.debug("Creating a source natp ip for " + network);
      PublicIp ip=assignSourceNatIpAddress(owner,network,userId);
      if (ip == null) {
        throw new InsufficientAddressCapacityException("Unable to assign source nat ip address to owner for this network",DataCenter.class,zoneId);
      }
    }
  }
  txn.commit();
  UserContext.current().setEventDetails("Network Id: " + network.getId());
  return network;
}
