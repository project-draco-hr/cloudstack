{
  Network srcNetwork=_networksDao.findById(currentNetworkId);
  if (srcNetwork == null) {
    throw new InvalidParameterValueException("Invalid source network id " + currentNetworkId + " is given");
  }
  Network dstNetwork=_networksDao.findById(newNetworkId);
  if (dstNetwork == null) {
    throw new InvalidParameterValueException("Invalid source network id " + newNetworkId + " is given");
  }
  IPAddressVO ip=_ipAddressDao.findById(ipAddrId);
  if (ip == null) {
    throw new InvalidParameterValueException("Invalid portable ip address id is given");
  }
  Transaction txn=Transaction.currentTxn();
  assert(isPortableIpTransferableFromNetwork(ipAddrId,currentNetworkId));
  if (srcNetwork.getVpcId() != null) {
    _vpcMgr.unassignIPFromVpcNetwork(ipAddrId,currentNetworkId);
  }
 else {
    disassociatePortableIPToGuestNetwork(ipAddrId,currentNetworkId);
  }
  if (srcNetwork.getDataCenterId() != dstNetwork.getDataCenterId()) {
    txn.start();
    ip.setDataCenterId(dstNetwork.getDataCenterId());
    ip.setPhysicalNetworkId(dstNetwork.getPhysicalNetworkId());
    _ipAddressDao.update(ipAddrId,ip);
    VlanVO vlan=_vlanDao.findById(ip.getVlanId());
    vlan.setPhysicalNetworkId(dstNetwork.getPhysicalNetworkId());
    vlan.setNetworkId(newNetworkId);
    vlan.setDataCenterId(dstNetwork.getDataCenterId());
    _vlanDao.update(ip.getVlanId(),vlan);
    txn.commit();
  }
  associatePortableIPToGuestNetwork(ipAddrId,newNetworkId,false);
  txn.start();
  if (dstNetwork.getVpcId() != null) {
    ip.setVpcId(dstNetwork.getVpcId());
  }
 else {
    ip.setVpcId(null);
  }
  _ipAddressDao.update(ipAddrId,ip);
  txn.commit();
  ActionEventUtils.onActionEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,Domain.ROOT_DOMAIN,EventTypes.EVENT_PORTABLE_IP_TRANSFER,"Portable IP associated is transferred from network " + currentNetworkId + " to "+ newNetworkId);
}
