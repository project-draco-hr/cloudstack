{
  boolean success=true;
  Map<PublicIp,Set<Service>> ipToServices=getIpToServices(publicIps,rulesRevoked,true);
  Map<Provider,ArrayList<PublicIp>> providerToIpList=getProviderToIpList(network,ipToServices);
  for (  Provider provider : providerToIpList.keySet()) {
    try {
      ArrayList<PublicIp> ips=providerToIpList.get(provider);
      if (ips == null || ips.isEmpty()) {
        continue;
      }
      IpDeployer deployer=null;
      NetworkElement element=getElementImplementingProvider(provider.getName());
      if (element instanceof IpDeployer) {
        deployer=(IpDeployer)element;
      }
 else {
        throw new CloudRuntimeException("Fail to get ip deployer for element: " + element);
      }
      Set<Service> services=new HashSet<Service>();
      for (      PublicIp ip : ips) {
        if (!ipToServices.containsKey(ip)) {
          continue;
        }
        services.addAll(ipToServices.get(ip));
      }
      deployer.applyIps(network,ips,services);
    }
 catch (    ResourceUnavailableException e) {
      success=false;
      if (!continueOnError) {
        throw e;
      }
 else {
        s_logger.debug("Resource is not available: " + provider.getName(),e);
      }
    }
  }
  return success;
}
