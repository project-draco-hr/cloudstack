{
  for (  NetworkElement element : _networkElements) {
    Map<Service,Map<Capability,String>> capabilities=element.getCapabilities();
    Provider implementedProvider=element.getProvider();
    if (implementedProvider != null) {
      if (s_providerToNetworkElementMap.containsKey(implementedProvider.getName())) {
        s_logger.error("Cannot start NetworkManager: Provider <-> NetworkElement must be a one-to-one map, multiple NetworkElements found for Provider: " + implementedProvider.getName());
        return false;
      }
      s_providerToNetworkElementMap.put(implementedProvider.getName(),element.getName());
    }
    if (capabilities != null && implementedProvider != null) {
      for (      Service service : capabilities.keySet()) {
        if (s_serviceToImplementedProvidersMap.containsKey(service)) {
          List<Provider> providers=s_serviceToImplementedProvidersMap.get(service);
          providers.add(implementedProvider);
        }
 else {
          List<Provider> providers=new ArrayList<Provider>();
          providers.add(implementedProvider);
          s_serviceToImplementedProvidersMap.put(service,providers);
        }
      }
    }
  }
  _executor.scheduleWithFixedDelay(new NetworkGarbageCollector(),_networkGcInterval,_networkGcInterval,TimeUnit.SECONDS);
  return true;
}
