{
  boolean success=true;
  try {
    s_logger.debug("Revoking all PF/StaticNat rules as a part of public IP id=" + ipId + " release...");
    if (!_rulesMgr.revokeAllRulesForIp(ipId,userId,caller)) {
      s_logger.warn("Unable to revoke all the port forwarding rules for ip id=" + ipId + " as a part of ip release");
      success=false;
    }
  }
 catch (  ResourceUnavailableException e) {
    s_logger.warn("Unable to revoke all the port forwarding rules for ip id=" + ipId + " as a part of ip release",e);
    success=false;
  }
  s_logger.debug("Revoking all LB rules as a part of public IP id=" + ipId + " release...");
  if (!_lbMgr.removeAllLoadBalanacersForIp(ipId,caller,userId)) {
    s_logger.warn("Unable to revoke all the load balancer rules for ip id=" + ipId + " as a part of ip release");
    success=false;
  }
  s_logger.debug("Cleaning up remote access vpns as a part of public IP id=" + ipId + " release...");
  try {
    _vpnMgr.destroyRemoteAccessVpn(ipId);
  }
 catch (  ResourceUnavailableException e) {
    s_logger.warn("Unable to destroy remote access vpn for ip id=" + ipId + " as a part of ip release",e);
    success=false;
  }
  return success;
}
