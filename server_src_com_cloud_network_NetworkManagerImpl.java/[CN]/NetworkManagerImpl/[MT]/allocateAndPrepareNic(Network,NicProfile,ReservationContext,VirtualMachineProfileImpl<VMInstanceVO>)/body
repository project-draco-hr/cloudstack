{
  VirtualMachine vm=vmProfile.getVirtualMachine();
  NetworkVO networkVO=_networksDao.findById(network.getId());
  DataCenter dc=_configMgr.getZone(network.getDataCenterId());
  Host host=_hostDao.findById(vm.getHostId());
  DeployDestination dest=new DeployDestination(dc,null,null,host);
  NicProfile nic=null;
  String broadcastUri=null;
  if (requested != null && requested.getBroadCastUri() != null) {
    broadcastUri=requested.getBroadCastUri().toString();
    NicVO nicVO=_nicDao.findByInstanceIdNetworkIdAndBroadcastUri(network.getId(),vm.getId(),broadcastUri);
    if (nicVO != null) {
      nic=getNicProfile(vm,network.getId());
    }
  }
 else {
    NicVO nicVO=_nicDao.findByInstanceIdAndNetworkId(network.getId(),vm.getId());
    if (nicVO != null) {
      nic=getNicProfile(vm,network.getId());
    }
  }
  if (nic == null) {
    s_logger.debug("Allocating nic for the " + vm + " in network "+ network);
    int deviceId=_nicDao.countNics(vm.getId());
    nic=allocateNic(requested,network,false,deviceId,vmProfile).first();
    if (nic == null) {
      throw new CloudRuntimeException("Failed to allocate nic for vm " + vm + " in network "+ network);
    }
    s_logger.debug("Nic is allocated successfully for vm " + vm + " in network "+ network);
    s_logger.debug("Nic is prepared successfully for vm " + vm + " in network "+ network);
  }
  nic=prepareNic(vmProfile,dest,context,nic.getId(),networkVO);
  return nic;
}
