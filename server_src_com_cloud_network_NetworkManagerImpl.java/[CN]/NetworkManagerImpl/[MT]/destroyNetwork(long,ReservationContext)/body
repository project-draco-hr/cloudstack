{
  Account callerAccount=_accountMgr.getAccount(context.getCaller().getAccountId());
  NetworkVO network=_networksDao.findById(networkId);
  if (network == null) {
    s_logger.debug("Unable to find network with id: " + networkId);
    return false;
  }
  int nicCount=getActiveNicsInNetwork(networkId);
  if (nicCount > 0) {
    s_logger.debug("Unable to remove the network id=" + networkId + " as it has active Nics.");
    return false;
  }
  List<UserVmVO> userVms=_userVmDao.listByNetworkIdAndStates(networkId);
  for (  UserVmVO vm : userVms) {
    if (!(vm.getState() == VirtualMachine.State.Expunging && vm.getRemoved() != null)) {
      s_logger.warn("Can't delete the network, not all user vms are expunged. Vm " + vm + " is in "+ vm.getState()+ " state");
      return false;
    }
  }
  shutdownNetwork(networkId,context,false);
  network=_networksDao.findById(networkId);
  if (network.getState() != Network.State.Allocated && network.getState() != Network.State.Setup) {
    s_logger.debug("Network is not not in the correct state to be destroyed: " + network.getState());
    return false;
  }
  boolean success=true;
  if (!cleanupNetworkResources(networkId,callerAccount,context.getCaller().getId())) {
    s_logger.warn("Unable to delete network id=" + networkId + ": failed to cleanup network resources");
    return false;
  }
  List<Provider> providersToDestroy=getNetworkProviders(network.getId());
  for (  NetworkElement element : _networkElements) {
    if (providersToDestroy.contains(element.getProvider())) {
      try {
        if (!isProviderEnabledInPhysicalNetwork(getPhysicalNetworkId(network),"VirtualRouter")) {
          s_logger.warn("Unable to complete destroy of the network elements due to element: " + element.getName() + " either doesn't exist or not enabled in the physical network "+ getPhysicalNetworkId(network));
          success=false;
        }
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Sending destroy to " + element);
        }
        element.destroy(network);
      }
 catch (      ResourceUnavailableException e) {
        s_logger.warn("Unable to complete destroy of the network due to element: " + element.getName(),e);
        success=false;
      }
catch (      ConcurrentOperationException e) {
        s_logger.warn("Unable to complete destroy of the network due to element: " + element.getName(),e);
        success=false;
      }
catch (      Exception e) {
        s_logger.warn("Unable to complete destroy of the network due to element: " + element.getName(),e);
        success=false;
      }
    }
  }
  if (success) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Network id=" + networkId + " is destroyed successfully, cleaning up corresponding resources now.");
    }
    NetworkGuru guru=_networkGurus.get(network.getGuruName());
    Account owner=_accountMgr.getAccount(network.getAccountId());
    Transaction txn=Transaction.currentTxn();
    txn.start();
    guru.trash(network,_networkOfferingDao.findById(network.getNetworkOfferingId()),owner);
    if (!deleteVlansInNetwork(network.getId(),context.getCaller().getId())) {
      success=false;
      s_logger.warn("Failed to delete network " + network + "; was unable to cleanup corresponding ip ranges");
    }
 else {
      network.setState(Network.State.Destroy);
      _networksDao.update(network.getId(),network);
      _networksDao.remove(network.getId());
      txn.commit();
    }
  }
  return success;
}
