{
  if (!areServicesSupportedByNetworkOffering(networkOfferingId,service)) {
    throw new UnsupportedServiceException("Service " + service.getName() + " is not supported by the network offering id="+ networkOfferingId);
  }
  Map<Capability,String> serviceCapabilities=new HashMap<Capability,String>();
  List<String> serviceProviderNames=_ntwkOfferingSrvcDao.getProvidersForService(networkOfferingId,service);
  if (serviceProviderNames != null && !serviceProviderNames.isEmpty()) {
    NetworkElement element=getElementImplementingProvider(serviceProviderNames.get(0));
    if (element != null) {
      Map<Service,Map<Capability,String>> elementCapabilities=element.getCapabilities();
      ;
      if (elementCapabilities == null || elementCapabilities.get(service) == null) {
        throw new UnsupportedServiceException("Service " + service.getName() + " is not supported by the element="+ element.getName()+ " implementing Provider="+ serviceProviderNames.get(0));
      }
      serviceCapabilities=elementCapabilities.get(service);
    }
  }
 else {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Network Offering: " + networkOfferingId + " does not have any Providers associated for this Service:"+ service.getName());
    }
  }
  return serviceCapabilities;
}
