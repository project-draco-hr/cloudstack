{
  boolean success=true;
  int found=0;
  for (  NetworkElement element : _networkElements) {
    try {
      if (!(element instanceof SourceNATServiceProvider)) {
        continue;
      }
      SourceNATServiceProvider e=(SourceNATServiceProvider)element;
      found++;
      s_logger.trace("Asking " + element + " to apply ip associations");
      e.applyIps(network,publicIps);
    }
 catch (    ResourceUnavailableException e) {
      success=false;
      if (!continueOnError) {
        throw e;
      }
 else {
        s_logger.debug("Resource is not available: " + element.getName(),e);
      }
    }
  }
  return success;
}
