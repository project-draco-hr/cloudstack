{
  NetworkOffering oldNetworkOffering=_networkOfferingDao.findByIdIncludingRemoved(oldNetworkOfferingId);
  NetworkOffering newNetworkOffering=_networkOfferingDao.findById(newNetworkOfferingId);
  if (oldNetworkOffering.isSecurityGroupEnabled() != newNetworkOffering.isSecurityGroupEnabled()) {
    s_logger.debug("Offerings " + newNetworkOfferingId + " and "+ oldNetworkOfferingId+ " have different securityGroupProperty, can't upgrade");
    return false;
  }
  if (oldNetworkOffering.getType() != newNetworkOffering.getType()) {
    s_logger.debug("Network offerings " + newNetworkOfferingId + " and "+ oldNetworkOfferingId+ " are of different types, can't upgrade");
    return false;
  }
  if (oldNetworkOffering.getTrafficType() != newNetworkOffering.getTrafficType()) {
    s_logger.debug("Network offerings " + newNetworkOfferingId + " and "+ oldNetworkOfferingId+ " have different traffic types, can't upgrade");
    return false;
  }
  Map<String,Set<String>> newServices=listNetworkOfferingServices(newNetworkOfferingId);
  Map<String,Set<String>> oldServices=listNetworkOfferingServices(oldNetworkOfferingId);
  if (newServices.size() != oldServices.size()) {
    s_logger.debug("Number of supported services is not the same for offering " + newNetworkOfferingId + " and "+ oldNetworkOfferingId);
    return false;
  }
  for (  String service : newServices.keySet()) {
    Set<String> newProviders=newServices.get(service);
    Set<String> oldProviders=oldServices.get(service);
    if (newProviders.size() != oldProviders.size()) {
      s_logger.debug("Number of providers for the service " + service + " is not the same for offering "+ newNetworkOfferingId+ " and "+ oldNetworkOfferingId);
      return false;
    }
    for (    String provider : newProviders) {
      if (!oldProviders.contains(provider)) {
        s_logger.debug("Providers are different for the " + service + " is not the same for offering "+ newNetworkOfferingId+ " and "+ oldNetworkOfferingId);
        return false;
      }
    }
  }
  return true;
}
