{
  if (requestedIp != null && requestedIp.equals(network.getGateway())) {
    s_logger.warn("Requested ip address " + requestedIp + " is used as a gateway address in network "+ network);
    return null;
  }
  Set<Long> availableIps=_networkModel.getAvailableIps(network,requestedIp);
  if (availableIps.isEmpty()) {
    return null;
  }
  Long[] array=availableIps.toArray(new Long[availableIps.size()]);
  if (requestedIp != null) {
    String[] cidr=network.getCidr().split("/");
    boolean isSameCidr=NetUtils.sameSubnetCIDR(requestedIp,NetUtils.long2Ip(array[0]),Integer.parseInt(cidr[1]));
    if (!isSameCidr) {
      s_logger.warn("Requested ip address " + requestedIp + " doesn't belong to the network "+ network+ " cidr");
      return null;
    }
 else {
      return requestedIp;
    }
  }
  String result;
  do {
    result=NetUtils.long2Ip(array[_rand.nextInt(array.length)]);
  }
 while (result.split("\\.")[3].equals("1"));
  return result;
}
