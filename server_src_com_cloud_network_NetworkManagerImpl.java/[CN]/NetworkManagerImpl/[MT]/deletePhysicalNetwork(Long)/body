{
  PhysicalNetworkVO pNetwork=_physicalNetworkDao.findById(physicalNetworkId);
  if (pNetwork == null) {
    InvalidParameterValueException ex=new InvalidParameterValueException("Physical Network with specified id doesn't exist in the system");
    ex.addProxyObject(pNetwork,physicalNetworkId,"physicalNetworkId");
    throw ex;
  }
  checkIfPhysicalNetworkIsDeletable(physicalNetworkId);
  Transaction txn=Transaction.currentTxn();
  txn.start();
  List<VlanVO> vlans=_vlanDao.listVlansByPhysicalNetworkId(physicalNetworkId);
  for (  VlanVO vlan : vlans) {
    _vlanDao.remove(vlan.getId());
  }
  List<NetworkVO> networks=_networksDao.listByPhysicalNetwork(physicalNetworkId);
  if (networks != null && !networks.isEmpty()) {
    for (    NetworkVO network : networks) {
      _networksDao.remove(network.getId());
    }
  }
  _dcDao.deleteVnet(physicalNetworkId);
  List<PhysicalNetworkServiceProviderVO> providers=_pNSPDao.listBy(physicalNetworkId);
  for (  PhysicalNetworkServiceProviderVO provider : providers) {
    try {
      deleteNetworkServiceProvider(provider.getId());
    }
 catch (    ResourceUnavailableException e) {
      s_logger.warn("Unable to complete destroy of the physical network provider: " + provider.getProviderName() + ", id: "+ provider.getId(),e);
      return false;
    }
catch (    ConcurrentOperationException e) {
      s_logger.warn("Unable to complete destroy of the physical network provider: " + provider.getProviderName() + ", id: "+ provider.getId(),e);
      return false;
    }
  }
  _pNTrafficTypeDao.deleteTrafficTypes(physicalNetworkId);
  boolean success=_physicalNetworkDao.remove(physicalNetworkId);
  txn.commit();
  return success;
}
