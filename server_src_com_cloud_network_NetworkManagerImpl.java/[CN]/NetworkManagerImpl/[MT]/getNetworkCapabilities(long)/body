{
  Map<Service,Map<Capability,String>> networkCapabilities=new HashMap<Service,Map<Capability,String>>();
  List<NetworkOfferingServiceMapVO> servicesMap=_ntwkOfferingSrvcDao.getServices(networkOfferingId);
  for (  NetworkOfferingServiceMapVO instance : servicesMap) {
    Service service=Service.getService(instance.getService());
    if (networkCapabilities.containsKey(service)) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Network Offering: " + networkOfferingId + " has multiple Providers associated for this Service:"+ service.getName());
        s_logger.debug("Returning the capabilities of the first Provider");
      }
      continue;
    }
    NetworkElement element=getElementImplementingProvider(instance.getProvider());
    if (element != null) {
      Map<Service,Map<Capability,String>> elementCapabilities=element.getCapabilities();
      ;
      if (elementCapabilities != null && elementCapabilities.get(service) != null) {
        networkCapabilities.put(service,elementCapabilities.get(instance.getService()));
      }
    }
  }
  return networkCapabilities;
}
