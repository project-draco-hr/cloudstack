{
  for (  Provider provider : providersMap.keySet()) {
    NetworkElement element=getElementImplementingProvider(provider.getName());
    if (element == null) {
      throw new InvalidParameterValueException("Unable to find the Network Element implementing the Service Provider '" + provider.getName() + "'");
    }
    Set<Service> enabledServices=providersMap.get(provider);
    if (enabledServices != null && !enabledServices.isEmpty()) {
      if (!element.canEnableIndividualServices()) {
        if (enabledServices.size() != element.getCapabilities().keySet().size()) {
          StringBuilder servicesSet=new StringBuilder();
          for (          Service requiredService : element.getCapabilities().keySet()) {
            servicesSet.append(requiredService.getName() + ", ");
          }
          servicesSet.delete(servicesSet.toString().length() - 2,servicesSet.toString().length());
          throw new InvalidParameterValueException("Cannot enable subset of Services, Please specify the complete list of Services: " + servicesSet.toString() + "  for Service Provider "+ provider.getName());
        }
      }
      for (      Service service : enabledServices) {
        if (!element.getCapabilities().containsKey(service)) {
          throw new UnsupportedServiceException(provider.getName() + " Provider cannot provide service " + service.getName());
        }
      }
    }
  }
}
