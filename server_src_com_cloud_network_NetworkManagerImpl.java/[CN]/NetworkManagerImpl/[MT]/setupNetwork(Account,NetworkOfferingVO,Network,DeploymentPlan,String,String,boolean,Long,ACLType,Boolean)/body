{
  Account locked=_accountDao.acquireInLockTable(owner.getId());
  if (locked == null) {
    throw new ConcurrentOperationException("Unable to acquire lock on " + owner);
  }
  try {
    if (predefined == null || (offering.getTrafficType() != TrafficType.Guest && predefined.getCidr() == null && predefined.getBroadcastUri() == null && predefined.getBroadcastDomainType() != BroadcastDomainType.Vlan)) {
      List<NetworkVO> configs=_networksDao.listBy(owner.getId(),offering.getId(),plan.getDataCenterId());
      if (configs.size() > 0) {
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Found existing network configuration for offering " + offering + ": "+ configs.get(0));
        }
        if (errorIfAlreadySetup) {
          InvalidParameterValueException ex=new InvalidParameterValueException("Found existing network configuration (with specified id) for offering (with specified id)");
          ex.addProxyObject(offering,offering.getId(),"offeringId");
          ex.addProxyObject(configs.get(0),configs.get(0).getId(),"networkConfigId");
          throw ex;
        }
 else {
          return configs;
        }
      }
    }
 else     if (predefined != null && predefined.getCidr() != null && predefined.getBroadcastUri() == null) {
      List<NetworkVO> configs=_networksDao.listBy(owner.getId(),plan.getDataCenterId(),predefined.getCidr());
      if (configs.size() > 0) {
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Found existing network configuration for offering " + offering + ": "+ configs.get(0));
        }
        if (errorIfAlreadySetup) {
          InvalidParameterValueException ex=new InvalidParameterValueException("Found existing network configuration (with specified id) for offering (with specified id)");
          ex.addProxyObject(offering,offering.getId(),"offeringId");
          ex.addProxyObject(configs.get(0),configs.get(0).getId(),"networkConfigId");
          throw ex;
        }
 else {
          return configs;
        }
      }
    }
    List<NetworkVO> networks=new ArrayList<NetworkVO>();
    long related=-1;
    for (    NetworkGuru guru : _networkGurus) {
      Network network=guru.design(offering,plan,predefined,owner);
      if (network == null) {
        continue;
      }
      if (network.getId() != -1) {
        if (network instanceof NetworkVO) {
          networks.add((NetworkVO)network);
        }
 else {
          networks.add(_networksDao.findById(network.getId()));
        }
        continue;
      }
      long id=_networksDao.getNextInSequence(Long.class,"id");
      if (related == -1) {
        related=id;
      }
      Transaction txn=Transaction.currentTxn();
      txn.start();
      NetworkVO vo=new NetworkVO(id,network,offering.getId(),guru.getName(),owner.getDomainId(),owner.getId(),related,name,displayText,predefined.getNetworkDomain(),offering.getGuestType(),plan.getDataCenterId(),plan.getPhysicalNetworkId(),aclType,offering.getSpecifyIpRanges());
      networks.add(_networksDao.persist(vo,vo.getGuestType() == Network.GuestType.Isolated,finalizeServicesAndProvidersForNetwork(offering,plan.getPhysicalNetworkId())));
      if (domainId != null && aclType == ACLType.Domain) {
        _networksDao.addDomainToNetwork(id,domainId,subdomainAccess);
      }
      txn.commit();
    }
    if (networks.size() < 1) {
      CloudRuntimeException ex=new CloudRuntimeException("Unable to convert network offering with specified id to network profile");
      ex.addProxyObject(offering,offering.getId(),"offeringId");
      throw ex;
    }
    return networks;
  }
  finally {
    s_logger.debug("Releasing lock for " + locked);
    _accountDao.releaseFromLockTable(locked.getId());
  }
}
