{
  Account ctxAccount=UserContext.current().getCaller();
  Long userId=UserContext.current().getCallerUserId();
  String cidr=null;
  if (gateway != null && netmask != null) {
    cidr=NetUtils.ipAndNetMaskToCidr(gateway,netmask);
  }
  if (endIP == null && startIP != null) {
    endIP=startIP;
  }
  NetworkOfferingVO networkOffering=_networkOfferingDao.findById(networkOfferingId);
  if (networkOffering == null || networkOffering.isSystemOnly()) {
    throw new InvalidParameterValueException("Unable to find network offeirng by id " + networkOfferingId);
  }
  if (networkOffering.getTrafficType() == TrafficType.Guest) {
    if (isDefault != null) {
      throw new InvalidParameterValueException("Can specify isDefault parameter only for Public network. ");
    }
 else {
      isDefault=true;
    }
  }
 else {
    if (isDefault == null) {
      isDefault=false;
    }
  }
  if (networkDomain == null) {
    networkDomain=_networkDomain;
  }
  if (zoneId == null || ((_dcDao.findById(zoneId)) == null)) {
    throw new InvalidParameterValueException("Please specify a valid zone.");
  }
  DataCenter zone=_dcDao.findById(zoneId);
  if (zone.getNetworkType() == NetworkType.Basic) {
    throw new InvalidParameterValueException("Network creation is not allowed in zone with network type " + NetworkType.Basic);
  }
  if (vlanId != null) {
    String uri="vlan://" + vlanId;
    List<NetworkVO> networks=_networksDao.listBy(zoneId,uri);
    if ((networks != null && !networks.isEmpty())) {
      throw new InvalidParameterValueException("Network with vlan " + vlanId + " already exists in zone "+ zoneId);
    }
  }
  if (ctxAccount.getType() == Account.ACCOUNT_TYPE_NORMAL && vlanId != null && !networkOffering.getSpecifyVlan()) {
    throw new InvalidParameterValueException("Can't specify vlan because network offering doesn't support it");
  }
  Transaction txn=Transaction.currentTxn();
  txn.start();
  try {
    DataCenterDeployment plan=new DataCenterDeployment(zoneId,null,null,null);
    NetworkVO userNetwork=new NetworkVO();
    userNetwork.setNetworkDomain(networkDomain);
    if (ctxAccount.getType() == Account.ACCOUNT_TYPE_ADMIN) {
      if (cidr != null && gateway != null) {
        userNetwork.setCidr(cidr);
        userNetwork.setGateway(gateway);
        if (vlanId != null) {
          userNetwork.setBroadcastUri(URI.create("vlan://" + vlanId));
          userNetwork.setBroadcastDomainType(BroadcastDomainType.Vlan);
          if (!vlanId.equalsIgnoreCase(Vlan.UNTAGGED)) {
            userNetwork.setBroadcastDomainType(BroadcastDomainType.Vlan);
          }
 else {
            userNetwork.setBroadcastDomainType(BroadcastDomainType.Native);
          }
        }
      }
    }
    List<NetworkVO> networks=setupNetwork(owner,networkOffering,userNetwork,plan,name,displayText,isShared,isDefault);
    Long networkId=null;
    Network network=null;
    if (networks == null || networks.isEmpty()) {
      txn.rollback();
      throw new CloudRuntimeException("Fail to create a network");
    }
 else {
      if (networks.size() > 0 && networks.get(0).getGuestType() == GuestIpType.Virtual && networks.get(0).getTrafficType() == TrafficType.Guest) {
        Network defaultGuestNetwork=networks.get(0);
        for (        Network nw : networks) {
          if (nw.getCidr() != null && nw.getCidr().equals(zone.getGuestNetworkCidr())) {
            defaultGuestNetwork=nw;
          }
        }
        network=defaultGuestNetwork;
      }
 else {
        network=networks.get(0);
      }
      networkId=networks.get(0).getId();
      if (network.getGuestType() == GuestIpType.Virtual) {
        s_logger.debug("Creating a source natp ip for " + network);
        PublicIp ip=assignSourceNatIpAddress(owner,network,userId);
        if (ip == null) {
          throw new InsufficientAddressCapacityException("Unable to assign source nat ip address to owner for this network",DataCenter.class,zoneId);
        }
      }
    }
    if (network.getGuestType() == GuestIpType.Direct) {
      owner=null;
    }
    if (ctxAccount.getType() == Account.ACCOUNT_TYPE_ADMIN && network.getGuestType() == GuestIpType.Direct && startIP != null && endIP != null && gateway != null) {
      Vlan vlan=_configMgr.createVlanAndPublicIpRange(userId,zoneId,null,startIP,endIP,gateway,netmask,false,vlanId,owner,networkId);
      if (vlan == null) {
        txn.rollback();
        throw new CloudRuntimeException("Failed to create a vlan");
      }
    }
    txn.commit();
    UserContext.current().setEventDetails("Network Id: " + networkId);
    return networks.get(0);
  }
 catch (  Exception ex) {
    s_logger.warn("Unexpected exception while creating network ",ex);
    txn.rollback();
  }
 finally {
    txn.close();
  }
  return null;
}
