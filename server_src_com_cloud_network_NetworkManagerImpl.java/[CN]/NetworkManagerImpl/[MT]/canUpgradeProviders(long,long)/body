{
  Map<String,Set<String>> newServices=listNetworkOfferingServices(newNetworkOfferingId);
  Map<String,Set<String>> oldServices=listNetworkOfferingServices(oldNetworkOfferingId);
  if (newServices.size() < oldServices.size()) {
    s_logger.debug("Network offering downgrade is not allowed: number of supported services for the new offering " + newNetworkOfferingId + " is less than the old offering "+ oldNetworkOfferingId);
    return false;
  }
  for (  String service : oldServices.keySet()) {
    if (!newServices.containsKey(service)) {
      s_logger.debug("New service offering doesn't have " + service + " service present in the old service offering, downgrade is not allowed");
      return false;
    }
    Set<String> newProviders=newServices.get(service);
    Set<String> oldProviders=oldServices.get(service);
    for (    String oldProvider : oldProviders) {
      if (newProviders.contains(oldProvider)) {
        s_logger.trace("New list of providers contains provider " + oldProvider);
        continue;
      }
      for (      String newProvider : newProviders) {
        if (!(!Provider.getProvider(oldProvider).isExternal() && Provider.getProvider(newProvider).isExternal())) {
          s_logger.debug("Can't downgrade from network offering " + oldNetworkOfferingId + " to the new networkOffering "+ newNetworkOfferingId);
          return false;
        }
      }
    }
  }
  return true;
}
