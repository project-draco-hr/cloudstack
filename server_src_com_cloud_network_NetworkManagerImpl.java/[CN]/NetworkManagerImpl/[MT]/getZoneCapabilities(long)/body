{
  DataCenterVO dc=_dcDao.findById(zoneId);
  if (dc == null) {
    throw new InvalidParameterValueException("Zone id=" + dc.getId() + " doesn't exist in the system.");
  }
  Map<Service,String> providers=new HashMap<Service,String>();
  providers.put(Service.Firewall,dc.getFirewallProvider());
  providers.put(Service.Lb,dc.getLoadBalancerProvider());
  providers.put(Service.Vpn,dc.getVpnProvider());
  providers.put(Service.Dns,dc.getDnsProvider());
  providers.put(Service.Gateway,dc.getGatewayProvider());
  providers.put(Service.UserData,dc.getUserDataProvider());
  providers.put(Service.Dhcp,dc.getDhcpProvider());
  Map<Service,Map<Capability,String>> networkCapabilities=new HashMap<Service,Map<Capability,String>>();
  for (  NetworkElement element : _networkElements) {
    if (providers.isEmpty()) {
      break;
    }
    Map<Service,Map<Capability,String>> elementCapabilities=element.getCapabilities();
    if (elementCapabilities != null) {
      Iterator<Service> it=providers.keySet().iterator();
      while (it.hasNext()) {
        Service service=it.next();
        if (providers.get(service).equals(element.getProvider().getName())) {
          networkCapabilities.put(service,elementCapabilities.get(service));
          it.remove();
        }
      }
    }
  }
  return networkCapabilities;
}
