{
  NetworkVO network=_networksDao.findById(networkId);
  s_logger.debug("Restarting network " + networkId + "...");
  ReservationContext context=new ReservationContextImpl(null,null,callerUser,callerAccount);
  s_logger.debug("Shutting down the network id=" + networkId + " as a part of network restart");
  shutdownNetwork(networkId,context,cleanup);
  network=_networksDao.findById(networkId);
  if (network.getState() != Network.State.Allocated && network.getState() != Network.State.Setup) {
    s_logger.debug("Failed to shutdown the network as a part of network restart: " + network.getState());
    return false;
  }
  if (newNetworkOfferingId != null) {
    s_logger.debug("Updating network " + network + " with the new network offering id="+ newNetworkOfferingId+ " as a part of network restart");
    network.setNetworkOfferingId(newNetworkOfferingId);
    _networksDao.update(networkId,network);
  }
  DeployDestination dest=new DeployDestination(_dcDao.findById(network.getDataCenterId()),null,null,null);
  s_logger.debug("Implementing the network " + network + " as a part of network restart");
  Pair<NetworkGuru,NetworkVO> implemented=implementNetwork(networkId,dest,context);
  if (implemented.first() == null) {
    s_logger.warn("Failed to implement the network " + network + " as a part of network restart");
    return false;
  }
 else {
    return true;
  }
}
