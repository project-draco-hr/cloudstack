{
  NetworkVO network=_networksDao.findById(networkId);
  s_logger.debug("Restarting network " + networkId + "...");
  ReservationContext context=new ReservationContextImpl(null,null,callerUser,callerAccount);
  s_logger.debug("Shutting down the network id=" + networkId + " as a part of network restart");
  if (!shutdownNetworkElementsAndResources(context,cleanup,network)) {
    s_logger.debug("Failed to shutdown the network elements and resources as a part of network restart: " + network.getState());
    return false;
  }
  if (newNetworkOfferingId != null) {
    s_logger.debug("Updating network " + network + " with the new network offering id="+ newNetworkOfferingId+ " as a part of network restart");
    network.setNetworkOfferingId(newNetworkOfferingId);
    _networksDao.update(networkId,network,finalizeServicesAndProvidersForNetwork(_configMgr.getNetworkOffering(newNetworkOfferingId),network.getPhysicalNetworkId()));
  }
  DeployDestination dest=new DeployDestination(_dcDao.findById(network.getDataCenterId()),null,null,null);
  s_logger.debug("Implementing the network " + network + " elements and resources as a part of network restart");
  NetworkOfferingVO offering=_networkOfferingDao.findById(network.getNetworkOfferingId());
  try {
    implementNetworkElementsAndResources(dest,context,network,offering);
  }
 catch (  Exception ex) {
    s_logger.warn("Failed to implement network " + network + " elements and resources as a part of network restart due to ",ex);
    return false;
  }
  return true;
}
