{
  List<NicVO> nics=_nicDao.listBy(vmProfile.getId());
  List<NicTO> nicTos=new ArrayList<NicTO>(nics.size());
  for (  NicVO nic : nics) {
    NetworkConfigurationVO config=_networkProfileDao.findById(nic.getNetworkConfigurationId());
    if (nic.getReservationStrategy() == ReservationStrategy.Start) {
      NetworkGuru concierge=_networkGurus.get(config.getGuruName());
      nic.setState(Resource.State.Reserving);
      _nicDao.update(nic.getId(),nic);
      NicProfile profile=toNicProfile(nic);
      String reservationId=concierge.reserve(profile,config,vmProfile,dest);
      nic.setIp4Address(profile.getIp4Address());
      nic.setIp6Address(profile.getIp6Address());
      nic.setMacAddress(profile.getMacAddress());
      nic.setIsolationUri(profile.getIsolationUri());
      nic.setBroadcastUri(profile.getBroadCastUri());
      nic.setReservationId(reservationId);
      nic.setReserver(concierge.getName());
      nic.setState(Resource.State.Reserved);
      nic.setNetmask(profile.getNetmask());
      nic.setGateway(profile.getGateway());
      nic.setAddressFormat(profile.getFormat());
      _nicDao.update(nic.getId(),nic);
      for (      NetworkElement element : _networkElements) {
        if (!element.prepare(config,profile,vmProfile,null)) {
          s_logger.warn("Unable to prepare " + nic + " for element "+ element.getName());
          return null;
        }
      }
    }
    nicTos.add(toNicTO(nic,config));
  }
  return nicTos;
}
