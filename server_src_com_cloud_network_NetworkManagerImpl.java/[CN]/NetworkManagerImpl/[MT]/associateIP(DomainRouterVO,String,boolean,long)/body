{
  Commands cmds=new Commands(OnError.Continue);
  IPAddressVO ip=_ipAddressDao.findById(ipAddress);
  VlanVO vlan=_vlanDao.findById(ip.getVlanDbId());
  boolean sourceNat=ip.isSourceNat();
  boolean firstIP=(!sourceNat && (_ipAddressDao.countIPs(vlan.getDataCenterId(),router.getAccountId(),vlan.getVlanId(),vlan.getVlanGateway(),vlan.getVlanNetmask()) == 1));
  String vlanId=vlan.getVlanId();
  String vlanGateway=vlan.getVlanGateway();
  String vlanNetmask=vlan.getVlanNetmask();
  String vifMacAddress=null;
  if (firstIP && add) {
    String[] macAddresses=_dcDao.getNextAvailableMacAddressPair(ip.getDataCenterId());
    vifMacAddress=macAddresses[1];
  }
  String vmGuestAddress=null;
  if (vmId != 0) {
    vmGuestAddress=_vmDao.findById(vmId).getGuestIpAddress();
  }
  IPAssocCommand cmd=new IPAssocCommand(router.getInstanceName(),router.getPrivateIpAddress(),ip.getAddress(),add,firstIP,sourceNat,vlanId,vlanGateway,vlanNetmask,vifMacAddress,vmGuestAddress);
  cmds.addCommand(cmd);
  Answer[] answers=null;
  try {
    answers=_agentMgr.send(router.getHostId(),cmds);
  }
 catch (  final AgentUnavailableException e) {
    s_logger.warn("Agent unavailable",e);
    return false;
  }
catch (  final OperationTimedoutException e) {
    s_logger.warn("Timed Out",e);
    return false;
  }
  if (answers == null) {
    return false;
  }
  if (answers.length != 1) {
    return false;
  }
  return answers[0].getResult();
}
