{
  if (zoneId == null || cidr == null) {
    return;
  }
  DataCenter zone=_dcDao.findById(zoneId);
  List<NetworkVO> networks=_networksDao.listByZone(zoneId);
  Map<Long,String> networkToCidr=new HashMap<Long,String>();
  PhysicalNetworkVO pNetwork=_physicalNetworkDao.findById(physicalNetworkId);
  if (pNetwork.getVnet() != null) {
    String vlanRange[]=pNetwork.getVnet().split("-");
    int lowestVlanTag=Integer.valueOf(vlanRange[0]);
    int highestVlanTag=Integer.valueOf(vlanRange[1]);
    for (int vlan=lowestVlanTag; vlan <= highestVlanTag; ++vlan) {
      int offset=vlan - lowestVlanTag;
      String globalVlanBits=_configDao.getValue(Config.GuestVlanBits.key());
      int cidrSize=8 + Integer.parseInt(globalVlanBits);
      String guestNetworkCidr=zone.getGuestNetworkCidr();
      String[] cidrTuple=guestNetworkCidr.split("\\/");
      long newCidrAddress=(NetUtils.ip2Long(cidrTuple[0]) & 0xff000000) | (offset << (32 - cidrSize));
      if (NetUtils.isNetworksOverlap(NetUtils.long2Ip(newCidrAddress),cidr)) {
        throw new InvalidParameterValueException("Specified CIDR for shared network conflict with CIDR that is reserved for zone vlan " + vlan);
      }
    }
  }
  for (  NetworkVO network : networks) {
    if (network.getGuestType() == GuestType.Isolated) {
      continue;
    }
    if (network.getCidr() != null) {
      networkToCidr.put(network.getId(),network.getCidr());
    }
  }
  if (networkToCidr != null && !networkToCidr.isEmpty()) {
    for (    long networkId : networkToCidr.keySet()) {
      String ntwkCidr=networkToCidr.get(networkId);
      if (NetUtils.isNetworksOverlap(ntwkCidr,cidr)) {
        throw new InvalidParameterValueException("Specified CIDR for shared network conflict with CIDR of a shared network in the zone.");
      }
    }
  }
}
