{
  String accountName=cmd.getAccountName();
  long domainId=cmd.getDomainId();
  Account caller=UserContext.current().getAccount();
  Account owner=_accountDao.findActiveAccount(accountName,domainId);
  if (owner == null) {
    throw new InvalidParameterValueException("Unable to find account " + accountName + " in domain "+ domainId+ ", permission denied");
  }
  _accountMgr.checkAccess(caller,owner);
  Long networkId=cmd.getNetworkId();
  Network network=null;
  if (networkId != null) {
    network=_networksDao.findById(networkId);
    if (network == null) {
      throw new InvalidParameterValueException("Network id is invalid: " + networkId);
    }
  }
  s_logger.debug("Restarting network " + networkId + "...");
  boolean success=true;
  if (!applyIpAssociations(network,false)) {
    s_logger.warn("Failed to apply ips as a part of network " + networkId + " restart");
    success=false;
  }
 else {
    s_logger.debug("Ip addresses are reapplied successfully as a part of network " + networkId + " restart");
  }
  List<LoadBalancerVO> lbs=_lbDao.listByNetworkId(networkId);
  List<LoadBalancingRule> lbRules=new ArrayList<LoadBalancingRule>();
  for (  LoadBalancerVO lb : lbs) {
    List<LbDestination> dstList=_lbMgr.getExistingDestinations(lb.getId());
    LoadBalancingRule loadBalancing=new LoadBalancingRule(lb,dstList);
    lbRules.add(loadBalancing);
  }
  if (!applyRules(lbRules,true)) {
    s_logger.warn("Failed to apply load balancing rules as a part of network " + network.getId() + " restart");
    success=false;
  }
 else {
    s_logger.debug("Load balancing rules are reapplied successfully as a part of network " + networkId + " restart");
  }
  List<PortForwardingRuleVO> pfRules=_pfRulesDao.listByNetworkId(networkId);
  if (!applyRules(pfRules,true)) {
    s_logger.warn("Failed to apply port forwarding rules as a part of network " + network.getId() + " restart");
    success=false;
  }
 else {
    s_logger.debug("Port forwarding rules are reapplied successfully as a part of network " + networkId + " restart");
  }
  if (success) {
    s_logger.debug("Network " + networkId + " is restarted successfully.");
  }
  return success;
}
