{
  try {
    List<Long> shutdownList=new ArrayList<Long>();
    long currentTime=System.currentTimeMillis() >> 10;
    HashMap<Long,Long> stillFree=new HashMap<Long,Long>();
    List<Long> networkIds=_networksDao.findNetworksToGarbageCollect();
    for (    Long networkId : networkIds) {
      Long time=_lastNetworkIdsToFree.remove(networkId);
      if (time == null) {
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("We found network " + networkId + " to be free for the first time.  Adding it to the list: "+ currentTime);
        }
        stillFree.put(networkId,currentTime);
      }
 else       if (time > (currentTime - _networkGcWait)) {
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Network " + networkId + " is still free but it's not time to shutdown yet: "+ time);
        }
        stillFree.put(networkId,time);
      }
 else {
        shutdownList.add(networkId);
      }
    }
    _lastNetworkIdsToFree=stillFree;
    for (    Long networkId : shutdownList) {
      try {
        shutdownNetwork(networkId);
      }
 catch (      Exception e) {
        s_logger.warn("Unable to shutdown network: " + networkId);
      }
    }
  }
 catch (  Exception e) {
    s_logger.warn("Caught exception while running network gc: ",e);
  }
}
