{
  if (apiKey == null || apiKey.trim().isEmpty()) {
    throw new InvalidParameterException("Unable to initialize. Please specify a valid API Key.");
  }
  if (elastiCenterAddress == null || elastiCenterAddress.trim().isEmpty()) {
    throw new InvalidParameterException("Unable to initialize. Please specify a valid ElastiCenter IP Address or Hostname.");
  }
  if (ignoreSSLCertificate) {
    TrustManager[] trustAllCerts=new TrustManager[]{new X509TrustManager(){
      public X509Certificate[] getAcceptedIssuers(){
        return null;
      }
      public void checkClientTrusted(      X509Certificate[] certs,      String authType){
      }
      public void checkServerTrusted(      X509Certificate[] certs,      String authType){
      }
    }
};
    HostnameVerifier hv=new HostnameVerifier(){
      @Override public boolean verify(      String urlHostName,      SSLSession session){
        return true;
      }
    }
;
    try {
      SSLContext sc=SSLContext.getInstance("TLS");
      sc.init(null,trustAllCerts,new SecureRandom());
      HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());
      HttpsURLConnection.setDefaultHostnameVerifier(hv);
    }
 catch (    Exception e) {
      ;
    }
  }
  ListCapabilitiesResponse listCapabilitiesResponse=null;
  try {
    initialized=true;
    listCapabilitiesResponse=(ListCapabilitiesResponse)executeCommand(restdefaultcommand,null,new ListCapabilitiesResponse());
  }
 catch (  Throwable t) {
    initialized=false;
    if (t instanceof InvalidCredentialsException) {
      throw (InvalidCredentialsException)t;
    }
 else     if (t instanceof ServiceUnavailableException) {
      throw (ServiceUnavailableException)t;
    }
 else     if (t.getCause() instanceof SSLHandshakeException) {
      throw new SSLHandshakeException("Unable to initialize. An untrusted SSL Certificate was received from " + elastiCenterAddress + ". Please verify your truststore or configure ElastiCenterClient to skip the SSL Validation. ");
    }
 else     if (t.getCause() instanceof ConnectException) {
      throw new ServiceUnavailableException("Unable to initialize. Failed to connect to " + elastiCenterAddress + ". Please verify the IP Address, Network Connectivity and ensure that Services are running on the ElastiCenter Server. ");
    }
    throw new ServiceUnavailableException("Unable to initialize. Please contact your ElastiCenter Administrator. Exception " + t.getMessage());
  }
  if (null == listCapabilitiesResponse || null == listCapabilitiesResponse.getCapabilities() || null == listCapabilitiesResponse.getCapabilities().getVersion()) {
    initialized=false;
    throw new ServiceUnavailableException("Unable to execute command on the server");
  }
}
