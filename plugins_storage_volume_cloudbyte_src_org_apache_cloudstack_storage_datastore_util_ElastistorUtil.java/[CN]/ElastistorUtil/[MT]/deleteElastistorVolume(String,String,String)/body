{
  String esvolumeid=null;
  String estsmid=null;
  ListTsmsResponse listTsmsResponse=listTsm(poolip);
  if (listTsmsResponse.getTsmsCount() != 0) {
    int i;
    for (i=0; i < listTsmsResponse.getTsmsCount(); i++) {
      if (poolip.compareTo(listTsmsResponse.getTsms().getTsm(i).getIpaddress()) == 0) {
        estsmid=listTsmsResponse.getTsms().getTsm(i).getUuid();
        break;
      }
    }
    if (listTsmsResponse.getTsms().getTsm(i).checkvolume()) {
      esvolumeid=listTsmsResponse.getTsms().getTsm(i).getVolumeProperties(0).getid();
      DeleteVolumeResponse deleteVolumeResponse=deleteVolume(esvolumeid,null);
      if (deleteVolumeResponse != null) {
        String jobid=deleteVolumeResponse.getJobId();
        int jobstatus=queryAsyncJobResult(jobid);
        if (jobstatus == 1) {
          s_logger.info("elastistor volume successfully deleted");
        }
 else {
          s_logger.info("now farce deleting the volume");
          while (jobstatus != 1) {
            DeleteVolumeResponse deleteVolumeResponse1=deleteVolume(esvolumeid,"true");
            if (deleteVolumeResponse1 != null) {
              String jobid1=deleteVolumeResponse1.getJobId();
              jobstatus=queryAsyncJobResult(jobid1);
            }
          }
          s_logger.info("elastistor volume successfully deleted");
        }
      }
    }
 else {
      s_logger.info("no volume present in on the given tsm");
    }
    s_logger.info("now trying to delete elastistor tsm");
    if (estsmid != null) {
      DeleteTsmCmd deleteTsmCmd=new DeleteTsmCmd();
      deleteTsmCmd.putCommandParameter(ElastistorUtil.REST_PARAM_ID,estsmid);
      DeleteTsmResponse deleteTsmResponse=(DeleteTsmResponse)getElastistorRestClient(s_esIPVAL,s_esAPIKEYVAL).executeCommand(deleteTsmCmd);
      if (deleteTsmResponse != null) {
        String jobstatus=deleteTsmResponse.getJobStatus();
        if (jobstatus.equalsIgnoreCase("true")) {
          s_logger.info("deletion of elastistor tsm successful");
          return true;
        }
 else {
          s_logger.info("failed to delete elastistor tsm");
          return false;
        }
      }
 else {
        s_logger.info("elastistor tsm id not present");
      }
    }
 else {
      s_logger.error("no volume is present in the tsm");
    }
  }
 else {
    s_logger.error("List tsm failed, no tsm present in the eastistor for the given IP ");
    return false;
  }
  return false;
}
