def test_08_migrate_vm(self):
    'Test migrate VM\n        '
    hosts = Host.list(self.apiclient, zoneid=self.medium_virtual_machine.zoneid, type='Routing')
    self.assertEqual(isinstance(hosts, list), True, 'Check the number of hosts in the zone')
    self.assertEqual(len(hosts), 2, 'Atleast 2 hosts should be present in a zone for VM migration')
    if (self.medium_virtual_machine.hostid == hosts[0].id):
        host = hosts[1]
    else:
        host = hosts[0]
    self.debug(('Migrating VM-ID: %s to Host: %s' % (self.medium_virtual_machine.id, host.id)))
    cmd = migrateVirtualMachine.migrateVirtualMachineCmd()
    cmd.hostid = host.id
    cmd.virtualmachineid = self.medium_virtual_machine.id
    self.apiclient.migrateVirtualMachine(cmd)
    list_vm_response = list_virtual_machines(self.apiclient, id=self.medium_virtual_machine.id)
    self.assertEqual(isinstance(list_vm_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(list_vm_response, None, 'Check virtual machine is listVirtualMachines')
    vm_response = list_vm_response[0]
    self.assertEqual(vm_response.id, self.medium_virtual_machine.id, 'Check virtual machine ID of migrated VM')
    self.assertEqual(vm_response.hostid, host.id, 'Check destination hostID of migrated VM')
    return
