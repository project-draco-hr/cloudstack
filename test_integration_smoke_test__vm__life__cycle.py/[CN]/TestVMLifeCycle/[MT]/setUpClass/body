@classmethod
def setUpClass(cls):
    testClient = super(TestVMLifeCycle, cls).getClsTestClient()
    cls.apiclient = testClient.getApiClient()
    cls.services = testClient.getParsedTestDataConfig()
    cls.hypervisor = testClient.getHypervisorInfo()
    domain = get_domain(cls.apiclient)
    cls.zone = get_zone(cls.apiclient, cls.testClient.getZoneForTests())
    cls.services['mode'] = cls.zone.networktype
    if (cls.zone.localstorageenabled == True):
        cls.services['service_offerings']['tiny']['storagetype'] = 'local'
        cls.services['service_offerings']['small']['storagetype'] = 'local'
        cls.services['service_offerings']['medium']['storagetype'] = 'local'
    template = get_template(cls.apiclient, cls.zone.id, cls.services['ostype'])
    if (template == FAILED):
        assert False, ('get_template() failed to return template with description %s' % cls.services['ostype'])
    cls.services['small']['zoneid'] = cls.zone.id
    cls.services['small']['template'] = template.id
    cls.services['medium']['zoneid'] = cls.zone.id
    cls.services['medium']['template'] = template.id
    cls.services['iso1']['zoneid'] = cls.zone.id
    cls.account = Account.create(cls.apiclient, cls.services['account'], domainid=domain.id)
    cls.small_offering = ServiceOffering.create(cls.apiclient, cls.services['service_offerings']['small'])
    cls.medium_offering = ServiceOffering.create(cls.apiclient, cls.services['service_offerings']['medium'])
    cls.small_virtual_machine = VirtualMachine.create(cls.apiclient, cls.services['small'], accountid=cls.account.name, domainid=cls.account.domainid, serviceofferingid=cls.small_offering.id, mode=cls.services['mode'])
    cls.medium_virtual_machine = VirtualMachine.create(cls.apiclient, cls.services['medium'], accountid=cls.account.name, domainid=cls.account.domainid, serviceofferingid=cls.medium_offering.id, mode=cls.services['mode'])
    cls.virtual_machine = VirtualMachine.create(cls.apiclient, cls.services['small'], accountid=cls.account.name, domainid=cls.account.domainid, serviceofferingid=cls.small_offering.id, mode=cls.services['mode'])
    cls._cleanup = [cls.small_offering, cls.medium_offering, cls.account]
