{
  long beginTime=System.currentTimeMillis();
  if (s_logger.isTraceEnabled()) {
    s_logger.trace("Task " + task.getNameLabel(c) + " ("+ task.getUuid(c)+ ") sent to "+ c.getSessionReference()+ " is pending completion with a "+ timeout+ "ms timeout");
  }
  while (task.getStatus(c) == Types.TaskStatusType.PENDING) {
    try {
      if (s_logger.isTraceEnabled()) {
        s_logger.trace("Task " + task.getNameLabel(c) + " ("+ task.getUuid(c)+ ") is pending, sleeping for "+ pollInterval+ "ms");
      }
      Thread.sleep(pollInterval);
    }
 catch (    InterruptedException e) {
    }
    if (System.currentTimeMillis() - beginTime > timeout) {
      String msg="Async " + timeout / 1000 + " seconds timeout for task " + task.toString();
      s_logger.warn(msg);
      task.cancel(c);
      task.destroy(c);
      throw new TimeoutException(msg);
    }
  }
}
