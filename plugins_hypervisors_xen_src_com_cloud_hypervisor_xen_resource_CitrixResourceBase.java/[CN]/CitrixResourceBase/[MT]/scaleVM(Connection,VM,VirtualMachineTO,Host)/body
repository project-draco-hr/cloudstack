{
  Long staticMemoryMax=vm.getMemoryStaticMax(conn);
  Long staticMemoryMin=vm.getMemoryStaticMin(conn);
  Long newDynamicMemoryMin=vmSpec.getMinRam() * 1024 * 1024;
  Long newDynamicMemoryMax=vmSpec.getMaxRam() * 1024 * 1024;
  if (staticMemoryMin > newDynamicMemoryMin || newDynamicMemoryMax > staticMemoryMax) {
    throw new CloudRuntimeException("Cannot scale up the vm because of memory constraint violation: 0 <= memory-static-min <= memory-dynamic-min <= memory-dynamic-max <= memory-static-max ");
  }
  vm.setMemoryDynamicRange(conn,vmSpec.getMinRam() * 1024 * 1024,vmSpec.getMaxRam() * 1024 * 1024);
  vm.setVCPUsNumberLive(conn,(long)vmSpec.getCpus());
  Integer speed=vmSpec.getSpeed();
  if (speed != null) {
    int cpuWeight=_maxWeight;
    cpuWeight=(int)((speed * 0.99) / _host.speed * _maxWeight);
    if (cpuWeight > _maxWeight) {
      cpuWeight=_maxWeight;
    }
    if (vmSpec.getLimitCpuUse()) {
      long utilization=0;
      utilization=((long)speed * 100 * vmSpec.getCpus()) / _host.speed;
      callHostPlugin(conn,"vmops","add_to_VCPUs_params_live","key","cap","value",Long.toString(utilization),"vmname",vmSpec.getName());
    }
    callHostPlugin(conn,"vmops","add_to_VCPUs_params_live","key","weight","value",Integer.toString(cpuWeight),"vmname",vmSpec.getName());
  }
}
