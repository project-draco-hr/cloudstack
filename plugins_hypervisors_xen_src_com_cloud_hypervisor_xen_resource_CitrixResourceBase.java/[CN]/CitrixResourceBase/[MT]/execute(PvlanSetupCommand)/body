{
  Connection conn=getConnection();
  String primaryPvlan=cmd.getPrimary();
  String isolatedPvlan=cmd.getIsolated();
  String op=cmd.getOp();
  String dhcpName=cmd.getDhcpName();
  String dhcpMac=cmd.getDhcpMac();
  String dhcpIp=cmd.getDhcpIp();
  String vmMac=cmd.getVmMac();
  String bridge="xenbr0";
  String result=null;
  if (cmd.getType() == PvlanSetupCommand.Type.DHCP) {
    result=callHostPlugin(conn,"ovs-pvlan","setup-pvlan-dhcp","op",op,"bridge",bridge,"primary-pvlan",primaryPvlan,"isolated-pvlan",isolatedPvlan,"dhcp-name",dhcpName,"dhcp-ip",dhcpIp,"dhcp-mac",dhcpMac);
    if (result == null || result.isEmpty() || !Boolean.parseBoolean(result)) {
      s_logger.warn("Failed to program pvlan for dhcp server with mac " + dhcpMac);
      return new Answer(cmd,false,result);
    }
 else {
      s_logger.info("Programmed pvlan for dhcp server with mac " + dhcpMac);
    }
  }
 else   if (cmd.getType() == PvlanSetupCommand.Type.VM) {
    result=callHostPlugin(conn,"ovs-pvlan","setup-pvlan-vm","op",op,"bridge",bridge,"primary-pvlan",primaryPvlan,"isolated-pvlan",isolatedPvlan,"vm-mac",vmMac);
    if (result == null || result.isEmpty() || !Boolean.parseBoolean(result)) {
      s_logger.warn("Failed to program pvlan for vm with mac " + vmMac);
      return new Answer(cmd,false,result);
    }
 else {
      s_logger.info("Programmed pvlan for vm with mac " + vmMac);
    }
  }
  return new Answer(cmd,true,result);
}
