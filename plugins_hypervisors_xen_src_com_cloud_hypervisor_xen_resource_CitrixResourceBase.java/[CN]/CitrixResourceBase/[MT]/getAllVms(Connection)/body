{
  final HashMap<String,Pair<String,State>> vmStates=new HashMap<String,Pair<String,State>>();
  Map<VM,VM.Record> vm_map=null;
  for (int i=0; i < 2; i++) {
    try {
      vm_map=VM.getAllRecords(conn);
      break;
    }
 catch (    final Throwable e) {
      s_logger.warn("Unable to get vms",e);
    }
    try {
      Thread.sleep(1000);
    }
 catch (    final InterruptedException ex) {
    }
  }
  if (vm_map == null) {
    return null;
  }
  for (  VM.Record record : vm_map.values()) {
    if (record.isControlDomain || record.isASnapshot || record.isATemplate) {
      continue;
    }
    VmPowerState ps=record.powerState;
    final State state=convertToState(ps);
    if (s_logger.isTraceEnabled()) {
      s_logger.trace("VM " + record.nameLabel + ": powerstate = "+ ps+ "; vm state="+ state.toString());
    }
    Host host=record.residentOn;
    String host_uuid=null;
    if (!isRefNull(host)) {
      try {
        host_uuid=host.getUuid(conn);
      }
 catch (      BadServerResponse e) {
        s_logger.error("Failed to get host uuid for host " + host.toWireString(),e);
      }
catch (      XenAPIException e) {
        s_logger.error("Failed to get host uuid for host " + host.toWireString(),e);
      }
catch (      XmlRpcException e) {
        s_logger.error("Failed to get host uuid for host " + host.toWireString(),e);
      }
      vmStates.put(record.nameLabel,new Pair<String,State>(host_uuid,state));
    }
  }
  return vmStates;
}
