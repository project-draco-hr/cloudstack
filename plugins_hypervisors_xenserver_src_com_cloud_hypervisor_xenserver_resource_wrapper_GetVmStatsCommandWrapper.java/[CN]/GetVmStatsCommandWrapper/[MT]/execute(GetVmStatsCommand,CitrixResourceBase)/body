{
  final Connection conn=citrixResourceBase.getConnection();
  final List<String> vmNames=command.getVmNames();
  final HashMap<String,VmStatsEntry> vmStatsNameMap=new HashMap<String,VmStatsEntry>();
  if (vmNames.size() == 0) {
    return new GetVmStatsAnswer(command,vmStatsNameMap);
  }
  try {
    final List<String> vmUUIDs=new ArrayList<String>();
    for (    final String vmName : vmNames) {
      final VM vm=citrixResourceBase.getVM(conn,vmName);
      vmUUIDs.add(vm.getUuid(conn));
    }
    final HashMap<String,VmStatsEntry> vmStatsUUIDMap=citrixResourceBase.getVmStats(conn,command,vmUUIDs,command.getHostGuid());
    if (vmStatsUUIDMap == null) {
      return new GetVmStatsAnswer(command,vmStatsNameMap);
    }
    for (    final Map.Entry<String,VmStatsEntry> entry : vmStatsUUIDMap.entrySet()) {
      vmStatsNameMap.put(vmNames.get(vmUUIDs.indexOf(entry.getKey())),entry.getValue());
    }
    return new GetVmStatsAnswer(command,vmStatsNameMap);
  }
 catch (  final XenAPIException e) {
    final String msg="Unable to get VM stats" + e.toString();
    s_logger.warn(msg,e);
    return new GetVmStatsAnswer(command,vmStatsNameMap);
  }
catch (  final XmlRpcException e) {
    final String msg="Unable to get VM stats" + e.getMessage();
    s_logger.warn(msg,e);
    return new GetVmStatsAnswer(command,vmStatsNameMap);
  }
}
