{
  try {
    Writer out=new BufferedWriter(new OutputStreamWriter(connection.getOutputStream(),"ASCII"));
    Reader in=new InputStreamReader(new BufferedInputStream(connection.getInputStream()));
    StringBuffer req=new StringBuffer(80);
    while (true) {
      int c=in.read();
      if (c == '\r' || c == '\n' || c == -1)       break;
      req.append((char)c);
    }
    String get=req.toString();
    cat.debug(get);
    StringTokenizer st=new StringTokenizer(get);
    String method=st.nextToken();
    String request=st.nextToken();
    String version=st.nextToken();
    if (method.equalsIgnoreCase("GET")) {
      boolean served=false;
      for (int i=0; i < handler.size(); i++) {
        if (handler.get(i) instanceof HTTPRequestHandler) {
          if (((HTTPRequestHandler)handler.get(i)).handleRequest(request,out)) {
            served=true;
            break;
          }
        }
      }
      if (!served)       PluggableHTTPServer.replyNotFound(out);
    }
 else {
      PluggableHTTPServer.replyMethodNotAllowed(out);
    }
  }
 catch (  IOException e) {
  }
 finally {
    try {
      if (connection != null)       connection.close();
    }
 catch (    IOException e) {
    }
  }
}
