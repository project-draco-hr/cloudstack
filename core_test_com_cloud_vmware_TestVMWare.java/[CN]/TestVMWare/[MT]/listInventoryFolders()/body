{
  TraversalSpec folderTraversalSpec=new TraversalSpec();
  folderTraversalSpec.setName("folderTraversalSpec");
  folderTraversalSpec.setType("Folder");
  folderTraversalSpec.setPath("childEntity");
  folderTraversalSpec.setSkip(new Boolean(false));
  folderTraversalSpec.setSelectSet(new SelectionSpec[]{new SelectionSpec(null,null,"folderTraversalSpec")});
  PropertySpec[] propSpecs=new PropertySpec[]{new PropertySpec()};
  propSpecs[0].setAll(new Boolean(false));
  propSpecs[0].setPathSet(new String[]{"name"});
  propSpecs[0].setType("ManagedEntity");
  PropertyFilterSpec filterSpec=new PropertyFilterSpec();
  filterSpec.setPropSet(propSpecs);
  filterSpec.setObjectSet(new ObjectSpec[]{new ObjectSpec()});
  filterSpec.getObjectSet(0).setObj(cb.getServiceConnection3().getRootFolder());
  filterSpec.getObjectSet(0).setSkip(new Boolean(false));
  filterSpec.getObjectSet(0).setSelectSet(new SelectionSpec[]{folderTraversalSpec});
  try {
    ObjectContent[] objContent=cb.getServiceConnection3().getService().retrieveProperties(cb.getServiceConnection3().getServiceContent().getPropertyCollector(),new PropertyFilterSpec[]{filterSpec});
    printContent(objContent);
  }
 catch (  InvalidProperty e) {
    e.printStackTrace();
  }
catch (  RuntimeFault e) {
    e.printStackTrace();
  }
catch (  RemoteException e) {
    e.printStackTrace();
  }
}
