{
  ManagedObjectReference morHost=new ManagedObjectReference();
  morHost.setType("HostSystem");
  morHost.set_value("host-223");
  ManagedObjectReference morRp=new ManagedObjectReference();
  morRp.setType("ResourcePool");
  morRp.set_value("resgroup-222");
  ManagedObjectReference morDs=new ManagedObjectReference();
  morDs.setType("Datastore");
  morDs.set_value("datastore-30");
  ManagedObjectReference morVmFolder=new ManagedObjectReference();
  morVmFolder.setType("Folder");
  morVmFolder.set_value("group-v3");
  ManagedObjectReference morNetwork=new ManagedObjectReference();
  morNetwork.setType("Network");
  morNetwork.set_value("network-32");
  ManagedObjectReference morOvf=cb.getServiceConnection3().getServiceContent().getOvfManager();
  OvfCreateImportSpecParams importSpecParams=new OvfCreateImportSpecParams();
  importSpecParams.setHostSystem(morHost);
  importSpecParams.setLocale("US");
  importSpecParams.setEntityName("winxpsp3-ovf-deployed");
  importSpecParams.setDeploymentOption("");
  importSpecParams.setDiskProvisioning("thin");
  importSpecParams.setPropertyMapping(null);
  String ovfDescriptor=readOvfContent("C:\\research\\vmware\\winxpsp3-ovf\\winxpsp3-ovf.ovf");
  OvfCreateImportSpecResult ovfImportResult=cb.getServiceConnection3().getService().createImportSpec(morOvf,ovfDescriptor,morRp,morDs,importSpecParams);
  if (ovfImportResult != null) {
    long totalBytes=addTotalBytes(ovfImportResult);
    ManagedObjectReference morLease=cb.getServiceConnection3().getService().importVApp(morRp,ovfImportResult.getImportSpec(),morVmFolder,morHost);
    HttpNfcLeaseState state;
    for (; ; ) {
      state=(HttpNfcLeaseState)cb.getServiceUtil3().getDynamicProperty(morLease,"state");
      if (state == HttpNfcLeaseState.ready || state == HttpNfcLeaseState.error)       break;
    }
    if (state == HttpNfcLeaseState.ready) {
      HttpNfcLeaseInfo httpNfcLeaseInfo=(HttpNfcLeaseInfo)cb.getServiceUtil3().getDynamicProperty(morLease,"info");
      HttpNfcLeaseDeviceUrl[] deviceUrls=httpNfcLeaseInfo.getDeviceUrl();
      long bytesAlreadyWritten=0;
      for (      HttpNfcLeaseDeviceUrl deviceUrl : deviceUrls) {
        String deviceKey=deviceUrl.getImportKey();
        for (        OvfFileItem ovfFileItem : ovfImportResult.getFileItem()) {
          if (deviceKey.equals(ovfFileItem.getDeviceId())) {
            System.out.println("Import key==OvfFileItem device id: " + deviceKey);
            System.out.println("device URL: " + deviceUrl.getUrl());
            String absoluteFile="C:\\research\\vmware\\winxpsp3-ovf\\" + ovfFileItem.getPath();
            String urlToPost=deviceUrl.getUrl().replace("*","esxhost-1.lab.vmops.com");
            uploadVmdkFile(ovfFileItem.isCreate(),absoluteFile,urlToPost,bytesAlreadyWritten,totalBytes);
            bytesAlreadyWritten+=ovfFileItem.getSize();
            System.out.println("Completed uploading the VMDK file:" + absoluteFile);
          }
        }
      }
      cb.getServiceConnection3().getService().httpNfcLeaseProgress(morLease,100);
      cb.getServiceConnection3().getService().httpNfcLeaseComplete(morLease);
    }
  }
}
