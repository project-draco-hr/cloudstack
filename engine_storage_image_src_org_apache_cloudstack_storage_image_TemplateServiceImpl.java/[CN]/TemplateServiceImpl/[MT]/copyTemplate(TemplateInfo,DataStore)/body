{
  String url=generateCopyUrl(srcTemplate);
  if (url == null) {
    s_logger.warn("Unable to start/resume copy of template " + srcTemplate.getUniqueName() + " to "+ destStore.getName()+ ", no secondary storage vm in running state in source zone");
    throw new CloudRuntimeException("No secondary VM in running state in source template zone ");
  }
  TemplateObject tmplForCopy=(TemplateObject)_templateFactory.getTemplate(srcTemplate,destStore);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Setting source template url to " + url);
  }
  tmplForCopy.setUrl(url);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Mark template_store_ref entry as Creating");
  }
  AsyncCallFuture<TemplateApiResult> future=new AsyncCallFuture<TemplateApiResult>();
  DataObject templateOnStore=destStore.create(tmplForCopy);
  templateOnStore.processEvent(Event.CreateOnlyRequested);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Invoke datastore driver createAsync to create template on destination store");
  }
  try {
    TemplateOpContext<TemplateApiResult> context=new TemplateOpContext<TemplateApiResult>(null,(TemplateObject)templateOnStore,future);
    AsyncCallbackDispatcher<TemplateServiceImpl,CreateCmdResult> caller=AsyncCallbackDispatcher.create(this);
    caller.setCallback(caller.getTarget().copyTemplateCrossZoneCallBack(null,null)).setContext(context);
    destStore.getDriver().createAsync(destStore,templateOnStore,caller);
  }
 catch (  CloudRuntimeException ex) {
    TemplateDataStoreVO templateStoreVO=_vmTemplateStoreDao.findByStoreTemplate(destStore.getId(),srcTemplate.getId());
    if (templateStoreVO != null) {
      TemplateInfo tmplObj=_templateFactory.getTemplate(srcTemplate,destStore);
      tmplObj.processEvent(ObjectInDataStoreStateMachine.Event.OperationFailed);
    }
    TemplateApiResult res=new TemplateApiResult((TemplateObject)templateOnStore);
    res.setResult(ex.getMessage());
    future.complete(res);
  }
  return future;
}
