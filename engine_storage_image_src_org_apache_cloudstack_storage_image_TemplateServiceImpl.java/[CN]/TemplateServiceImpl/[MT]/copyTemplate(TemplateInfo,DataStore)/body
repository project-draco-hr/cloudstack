{
  AsyncCallFuture<TemplateApiResult> future=new AsyncCallFuture<TemplateApiResult>();
  TemplateApiResult res=new TemplateApiResult(srcTemplate);
  try {
    TemplateDataStoreVO destTmpltStore=_vmTemplateStoreDao.findByStoreTemplate(destStore.getId(),srcTemplate.getId());
    if (destTmpltStore == null) {
      destTmpltStore=new TemplateDataStoreVO(destStore.getId(),srcTemplate.getId());
      destTmpltStore.setCopy(true);
      _vmTemplateStoreDao.persist(destTmpltStore);
    }
    TemplateInfo destTemplate=this._templateFactory.getTemplate(destTmpltStore.getTemplateId(),destStore);
    destTemplate.processEvent(Event.CreateOnlyRequested);
    srcTemplate.processEvent(Event.CopyingRequested);
    CopyTemplateContext<TemplateApiResult> context=new CopyTemplateContext<TemplateApiResult>(null,future,srcTemplate,destTemplate,destStore);
    AsyncCallbackDispatcher<TemplateServiceImpl,CopyCommandResult> caller=AsyncCallbackDispatcher.create(this);
    caller.setCallback(caller.getTarget().copyTemplateCallBack(null,null)).setContext(context);
    this._motionSrv.copyAsync(srcTemplate,destTemplate,caller);
  }
 catch (  Exception e) {
    s_logger.debug("Failed to copy volume",e);
    res.setResult(e.toString());
    future.complete(res);
  }
  return future;
}
