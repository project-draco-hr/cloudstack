def test_04_extract_template(self):
    'Test for extract template'
    self.debug(('Extracting template with ID: %s' % self.template_2.id))
    cmd = extractTemplate.extractTemplateCmd()
    cmd.id = self.template_2.id
    cmd.mode = self.services['template_2']['mode']
    cmd.zoneid = self.zone.id
    list_extract_response = self.apiclient.extractTemplate(cmd)
    try:
        formatted_url = urllib.unquote_plus(list_extract_response.url)
        url_response = urllib.urlopen(formatted_url)
        response_code = url_response.getcode()
    except Exception:
        self.fail(('Extract Template Failed with invalid URL %s (template id: %s)' % (formatted_url, self.template_2.id)))
    self.assertEqual(list_extract_response.id, self.template_2.id, 'Check ID of the extracted template')
    self.assertEqual(list_extract_response.extractMode, self.services['template_2']['mode'], 'Check mode of extraction')
    self.assertEqual(list_extract_response.zoneid, self.services['template_2']['zoneid'], 'Check zone ID of extraction')
    self.assertEqual(response_code, 200, 'Check for a valid response download URL')
    return
