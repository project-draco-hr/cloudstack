@attr(tags=['advanced', 'advancedns', 'smoke', 'basic', 'sg', 'multizone', 'provisioning'])
def test_06_copy_template(self):
    'Test for copy template from one zone to another'
    if (len(self.zones) <= 1):
        self.skipTest('Not enough zones available to perform copy template')
    self.services['destzoneid'] = filter((lambda z: (z.id != self.services['sourcezoneid'])), self.zones)[0].id
    self.debug(('Copy template from Zone: %s to %s' % (self.services['sourcezoneid'], self.services['destzoneid'])))
    cmd = copyTemplate.copyTemplateCmd()
    cmd.id = self.template_2.id
    cmd.destzoneid = self.services['destzoneid']
    cmd.sourcezoneid = self.services['sourcezoneid']
    self.apiclient.copyTemplate(cmd)
    list_template_response = Template.list(self.apiclient, templatefilter=self.services['templatefilter'], id=self.template_2.id, zoneid=self.services['destzoneid'])
    self.assertEqual(isinstance(list_template_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_template_response), 0, 'Check template extracted in List Templates')
    template_response = list_template_response[0]
    self.assertEqual(template_response.id, self.template_2.id, 'Check ID of the downloaded template')
    self.assertEqual(template_response.zoneid, self.services['destzoneid'], 'Check zone ID of the copied template')
    timeout = self.services['timeout']
    while True:
        time.sleep(self.services['sleep'])
        list_template_response = Template.list(self.apiclient, templatefilter=self.services['templatefilter'], id=self.template_2.id, zoneid=self.services['destzoneid'])
        self.assertEqual(isinstance(list_template_response, list), True, 'Check list response returns a valid list')
        self.assertNotEqual(len(list_template_response), 0, 'Check template extracted in List Templates')
        template_response = list_template_response[0]
        if (template_response.isready == True):
            break
        if (timeout == 0):
            raise Exception(('Failed to download copied template(ID: %s)' % template_response.id))
        timeout = (timeout - 1)
    cmd = deleteTemplate.deleteTemplateCmd()
    cmd.id = template_response.id
    cmd.zoneid = self.services['destzoneid']
    self.apiclient.deleteTemplate(cmd)
    return
