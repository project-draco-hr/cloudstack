{
  try {
    String uuid=UUID.nameUUIDFromBytes(this.getPrimaryStorageUrl().getBytes()).toString();
    List<StoragePoolVO> pools=primaryDataStoreDao.findPoolByName(this.primaryName);
    if (pools.size() > 0) {
      return this.dataStoreMgr.getPrimaryDataStore(pools.get(0).getId());
    }
    StoragePoolVO pool=new StoragePoolVO();
    pool.setClusterId(clusterId);
    pool.setDataCenterId(dcId);
    URI uri=new URI(this.getPrimaryStorageUrl());
    pool.setHostAddress(uri.getHost());
    pool.setPath(uri.getPath());
    pool.setPort(0);
    pool.setName(this.primaryName);
    pool.setUuid(this.getPrimaryStorageUuid());
    pool.setStatus(StoragePoolStatus.Up);
    pool.setPoolType(StoragePoolType.NetworkFilesystem);
    pool.setPodId(podId);
    pool.setScope(ScopeType.CLUSTER);
    pool.setStorageProviderName(DataStoreProvider.DEFAULT_PRIMARY);
    pool=this.primaryStoreDao.persist(pool);
    DataStore store=this.dataStoreMgr.getPrimaryDataStore(pool.getId());
    return store;
  }
 catch (  Exception e) {
    return null;
  }
}
