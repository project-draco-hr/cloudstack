{
  DataStore primaryStore=createPrimaryDataStore();
  primaryStoreId=primaryStore.getId();
  primaryStore=this.dataStoreMgr.getPrimaryDataStore(primaryStoreId);
  VolumeVO volume=createVolume(image.getId(),primaryStore.getId());
  VolumeInfo volInfo=this.volFactory.getVolume(volume.getId());
  AsyncCallFuture<VolumeApiResult> future=this.volumeService.createVolumeFromTemplateAsync(volInfo,this.primaryStoreId,this.templateFactory.getTemplate(this.image.getId()));
  try {
    VolumeApiResult result=future.get();
    AssertJUnit.assertTrue(result.isSuccess());
    VolumeInfo newVol=result.getVolume();
    this.volumeService.destroyVolume(newVol.getId());
    VolumeInfo vol=this.volFactory.getVolume(volume.getId());
    this.volumeService.expungeVolumeAsync(vol);
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
  }
catch (  ExecutionException e) {
    e.printStackTrace();
  }
catch (  ConcurrentOperationException e) {
    e.printStackTrace();
  }
}
