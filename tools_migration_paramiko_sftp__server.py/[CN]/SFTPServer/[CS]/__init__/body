def __init__(self, channel, name, server, sftp_si=SFTPServerInterface, *largs, **kwargs):
    '\n        The constructor for SFTPServer is meant to be called from within the\n        L{Transport} as a subsystem handler.  C{server} and any additional\n        parameters or keyword parameters are passed from the original call to\n        L{Transport.set_subsystem_handler}.\n\n        @param channel: channel passed from the L{Transport}.\n        @type channel: L{Channel}\n        @param name: name of the requested subsystem.\n        @type name: str\n        @param server: the server object associated with this channel and\n            subsystem\n        @type server: L{ServerInterface}\n        @param sftp_si: a subclass of L{SFTPServerInterface} to use for handling\n            individual requests.\n        @type sftp_si: class\n        '
    BaseSFTP.__init__(self)
    SubsystemHandler.__init__(self, channel, name, server)
    transport = channel.get_transport()
    self.logger = util.get_logger((transport.get_log_channel() + '.sftp'))
    self.ultra_debug = transport.get_hexdump()
    self.next_handle = 1
    self.file_table = {}
    self.folder_table = {}
    self.server = sftp_si(server, *largs, **kwargs)
