{
  ComponentContext.initComponentsLifeCycle();
  AccountVO acct=new AccountVO(200L);
  acct.setType(Account.ACCOUNT_TYPE_NORMAL);
  acct.setAccountName("user");
  acct.setDomainId(domainId);
  UserContext.registerContext(1,acct,null,true);
  when(_acctMgr.finalizeOwner((Account)anyObject(),anyString(),anyLong(),anyLong())).thenReturn(acct);
  when(_processor.getType()).thenReturn("mock");
  when(_accountDao.findByIdIncludingRemoved(0L)).thenReturn(acct);
  AffinityGroupVO group=new AffinityGroupVO("group1","mock","mock group",domainId,200L);
  Mockito.when(_affinityGroupDao.persist(Mockito.any(AffinityGroupVO.class))).thenReturn(group);
  Mockito.when(_affinityGroupDao.findById(Mockito.anyLong())).thenReturn(group);
  Mockito.when(_affinityGroupDao.findByAccountAndName(Mockito.anyLong(),Mockito.anyString())).thenReturn(group);
  Mockito.when(_affinityGroupDao.lockRow(Mockito.anyLong(),anyBoolean())).thenReturn(group);
  Mockito.when(_affinityGroupDao.expunge(Mockito.anyLong())).thenReturn(true);
}
