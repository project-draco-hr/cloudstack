@attr(tags=['devcloud', 'advanced', 'advancedns', 'smoke', 'basic', 'sg'], required_hardware='true')
def test_10_detach_volume(self):
    '\n        Test Detach Volume \n        '
    list_volume_response1 = Volume.list(self.apiclient, id=self.volume.id)
    if (list_volume_response1[0].virtualmachineid is None):
        self.skipTest('Check if volume is attached to the VM before detach')
    self.virtual_machine.detach_volume(self.apiclient, self.volume)
    time.sleep(self.services['sleep'])
    list_volume_response = Volume.list(self.apiclient, id=self.volume.id)
    self.assertNotEqual(list_volume_response, None, 'Check if volume exists in ListVolumes')
    self.assertEqual(isinstance(list_volume_response, list), True, 'Check list volumes response for valid list')
    volume1 = list_volume_response[0]
    self.assertEqual(volume1.virtualmachineid, None, 'Check if volume state (detached) is reflected')
    self.assertEqual(volume1.vmname, None, 'Check if volume state (detached) is reflected')
    return
