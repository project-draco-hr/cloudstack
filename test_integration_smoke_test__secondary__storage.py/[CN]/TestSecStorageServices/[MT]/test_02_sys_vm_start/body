def test_02_sys_vm_start(self):
    'Test system VM start\n        '
    list_hosts_response = list_hosts(self.apiclient, type='Routing', zoneid=self.zone.id, podid=self.pod.id)
    self.assertEqual(isinstance(list_hosts_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_hosts_response), 0, 'Check list host response')
    for host in list_hosts_response:
        self.assertEqual(host.state, 'Up', 'Check state of routing hosts is Up or not')
    list_storage_response = list_storage_pools(self.apiclient, zoneid=self.zone.id, podid=self.pod.id)
    self.assertEqual(isinstance(list_storage_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_storage_response), 0, 'Check list storage pools response')
    for primary_storage in list_hosts_response:
        self.assertEqual(primary_storage.state, 'Up', 'Check state of primary storage pools is Up or not')
    timeout = self.services['timeout']
    while True:
        list_hosts_response = list_hosts(self.apiclient, type='SecondaryStorage', zoneid=self.zone.id)
        if (not isinstance(list_hosts_response, list)):
            time.sleep(int(self.services['sleep']))
            timeout = (timeout - 1)
        elif ((timeout == 0) or isinstance(list_hosts_response, list)):
            break
    self.assertEqual(isinstance(list_hosts_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_hosts_response), 0, 'Check list Hosts response')
    host_response = list_hosts_response[0]
    self.assertEqual(host_response.state, 'Up', 'Check state of secondary storage')
    self.debug(('Checking SSVM status in zone: %s' % self.zone.id))
    timeout = self.services['timeout']
    while True:
        list_ssvm_response = list_ssvms(self.apiclient, systemvmtype='secondarystoragevm', zoneid=self.zone.id, podid=self.pod.id)
        if (not isinstance(list_ssvm_response, list)):
            time.sleep(int(self.services['sleep']))
            timeout = (timeout - 1)
        elif ((timeout == 0) or isinstance(list_ssvm_response, list)):
            break
    self.assertEqual(isinstance(list_ssvm_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_ssvm_response), 0, 'Check list System VMs response')
    for ssvm in list_ssvm_response:
        self.assertEqual(ssvm.state, 'Running', 'Check whether state of SSVM is running')
    return
