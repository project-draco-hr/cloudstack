@attr(tags=['advanced', 'advancedns', 'smoke', 'basic', 'eip', 'sg'])
def test_02_sys_template_ready(self):
    'Test system templates are ready\n        '
    hypervisors = {}
    for zone in self.config.zones:
        for pod in zone.pods:
            for cluster in pod.clusters:
                hypervisors[cluster.hypervisor] = 'self'
    for zid in self.zones:
        for (k, v) in hypervisors.items():
            self.debug(('Checking BUILTIN templates in zone: %s' % zid))
            list_template_response = list_templates(self.apiclient, hypervisor=k, zoneid=zid, templatefilter=v, listall=True, account='system')
            self.assertEqual(validateList(list_template_response)[0], PASS, 'templates list validation failed')
            templateid = None
            for template in list_template_response:
                if (template.templatetype == 'BUILTIN'):
                    templateid = template.id
                template_response = list_templates(self.apiclient, id=templateid, zoneid=zid, templatefilter=v, listall=True, account='system')
                if isinstance(template_response, list):
                    template = template_response[0]
                else:
                    raise Exception('ListTemplate API returned invalid list')
                if (template.status == 'Download Complete'):
                    self.debug(('Template %s is ready in zone %s' % (template.templatetype, zid)))
                elif ('Downloaded' not in template.status.split()):
                    self.debug(('templates status is %s' % template.status))
                self.assertEqual(template.isready, True, ('Builtin template is not ready %s in zone %s' % (template.status, zid)))
