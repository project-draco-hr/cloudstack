{
  Gson gson=GsonHelper.getBuilder().create();
  AsyncJobManager asyncMgr=getAsyncJobMgr();
  AsyncJobVO job=getJob();
  ManagementServer managementServer=asyncMgr.getExecutorContext().getManagementServer();
  DeleteRuleParam param=gson.fromJson(job.getCmdInfo(),DeleteRuleParam.class);
  try {
    managementServer.deleteRule(param.getRuleId(),param.getUserId(),param.getAccountId());
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_SUCCEEDED,0,"success");
  }
 catch (  InvalidParameterValueException e) {
    if (s_logger.isDebugEnabled())     s_logger.debug("Unable to delete rule: " + e.getMessage());
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.PARAM_ERROR,e.getMessage());
  }
catch (  PermissionDeniedException e) {
    if (s_logger.isDebugEnabled())     s_logger.debug("Unable to delete rule: " + e.getMessage());
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.PARAM_ERROR,e.getMessage());
  }
catch (  InternalErrorException e) {
    if (s_logger.isDebugEnabled())     s_logger.debug("Unable to delete rule: " + e.getMessage());
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,e.getMessage());
  }
catch (  Exception e) {
    s_logger.warn("Unable to delete rule: " + e.getMessage(),e);
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,e.getMessage());
  }
  return true;
}
