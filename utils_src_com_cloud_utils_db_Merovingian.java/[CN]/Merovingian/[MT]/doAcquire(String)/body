{
  Connection conn=getConnection(key,true);
  PreparedStatement pstmt=null;
  Savepoint sp=null;
  try {
    sp=conn.setSavepoint(key);
  }
 catch (  SQLException e) {
    s_logger.warn("Unable to set save point " + key);
    return false;
  }
  try {
    long startTime=InaccurateClock.getTime();
    try {
      pstmt=conn.prepareStatement(ACQUIRE_SQL);
      pstmt.setString(1,key);
      pstmt.setString(2,s_macAddress);
      pstmt.setString(3,s_ipAddress);
      pstmt.setString(4,Thread.currentThread().getName());
      String exceptionMessage=null;
      int rows=pstmt.executeUpdate();
      if (rows == 1) {
        if (s_logger.isTraceEnabled()) {
          s_logger.trace("Lock: lock acquired for " + key);
        }
        Ternary<Savepoint,Integer,Long> lock=new Ternary<Savepoint,Integer,Long>(sp,1,InaccurateClock.getTime());
        _locks.put(key,lock);
        return true;
      }
    }
 catch (    SQLException e) {
      s_logger.warn("Lock: Retrying lock " + key + ".  Waited "+ (InaccurateClock.getTime() - startTime),e);
    }
    conn.rollback(sp);
    s_logger.trace("Lock: Unable to acquire DB lock " + key);
  }
 catch (  SQLException e) {
    s_logger.warn("Lock: Unable to acquire db connection for locking " + key,e);
  }
 finally {
    if (pstmt != null) {
      try {
        pstmt.close();
      }
 catch (      SQLException e) {
      }
    }
  }
  return false;
}
