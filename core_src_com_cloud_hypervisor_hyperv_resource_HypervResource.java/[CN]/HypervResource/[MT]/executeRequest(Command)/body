{
  if (cmd instanceof CreateCommand) {
    return execute((CreateCommand)cmd);
  }
 else   if (cmd instanceof SetPortForwardingRulesCommand) {
    s_logger.info("SCVMM agent recived command SetPortForwardingRulesCommand");
  }
 else   if (cmd instanceof SetStaticNatRulesCommand) {
    s_logger.info("SCVMM agent recived command SetStaticNatRulesCommand");
  }
 else   if (cmd instanceof LoadBalancerConfigCommand) {
    s_logger.info("SCVMM agent recived command SetStaticNatRulesCommand");
  }
 else   if (cmd instanceof IpAssocCommand) {
    s_logger.info("SCVMM agent recived command IPAssocCommand");
  }
 else   if (cmd instanceof SavePasswordCommand) {
    s_logger.info("SCVMM agent recived command SavePasswordCommand");
  }
 else   if (cmd instanceof DhcpEntryCommand) {
    return execute((DhcpEntryCommand)cmd);
  }
 else   if (cmd instanceof VmDataCommand) {
  }
 else   if (cmd instanceof ReadyCommand) {
    s_logger.info("SCVMM agent recived ReadyCommand: " + _gson.toJson(cmd));
    return new ReadyAnswer((ReadyCommand)cmd);
  }
 else   if (cmd instanceof GetHostStatsCommand) {
    return execute((GetHostStatsCommand)cmd);
  }
 else   if (cmd instanceof GetVmStatsCommand) {
    s_logger.info("SCVMM agent recived command GetVmStatsCommand");
  }
 else   if (cmd instanceof CheckHealthCommand) {
  }
 else   if (cmd instanceof StopCommand) {
  }
 else   if (cmd instanceof RebootRouterCommand) {
  }
 else   if (cmd instanceof RebootCommand) {
  }
 else   if (cmd instanceof CheckVirtualMachineCommand) {
    s_logger.info("SCVMM agent recived command CheckVirtualMachineCommand");
  }
 else   if (cmd instanceof PrepareForMigrationCommand) {
  }
 else   if (cmd instanceof MigrateCommand) {
  }
 else   if (cmd instanceof DestroyCommand) {
  }
 else   if (cmd instanceof ModifyStoragePoolCommand) {
    return execute((ModifyStoragePoolCommand)cmd);
  }
 else   if (cmd instanceof DeleteStoragePoolCommand) {
    s_logger.info("SCVMM agent recived command DeleteStoragePoolCommand");
    Answer answer=new Answer(cmd,true,"success");
    return answer;
  }
 else   if (cmd instanceof CopyVolumeCommand) {
    s_logger.info("SCVMM agent recived command CopyVolumeCommand");
  }
 else   if (cmd instanceof AttachVolumeCommand) {
    s_logger.info("SCVMM agent recived command AttachVolumeCommand");
  }
 else   if (cmd instanceof AttachIsoCommand) {
  }
 else   if (cmd instanceof ValidateSnapshotCommand) {
  }
 else   if (cmd instanceof ManageSnapshotCommand) {
  }
 else   if (cmd instanceof BackupSnapshotCommand) {
  }
 else   if (cmd instanceof DeleteSnapshotBackupCommand) {
  }
 else   if (cmd instanceof CreateVolumeFromSnapshotCommand) {
  }
 else   if (cmd instanceof DeleteSnapshotsDirCommand) {
  }
 else   if (cmd instanceof CreatePrivateTemplateFromVolumeCommand) {
  }
 else   if (cmd instanceof CreatePrivateTemplateFromSnapshotCommand) {
  }
 else   if (cmd instanceof GetStorageStatsCommand) {
    return execute((GetStorageStatsCommand)cmd);
  }
 else   if (cmd instanceof PrimaryStorageDownloadCommand) {
    s_logger.info("SCVMM agent recived command PrimaryStorageDownloadCommand");
    return execute((PrimaryStorageDownloadCommand)cmd);
  }
 else   if (cmd instanceof GetVncPortCommand) {
  }
 else   if (cmd instanceof SetupCommand) {
  }
 else   if (cmd instanceof MaintainCommand) {
  }
 else   if (cmd instanceof PingTestCommand) {
    s_logger.info("SCVMM agent recived command PingTestCommand");
  }
 else   if (cmd instanceof CheckOnHostCommand) {
    s_logger.info("SCVMM agent recived command CheckOnHostCommand");
  }
 else   if (cmd instanceof ModifySshKeysCommand) {
  }
 else   if (cmd instanceof PoolEjectCommand) {
  }
 else   if (cmd instanceof NetworkUsageCommand) {
  }
 else   if (cmd instanceof StartCommand) {
    return execute((StartCommand)cmd);
  }
 else   if (cmd instanceof RemoteAccessVpnCfgCommand) {
  }
 else   if (cmd instanceof VpnUsersCfgCommand) {
  }
 else   if (cmd instanceof CheckSshCommand) {
    return execute((CheckSshCommand)cmd);
  }
 else {
    s_logger.info("SCVMM agent recived unimplemented command: " + _gson.toJson(cmd));
    return Answer.createUnsupportedCommandAnswer(cmd);
  }
  return Answer.createUnsupportedCommandAnswer(cmd);
}
