{
  if (s_logger.isInfoEnabled()) {
    s_logger.info("Executing resource CreateCommand: " + _gson.toJson(cmd));
  }
  try {
    long volId=cmd.getVolumeId();
    String templateUrl=cmd.getTemplateUrl();
    ;
    StorageFilerTO pool=cmd.getPool();
    DiskProfile diskchar=cmd.getDiskCharacteristics();
    if (diskchar.getType() == Volume.Type.ROOT) {
      if (cmd.getTemplateUrl() == null) {
        VolumeTO vol=new VolumeTO(cmd.getVolumeId(),diskchar.getType(),pool.getType(),pool.getUuid(),cmd.getDiskCharacteristics().getName(),pool.getPath(),cmd.getDiskCharacteristics().getName(),cmd.getDiskCharacteristics().getSize(),null);
        return new CreateAnswer(cmd,vol);
      }
 else {
        VolumeTO vol=new VolumeTO(cmd.getVolumeId(),diskchar.getType(),pool.getType(),pool.getUuid(),cmd.getDiskCharacteristics().getName(),pool.getPath(),cmd.getDiskCharacteristics().getName(),cmd.getDiskCharacteristics().getSize(),null);
        return new CreateAnswer(cmd,vol);
      }
    }
 else {
      String volumeUuid="cloud.worker." + UUID.randomUUID().toString();
      VolumeTO vol=new VolumeTO(cmd.getVolumeId(),diskchar.getType(),pool.getType(),pool.getUuid(),cmd.getDiskCharacteristics().getName(),pool.getPath(),volumeUuid,cmd.getDiskCharacteristics().getSize(),null);
      return new CreateAnswer(cmd,vol);
    }
  }
 catch (  Exception ex) {
    return null;
  }
}
