def test_DeployVm(self):
    "\n        Let's start by defining the attributes of our VM that we will be\n        deploying on CloudStack. We will be assuming a single zone is available\n        and is configured and all templates are Ready\n\n        The hardcoded values are used only for brevity. \n\t\t\n\t\tFirst create the host anti-affinity group for this account\n        "
    createAGCmd = createAffinityGroup.createAffinityGroupCmd()
    createAGCmd.name = 'webvms1'
    createAGCmd.type = 'host anti-affinity'
    createAGCmd.account = self.acct.account
    createAGCmd.domainid = self.acct.domainid
    createAGResponse = self.apiClient.createAffinityGroup(createAGCmd)
    self.debug(('AffinityGroup %s was created in the job %s' % (createAGResponse.id, createAGResponse.jobid)))
    deployVmCmd = deployVirtualMachine.deployVirtualMachineCmd()
    deployVmCmd.zoneid = self.zone.uuid
    deployVmCmd.templateid = self.template.uuid
    deployVmCmd.serviceofferingid = self.service_offering.uuid
    deployVmCmd.account = self.acct.account
    deployVmCmd.domainid = self.acct.domainid
    deployVmCmd.affinitygroupnames = []
    deployVmCmd.affinitygroupnames.append(str(createAGResponse.name))
    deployVmResponse = self.apiClient.deployVirtualMachine(deployVmCmd)
    self.debug(('VM %s was deployed in the job %s' % (deployVmResponse.id, deployVmResponse.jobid)))
    listVmCmd = listVirtualMachines.listVirtualMachinesCmd()
    listVmCmd.id = deployVmResponse.id
    listVmResponse = self.apiClient.listVirtualMachines(listVmCmd)
    self.assertNotEqual(len(listVmResponse), 0, 'Check if the list API \t\t\t\t\t\treturns a non-empty response')
    vm = listVmResponse[0]
    self.assertEqual(vm.state, 'Running', 'Check if VM has reached Running state in CS')
    VM1hostid = vm.hostid
    deployVm2Cmd = deployVirtualMachine.deployVirtualMachineCmd()
    deployVm2Cmd.zoneid = self.zone.uuid
    deployVm2Cmd.templateid = self.template.uuid
    deployVm2Cmd.serviceofferingid = self.service_offering.uuid
    deployVm2Cmd.account = self.acct.account
    deployVm2Cmd.domainid = self.acct.domainid
    deployVm2Cmd.affinitygroupnames = []
    deployVm2Cmd.affinitygroupnames.append(str(createAGResponse.name))
    deployVm2Response = self.apiClient.deployVirtualMachine(deployVm2Cmd)
    self.debug(('VM2 %s was deployed in the job %s' % (deployVm2Response.id, deployVm2Response.jobid)))
    listVm2Cmd = listVirtualMachines.listVirtualMachinesCmd()
    listVm2Cmd.id = deployVm2Response.id
    listVm2Response = self.apiClient.listVirtualMachines(listVm2Cmd)
    self.assertNotEqual(len(listVm2Response), 0, 'Check if the list API \t\t\t\t\t\treturns a non-empty response')
    vm2 = listVm2Response[0]
    self.assertEqual(vm2.state, 'Running', 'Check if VM has reached Running state in CS')
    VM2hostid = vm2.hostid
    self.assertNotEqual(VM1hostid, VM2hostid, "The hosts of the 2 VM's in the host anti-affinity group are not different, test failed")
