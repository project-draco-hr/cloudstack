{
  int fbWidth=rfb.framebufferWidth;
  int fbHeight=rfb.framebufferHeight;
  if (maxWidth > 0 && maxHeight > 0) {
    int f1=maxWidth * 100 / fbWidth;
    int f2=maxHeight * 100 / fbHeight;
    scalingFactor=Math.min(f1,f2);
    if (scalingFactor > 100)     scalingFactor=100;
    Logger.log(Logger.INFO,"Scaling desktop at " + scalingFactor + "%");
  }
  scaledWidth=(fbWidth * scalingFactor + 50) / 100;
  scaledHeight=(fbHeight * scalingFactor + 50) / 100;
  if (memImage == null) {
    memImage=new BufferedImage(fbWidth,fbHeight,BufferedImage.TYPE_4BYTE_ABGR);
    memGraphics=memImage.getGraphics();
  }
 else   if (memImage.getWidth(null) != fbWidth || memImage.getHeight(null) != fbHeight) {
synchronized (memImage) {
      memImage=new BufferedImage(fbWidth,fbHeight,BufferedImage.TYPE_4BYTE_ABGR);
      memGraphics=memImage.getGraphics();
    }
  }
  if (bytesPixel == 1) {
    pixels24=null;
    pixels8=new byte[fbWidth * fbHeight];
    pixelsSource=new MemoryImageSource(fbWidth,fbHeight,cm8,pixels8,0,fbWidth);
    zrleTilePixels24=null;
    zrleTilePixels8=new byte[64 * 64];
  }
 else {
    pixels8=null;
    pixels24=new int[fbWidth * fbHeight];
    pixelsSource=new MemoryImageSource(fbWidth,fbHeight,cm24,pixels24,0,fbWidth);
    zrleTilePixels8=null;
    zrleTilePixels24=new int[64 * 64];
  }
  pixelsSource.setAnimated(true);
  rawPixelsImage=Toolkit.getDefaultToolkit().createImage(pixelsSource);
  if (!viewer.inProxyMode) {
    if (viewer.inSeparateFrame) {
      if (viewer.desktopScrollPane != null)       resizeDesktopFrame();
    }
 else {
      setSize(scaledWidth,scaledHeight);
    }
    viewer.moveFocusToDesktop();
  }
}
