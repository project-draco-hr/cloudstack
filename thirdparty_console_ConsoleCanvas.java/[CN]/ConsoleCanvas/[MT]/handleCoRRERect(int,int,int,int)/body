{
  int nSubrects=rfb.is.readInt();
  byte[] bg_buf=new byte[bytesPixel];
  rfb.readFully(bg_buf);
  Color pixel;
  if (bytesPixel == 1) {
    pixel=colors[bg_buf[0] & 0xFF];
  }
 else {
    pixel=new Color(bg_buf[2] & 0xFF,bg_buf[1] & 0xFF,bg_buf[0] & 0xFF);
  }
  memGraphics.setColor(pixel);
  memGraphics.fillRect(x,y,w,h);
  byte[] buf=new byte[nSubrects * (bytesPixel + 4)];
  rfb.readFully(buf);
  if (rfb.rec != null) {
    rfb.rec.writeIntBE(nSubrects);
    rfb.rec.write(bg_buf);
    rfb.rec.write(buf);
  }
  int sx, sy, sw, sh;
  int i=0;
  for (int j=0; j < nSubrects; j++) {
    if (bytesPixel == 1) {
      pixel=colors[buf[i++] & 0xFF];
    }
 else {
      pixel=new Color(buf[i + 2] & 0xFF,buf[i + 1] & 0xFF,buf[i] & 0xFF);
      i+=4;
    }
    sx=x + (buf[i++] & 0xFF);
    sy=y + (buf[i++] & 0xFF);
    sw=buf[i++] & 0xFF;
    sh=buf[i++] & 0xFF;
    memGraphics.setColor(pixel);
    memGraphics.fillRect(sx,sy,sw,sh);
  }
  scheduleRepaint(x,y,w,h);
}
