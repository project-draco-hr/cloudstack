{
  String clazzName=getAttribute(atts,"class");
  if (clazzName == null) {
    throw new CloudRuntimeException("Missing class attribute for " + interphace.getName());
  }
  info.name=getAttribute(atts,"name");
  if (info.name == null) {
    throw new CloudRuntimeException("Missing name attribute for " + interphace.getName());
  }
  info.name=info.name + "-" + clazzName;
  s_logger.debug("Looking for class " + clazzName);
  try {
    info.clazz=Class.forName(clazzName);
  }
 catch (  ClassNotFoundException e) {
    throw new CloudRuntimeException("Unable to find class: " + clazzName);
  }
catch (  Throwable e) {
    throw new CloudRuntimeException("Caught throwable: ",e);
  }
  Local local=info.clazz.getAnnotation(Local.class);
  if (local == null) {
    throw new CloudRuntimeException("Unable to find Local annotation for class " + clazzName);
  }
  Class<?>[] classes=local.value();
  for (int i=0; i < classes.length; i++) {
    if (findInterfaceInHierarchy(classes[i].getInterfaces(),interphace)) {
      info.keys.add(classes[i].getName());
      s_logger.info("Found component: " + interphace.getName() + " - "+ clazzName+ " - "+ info.name);
    }
  }
  if (info.keys.size() != classes.length) {
    throw new CloudRuntimeException("Class " + clazzName + " does not implement "+ interphace.getName());
  }
}
