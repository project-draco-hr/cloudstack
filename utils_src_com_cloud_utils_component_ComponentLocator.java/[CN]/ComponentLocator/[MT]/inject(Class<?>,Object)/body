{
  ComponentLocator locator=ComponentLocator.getCurrentLocator();
  do {
    Field[] fields=clazz.getDeclaredFields();
    for (    Field field : fields) {
      Inject inject=field.getAnnotation(Inject.class);
      if (inject == null) {
        continue;
      }
      Class<?> fc=field.getType();
      Object instance=null;
      if (Manager.class.isAssignableFrom(fc)) {
        instance=locator.getManager(fc);
      }
 else       if (GenericDao.class.isAssignableFrom(fc)) {
        instance=locator.getDao((Class<? extends GenericDao<?,?>>)fc);
      }
 else       if (Adapters.class.isAssignableFrom(fc)) {
        instance=locator.getAdapters(inject.adapter());
      }
 else {
        instance=locator.getManager(fc);
      }
      if (instance == null) {
        throw new CloudRuntimeException("Unable to inject " + fc.getSimpleName() + " in "+ clazz.getSimpleName());
      }
      try {
        field.setAccessible(true);
        field.set(entity,instance);
      }
 catch (      IllegalArgumentException e) {
        throw new CloudRuntimeException("hmmm....is it really illegal?",e);
      }
catch (      IllegalAccessException e) {
        throw new CloudRuntimeException("what! what ! what!",e);
      }
    }
    clazz=clazz.getSuperclass();
  }
 while (clazz != Object.class && clazz != null);
}
