{
  Set<Map.Entry<String,ComponentInfo<Manager>>> entries=_managerMap.entrySet();
  for (  Map.Entry<String,ComponentInfo<Manager>> entry : entries) {
    ComponentInfo<Manager> info=entry.getValue();
    if (info.singleton) {
      Singleton s=s_singletons.get(info.clazz);
      if (s.state == Singleton.State.Instantiated) {
        s_logger.info("Injecting singleton Manager: " + info.name);
        inject(info.clazz,info.instance);
        s.state=Singleton.State.Injected;
      }
    }
 else {
      s_logger.info("Injecting Manager: " + info.name);
      inject(info.clazz,info.instance);
    }
  }
  for (  Map.Entry<String,ComponentInfo<Manager>> entry : entries) {
    ComponentInfo<Manager> info=entry.getValue();
    if (info.singleton) {
      Singleton s=s_singletons.get(info.clazz);
      if (s.state == Singleton.State.Injected) {
        s_logger.info("Configuring singleton Manager: " + info.name);
        try {
          info.instance.configure(info.name,info.params);
        }
 catch (        ConfigurationException e) {
          s_logger.error("Unable to configure manager: " + info.name,e);
          System.exit(1);
        }
        s.state=Singleton.State.Configured;
      }
    }
 else {
      s_logger.info("Configuring Manager: " + info.name);
      try {
        info.instance.configure(info.name,info.params);
      }
 catch (      ConfigurationException e) {
        s_logger.error("Unable to configure manager: " + info.name,e);
        System.exit(1);
      }
    }
  }
}
