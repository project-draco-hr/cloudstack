{
  Factory factory=null;
synchronized (s_factories) {
    InjectInfo info=s_factories.get(clazz);
    if (info == null) {
      Enhancer enhancer=new Enhancer();
      enhancer.setSuperclass(clazz);
      enhancer.setCallbackFilter(s_callbackFilter);
      enhancer.setCallbacks(s_callbacks);
      factory=(Factory)enhancer.create();
      info=new InjectInfo(enhancer,factory);
      s_factories.put(clazz,info);
    }
 else {
      factory=info.factory;
    }
  }
  Class[] argTypes=null;
  Object entity;
  if (args != null && args.length > 0) {
    Constructor<?>[] constructors=clazz.getConstructors();
    for (    Constructor constructor : constructors) {
      Class<?>[] paramTypes=constructor.getParameterTypes();
      if (paramTypes.length == args.length) {
        boolean found=true;
        for (int i=0; i < paramTypes.length; i++) {
          if (!paramTypes[i].isAssignableFrom(args[i].getClass()) && !paramTypes[i].isPrimitive()) {
            found=false;
            break;
          }
        }
        if (found) {
          argTypes=paramTypes;
          break;
        }
      }
    }
    if (argTypes == null) {
      throw new CloudRuntimeException("Unable to find constructor to match parameters given: " + clazz.getName());
    }
    entity=factory.newInstance(argTypes,args,s_callbacks);
  }
 else {
    entity=factory.newInstance(s_callbacks);
  }
  if (inject) {
    inject(clazz,entity);
  }
  return entity;
}
