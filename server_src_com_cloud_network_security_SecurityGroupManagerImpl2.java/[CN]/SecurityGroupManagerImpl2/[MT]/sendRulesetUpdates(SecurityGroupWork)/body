{
  Long userVmId=work.getInstanceId();
  UserVm vm=_userVMDao.findById(userVmId);
  if (vm != null && vm.getState() == State.Running) {
    Map<PortAndProto,Set<String>> rules=generateRulesForVM(userVmId);
    Long agentId=vm.getHostId();
    if (agentId != null) {
      SecurityIngressRulesCmd cmd=generateRulesetCmd(vm.getInstanceName(),vm.getPrivateIpAddress(),vm.getPrivateMacAddress(),vm.getId(),generateRulesetSignature(rules),work.getLogsequenceNumber(),rules);
      Commands cmds=new Commands(cmd);
      try {
        _agentMgr.send(agentId,cmds,_answerListener);
      }
 catch (      AgentUnavailableException e) {
        s_logger.debug("Unable to send updates for vm: " + userVmId + "(agentid="+ agentId+ ")");
      }
    }
  }
 else {
    if (s_logger.isTraceEnabled()) {
      if (vm != null)       s_logger.trace("No rules sent to vm " + vm + "state="+ vm.getState());
 else       s_logger.trace("Could not find vm: No rules sent to vm " + userVmId);
    }
  }
}
