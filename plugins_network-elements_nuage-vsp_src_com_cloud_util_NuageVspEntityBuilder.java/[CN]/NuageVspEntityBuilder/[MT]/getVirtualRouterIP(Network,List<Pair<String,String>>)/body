{
  Pair<String,String> lowestIpAddressRange=null;
  if (ipAddressRanges.size() == 1) {
    lowestIpAddressRange=Iterables.getOnlyElement(ipAddressRanges);
  }
 else {
    for (    Pair<String,String> ipAddressRange : ipAddressRanges) {
      if (lowestIpAddressRange == null || NetUtils.ip2Long(ipAddressRange.getLeft()) < NetUtils.ip2Long(lowestIpAddressRange.getLeft())) {
        lowestIpAddressRange=ipAddressRange;
      }
    }
  }
  if (lowestIpAddressRange == null) {
    throw new InsufficientVirtualNetworkCapacityException("VSP allocates an IP for VirtualRouter." + " But no ip address ranges are specified",Network.class,network.getId());
  }
 else   if (NetUtils.ip2Long(lowestIpAddressRange.getRight()) - NetUtils.ip2Long(lowestIpAddressRange.getLeft()) < 2) {
    throw new InsufficientVirtualNetworkCapacityException("VSP allocates an IP for VirtualRouter." + " So, subnet should have atleast minimum 3 hosts",Network.class,network.getId());
  }
  String virtualRouterIp=lowestIpAddressRange.getLeft();
  long lowestIp=NetUtils.ip2Long(lowestIpAddressRange.getLeft());
  lowestIp=lowestIp + 1;
  lowestIpAddressRange.setLeft(NetUtils.long2Ip(lowestIp));
  return virtualRouterIp;
}
