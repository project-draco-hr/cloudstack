{
  try {
    PreparedStatement pstmt1=conn.prepareStatement("SHOW DATABASES LIKE 'cloud_usage'");
    ResultSet rs1=pstmt1.executeQuery();
    if (!rs1.next()) {
      s_logger.debug("cloud_usage db doesn't exist. Skipping events migration");
      return;
    }
    Long lastProcessedEvent=getMostRecentEvent(conn);
    String sql="SELECT type, description, user_id, account_id, created, level, parameters FROM cloud.event vmevt WHERE vmevt.id > ? and vmevt.state = 'Completed' ";
    if (lastProcessedEvent == null) {
      s_logger.trace("no events are processed earlier, copying all events");
      sql="SELECT type, description, user_id, account_id, created, level, parameters FROM cloud.event vmevt WHERE vmevt.state = 'Completed' ";
    }
    PreparedStatement pstmt=null;
    pstmt=conn.prepareStatement(sql);
    int i=1;
    if (lastProcessedEvent != null) {
      pstmt.setLong(i++,lastProcessedEvent);
    }
    ResultSet rs=pstmt.executeQuery();
    s_logger.debug("Begin Migrating events");
    while (rs.next()) {
      EventVO event=new EventVO();
      event.setType(rs.getString(1));
      event.setDescription(rs.getString(2));
      event.setUserId(rs.getLong(3));
      event.setAccountId(rs.getLong(4));
      event.setCreatedDate(DateUtil.parseDateString(TimeZone.getTimeZone("GMT"),rs.getString(5)));
      event.setLevel(rs.getString(6));
      event.setParameters(rs.getString(7));
      convertEvent(event,conn);
    }
    s_logger.debug("Migrating events completed");
  }
 catch (  Exception e) {
    throw new CloudRuntimeException("Failed to migrate usage events: ",e);
  }
}
