{
  PreparedStatement pstmt=conn.prepareStatement("SELECT vm_instance.id, vm_instance.private_mac_address, vm_instance.private_ip_address, vm_instance.private_netmask, vm_instance.state, vm_instance.type FROM vm_instance INNER JOIN user_vm ON vm_instance.id=user_vm.id WHERE user_vm.domain_router_id=? and vm_instance.removed IS NULL");
  pstmt.setLong(1,domainRouterId);
  ResultSet rs=pstmt.executeQuery();
  List<Object[]> vms=new ArrayList<Object[]>();
  while (rs.next()) {
    Object[] vm=new Object[10];
    vm[0]=rs.getLong(1);
    vm[1]=rs.getString(2);
    vm[2]=rs.getString(3);
    vm[3]=rs.getString(4);
    vm[4]=rs.getString(5);
    vms.add(vm);
  }
  rs.close();
  pstmt.close();
  s_logger.debug("Upgrading " + vms.size() + " vms for router "+ domainRouterId);
  int count=0;
  for (  Object[] vm : vms) {
    String state=(String)vm[4];
    boolean running=false;
    if (state.equals("Running") || state.equals("Starting") || state.equals("Stopping")) {
      running=true;
      count++;
    }
    insertNic(conn,networkId,(Long)vm[0],running,(String)vm[1],(String)vm[2],(String)vm[3],strategy,gateway,vnet,guruName,true,0,"Dhcp",null);
  }
  pstmt=conn.prepareStatement("SELECT state FROM vm_instance WHERE id=?");
  pstmt.setLong(1,domainRouterId);
  rs=pstmt.executeQuery();
  rs.next();
  String state=rs.getString(1);
  if (state.equals("Running") || state.equals("Starting") || state.equals("Stopping")) {
    count++;
  }
  rs.close();
  pstmt.close();
  Long originalNicsCount=0L;
  pstmt=conn.prepareStatement("SELECT nics_count from op_networks where id=?");
  pstmt.setLong(1,networkId);
  ResultSet originalCountRs=pstmt.executeQuery();
  if (originalCountRs.next()) {
    originalNicsCount=originalCountRs.getLong(1);
  }
  Long resultCount=originalNicsCount + count;
  originalCountRs.close();
  pstmt.close();
  pstmt=conn.prepareStatement("UPDATE op_networks SET nics_count=?, check_for_gc=? WHERE id=?");
  pstmt.setLong(1,resultCount);
  if (count == 0) {
    pstmt.setBoolean(2,false);
  }
 else {
    pstmt.setBoolean(2,true);
  }
  pstmt.setLong(3,networkId);
  pstmt.executeUpdate();
  pstmt.close();
}
