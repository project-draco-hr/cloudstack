{
  Long dcId=(Long)dc[0];
  long mgmtNetworkId=insertNetwork(conn,"ManagementNetwork" + dcId,"Management Network created for Zone " + dcId,"Management","Native",null,null,null,"Static",managementNetworkOfferingId,dcId,"PodBasedNetworkGuru","Setup",1,1,null,null,null,true,null,false,null);
  insertNetwork(conn,"StorageNetwork" + dcId,"Storage Network created for Zone " + dcId,"Storage","Native",null,null,null,"Static",storageNetworkOfferingId,dcId,"PodBasedNetworkGuru","Setup",1,1,null,null,null,true,null,false,null);
  long controlNetworkId=insertNetwork(conn,"ControlNetwork" + dcId,"Control Network created for Zone " + dcId,"Control","Native",null,null,null,"Static",controlNetworkOfferingId,dcId,"ControlNetworkGuru","Setup",1,1,null,null,null,true,null,false,null);
  upgradeManagementIpAddress(conn,dcId);
  long publicNetworkId=insertNetwork(conn,"PublicNetwork" + dcId,"Public Network Created for Zone " + dcId,"Public","Vlan",null,null,null,"Static",publicNetworkOfferingId,dcId,"PublicNetworkGuru","Setup",1,1,null,null,null,true,null,false,null);
  ArrayList<Object[]> routers=retrieveRouters(conn,dcId);
  updateRouters(conn,dc,dcId,controlNetworkId,publicNetworkId,routers);
  upgradePublicUserIpAddress(conn,dcId,publicNetworkId,"VirtualNetwork");
  createDirectNetworks(conn,dc,dcId);
  ArrayList<Object[]> dhcpServers=retrieveDhcpServers(conn,dcId);
  for (  Object[] dhcpServer : dhcpServers) {
    Long routerId=(Long)dhcpServer[0];
    String directIp=(String)dhcpServer[1];
    updateDhcpServerData(conn,dcId,controlNetworkId,routerId,directIp);
  }
  upgradeSsvm(conn,dcId,publicNetworkId,mgmtNetworkId,controlNetworkId,"Advanced");
  updateConsoleProxies(conn,dcId,mgmtNetworkId,controlNetworkId,publicNetworkId,"Advanced");
}
