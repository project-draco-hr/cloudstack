{
  s_logger.debug("Upgrading user ip address for data center " + dcId + " network "+ networkId+ " vlan type "+ vlanType);
  try (PreparedStatement pstmt=conn.prepareStatement("UPDATE user_ip_address INNER JOIN vlan ON user_ip_address.vlan_db_id=vlan.id SET source_network_id=? WHERE user_ip_address.data_center_id=? AND vlan.vlan_type=?")){
    pstmt.setLong(1,networkId);
    pstmt.setLong(2,dcId);
    pstmt.setString(3,vlanType);
    pstmt.executeUpdate();
  }
   try (PreparedStatement pstmt=conn.prepareStatement("UPDATE vlan SET network_id = ? WHERE data_center_id=? AND vlan_type=?")){
    pstmt.setLong(1,networkId);
    pstmt.setLong(2,dcId);
    pstmt.setString(3,vlanType);
    pstmt.executeUpdate();
  }
   try (PreparedStatement pstmt=conn.prepareStatement("SELECT user_ip_address.id, user_ip_address.public_ip_address, user_ip_address.account_id, user_ip_address.allocated FROM user_ip_address INNER JOIN vlan ON vlan.id=user_ip_address.vlan_db_id WHERE user_ip_address.data_center_id = ? AND vlan.vlan_type='VirtualNetwork'")){
    pstmt.setLong(1,dcId);
    try (ResultSet rs=pstmt.executeQuery()){
      ArrayList<Object[]> allocatedIps=new ArrayList<Object[]>();
      while (rs.next()) {
        Object[] ip=new Object[10];
        ip[0]=rs.getLong(1);
        ip[1]=rs.getString(2);
        ip[2]=rs.getLong(3);
        ip[3]=rs.getDate(4);
        allocatedIps.add(ip);
      }
      for (      Object[] allocatedIp : allocatedIps) {
        try (PreparedStatement selectDataCenterMac=conn.prepareStatement("SELECT mac_address FROM data_center WHERE id = ?")){
          selectDataCenterMac.setLong(1,dcId);
          try (ResultSet selectedDataCenterMac=selectDataCenterMac.executeQuery()){
            if (!selectedDataCenterMac.next()) {
              throw new CloudRuntimeException("Unable to get mac address for data center " + dcId);
            }
            long mac=selectedDataCenterMac.getLong(1);
            try (PreparedStatement updateDataCenter=conn.prepareStatement("UPDATE data_center SET mac_address=mac_address+1 WHERE id = ?")){
              updateDataCenter.setLong(1,dcId);
              updateDataCenter.executeUpdate();
            }
             Long associatedNetworkId=null;
            if (allocatedIp[3] != null && allocatedIp[2] != null) {
              try (PreparedStatement selectNetworks=conn.prepareStatement("SELECT id FROM networks WHERE data_center_id=? AND account_id=?")){
                selectNetworks.setLong(1,dcId);
                selectNetworks.setLong(2,(Long)allocatedIp[2]);
                try (ResultSet selectedNetworks=selectNetworks.executeQuery()){
                  if (!selectedNetworks.next()) {
                    throw new CloudRuntimeException("Unable to find a network for account " + allocatedIp[2] + " in dc "+ dcId);
                  }
                  associatedNetworkId=selectedNetworks.getLong(1);
                }
               }
             }
            try (PreparedStatement updateUserIpAddress=conn.prepareStatement("UPDATE user_ip_address SET mac_address=?, network_id=? WHERE id=?")){
              updateUserIpAddress.setLong(1,mac);
              if (associatedNetworkId != null) {
                updateUserIpAddress.setLong(2,associatedNetworkId);
              }
 else {
                updateUserIpAddress.setObject(2,null);
              }
              updateUserIpAddress.setLong(3,(Long)allocatedIp[0]);
              updateUserIpAddress.executeUpdate();
            }
           }
         }
       }
    }
   }
 }
