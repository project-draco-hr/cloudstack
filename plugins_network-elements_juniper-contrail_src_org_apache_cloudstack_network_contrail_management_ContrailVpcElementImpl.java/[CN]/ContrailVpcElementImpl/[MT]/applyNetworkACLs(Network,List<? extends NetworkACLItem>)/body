{
  logger.debug("NetworkElement applyNetworkACLs");
  if (rules == null || rules.isEmpty()) {
    logger.debug("no rules to apply");
    return true;
  }
  Long aclId=rules.get(0).getAclId();
  NetworkACLVO acl=_networkACLDao.findById(aclId);
  NetworkPolicyModel policyModel=_manager.getDatabase().lookupNetworkPolicy(acl.getUuid());
  if (policyModel == null) {
    policyModel=new NetworkPolicyModel(acl.getUuid(),acl.getName());
    net.juniper.contrail.api.types.Project project;
    try {
      project=_manager.getVncProject(net.getDomainId(),net.getAccountId());
      if (project == null) {
        project=_manager.getDefaultVncProject();
      }
    }
 catch (    IOException ex) {
      logger.warn("read project",ex);
      return false;
    }
    policyModel.setProject(project);
  }
  VirtualNetworkModel vnModel=_manager.getDatabase().lookupVirtualNetwork(net.getUuid(),_manager.getCanonicalName(net),net.getTrafficType());
  NetworkPolicyModel oldPolicyModel=null;
  if (vnModel != null) {
    oldPolicyModel=vnModel.getNetworkPolicyModel();
    vnModel.addToNetworkPolicy(policyModel);
  }
  try {
    policyModel.build(_manager.getModelController(),rules);
  }
 catch (  Exception e) {
    logger.error(e);
    e.printStackTrace();
    return false;
  }
  try {
    if (!policyModel.verify(_manager.getModelController())) {
      policyModel.update(_manager.getModelController());
    }
    _manager.getDatabase().getNetworkPolicys().add(policyModel);
  }
 catch (  Exception ex) {
    logger.error("network-policy update: ",ex);
    ex.printStackTrace();
    return false;
  }
  if (!policyModel.hasPolicyRules()) {
    try {
      policyModel.delete(_manager.getModelController());
      _manager.getDatabase().getNetworkPolicys().remove(policyModel);
    }
 catch (    IOException e) {
      e.printStackTrace();
      return false;
    }
  }
  if (policyModel != oldPolicyModel && oldPolicyModel != null && !oldPolicyModel.hasDescendents()) {
    try {
      oldPolicyModel.delete(_manager.getModelController());
      _manager.getDatabase().getNetworkPolicys().remove(oldPolicyModel);
    }
 catch (    IOException e) {
      e.printStackTrace();
      return false;
    }
  }
  return true;
}
