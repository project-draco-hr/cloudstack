{
  String routerIp=cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);
  String controlIp=getRouterSshControlIp(cmd);
  StringBuffer argsBuf=new StringBuffer();
  if (cmd.isCreate()) {
    argsBuf.append(" -r ").append(cmd.getIpRange()).append(" -p ").append(cmd.getPresharedKey()).append(" -s ").append(cmd.getVpnServerIp()).append(" -l ").append(cmd.getLocalIp()).append(" -c ");
  }
 else {
    argsBuf.append(" -d ").append(" -s ").append(cmd.getVpnServerIp());
  }
  try {
    VmwareManager mgr=getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Executing /opt/cloud/bin/vpn_lt2p.sh ");
    }
    Pair<Boolean,String> result=SshHelper.sshExecute(controlIp,DEFAULT_DOMR_SSHPORT,"root",mgr.getSystemVMKeyFile(),null,"/opt/cloud/bin/vpn_l2tp.sh " + argsBuf.toString());
    if (!result.first()) {
      s_logger.error("RemoteAccessVpnCfg command on domR failed, message: " + result.second());
      return new Answer(cmd,false,"RemoteAccessVpnCfg command failed due to " + result.second());
    }
    if (s_logger.isInfoEnabled()) {
      s_logger.info("RemoteAccessVpnCfg command on domain router " + argsBuf.toString() + " completed");
    }
  }
 catch (  Throwable e) {
    if (e instanceof RemoteException) {
      s_logger.warn("Encounter remote exception to vCenter, invalidate VMware session context");
      invalidateServiceContext();
    }
    String msg="RemoteAccessVpnCfg command failed due to " + VmwareHelper.getExceptionMessage(e);
    s_logger.error(msg);
    return new Answer(cmd,false,msg);
  }
  return new Answer(cmd);
}
