{
  if (s_logger.isInfoEnabled()) {
    s_logger.info("Executing resource VmDataCommand: " + _gson.toJson(cmd));
  }
  String routerPrivateIpAddress=cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);
  String controlIp=getRouterSshControlIp(cmd);
  String vmIpAddress=cmd.getVmIpAddress();
  List<String[]> vmData=cmd.getVmData();
  String[] vmDataArgs=new String[vmData.size() * 2 + 4];
  vmDataArgs[0]="routerIP";
  vmDataArgs[1]=routerPrivateIpAddress;
  vmDataArgs[2]="vmIP";
  vmDataArgs[3]=vmIpAddress;
  int i=4;
  for (  String[] vmDataEntry : vmData) {
    String folder=vmDataEntry[0];
    String file=vmDataEntry[1];
    String contents=(vmDataEntry[2] != null) ? vmDataEntry[2] : "none";
    vmDataArgs[i]=folder + "," + file;
    vmDataArgs[i + 1]=contents;
    i+=2;
  }
  String content=encodeDataArgs(vmDataArgs);
  String tmpFileName=UUID.randomUUID().toString();
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Run vm_data command on domain router " + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + ", data: "+ content);
  }
  try {
    VmwareManager mgr=getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);
    SshHelper.scpTo(controlIp,DEFAULT_DOMR_SSHPORT,"root",mgr.getSystemVMKeyFile(),null,"/tmp",content.getBytes(),tmpFileName,null);
    try {
      Pair<Boolean,String> result=SshHelper.sshExecute(controlIp,DEFAULT_DOMR_SSHPORT,"root",mgr.getSystemVMKeyFile(),null,"/root/userdata.py " + tmpFileName);
      if (!result.first()) {
        s_logger.error("vm_data command on domain router " + controlIp + " failed. messge: "+ result.second());
        return new Answer(cmd,false,"VmDataCommand failed due to " + result.second());
      }
    }
  finally {
      SshHelper.sshExecute(controlIp,DEFAULT_DOMR_SSHPORT,"root",mgr.getSystemVMKeyFile(),null,"rm /tmp/" + tmpFileName);
    }
    if (s_logger.isInfoEnabled()) {
      s_logger.info("vm_data command on domain router " + controlIp + " completed");
    }
  }
 catch (  Throwable e) {
    String msg="VmDataCommand failed due to " + VmwareHelper.getExceptionMessage(e);
    s_logger.error(msg);
    return new Answer(cmd,false,msg);
  }
  return new Answer(cmd);
}
