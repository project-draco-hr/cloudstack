{
  assert(hyperHost != null);
  VirtualMachineMO vmMo=null;
  VirtualMachineConfigSpec vmConfig=new VirtualMachineConfigSpec();
  vmConfig.setName(vmName);
  vmConfig.setMemoryMB((long)4);
  vmConfig.setNumCPUs(1);
  vmConfig.setGuestId(VirtualMachineGuestOsIdentifier._otherGuest.toString());
  VirtualMachineFileInfo fileInfo=new VirtualMachineFileInfo();
  fileInfo.setVmPathName(String.format("[%s]",dsMo.getName()));
  vmConfig.setFiles(fileInfo);
  VirtualLsiLogicController scsiController=new VirtualLsiLogicController();
  scsiController.setSharedBus(VirtualSCSISharing.noSharing);
  scsiController.setBusNumber(0);
  scsiController.setKey(1);
  VirtualDeviceConfigSpec scsiControllerSpec=new VirtualDeviceConfigSpec();
  scsiControllerSpec.setDevice(scsiController);
  scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.add);
  vmConfig.setDeviceChange(new VirtualDeviceConfigSpec[]{scsiControllerSpec});
  hyperHost.createVm(vmConfig);
  vmMo=hyperHost.findVmOnHyperHost(vmName);
  return vmMo;
}
