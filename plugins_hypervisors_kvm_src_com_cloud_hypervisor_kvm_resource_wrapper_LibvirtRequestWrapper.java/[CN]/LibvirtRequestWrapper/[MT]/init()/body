{
  final Hashtable<Class<? extends Command>,CommandWrapper> linbvirtCommands=new Hashtable<Class<? extends Command>,CommandWrapper>();
  linbvirtCommands.put(StopCommand.class,new LibvirtStopCommandWrapper());
  linbvirtCommands.put(GetVmStatsCommand.class,new LibvirtGetVmStatsCommandWrapper());
  linbvirtCommands.put(GetVmDiskStatsCommand.class,new LibvirtGetVmDiskStatsCommandWrapper());
  linbvirtCommands.put(RebootRouterCommand.class,new LibvirtRebootRouterCommandWrapper());
  linbvirtCommands.put(RebootCommand.class,new LibvirtRebootCommandWrapper());
  linbvirtCommands.put(GetHostStatsCommand.class,new LibvirtGetHostStatsCommandWrapper());
  linbvirtCommands.put(CheckHealthCommand.class,new LibvirtCheckHealthCommandWrapper());
  linbvirtCommands.put(PrepareForMigrationCommand.class,new LibvirtPrepareForMigrationCommandWrapper());
  linbvirtCommands.put(MigrateCommand.class,new LibvirtMigrateCommandWrapper());
  linbvirtCommands.put(PingTestCommand.class,new LibvirtPingTestCommandWrapper());
  linbvirtCommands.put(CheckVirtualMachineCommand.class,new LibvirtCheckVirtualMachineCommandWrapper());
  linbvirtCommands.put(ReadyCommand.class,new LibvirtReadyCommandWrapper());
  linbvirtCommands.put(AttachIsoCommand.class,new LibvirtAttachIsoCommandWrapper());
  linbvirtCommands.put(AttachVolumeCommand.class,new LibvirtAttachVolumeCommandWrapper());
  resources.put(LibvirtComputingResource.class,linbvirtCommands);
}
