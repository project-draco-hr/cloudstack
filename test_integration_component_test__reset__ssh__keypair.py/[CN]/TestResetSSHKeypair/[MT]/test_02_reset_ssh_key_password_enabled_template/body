@attr(tags=['simulator', 'basic', 'advanced'])
def test_02_reset_ssh_key_password_enabled_template(self):
    'Reset SSH keys for VM  created from password enabled template and\n            already having SSH key '
    self.debug('Deploying the virtual machine in default network offering')
    virtual_machine = VirtualMachine.create(self.apiclient, self.services['virtual_machine'], templateid=self.pw_ssh_enabled_template.id, accountid=self.account.name, domainid=self.account.domainid, zoneid=self.zone.id, serviceofferingid=self.service_offering.id, keypair=self.keypair.name, mode=self.services['mode'])
    self.debug('Check if the VM is properly deployed or not?')
    vms = VirtualMachine.list(self.apiclient, id=virtual_machine.id, listall=True)
    self.assertEqual(isinstance(vms, list), True, 'List VMs should return the valid list')
    vm = vms[0]
    self.assertEqual(vm.state, 'Running', 'VM state should be running after deployment')
    self.debug('Stopping the virtual machine')
    try:
        virtual_machine.stop(self.apiclient)
    except Exception as e:
        self.fail(('Failed to stop virtual machine: %s, %s' % (virtual_machine.id, e)))
    self.debug(('Creating a new SSH keypair for account: %s' % self.account.name))
    new_keypair = SSHKeyPair.create(self.apiclient, name=(random_gen() + '.pem'), account=self.account.name, domainid=self.account.domainid)
    self.debug(('Created a new keypair with name: %s' % new_keypair.name))
    self.debug('Writing the private key to local file')
    keyPairFilePath = ((tempfile.gettempdir() + os.sep) + new_keypair.name)
    self.debug(('File path: %s' % keyPairFilePath))
    f = open(keyPairFilePath, 'w+')
    f.write(new_keypair.privatekey)
    f.close()
    os.system(('chmod 400 ' + keyPairFilePath))
    self.debug(('Resetting the SSH key pair for instance: %s' % virtual_machine.name))
    try:
        virtual_machine.resetSshKey(self.apiclient, keypair=new_keypair.name, name=new_keypair.name, account=self.account.name, domainid=self.account.domainid)
    except Exception as e:
        self.fail(('Failed to reset SSH key: %s, %s' % (virtual_machine.name, e)))
    self.debug('Starting the virtual machine after resetting the keypair')
    try:
        virtual_machine.start(self.apiclient)
    except Exception as e:
        self.fail(('Failed to start virtual machine: %s, %s' % (virtual_machine.name, e)))
    timeout = wait_vm_start(self.apiclient, virtual_machine.id, self.services['timeout'], self.services['sleep'])
    if (timeout == 0):
        self.fail(('The virtual machine %s failed to start even after %s minutes' % (virtual_machine.name, self.services['timeout'])))
    virtual_machine = SetPublicIpForVM(self.apiclient, virtual_machine)
    self.debug('SSHing with new keypair')
    try:
        virtual_machine.get_ssh_client(keyPairFileLocation=str(keyPairFilePath))
    except Exception as e:
        self.fail(('Failed to SSH into VM with new keypair: %s, %s' % (virtual_machine.name, e)))
    try:
        self.debug('SSHing using password')
        virtual_machine.get_ssh_client()
    except Exception as e:
        self.fail(('Failed to SSH into VM with password: %s, %s' % (virtual_machine.name, e)))
    virtual_machine.delete(self.apiclient, expunge=True)
    return
