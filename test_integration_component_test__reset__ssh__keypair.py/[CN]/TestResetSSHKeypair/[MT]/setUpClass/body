@classmethod
def setUpClass(cls):
    cls.testClient = super(TestResetSSHKeypair, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.services = Services().services
    domain = get_domain(cls.api_client)
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.services['mode'] = cls.zone.networktype
    cls.services['virtual_machine']['zoneid'] = cls.zone.id
    template = get_template(cls.api_client, cls.zone.id, cls.services['ostype'])
    cls.services['virtual_machine']['zoneid'] = cls.zone.id
    cls.services['virtual_machine']['template'] = template.id
    cls._cleanup = []
    try:
        cls.account = Account.create(cls.api_client, cls.services['account'], domainid=domain.id)
        cls._cleanup.append(cls.account)
        cls.service_offering = ServiceOffering.create(cls.api_client, cls.services['service_offering'])
        cls._cleanup.append(cls.service_offering)
        cls.virtual_machine = VirtualMachine.create(cls.api_client, cls.services['virtual_machine'], accountid=cls.account.name, domainid=cls.account.domainid, serviceofferingid=cls.service_offering.id, mode=cls.services['mode'])
        networkid = cls.virtual_machine.nic[0].networkid
        if (cls.zone.networktype.lower() == 'advanced'):
            EgressFireWallRule.create(cls.api_client, networkid=networkid, protocol=cls.services['egress']['protocol'], startport=cls.services['egress']['startport'], endport=cls.services['egress']['endport'], cidrlist=cls.services['egress']['cidrlist'])
        cls.virtual_machine.password = cls.services['virtual_machine']['password']
        ssh = cls.virtual_machine.get_ssh_client()
        cmds = ['cd /etc/init.d;wget https://home.apache.org/~talluri/cloud-set-guest-password', 'chmod +x /etc/init.d/cloud-set-guest-password', 'chkconfig --add cloud-set-guest-password', (('cd /etc/init.d;wget http://downloads.sourceforge.net/project/cloudstack/SSH%20Key%20Gen%20Script/' + 'cloud-set-guest-sshkey.in?r=http%3A%2F%2Fsourceforge') + '.net%2Fprojects%2Fcloudstack%2Ffiles%2FSSH%2520Key%2520Gen%2520Script%2F&ts=1331225219&use_mirror=iweb'), 'chmod +x /etc/init.d/cloud-set-guest-sshkey.in', 'chkconfig --add cloud-set-guest-sshkey.in']
        for c in cmds:
            ssh.execute(c)
        time.sleep(120)
        cls.virtual_machine.stop(cls.api_client)
        list_volume = Volume.list(cls.api_client, virtualmachineid=cls.virtual_machine.id, type='ROOT', listall=True)
        if isinstance(list_volume, list):
            cls.volume = list_volume[0]
        else:
            raise Exception(('Exception: Unable to find root volume for VM: %s' % cls.virtual_machine.id))
        cls.services['template']['ostype'] = cls.services['ostype']
        cls.pw_ssh_enabled_template = Template.create(cls.api_client, cls.services['template'], cls.volume.id, account=cls.account.name, domainid=cls.account.domainid)
        cls._cleanup.append(cls.pw_ssh_enabled_template)
        cls.virtual_machine.delete(cls.api_client, expunge=True)
    except Exception as e:
        cls.tearDownClass()
        raise unittest.SkipTest(('Exception in setUpClass: %s' % e))
