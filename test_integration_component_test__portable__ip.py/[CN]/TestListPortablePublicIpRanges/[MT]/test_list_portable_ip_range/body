@attr(tags=['advanced'])
def test_list_portable_ip_range(self):
    'Test list portable ip ranges\n        '
    list_portable_ip_range = PortablePublicIpRange.list(self.apiclient, id=self.portable_ip_range.id)
    self.assertEqual(isinstance(list_portable_ip_range, list), True, 'List portable IP ranges should not return an empty response')
    portable_ip_range = list_portable_ip_range[0]
    self.assertEqual(str(portable_ip_range.startip), str(self.portable_ip_range_services['startip']), 'Listed startip not matching with the startip of created public ip range')
    self.assertEqual(str(portable_ip_range.endip), str(self.portable_ip_range_services['endip']), 'Listed endip not matching with the endip of created public ip range')
    self.assertEqual(str(portable_ip_range.gateway), str(self.portable_ip_range_services['gateway']), 'Listed gateway not matching with the gateway of created public ip range')
    self.assertEqual(str(portable_ip_range.netmask), str(self.portable_ip_range_services['netmask']), 'Listed netmask not matching with the netmask of created public ip range')
    return
