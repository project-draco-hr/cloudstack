@attr(tags=['advanced', 'selfservice'])
def test_create_portable_ip_range(self):
    'Test create new portable ip range\n        '
    portable_ip_range_services = get_portable_ip_range_services(self.config)
    self.debug(portable_ip_range_services)
    if (portable_ip_range_services is None):
        self.skipTest('Failed to read config values related to portable ip range')
    portable_ip_range_services['regionid'] = self.region.id
    self.debug(('Creating new portable IP range with startip:%s and endip:%s' % (str(portable_ip_range_services['startip']), str(portable_ip_range_services['endip']))))
    new_portable_ip_range = PortablePublicIpRange.create(self.apiclient, portable_ip_range_services)
    self.debug(('Created new portable IP range with startip:%s and endip:%s and id:%s' % (new_portable_ip_range.startip, new_portable_ip_range.endip, new_portable_ip_range.id)))
    self.cleanup.append(new_portable_ip_range)
    return
