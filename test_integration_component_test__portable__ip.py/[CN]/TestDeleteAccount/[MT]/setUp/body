def setUp(self):
    self.apiclient = self.testClient.getApiClient()
    self.dbclient = self.testClient.getDbConnection()
    self.account = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id, admin=True)
    self.cleanup = []
    portable_ip_range_services = self.services['portableIpRange']
    if (portable_ip_range_services is None):
        self.skipTest('Failed to read config values related to portable ip range')
    portable_ip_range_services['regionid'] = self.region.id
    self.debug(('Creating new portable IP range with startip:%s and endip:%s' % (str(portable_ip_range_services['startip']), str(portable_ip_range_services['endip']))))
    new_portable_ip_range = PortablePublicIpRange.create(self.apiclient, portable_ip_range_services)
    self.debug(('Created new portable IP range with startip:%s and endip:%s and id:%s' % (new_portable_ip_range.startip, new_portable_ip_range.endip, new_portable_ip_range.id)))
    self.cleanup.append(new_portable_ip_range)
    self.debug('Creating n/w offering')
    self.network_offering = NetworkOffering.create(self.apiclient, self.services['network_offering'], conservemode=False)
    self.debug(('Created n/w offering with ID: %s' % self.network_offering.id))
    self.network_offering.update(self.apiclient, state='Enabled')
    self.debug('Creating network')
    self.network = Network.create(self.apiclient, self.services['network'], accountid=self.account.name, domainid=self.account.domainid, networkofferingid=self.network_offering.id, zoneid=self.zone.id)
    self.cleanup.append(self.network_offering)
    self.debug(('Created network with id: %s' % self.network.id))
    return
