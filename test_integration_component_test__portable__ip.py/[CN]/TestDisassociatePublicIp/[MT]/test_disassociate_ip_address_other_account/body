@attr(tags=['advanced', 'selfservice'])
def test_disassociate_ip_address_other_account(self):
    ' Test disassociating portable IP with non-owner account\n        '
    portableip = PublicIPAddress.create(self.apiclient, accountid=self.account.name, zoneid=self.zone.id, domainid=self.account.domainid, networkid=self.network.id, isportable=True)
    self.debug(('created public ip address (portable): %s' % portableip.ipaddress.ipaddress))
    self.user_account = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id)
    self.api_client_user = self.testClient.getUserApiClient(UserName=self.user_account.name, DomainName=self.user_account.domain)
    try:
        self.debug(('Disassociating portable ip: %s with id: %s with other account :%s' % (portableip.ipaddress.ipaddress, portableip.ipaddress.id, self.user_account.name)))
        with self.assertRaises(Exception):
            portableip.delete(self.api_client_user)
    except Exception as e:
        raise Exception(('Exception while disassociating portable ip: %s' % e))
    portableip.delete(self.apiclient)
    return
