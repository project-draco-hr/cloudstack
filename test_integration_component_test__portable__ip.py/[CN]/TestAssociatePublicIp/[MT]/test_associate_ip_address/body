@attr(tags=['advanced'])
def test_associate_ip_address(self):
    ' Test assocoate public ip address\n        '
    self.debug(('Associating default public ip address with network: %s' % self.network.id))
    publicipaddress = PublicIPAddress.create(self.apiclient, accountid=self.account.name, zoneid=self.zone.id, domainid=self.account.domainid, networkid=self.network.id)
    self.debug(('Associated default public ip address: %s' % publicipaddress.ipaddress.ipaddress))
    self.debug(('Associating public ip address with network: %s with isportable=False' % self.network.id))
    publicipaddressnotportable = PublicIPAddress.create(self.apiclient, accountid=self.account.name, zoneid=self.zone.id, domainid=self.account.domainid, networkid=self.network.id, isportable=False)
    self.debug(('Associated public ip address (not portable): %s' % publicipaddressnotportable.ipaddress.ipaddress))
    publicipaddressnotportable.delete(self.apiclient)
    self.debug(('Associating public ip address with network: %s with isportable=True' % self.network.id))
    publicipaddressportable = PublicIPAddress.create(self.apiclient, accountid=self.account.name, zoneid=self.zone.id, domainid=self.account.domainid, networkid=self.network.id, isportable=True)
    self.debug(('Associated public ip address (portable): %s' % publicipaddressportable.ipaddress.ipaddress))
    publicipaddressportable.delete(self.apiclient)
    return
