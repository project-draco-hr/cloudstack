@attr(tags=['simulator', 'basic', 'advanced'], required_hardware='false')
def test_updateRegion(self):
    ' Test for update Region\n       '
    self.services['region']['regionname'] = ('Region3' + random_gen())
    self.services['region']['regionendpoint'] = 'http://region3updated:8080/client'
    updated_region = self.region.update(self.api_client, self.services['region'])
    list_region = Region.list(self.api_client, id=self.services['region']['regionid'])
    self.assertEqual(isinstance(list_region, list), True, 'Check for list Region response')
    region_response = list_region[0]
    self.assertEqual(region_response.id, updated_region.id, 'listRegion response does not match with region Id created')
    self.assertEqual(region_response.name, updated_region.name, 'listRegion response does not match with region name created')
    self.assertEqual(region_response.endpoint, updated_region.endpoint, 'listRegion response does not match with region endpoint created')
