{
  Long brocadeDeviceId=cmd.getBrocadeVcsDeviceId();
  BrocadeVcsDeviceVO brocadeVcsDevice=_brocadeVcsDao.findById(brocadeDeviceId);
  if (brocadeVcsDevice == null) {
    throw new InvalidParameterValueException("Could not find a brocade vcs switch with id " + brocadeVcsDevice);
  }
  Long physicalNetworkId=brocadeVcsDevice.getPhysicalNetworkId();
  PhysicalNetworkVO physicalNetwork=_physicalNetworkDao.findById(physicalNetworkId);
  if (physicalNetwork != null) {
    List<NetworkVO> networkList=_networkDao.listByPhysicalNetwork(physicalNetworkId);
    if (networkList != null) {
      for (      NetworkVO network : networkList) {
        if (network.getBroadcastDomainType() == Networks.BroadcastDomainType.Vcs) {
          if ((network.getState() != Network.State.Shutdown) && (network.getState() != Network.State.Destroy)) {
            throw new CloudRuntimeException("This Brocade VCS Switch can not be deleted as there are one or more logical networks provisioned by cloudstack.");
          }
        }
      }
    }
  }
  HostVO brocadeHost=_hostDao.findById(brocadeVcsDevice.getHostId());
  Long hostId=brocadeHost.getId();
  brocadeHost.setResourceState(ResourceState.Maintenance);
  _hostDao.update(hostId,brocadeHost);
  _resourceMgr.deleteHost(hostId,false,false);
  _brocadeVcsDao.remove(brocadeDeviceId);
  return true;
}
