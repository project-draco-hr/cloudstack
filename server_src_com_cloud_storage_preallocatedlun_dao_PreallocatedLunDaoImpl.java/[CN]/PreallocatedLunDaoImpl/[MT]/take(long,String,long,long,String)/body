{
  StringBuilder sql=new StringBuilder(TakeSqlPrefix);
  if (tags.length > 0) {
    sql.append("(");
    for (    String tag : tags) {
      sql.append("ext_lun_details.tag=?").append(" OR ");
    }
    sql.delete(sql.length() - 4,sql.length());
    sql.append(") AND ");
  }
  sql.append(TakeSqlSuffix);
  try {
    Transaction txn=Transaction.currentTxn();
    txn.start();
    PreparedStatement pstmt=txn.prepareAutoCloseStatement(sql.toString());
    int i=1;
    pstmt.setString(i++,targetIqn);
    pstmt.setLong(i++,size1);
    pstmt.setLong(i++,size2);
    for (    String tag : tags) {
      pstmt.setString(i++,tag);
    }
    pstmt.setInt(i++,tags.length);
    ResultSet rs=pstmt.executeQuery();
    s_logger.debug("Statement is " + pstmt.toString());
    if (!rs.next()) {
      return null;
    }
    PreallocatedLunVO lun=toEntityBean(rs,false);
    lun.setTaken(new Date());
    lun.setVolumeId(volumeId);
    update(lun.getId(),lun);
    txn.commit();
    return lun;
  }
 catch (  SQLException e) {
    throw new CloudRuntimeException("Unable to execute " + sql.toString(),e);
  }
}
