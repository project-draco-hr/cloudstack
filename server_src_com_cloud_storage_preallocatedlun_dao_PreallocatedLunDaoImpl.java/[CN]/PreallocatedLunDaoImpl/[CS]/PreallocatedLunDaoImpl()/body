{
  TakeSearch=createSearchBuilder();
  TakeSearch.and("taken",TakeSearch.entity().getTaken(),SearchCriteria.Op.NULL);
  TakeSearch.done();
  ReleaseSearch=createSearchBuilder();
  ReleaseSearch.and("lun",ReleaseSearch.entity().getLun(),SearchCriteria.Op.EQ);
  ReleaseSearch.and("target",ReleaseSearch.entity().getTargetIqn(),SearchCriteria.Op.EQ);
  ReleaseSearch.and("taken",ReleaseSearch.entity().getTaken(),SearchCriteria.Op.NNULL);
  ReleaseSearch.and("instanceId",ReleaseSearch.entity().getVolumeId(),SearchCriteria.Op.EQ);
  ReleaseSearch.done();
  DetailsSearch=_detailsDao.createSearchBuilder(String.class);
  SearchBuilder<PreallocatedLunVO> targetSearch=createSearchBuilder();
  targetSearch.and("targetiqn",targetSearch.entity().getTargetIqn(),SearchCriteria.Op.EQ);
  DetailsSearch.join("target",targetSearch,targetSearch.entity().getId(),DetailsSearch.entity().getLunId(),JoinBuilder.JoinType.INNER);
  DetailsSearch.select(null,Func.DISTINCT,DetailsSearch.entity().getTag());
  DetailsSearch.done();
  targetSearch.done();
  TotalSizeSearch=createSearchBuilder(Long.class);
  TotalSizeSearch.and("target",TotalSizeSearch.entity().getTargetIqn(),SearchCriteria.Op.EQ);
  TotalSizeSearch.select(null,Func.SUM,TotalSizeSearch.entity().getSize());
  TotalSizeSearch.done();
  UsedSizeSearch=createSearchBuilder(Long.class);
  UsedSizeSearch.and("target",UsedSizeSearch.entity().getTargetIqn(),SearchCriteria.Op.EQ);
  UsedSizeSearch.and("taken",UsedSizeSearch.entity().getTaken(),SearchCriteria.Op.NNULL);
  UsedSizeSearch.select(null,Func.SUM,UsedSizeSearch.entity().getSize());
  UsedSizeSearch.done();
  DeleteSearch=createSearchBuilder();
  DeleteSearch.and("id",DeleteSearch.entity().getId(),SearchCriteria.Op.EQ);
  DeleteSearch.and("taken",DeleteSearch.entity().getTaken(),SearchCriteria.Op.NULL);
  DeleteSearch.done();
}
