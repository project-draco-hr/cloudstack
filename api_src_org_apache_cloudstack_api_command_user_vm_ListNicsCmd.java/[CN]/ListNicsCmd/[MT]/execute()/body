{
  try {
    List<? extends Nic> results=_networkService.listNics(this);
    ListResponse<NicResponse> response=new ListResponse<NicResponse>();
    List<NicResponse> resList=null;
    if (results != null) {
      resList=new ArrayList<NicResponse>(results.size());
      for (      Nic r : results) {
        NicResponse resp=_responseGenerator.createNicResponse(r);
        resp.setObjectName("nic");
        resList.add(resp);
      }
      response.setResponses(resList);
    }
    response.setResponses(resList);
    response.setResponseName(getCommandName());
    this.setResponseObject(response);
  }
 catch (  Exception e) {
    s_logger.warn("Failed to list secondary ip address per nic ");
    throw new ServerApiException(ApiErrorCode.INTERNAL_ERROR,e.getMessage());
  }
}
