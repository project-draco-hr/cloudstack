@classmethod
def create(cls, apiclient, services, admin=False, domainid=None, roleid=None):
    'Creates an account'
    cmd = createAccount.createAccountCmd()
    cmd.accounttype = (2 if (admin and domainid) else int(admin))
    cmd.email = services['email']
    cmd.firstname = services['firstname']
    cmd.lastname = services['lastname']
    cmd.password = services['password']
    username = services['username']
    username = username[:6]
    apiclientid = (apiclient.id[(-85):] if (len(apiclient.id) > 85) else apiclient.id)
    cmd.username = '-'.join([username, random_gen(id=apiclientid, size=6)])
    if ('accountUUID' in services):
        cmd.accountid = '-'.join([services['accountUUID'], random_gen()])
    if ('userUUID' in services):
        cmd.userid = '-'.join([services['userUUID'], random_gen()])
    if domainid:
        cmd.domainid = domainid
    if roleid:
        cmd.roleid = roleid
    account = apiclient.createAccount(cmd)
    return Account(account.__dict__)
