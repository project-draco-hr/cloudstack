@classmethod
def create(cls, apiclient, services, vpcofferingid, zoneid, networkDomain=None, account=None, domainid=None, **kwargs):
    'Creates the virtual private connection (VPC)'
    cmd = createVPC.createVPCCmd()
    cmd.name = '-'.join([services['name'], random_gen()])
    cmd.displaytext = '-'.join([services['displaytext'], random_gen()])
    cmd.vpcofferingid = vpcofferingid
    cmd.zoneid = zoneid
    if ('cidr' in services):
        cmd.cidr = services['cidr']
    if account:
        cmd.account = account
    if domainid:
        cmd.domainid = domainid
    if networkDomain:
        cmd.networkDomain = networkDomain
    [setattr(cmd, k, v) for (k, v) in kwargs.items()]
    return VPC(apiclient.createVPC(cmd).__dict__)
