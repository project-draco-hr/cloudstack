@classmethod
def create(cls, apiclient, accountid=None, zoneid=None, domainid=None, services=None, networkid=None, projectid=None, vpcid=None, isportable=False):
    'Associate Public IP address'
    cmd = associateIpAddress.associateIpAddressCmd()
    if accountid:
        cmd.account = accountid
    elif (services and ('account' in services)):
        cmd.account = services['account']
    if zoneid:
        cmd.zoneid = zoneid
    elif ('zoneid' in services):
        cmd.zoneid = services['zoneid']
    if domainid:
        cmd.domainid = domainid
    elif (services and ('domainid' in services)):
        cmd.domainid = services['domainid']
    if isportable:
        cmd.isportable = isportable
    if networkid:
        cmd.networkid = networkid
    if projectid:
        cmd.projectid = projectid
    if vpcid:
        cmd.vpcid = vpcid
    return PublicIPAddress(apiclient.associateIpAddress(cmd).__dict__)
