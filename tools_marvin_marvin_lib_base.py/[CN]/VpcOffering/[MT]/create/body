@classmethod
def create(cls, apiclient, services):
    'Create vpc offering'
    cmd = createVPCOffering.createVPCOfferingCmd()
    cmd.name = '-'.join([services['name'], random_gen()])
    cmd.displaytext = services['displaytext']
    cmd.supportedServices = services['supportedservices']
    if ('serviceProviderList' in services):
        for (service, provider) in services['serviceProviderList'].items():
            cmd.serviceproviderlist.append({'service': service, 'provider': provider, })
    if ('serviceCapabilityList' in services):
        cmd.servicecapabilitylist = []
        for (service, capability) in services['serviceCapabilityList'].items():
            for (ctype, value) in capability.items():
                cmd.servicecapabilitylist.append({'service': service, 'capabilitytype': ctype, 'capabilityvalue': value, })
    return VpcOffering(apiclient.createVPCOffering(cmd).__dict__)
