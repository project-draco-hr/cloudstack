{
  java.lang.String prefix=null;
  java.lang.String namespace=null;
  prefix=parentQName.getPrefix();
  namespace=parentQName.getNamespaceURI();
  if ((namespace != null) && (namespace.trim().length() > 0)) {
    java.lang.String writerPrefix=xmlWriter.getPrefix(namespace);
    if (writerPrefix != null) {
      xmlWriter.writeStartElement(namespace,parentQName.getLocalPart());
    }
 else {
      if (prefix == null) {
        prefix=generatePrefix(namespace);
      }
      xmlWriter.writeStartElement(prefix,parentQName.getLocalPart(),namespace);
      xmlWriter.writeNamespace(prefix,namespace);
      xmlWriter.setPrefix(prefix,namespace);
    }
  }
 else {
    xmlWriter.writeStartElement(parentQName.getLocalPart());
  }
  if (serializeType) {
    java.lang.String namespacePrefix=registerPrefix(xmlWriter,"http://ec2.amazonaws.com/doc/2012-08-15/");
    if ((namespacePrefix != null) && (namespacePrefix.trim().length() > 0)) {
      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type",namespacePrefix + ":ExportToS3TaskResponseType",xmlWriter);
    }
 else {
      writeAttribute("xsi","http://www.w3.org/2001/XMLSchema-instance","type","ExportToS3TaskResponseType",xmlWriter);
    }
  }
  namespace="http://ec2.amazonaws.com/doc/2012-08-15/";
  if (!namespace.equals("")) {
    prefix=xmlWriter.getPrefix(namespace);
    if (prefix == null) {
      prefix=generatePrefix(namespace);
      xmlWriter.writeStartElement(prefix,"diskImageFormat",namespace);
      xmlWriter.writeNamespace(prefix,namespace);
      xmlWriter.setPrefix(prefix,namespace);
    }
 else {
      xmlWriter.writeStartElement(namespace,"diskImageFormat");
    }
  }
 else {
    xmlWriter.writeStartElement("diskImageFormat");
  }
  if (localDiskImageFormat == null) {
    throw new org.apache.axis2.databinding.ADBException("diskImageFormat cannot be null!!");
  }
 else {
    xmlWriter.writeCharacters(localDiskImageFormat);
  }
  xmlWriter.writeEndElement();
  if (localContainerFormatTracker) {
    namespace="http://ec2.amazonaws.com/doc/2012-08-15/";
    if (!namespace.equals("")) {
      prefix=xmlWriter.getPrefix(namespace);
      if (prefix == null) {
        prefix=generatePrefix(namespace);
        xmlWriter.writeStartElement(prefix,"containerFormat",namespace);
        xmlWriter.writeNamespace(prefix,namespace);
        xmlWriter.setPrefix(prefix,namespace);
      }
 else {
        xmlWriter.writeStartElement(namespace,"containerFormat");
      }
    }
 else {
      xmlWriter.writeStartElement("containerFormat");
    }
    if (localContainerFormat == null) {
      throw new org.apache.axis2.databinding.ADBException("containerFormat cannot be null!!");
    }
 else {
      xmlWriter.writeCharacters(localContainerFormat);
    }
    xmlWriter.writeEndElement();
  }
  namespace="http://ec2.amazonaws.com/doc/2012-08-15/";
  if (!namespace.equals("")) {
    prefix=xmlWriter.getPrefix(namespace);
    if (prefix == null) {
      prefix=generatePrefix(namespace);
      xmlWriter.writeStartElement(prefix,"s3Bucket",namespace);
      xmlWriter.writeNamespace(prefix,namespace);
      xmlWriter.setPrefix(prefix,namespace);
    }
 else {
      xmlWriter.writeStartElement(namespace,"s3Bucket");
    }
  }
 else {
    xmlWriter.writeStartElement("s3Bucket");
  }
  if (localS3Bucket == null) {
    throw new org.apache.axis2.databinding.ADBException("s3Bucket cannot be null!!");
  }
 else {
    xmlWriter.writeCharacters(localS3Bucket);
  }
  xmlWriter.writeEndElement();
  namespace="http://ec2.amazonaws.com/doc/2012-08-15/";
  if (!namespace.equals("")) {
    prefix=xmlWriter.getPrefix(namespace);
    if (prefix == null) {
      prefix=generatePrefix(namespace);
      xmlWriter.writeStartElement(prefix,"s3Key",namespace);
      xmlWriter.writeNamespace(prefix,namespace);
      xmlWriter.setPrefix(prefix,namespace);
    }
 else {
      xmlWriter.writeStartElement(namespace,"s3Key");
    }
  }
 else {
    xmlWriter.writeStartElement("s3Key");
  }
  if (localS3Key == null) {
    throw new org.apache.axis2.databinding.ADBException("s3Key cannot be null!!");
  }
 else {
    xmlWriter.writeCharacters(localS3Key);
  }
  xmlWriter.writeEndElement();
  xmlWriter.writeEndElement();
}
