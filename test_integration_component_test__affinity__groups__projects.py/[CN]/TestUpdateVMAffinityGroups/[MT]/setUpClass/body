@classmethod
def setUpClass(cls):
    cls.testClient = super(TestUpdateVMAffinityGroups, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.services = Services().services
    cls.rootdomain = get_domain(cls.api_client)
    cls.domain = Domain.create(cls.api_client, cls.services['domain'])
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.template = get_template(cls.api_client, cls.zone.id, cls.services['ostype'])
    cls.services['virtual_machine']['zoneid'] = cls.zone.id
    cls.services['template'] = cls.template.id
    cls.services['zoneid'] = cls.zone.id
    cls.domain_admin_account = Account.create(cls.api_client, cls.services['domain_admin_account'], domainid=cls.domain.id, admin=True)
    cls.domain_api_client = cls.testClient.getUserApiClient(cls.domain_admin_account.name, cls.domain.name, 2)
    cls.account = Account.create(cls.api_client, cls.services['account'], domainid=cls.domain.id)
    cls.account_api_client = cls.testClient.getUserApiClient(cls.account.name, cls.domain.name, 0)
    cls.account_not_in_project = Account.create(cls.api_client, cls.services['account_not_in_project'], domainid=cls.domain.id)
    cls.account_not_in_project_api_client = cls.testClient.getUserApiClient(cls.account_not_in_project.name, cls.domain.name, 0)
    cls.project = Project.create(cls.api_client, cls.services['project'], account=cls.domain_admin_account.name, domainid=cls.domain_admin_account.domainid)
    cls.project2 = Project.create(cls.api_client, cls.services['project2'], account=cls.domain_admin_account.name, domainid=cls.domain_admin_account.domainid)
    cls.debug(('Created project with ID: %s' % cls.project.id))
    cls.debug(('Created project2 with ID: %s' % cls.project2.id))
    cls.project.addAccount(cls.api_client, cls.account.name)
    cls.service_offering = ServiceOffering.create(cls.api_client, cls.services['service_offering'], domainid=cls.account.domainid)
    cls._cleanup = []
    return
