{
  Long volumeId=(Long)params.get(BaseCmd.Properties.VOLUME_ID.getName());
  VolumeVO volume=getManagementServer().findVolumeById(volumeId);
  if (volume == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Unable to find a volume with id " + volumeId);
  }
  checkAccountPermissions(params,volume.getAccountId(),volume.getDomainId(),"volume",volumeId);
  List<SnapshotPolicyVO> polices=getManagementServer().listSnapshotPolicies(volumeId);
  List<Pair<String,Object>> policesTags=new ArrayList<Pair<String,Object>>();
  Object[] policyTag=new Object[polices.size()];
  int i=0;
  for (  SnapshotPolicyVO policy : polices) {
    List<Pair<String,Object>> policyData=new ArrayList<Pair<String,Object>>();
    policyData.add(new Pair<String,Object>(BaseCmd.Properties.ID.getName(),policy.getId()));
    policyData.add(new Pair<String,Object>(BaseCmd.Properties.VOLUME_ID.getName(),policy.getVolumeId()));
    policyData.add(new Pair<String,Object>(BaseCmd.Properties.SCHEDULE.getName(),policy.getSchedule()));
    policyData.add(new Pair<String,Object>(BaseCmd.Properties.INTERVAL_TYPE.getName(),policy.getInterval()));
    policyData.add(new Pair<String,Object>(BaseCmd.Properties.MAX_SNAPS.getName(),policy.getMaxSnaps()));
    policyData.add(new Pair<String,Object>(BaseCmd.Properties.TIMEZONE.getName(),policy.getTimezone()));
    policyTag[i++]=policyData;
  }
  Pair<String,Object> eventTag=new Pair<String,Object>("snapshotpolicy",policyTag);
  policesTags.add(eventTag);
  return policesTags;
}
