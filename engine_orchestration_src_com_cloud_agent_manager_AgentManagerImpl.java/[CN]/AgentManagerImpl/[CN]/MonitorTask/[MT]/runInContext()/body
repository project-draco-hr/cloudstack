{
  s_logger.trace("Agent Monitor is started.");
  try {
    List<Long> behindAgents=findAgentsBehindOnPing();
    for (    Long agentId : behindAgents) {
      QueryBuilder<HostVO> sc=QueryBuilder.create(HostVO.class);
      sc.and(sc.entity().getId(),Op.EQ,agentId);
      HostVO h=sc.find();
      if (h != null) {
        ResourceState resourceState=h.getResourceState();
        if (resourceState == ResourceState.Disabled || resourceState == ResourceState.Maintenance || resourceState == ResourceState.ErrorInMaintenance) {
          status_logger.debug("Ping timeout but host " + agentId + " is in resource state of "+ resourceState+ ", so no investigation");
          disconnectWithoutInvestigation(agentId,Event.ShutdownRequested);
        }
 else {
          status_logger.debug("Ping timeout for host " + agentId + ", do invstigation");
          disconnectWithInvestigation(agentId,Event.PingTimeout);
        }
      }
    }
    QueryBuilder<HostVO> sc=QueryBuilder.create(HostVO.class);
    sc.and(sc.entity().getResourceState(),Op.IN,ResourceState.PrepareForMaintenance,ResourceState.ErrorInMaintenance);
    List<HostVO> hosts=sc.list();
    for (    HostVO host : hosts) {
      if (_resourceMgr.checkAndMaintain(host.getId())) {
        DataCenterVO dcVO=_dcDao.findById(host.getDataCenterId());
        HostPodVO podVO=_podDao.findById(host.getPodId());
        String hostDesc="name: " + host.getName() + " (id:"+ host.getId()+ "), availability zone: "+ dcVO.getName()+ ", pod: "+ podVO.getName();
        _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_HOST,host.getDataCenterId(),host.getPodId(),"Migration Complete for host " + hostDesc,"Host [" + hostDesc + "] is ready for maintenance");
      }
    }
  }
 catch (  Throwable th) {
    s_logger.error("Caught the following exception: ",th);
  }
  s_logger.trace("Agent Monitor is leaving the building!");
}
