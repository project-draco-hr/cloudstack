{
  s_logger.trace("Agent Monitor is started.");
  try {
    final List<Long> behindAgents=findAgentsBehindOnPing();
    for (    final Long agentId : behindAgents) {
      final QueryBuilder<HostVO> sc=QueryBuilder.create(HostVO.class);
      sc.and(sc.entity().getId(),Op.EQ,agentId);
      final HostVO h=sc.find();
      if (h != null) {
        final ResourceState resourceState=h.getResourceState();
        if (resourceState == ResourceState.Disabled || resourceState == ResourceState.Maintenance || resourceState == ResourceState.ErrorInMaintenance) {
          status_logger.debug("Ping timeout but agent " + agentId + " is in resource state of "+ resourceState+ ", so no investigation");
          disconnectWithoutInvestigation(agentId,Event.ShutdownRequested);
        }
 else {
          final HostVO host=_hostDao.findById(agentId);
          if (host != null && (host.getType() == Host.Type.ConsoleProxy || host.getType() == Host.Type.SecondaryStorageVM || host.getType() == Host.Type.SecondaryStorageCmdExecutor)) {
            s_logger.warn("Disconnect agent for CPVM/SSVM due to physical connection close. host: " + host.getId());
            disconnectWithoutInvestigation(agentId,Event.ShutdownRequested);
          }
 else {
            status_logger.debug("Ping timeout for agent " + agentId + ", do invstigation");
            disconnectWithInvestigation(agentId,Event.PingTimeout);
          }
        }
      }
    }
    final QueryBuilder<HostVO> sc=QueryBuilder.create(HostVO.class);
    sc.and(sc.entity().getResourceState(),Op.IN,ResourceState.PrepareForMaintenance,ResourceState.ErrorInMaintenance);
    final List<HostVO> hosts=sc.list();
    for (    final HostVO host : hosts) {
      if (_resourceMgr.checkAndMaintain(host.getId())) {
        final DataCenterVO dcVO=_dcDao.findById(host.getDataCenterId());
        final HostPodVO podVO=_podDao.findById(host.getPodId());
        final String hostDesc="name: " + host.getName() + " (id:"+ host.getId()+ "), availability zone: "+ dcVO.getName()+ ", pod: "+ podVO.getName();
        _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_HOST,host.getDataCenterId(),host.getPodId(),"Migration Complete for host " + hostDesc,"Host [" + hostDesc + "] is ready for maintenance");
      }
    }
  }
 catch (  final Throwable th) {
    s_logger.error("Caught the following exception: ",th);
  }
  s_logger.trace("Agent Monitor is leaving the building!");
}
