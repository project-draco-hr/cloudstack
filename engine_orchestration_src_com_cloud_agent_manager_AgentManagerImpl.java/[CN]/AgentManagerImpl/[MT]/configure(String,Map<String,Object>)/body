{
  s_logger.info("Ping Timeout is " + PingTimeout.value());
  final int threads=DirectAgentLoadSize.value();
  _nodeId=ManagementServerNode.getManagementServerId();
  s_logger.info("Configuring AgentManagerImpl. management server node id(msid): " + _nodeId);
  final long lastPing=(System.currentTimeMillis() >> 10) - (long)(PingTimeout.value() * PingInterval.value());
  _hostDao.markHostsAsDisconnected(_nodeId,lastPing);
  registerForHostEvents(new BehindOnPingListener(),true,true,false);
  _executor=new ThreadPoolExecutor(threads,threads,60l,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>(),new NamedThreadFactory("AgentTaskPool"));
  _connectExecutor=new ThreadPoolExecutor(100,500,60l,TimeUnit.SECONDS,new LinkedBlockingQueue<Runnable>(),new NamedThreadFactory("AgentConnectTaskPool"));
  _connectExecutor.allowCoreThreadTimeOut(true);
  _connection=new NioServer("AgentManager",Port.value(),Workers.value() + 10,this);
  s_logger.info("Listening on " + Port.value() + " with "+ Workers.value()+ " workers");
  _directAgentExecutor=new ScheduledThreadPoolExecutor(DirectAgentPoolSize.value(),new NamedThreadFactory("DirectAgent"));
  _cronJobExecutor=new ScheduledThreadPoolExecutor(DirectAgentPoolSize.value(),new NamedThreadFactory("DirectAgentCronJob"));
  s_logger.debug("Created DirectAgentAttache pool with size: " + DirectAgentPoolSize.value());
  _directAgentThreadCap=Math.round(DirectAgentPoolSize.value() * DirectAgentThreadCap.value()) + 1;
  _monitorExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory("AgentMonitor"));
  return true;
}
