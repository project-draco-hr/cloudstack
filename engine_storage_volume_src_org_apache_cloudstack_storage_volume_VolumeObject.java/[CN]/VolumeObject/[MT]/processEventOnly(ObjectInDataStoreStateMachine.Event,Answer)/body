{
  try {
    if (dataStore.getRole() == DataStoreRole.Primary) {
      if (answer instanceof CopyCmdAnswer) {
        CopyCmdAnswer cpyAnswer=(CopyCmdAnswer)answer;
        VolumeVO vol=volumeDao.findById(getId());
        VolumeObjectTO newVol=(VolumeObjectTO)cpyAnswer.getNewData();
        vol.setPath(newVol.getPath());
        if (newVol.getSize() != null) {
          vol.setSize(newVol.getSize());
        }
        vol.setPoolId(getDataStore().getId());
        volumeDao.update(vol.getId(),vol);
      }
 else       if (answer instanceof CreateObjectAnswer) {
        CreateObjectAnswer createAnswer=(CreateObjectAnswer)answer;
        VolumeObjectTO newVol=(VolumeObjectTO)createAnswer.getData();
        VolumeVO vol=volumeDao.findById(getId());
        vol.setPath(newVol.getPath());
        if (newVol.getSize() != null) {
          vol.setSize(newVol.getSize());
        }
        vol.setPoolId(getDataStore().getId());
        volumeDao.update(vol.getId(),vol);
      }
    }
 else {
      if (answer instanceof DownloadAnswer) {
        DownloadAnswer dwdAnswer=(DownloadAnswer)answer;
        VolumeDataStoreVO volStore=volumeStoreDao.findByStoreVolume(dataStore.getId(),getId());
        volStore.setInstallPath(dwdAnswer.getInstallPath());
        volStore.setChecksum(dwdAnswer.getCheckSum());
        volumeStoreDao.update(volStore.getId(),volStore);
      }
 else       if (answer instanceof CopyCmdAnswer) {
        CopyCmdAnswer cpyAnswer=(CopyCmdAnswer)answer;
        VolumeDataStoreVO volStore=volumeStoreDao.findByStoreVolume(dataStore.getId(),getId());
        VolumeObjectTO newVol=(VolumeObjectTO)cpyAnswer.getNewData();
        volStore.setInstallPath(newVol.getPath());
        if (newVol.getSize() != null) {
          volStore.setSize(newVol.getSize());
        }
        volumeStoreDao.update(volStore.getId(),volStore);
      }
    }
  }
 catch (  RuntimeException ex) {
    if (event == ObjectInDataStoreStateMachine.Event.OperationFailed) {
      objectInStoreMgr.deleteIfNotReady(this);
    }
    throw ex;
  }
  this.processEventOnly(event);
}
