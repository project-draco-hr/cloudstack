@attr(tags=['advanced', 'basic'], required_hardware='false')
def test_01_verify_events_table(self):
    ' Test events table\n\n        # 1. Deploy a VM.\n        # 2. Take VM snapshot.\n        # 3. Verify that events table records UUID of the volume in descrption\n            instead of volume ID\n        '
    vm = VirtualMachine.create(self.userapiclient, self.testdata['small'], templateid=self.template.id, accountid=self.account.name, domainid=self.account.domainid, serviceofferingid=self.service_offering.id, zoneid=self.zone.id)
    volumes_list = list_volumes(self.apiclient, virtualmachineid=vm.id, type='ROOT', listall=True)
    volume_list_validation = validateList(volumes_list)
    self.assertEqual(volume_list_validation[0], PASS, ('volume list validation failed due to %s' % volume_list_validation[2]))
    root_volume = volumes_list[0]
    snapshot = Snapshot.create(self.apiclient, root_volume.id)
    self.assertNotEqual(len(snapshot), 0, 'Check if snapshot gets created properly')
    qresultset = self.dbclient.execute(("select  description from event where type='SNAPSHOT.CREATE' AND                         description like '%%%s%%'" % root_volume.id))
    event_validation_result = validateList(qresultset)
    self.assertEqual(event_validation_result[0], PASS, ('event list validation failed due to %s' % event_validation_result[2]))
    self.assertNotEqual(len(qresultset), 0, 'Check if events table records UUID of the volume')
    return
