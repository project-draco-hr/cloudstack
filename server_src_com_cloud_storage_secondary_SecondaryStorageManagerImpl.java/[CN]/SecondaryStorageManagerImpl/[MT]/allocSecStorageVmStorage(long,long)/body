{
  SecondaryStorageVmVO secStorageVm=_secStorageVmDao.findById(secStorageVmId);
  assert(secStorageVm != null);
  DataCenterVO dc=_dcDao.findById(dataCenterId);
  HostPodVO pod=_podDao.findById(secStorageVm.getPodId());
  final AccountVO account=_accountDao.findById(Account.ACCOUNT_ID_SYSTEM);
  try {
    List<VolumeVO> vols=_storageMgr.create(account,secStorageVm,_template,dc,pod,_serviceOffering,null);
    if (vols == null) {
      s_logger.error("Unable to alloc storage for secondary storage vm");
      return null;
    }
    _secStorageVmDao.updateIf(secStorageVm,Event.OperationSucceeded,null);
    return secStorageVm;
  }
 catch (  StorageUnavailableException e) {
    s_logger.error("Unable to alloc storage for secondary storage vm: ",e);
    return null;
  }
catch (  ExecutionException e) {
    s_logger.error("Unable to alloc storage for secondary storage vm: ",e);
    return null;
  }
}
