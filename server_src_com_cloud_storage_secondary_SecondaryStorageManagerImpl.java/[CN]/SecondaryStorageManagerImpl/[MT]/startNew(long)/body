{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Assign secondary storage vm from a newly started instance for request from data center : " + dataCenterId);
  }
  long startEventId=EventUtils.saveStartedEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventTypes.EVENT_SSVM_CREATE,"Creating secondary storage Vm in zone : " + dataCenterId);
  Map<String,Object> context=createSecStorageVmInstance(dataCenterId);
  long secStorageVmId=(Long)context.get("secStorageVmId");
  if (secStorageVmId == 0) {
    if (s_logger.isTraceEnabled()) {
      s_logger.trace("Creating secondary storage vm instance failed, data center id : " + dataCenterId);
    }
    EventUtils.saveEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventVO.LEVEL_ERROR,EventTypes.EVENT_SSVM_CREATE,"Failed to create secondary storage Vm in zone : " + dataCenterId,startEventId);
    return null;
  }
  SecondaryStorageVmVO secStorageVm=_secStorageVmDao.findById(secStorageVmId);
  if (secStorageVm != null) {
    SubscriptionMgr.getInstance().notifySubscribers(ALERT_SUBJECT,this,new SecStorageVmAlertEventArgs(SecStorageVmAlertEventArgs.SSVM_CREATED,dataCenterId,secStorageVmId,secStorageVm,null));
    EventUtils.saveEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventVO.LEVEL_INFO,EventTypes.EVENT_SSVM_CREATE,"Successfully created secondary storage Vm " + secStorageVm.getName() + " in zone : "+ dataCenterId,startEventId);
    return secStorageVm;
  }
 else {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Unable to allocate secondary storage vm storage, remove the secondary storage vm record from DB, secondary storage vm id: " + secStorageVmId);
    }
    SubscriptionMgr.getInstance().notifySubscribers(ALERT_SUBJECT,this,new SecStorageVmAlertEventArgs(SecStorageVmAlertEventArgs.SSVM_CREATE_FAILURE,dataCenterId,secStorageVmId,null,"Unable to allocate storage"));
    EventUtils.saveEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,EventVO.LEVEL_ERROR,EventTypes.EVENT_SSVM_CREATE,"Failed to create secondary storage Vm in zone : " + dataCenterId,startEventId);
  }
  return null;
}
