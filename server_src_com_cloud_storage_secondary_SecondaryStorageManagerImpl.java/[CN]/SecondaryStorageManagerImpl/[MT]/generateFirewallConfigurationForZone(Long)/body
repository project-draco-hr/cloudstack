{
  List<SecondaryStorageVmVO> zoneSsvms=_secStorageVmDao.listByZoneId(zoneId);
  if (zoneSsvms.size() == 0) {
    return true;
  }
  SecondaryStorageVmVO secStorageVm=zoneSsvms.get(0);
  if (secStorageVm.getState() != State.Running && secStorageVm.getState() != State.Starting) {
    s_logger.warn("No running secondary storage vms found in zone " + zoneId + " , skip programming firewall rules");
    return true;
  }
  Host storageHost=_hostDao.findSecondaryStorageHost(zoneId);
  if (storageHost == null) {
    s_logger.warn("No storage hosts found in zone " + zoneId + " , skip programming firewall rules");
    return true;
  }
  List<SecondaryStorageVmVO> alreadyRunning=_secStorageVmDao.getSecStorageVmListInStates(State.Running,State.Migrating,State.Creating,State.Starting);
  String copyPort=Integer.toString(TemplateConstants.DEFAULT_TMPLT_COPY_PORT);
  SecStorageFirewallCfgCommand cpc=new SecStorageFirewallCfgCommand();
  for (  SecondaryStorageVmVO ssVm : alreadyRunning) {
    if (ssVm.getPublicIpAddress() != null) {
      if (ssVm.getId() == secStorageVm.getId()) {
        continue;
      }
      cpc.addPortConfig(ssVm.getPublicIpAddress(),copyPort,true,TemplateConstants.DEFAULT_TMPLT_COPY_INTF);
      if (_useSSlCopy) {
        cpc.addPortConfig(ssVm.getPublicIpAddress(),"443",true,TemplateConstants.DEFAULT_TMPLT_COPY_INTF);
      }
    }
  }
  Answer answer=_agentMgr.easySend(storageHost.getId(),cpc);
  if (answer != null && answer.getResult()) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Successfully programmed firewall rules into " + secStorageVm.getName());
    }
    return true;
  }
 else {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("failed to program firewall rules into secondary storage vm : " + secStorageVm.getName());
    }
    return false;
  }
}
