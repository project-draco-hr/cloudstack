{
  Transaction txn=Transaction.currentTxn();
  try {
    txn.start();
    String privateIpAddress=secStorageVm.getPrivateIpAddress();
    if (privateIpAddress != null) {
      secStorageVm.setPrivateIpAddress(null);
      freePrivateIpAddress(privateIpAddress,secStorageVm.getDataCenterId(),secStorageVm.getId());
    }
    String guestIpAddress=secStorageVm.getGuestIpAddress();
    if (guestIpAddress != null) {
      secStorageVm.setGuestIpAddress(null);
      _dcDao.releaseLinkLocalIpAddress(guestIpAddress,secStorageVm.getDataCenterId(),secStorageVm.getId());
    }
    if (!_secStorageVmDao.updateIf(secStorageVm,ev,null)) {
      s_logger.debug("Unable to update the secondary storage vm");
      return;
    }
    txn.commit();
  }
 catch (  Exception e) {
    s_logger.error("Unable to complete stop command due to ",e);
  }
  if (_storageMgr.unshare(secStorageVm,null) == null) {
    s_logger.warn("Unable to set share to false for " + secStorageVm.getId());
  }
}
