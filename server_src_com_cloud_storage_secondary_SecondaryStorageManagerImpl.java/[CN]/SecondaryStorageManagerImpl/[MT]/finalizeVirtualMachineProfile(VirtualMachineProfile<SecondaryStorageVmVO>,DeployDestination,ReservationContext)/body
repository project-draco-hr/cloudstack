{
  StringBuilder buf=profile.getBootArgsBuilder();
  buf.append(" template=domP type=secstorage");
  buf.append(" host=").append(_mgmt_host);
  buf.append(" port=").append(_mgmt_port);
  buf.append(" name=").append(profile.getVirtualMachine().getHostName());
  buf.append(" zone=").append(dest.getDataCenter().getId());
  buf.append(" pod=").append(dest.getPod().getId());
  buf.append(" guid=").append(_secHostUuid);
  buf.append(" mount.path=").append(_nfsShare);
  buf.append(" resource=com.cloud.storage.resource.NfsSecondaryStorageResource");
  buf.append(" instance=SecStorage");
  buf.append(" sslcopy=").append(Boolean.toString(_useSSlCopy));
  NicProfile controlNic=null;
  for (  NicProfile nic : profile.getNics()) {
    int deviceId=nic.getDeviceId();
    if (nic.getIp4Address() == null) {
      buf.append(" eth").append(deviceId).append("ip=").append("0.0.0.0");
      buf.append(" bootproto=dhcp");
    }
 else {
      buf.append(" eth").append(deviceId).append("ip=").append(nic.getIp4Address());
    }
    buf.append(" eth").append(deviceId).append("mask=").append(nic.getNetmask());
    if (nic.isDefaultNic()) {
      buf.append(" gateway=").append(nic.getGateway());
      buf.append(" dns1=").append(nic.getDns1());
      if (nic.getDns2() != null) {
        buf.append(" dns2=").append(nic.getDns2());
      }
    }
    if (nic.getTrafficType() == TrafficType.Management) {
      buf.append(" localgw=").append(dest.getPod().getGateway());
    }
 else     if (nic.getTrafficType() == TrafficType.Control) {
      controlNic=nic;
    }
  }
  String bootArgs=buf.toString();
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Boot Args for " + profile + ": "+ bootArgs);
  }
  if (controlNic == null) {
    throw new CloudRuntimeException("Didn't start a control port");
  }
  profile.setParameter("control.nic",controlNic);
  return true;
}
