{
  Account caller=UserContext.current().getCaller();
  Account owner=_accountMgr.finalizeOwner(caller,account,domainId,null);
  if (_affinityGroupDao.isNameInUse(owner.getAccountId(),owner.getDomainId(),affinityGroupName)) {
    throw new InvalidParameterValueException("Unable to create affinity group, a group with name " + affinityGroupName + " already exisits.");
  }
  String internalAffinityType=null;
  Map<String,AffinityGroupProcessor> typeProcessorMap=getAffinityTypeToProcessorMap();
  if (typeProcessorMap != null && !typeProcessorMap.isEmpty()) {
    if (!typeProcessorMap.containsKey(affinityGroupType)) {
      throw new InvalidParameterValueException("Unable to create affinity group, invalid affinity group type" + affinityGroupType);
    }
 else {
      AffinityGroupProcessor processor=typeProcessorMap.get(affinityGroupType);
      internalAffinityType=processor.getType();
    }
  }
 else {
    throw new InvalidParameterValueException("Unable to create affinity group, no Affinity Group Types configured");
  }
  if (internalAffinityType == null) {
    throw new InvalidParameterValueException("Unable to create affinity group, Affinity Group Processor for type " + affinityGroupType + "is wrongly configured");
  }
  AffinityGroupVO group=new AffinityGroupVO(affinityGroupName,internalAffinityType,description,domainId,owner.getId());
  _affinityGroupDao.persist(group);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Created affinity group =" + affinityGroupName);
  }
  return group;
}
