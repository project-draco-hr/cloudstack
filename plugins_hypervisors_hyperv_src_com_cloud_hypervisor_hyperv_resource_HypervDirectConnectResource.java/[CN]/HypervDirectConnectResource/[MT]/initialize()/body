{
  if (!_configureCalled) {
    String errMsg=this.getClass().getName() + " requires configure() be called before" + " initialize()";
    s_logger.error(errMsg);
  }
  StartupRoutingCommand defaultStartRoutCmd=new StartupRoutingCommand(0,0,0,0,null,Hypervisor.HypervisorType.Hyperv,RouterPrivateIpStrategy.HostLocal,new HashMap<String,VmState>());
  defaultStartRoutCmd.setDataCenter(_zoneId);
  defaultStartRoutCmd.setPod(_podId);
  defaultStartRoutCmd.setCluster(_clusterId);
  defaultStartRoutCmd.setGuid(_guid);
  defaultStartRoutCmd.setName(_name);
  defaultStartRoutCmd.setPrivateIpAddress(_agentIp);
  defaultStartRoutCmd.setStorageIpAddress(_agentIp);
  defaultStartRoutCmd.setPool(_clusterGuid);
  s_logger.debug("Generated StartupRoutingCommand for _agentIp \"" + _agentIp + "\"");
  defaultStartRoutCmd.setVersion("4.2.0");
  Command[] startCmds=requestStartupCommand(new Command[]{defaultStartRoutCmd});
  StartupRoutingCommand startCmd=(StartupRoutingCommand)startCmds[0];
  if (startCmd == null) {
    String errMsg=String.format("Host %s (IP %s)" + "did not return a StartupRoutingCommand",_name,_agentIp);
    s_logger.error(errMsg);
    return null;
  }
  if (!startCmd.getDataCenter().equals(defaultStartRoutCmd.getDataCenter())) {
    String errMsg=String.format("Host %s (IP %s) changed zone/data center.  Was " + defaultStartRoutCmd.getDataCenter() + " NOW its "+ startCmd.getDataCenter(),_name,_agentIp);
    s_logger.error(errMsg);
    return null;
  }
  if (!startCmd.getPod().equals(defaultStartRoutCmd.getPod())) {
    String errMsg=String.format("Host %s (IP %s) changed pod.  Was " + defaultStartRoutCmd.getPod() + " NOW its "+ startCmd.getPod(),_name,_agentIp);
    s_logger.error(errMsg);
    return null;
  }
  if (!startCmd.getCluster().equals(defaultStartRoutCmd.getCluster())) {
    String errMsg=String.format("Host %s (IP %s) changed cluster.  Was " + defaultStartRoutCmd.getCluster() + " NOW its "+ startCmd.getCluster(),_name,_agentIp);
    s_logger.error(errMsg);
    return null;
  }
  if (!startCmd.getGuid().equals(defaultStartRoutCmd.getGuid())) {
    String errMsg=String.format("Host %s (IP %s) changed guid.  Was " + defaultStartRoutCmd.getGuid() + " NOW its "+ startCmd.getGuid(),_name,_agentIp);
    s_logger.error(errMsg);
    return null;
  }
  if (!startCmd.getPrivateIpAddress().equals(defaultStartRoutCmd.getPrivateIpAddress())) {
    String errMsg=String.format("Host %s (IP %s) IP address.  Was " + defaultStartRoutCmd.getPrivateIpAddress() + " NOW its "+ startCmd.getPrivateIpAddress(),_name,_agentIp);
    s_logger.error(errMsg);
    return null;
  }
  if (!startCmd.getName().equals(defaultStartRoutCmd.getName())) {
    String errMsg=String.format("Host %s (IP %s) name.  Was " + startCmd.getName() + " NOW its "+ defaultStartRoutCmd.getName(),_name,_agentIp);
    s_logger.error(errMsg);
    return null;
  }
  StartupStorageCommand storePoolCmd=null;
  if (startCmds.length > 1) {
    storePoolCmd=(StartupStorageCommand)startCmds[1];
    if (storePoolCmd == null) {
      String frmtStr="Host %s (IP %s) sent incorrect Command, " + "second parameter should be a " + "StartupStorageCommand";
      String errMsg=String.format(frmtStr,_name,_agentIp);
      s_logger.error(errMsg);
      return null;
    }
    s_logger.info("Host " + _name + " (IP "+ _agentIp+ ") already configured with a storeage pool, details "+ s_gson.toJson(startCmds[1]));
  }
 else {
    s_logger.info("Host " + _name + " (IP "+ _agentIp+ ") already configured with a storeage pool, details ");
  }
  return new StartupCommand[]{startCmd,storePoolCmd};
}
