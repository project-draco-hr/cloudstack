{
  if (s_logger.isInfoEnabled()) {
    s_logger.info("Executing createIpAlias command: " + s_gson.toJson(cmd));
  }
  cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);
  List<IpAliasTO> ipAliasTOs=cmd.getIpAliasList();
  String args="";
  for (  IpAliasTO ipaliasto : ipAliasTOs) {
    args=args + ipaliasto.getAlias_count() + ":"+ ipaliasto.getRouterip()+ ":"+ ipaliasto.getNetmask()+ "-";
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Run command on domR " + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + ", /root/createIpAlias "+ args);
  }
  try {
    String controlIp=getRouterSshControlIp(cmd);
    Pair<Boolean,String> result=SshHelper.sshExecute(controlIp,DEFAULT_DOMR_SSHPORT,"root",getSystemVMKeyFile(),null,"/root/createIpAlias.sh " + args);
    if (!result.first()) {
      s_logger.error("CreateIpAlias command on domr " + controlIp + " failed, message: "+ result.second());
      return new Answer(cmd,false,"createipAlias failed due to " + result.second());
    }
    if (s_logger.isInfoEnabled()) {
      s_logger.info("createIpAlias command on domain router " + controlIp + " completed");
    }
  }
 catch (  Throwable e) {
    String msg="createIpAlias failed due to " + e;
    s_logger.error(msg,e);
    return new Answer(cmd,false,msg);
  }
  return new Answer(cmd);
}
