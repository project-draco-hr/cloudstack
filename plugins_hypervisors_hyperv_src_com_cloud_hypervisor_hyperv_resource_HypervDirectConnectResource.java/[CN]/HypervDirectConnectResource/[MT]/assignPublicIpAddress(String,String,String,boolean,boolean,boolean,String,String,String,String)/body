{
  boolean addVif=false;
  if (add) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Plug new NIC to associate" + privateIpAddress + " to "+ publicIpAddress);
    }
    addVif=true;
  }
 else   if (!add && firstIP) {
  }
  String args=null;
  if (add) {
    args=" -A ";
  }
 else {
    args=" -D ";
  }
  if (sourceNat) {
    args+=" -s ";
  }
  if (firstIP) {
    args+=" -f ";
  }
  String cidrSize=Long.toString(NetUtils.getCidrSize(vlanNetmask));
  args+=" -l ";
  args+=publicIpAddress + "/" + cidrSize;
  args+=" -c ";
  args+="eth" + "2";
  args+=" -g ";
  args+=vlanGateway;
  if (addVif) {
    args+=" -n ";
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Run command on domain router " + privateIpAddress + ", /opt/cloud/bin/ipassoc.sh "+ args);
  }
  Pair<Boolean,String> result=SshHelper.sshExecute(privateIpAddress,DEFAULT_DOMR_SSHPORT,"root",getSystemVMKeyFile(),null,"/opt/cloud/bin/ipassoc.sh " + args);
  if (!result.first()) {
    s_logger.error("ipassoc command on domain router " + privateIpAddress + " failed. message: "+ result.second());
    throw new Exception("ipassoc failed due to " + result.second());
  }
  if (s_logger.isInfoEnabled()) {
    s_logger.info("ipassoc command on domain router " + privateIpAddress + " completed");
  }
}
