{
  S3MultipartUpload[] inProgress=new S3MultipartUpload[maxParts];
  boolean isTruncated=false;
  int i=0;
  int pos=1;
  List<MultiPartUploadsVO> uploadList;
  if (null != prefix)   prefix=prefix + "%";
  try {
    uploadList=mpartUploadDao.getInitiatedUploads(bucketName,maxParts,prefix,keyMarker,uploadIdMarker);
    for (    MultiPartUploadsVO uploadsVO : uploadList) {
      Calendar tod=Calendar.getInstance();
      tod.setTime(uploadsVO.getCreateTime());
      inProgress[i]=new S3MultipartUpload();
      inProgress[i].setId(uploadsVO.getId().intValue());
      inProgress[i].setAccessKey(uploadsVO.getAccessKey());
      inProgress[i].setLastModified(tod);
      inProgress[i].setBucketName(bucketName);
      inProgress[i].setKey(uploadsVO.getNameKey());
      i++;
    }
    if (i < maxParts)     inProgress=(S3MultipartUpload[])resizeArray(inProgress,i);
    return new OrderedPair<S3MultipartUpload[],Boolean>(inProgress,isTruncated);
  }
  finally {
  }
}
