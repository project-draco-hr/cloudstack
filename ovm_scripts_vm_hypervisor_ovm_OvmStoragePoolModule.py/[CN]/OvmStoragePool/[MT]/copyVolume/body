@staticmethod
def copyVolume(secStorageMountPath, volumeFolderOnSecStorage, volumePath, storagePoolUuid, toSec):

    def copyToSecStorage(secMountPoint, volumeFolderOnSecStorage, volumePath):
        if (not isfile(volumePath)):
            raise Exception(('Cannot find volume at %s' % volumePath))
        OvmStoragePool()._checkDirSizeForImage(secMountPoint, volumePath)
        volumeFolderOnSecStorage = volumeFolderOnSecStorage.lstrip('/')
        destPath = join(secMountPoint, volumeFolderOnSecStorage)
        if (destPath == secMountPoint):
            raise Exception(('volume path equals to root of secondary storage(%s)' % destPath))
        if exists(destPath):
            logger.warning(OvmStoragePool.copyVolume, ('%s already exists, delete it first' % destPath))
            doCmd(['rm', '-rf', destPath])
        os.makedirs(destPath)
        newName = (get_uuid() + '.raw')
        destName = join(destPath, newName)
        doCmd(['cp', volumePath, destName])
        return destName

    def copyToPrimary(secMountPoint, volumeFolderOnSecStorage, volumePath, primaryMountPath):
        srcPath = join(secMountPoint, volumeFolderOnSecStorage.lstrip('/'), volumePath.lstrip('/'))
        if (not srcPath.endswith('.raw')):
            srcPath = (srcPath + '.raw')
        if (not isfile(srcPath)):
            raise Exception(('Cannot find volume at %s' % srcPath))
        if (not exists(primaryMountPath)):
            raise Exception(('Primary storage(%s) seems to have gone' % primaryMountPath))
        OvmStoragePool()._checkDirSizeForImage(primaryMountPath, srcPath)
        destPath = join(primaryMountPath, 'sharedDisk')
        newName = (get_uuid() + '.raw')
        destName = join(destPath, newName)
        doCmd(['cp', srcPath, destName])
        return destName
    secMountPoint = ''
    try:
        tmpUuid = get_uuid()
        secMountPoint = join('/var/cloud/', tmpUuid)
        OvmStoragePool()._mount(secStorageMountPath, secMountPoint)
        if toSec:
            resultPath = copyToSecStorage(secMountPoint, volumeFolderOnSecStorage, volumePath)
        else:
            sr = OvmStoragePool()._getSrByNameLable(storagePoolUuid)
            primaryStoragePath = sr.mountpoint
            resultPath = copyToPrimary(secMountPoint, volumeFolderOnSecStorage, volumePath, primaryStoragePath)
        OvmStoragePool()._umount(secMountPoint)
        volumeUuid = basename(resultPath).rstrip('.raw')
        rs = toGson({'installPath': volumeUuid, })
        return rs
    except Exception as e:
        try:
            if exists(secMountPoint):
                OvmStoragePool()._umount(secMountPoint)
        except Exception as e:
            logger.warning(OvmStoragePool.copyVolume, ('umount %s failed' % secMountPoint))
        errmsg = fmt_err_msg(e)
        logger.error(OvmStoragePool.copyVolume, errmsg)
        raise XmlRpcFault(toErrCode(OvmStoragePool, OvmStoragePool.copyVolume), errmsg)
