{
  assert(listener != null);
  int cols=getTileCols();
  int rows=getTileRows();
  nStartRow=nStartRow % rows;
  nStartCol=nStartCol % cols;
  int nPos=nStartRow * cols + nStartCol;
  int nUnits=rows * cols;
  int nStartPos=nPos;
  int nRow;
  int nCol;
  do {
    nRow=nPos / cols;
    nCol=nPos % cols;
    if (snapshot[nRow][nCol]) {
      int nEndCol=nCol;
      for (; nEndCol < cols && snapshot[nRow][nEndCol]; nEndCol++) {
        snapshot[nRow][nEndCol]=false;
      }
      Rectangle rect=new Rectangle();
      rect.y=nRow * tileHeight;
      rect.height=tileHeight;
      rect.x=nCol * tileWidth;
      rect.width=(nEndCol - nCol) * tileWidth;
      if (!listener.onTileChange(rect,nRow,nEndCol))       break;
    }
    nPos=(nPos + 1) % nUnits;
  }
 while (nPos != nStartPos);
}
