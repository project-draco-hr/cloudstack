{
  assert(listener != null);
  int cols=getTileCols();
  int rows=getTileRows();
  RegionClassifier classifier=new RegionClassifier();
  int left, top, right, bottom;
synchronized (this) {
    for (int i=0; i < rows; i++) {
      top=i * tileHeight;
      bottom=Math.min(top + tileHeight,trackHeight);
      for (int j=0; j < cols; j++) {
        left=j * tileWidth;
        right=Math.min(left + tileWidth,trackWidth);
        if (snapshot[i][j]) {
          snapshot[i][j]=false;
          classifier.add(new Rectangle(left,top,right - left,bottom - top));
        }
      }
    }
  }
  listener.onRegionChange(classifier.getRegionList());
}
