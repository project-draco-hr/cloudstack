{
  PropertySpec pSpec=new PropertySpec();
  pSpec.setType("VirtualMachine");
  pSpec.getPathSet().addAll(Arrays.asList(propertyPaths));
  TraversalSpec dc2VmFolderTraversal=new TraversalSpec();
  dc2VmFolderTraversal.setType("Datacenter");
  dc2VmFolderTraversal.setPath("vmFolder");
  dc2VmFolderTraversal.setName("dc2VmFolderTraversal");
  SelectionSpec recurseFolders=new SelectionSpec();
  recurseFolders.setName("folder2childEntity");
  TraversalSpec folder2childEntity=new TraversalSpec();
  folder2childEntity.setType("Folder");
  folder2childEntity.setPath("childEntity");
  folder2childEntity.setName(recurseFolders.getName());
  folder2childEntity.getSelectSet().add(recurseFolders);
  dc2VmFolderTraversal.getSelectSet().add(folder2childEntity);
  ObjectSpec oSpec=new ObjectSpec();
  oSpec.setObj(_mor);
  oSpec.setSkip(Boolean.TRUE);
  oSpec.getSelectSet().add(dc2VmFolderTraversal);
  PropertyFilterSpec pfSpec=new PropertyFilterSpec();
  pfSpec.getPropSet().add(pSpec);
  pfSpec.getObjectSet().add(oSpec);
  List<PropertyFilterSpec> pfSpecArr=new ArrayList<PropertyFilterSpec>();
  pfSpecArr.add(pfSpec);
  return _context.getService().retrieveProperties(_context.getPropertyCollector(),pfSpecArr);
}
