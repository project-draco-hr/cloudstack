{
  @SuppressWarnings("rawtype") Collection<GenericDao> daos=ComponentContext.getApplicationContext().getBeansOfType(GenericDao.class).values();
  Collection<Manager> mgrs=ComponentContext.getApplicationContext().getBeansOfType(Manager.class).values();
  Collection<Adapter> adapters=ComponentContext.getApplicationContext().getBeansOfType(Adapter.class).values();
  Map<String,Object> params=new HashMap<String,Object>();
  for (  GenericDao dao : daos) {
    try {
      s_logger.info("Configuring DAO: " + ComponentContext.getTargetClass(dao).getName());
      dao.configure(dao.getClass().getSimpleName(),params);
    }
 catch (    ConfigurationException e) {
      s_logger.error("Unable to configure DAO: " + dao.getClass().getSimpleName(),e);
      System.exit(1);
    }
  }
  List<String> avoidMap=new ArrayList<String>();
  for (  Manager manager : mgrs) {
    if (avoidMap.contains(manager.getName())) {
      s_logger.info("Skip manager: " + ComponentContext.getTargetClass(manager).getName() + " as it is already started");
      continue;
    }
    try {
      s_logger.info("Configuring manager: " + ComponentContext.getTargetClass(manager).getName() + "...");
      manager.configure(manager.getClass().getSimpleName(),params);
      avoidMap.add(manager.getName());
    }
 catch (    Exception e) {
      s_logger.error("Problems to start manager:" + ComponentContext.getTargetClass(manager).getName(),e);
      System.exit(1);
    }
  }
  for (  Adapter adapter : adapters) {
    if (avoidMap.contains(adapter.getName())) {
      s_logger.info("Skip adapter: " + ComponentContext.getTargetClass(adapter).getName() + " as it is already started");
      continue;
    }
    try {
      s_logger.info("Configuring adapter: " + ComponentContext.getTargetClass(adapter).getName() + "...");
      adapter.configure(adapter.getName(),params);
      avoidMap.add(adapter.getName());
    }
 catch (    Exception e) {
      s_logger.error("Problems to start adapter:" + ComponentContext.getTargetClass(adapter).getName(),e);
      System.exit(1);
    }
  }
  avoidMap.clear();
  for (  Manager manager : mgrs) {
    if (avoidMap.contains(manager.getName())) {
      s_logger.info("Skip start on manager: " + ComponentContext.getTargetClass(manager).getName() + " as it is already started");
      continue;
    }
    try {
      s_logger.info("Starting manager: " + ComponentContext.getTargetClass(manager).getName() + "...");
      manager.start();
      avoidMap.add(manager.getName());
    }
 catch (    Exception e) {
      s_logger.error("Problems to start manager:" + ComponentContext.getTargetClass(manager).getName(),e);
      System.exit(1);
    }
  }
  for (  Adapter adapter : adapters) {
    if (avoidMap.contains(adapter.getName())) {
      s_logger.info("Skip start on adapter: " + ComponentContext.getTargetClass(adapter).getName() + " as it is already started");
      continue;
    }
    try {
      s_logger.info("Startinging adapter: " + ComponentContext.getTargetClass(adapter).getName() + "...");
      adapter.start();
      avoidMap.add(adapter.getName());
    }
 catch (    Exception e) {
      s_logger.error("Problems to start adapter:" + ComponentContext.getTargetClass(adapter).getName(),e);
      System.exit(1);
    }
  }
}
