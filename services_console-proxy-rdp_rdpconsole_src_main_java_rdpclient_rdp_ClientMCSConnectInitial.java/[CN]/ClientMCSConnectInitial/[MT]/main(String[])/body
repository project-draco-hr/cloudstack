{
  System.setProperty("streamer.Element.debug","true");
  byte[] packet=new byte[]{(byte)0x03,(byte)0x00,(byte)0x01,(byte)0x78,(byte)0x02,(byte)0xf0,(byte)0x80,(byte)0x7f,(byte)0x65,(byte)0x82,(byte)0x01,(byte)0x6c,(byte)0x04,(byte)0x01,(byte)0x01,(byte)0x04,(byte)0x01,(byte)0x01,(byte)0x01,(byte)0x01,(byte)0xff,(byte)0x30,(byte)0x1a,(byte)0x02,(byte)0x01,(byte)0x22,(byte)0x02,(byte)0x01,(byte)0x02,(byte)0x02,(byte)0x01,(byte)0x00,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x02,(byte)0x01,(byte)0x00,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x02,(byte)0x03,(byte)0x00,(byte)0xff,(byte)0xff,(byte)0x02,(byte)0x01,(byte)0x02,(byte)0x30,(byte)0x19,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x02,(byte)0x01,(byte)0x00,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x02,(byte)0x02,(byte)0x04,(byte)0x20,(byte)0x02,(byte)0x01,(byte)0x02,(byte)0x30,(byte)0x1f,(byte)0x02,(byte)0x03,(byte)0x00,(byte)0xff,(byte)0xff,(byte)0x02,(byte)0x02,(byte)0xfc,(byte)0x17,(byte)0x02,(byte)0x03,(byte)0x00,(byte)0xff,(byte)0xff,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x02,(byte)0x01,(byte)0x00,(byte)0x02,(byte)0x01,(byte)0x01,(byte)0x02,(byte)0x03,(byte)0x00,(byte)0xff,(byte)0xff,(byte)0x02,(byte)0x01,(byte)0x02,(byte)0x04,(byte)0x82,(byte)0x01,(byte)0x07,(byte)0x00,(byte)0x05,(byte)0x00,(byte)0x14,(byte)0x7c,(byte)0x00,(byte)0x01,(byte)0x80,(byte)0xfe,(byte)0x00,(byte)0x08,(byte)0x00,(byte)0x10,(byte)0x00,(byte)0x01,(byte)0xc0,(byte)0x00,(byte)0x44,(byte)0x75,(byte)0x63,(byte)0x61,(byte)0x80,(byte)0xf0,(byte)0x01,(byte)0xc0,(byte)0xd8,(byte)0x00,(byte)0x04,(byte)0x00,(byte)0x08,(byte)0x00,(byte)0x00,(byte)0x04,(byte)0x00,(byte)0x03,(byte)0x01,(byte)0xca,(byte)0x03,(byte)0xaa,(byte)0x09,(byte)0x04,(byte)0x00,(byte)0x00,(byte)0x28,(byte)0x0a,(byte)0x00,(byte)0x00,(byte)0x61,(byte)0x00,(byte)0x70,(byte)0x00,(byte)0x6f,(byte)0x00,(byte)0x6c,(byte)0x00,(byte)0x6c,(byte)0x00,(byte)0x6f,(byte)0x00,(byte)0x33,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x01,(byte)0xca,(byte)0x01,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x10,(byte)0x00,(byte)0x07,(byte)0x00,(byte)0x01,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x01,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x04,(byte)0xc0,(byte)0x0c,(byte)0x00,(byte)0x0d,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x02,(byte)0xc0,(byte)0x0c,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x00};
  MockSource source=new MockSource("source",ByteBuffer.convertByteArraysToByteBuffers(new byte[]{1,2,3}));
  Element todo=new ClientMCSConnectInitial("ClientMCSConnectInitial");
  Element x224=new ClientX224DataPDU("x224");
  Element tpkt=new ClientTpkt("tpkt");
  Element sink=new MockSink("sink",ByteBuffer.convertByteArraysToByteBuffers(packet));
  Element mainSink=new MockSink("mainSink",ByteBuffer.convertByteArraysToByteBuffers(new byte[]{1,2,3}));
  Pipeline pipeline=new PipelineImpl("test");
  pipeline.add(source,todo,x224,tpkt,sink,mainSink);
  pipeline.link("source","ClientMCSConnectInitial","mainSink");
  pipeline.link("ClientMCSConnectInitial >" + OTOUT,"x224","tpkt","sink");
  pipeline.runMainLoop("source",STDOUT,false,false);
}
