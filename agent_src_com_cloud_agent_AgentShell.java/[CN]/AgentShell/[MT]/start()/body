{
  try {
    LogUtils.initLog4j("log4j-cloud.xml");
    boolean ipv6disabled=true;
    String ipv6=getProperty(null,"ipv6disabled");
    if (ipv6 != null) {
      ipv6disabled=Boolean.parseBoolean(ipv6);
    }
    boolean ipv6prefer=false;
    String ipv6p=getProperty(null,"ipv6prefer");
    if (ipv6p != null) {
      ipv6prefer=Boolean.parseBoolean(ipv6p);
    }
    if (ipv6disabled) {
      s_logger.info("Preferring IPv4 address family for agent connection");
      System.setProperty("java.net.preferIPv4Stack","true");
      if (ipv6prefer) {
        s_logger.info("ipv6prefer is set to true, but ipv6disabled is false. Not preferring IPv6 for agent connection");
      }
    }
 else {
      if (ipv6prefer) {
        s_logger.info("Preferring IPv6 address family for agent connection");
        System.setProperty("java.net.preferIPv6Addresses","true");
      }
 else {
        s_logger.info("Using default Java settings for IPv6 preference for agent connection");
      }
    }
    String instance=getProperty(null,"instance");
    if (instance == null) {
      if (Boolean.parseBoolean(getProperty(null,"developer"))) {
        instance=UUID.randomUUID().toString();
      }
 else {
        instance="";
      }
    }
 else {
      instance+=".";
    }
    String pidDir=getProperty(null,"piddir");
    final String run="agent." + instance + "pid";
    s_logger.debug("Checking to see if " + run + " exists.");
    ProcessUtil.pidCheck(pidDir,run);
    launchAgent();
    try {
      while (!_exit)       Thread.sleep(1000);
    }
 catch (    InterruptedException e) {
      s_logger.debug("[ignored] AgentShell was interupted.");
    }
  }
 catch (  final ConfigurationException e) {
    s_logger.error("Unable to start agent: " + e.getMessage());
    System.out.println("Unable to start agent: " + e.getMessage());
    System.exit(ExitStatus.Configuration.value());
  }
catch (  final Exception e) {
    s_logger.error("Unable to start agent: ",e);
    System.out.println("Unable to start agent: " + e.getMessage());
    System.exit(ExitStatus.Error.value());
  }
}
