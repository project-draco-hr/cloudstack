{
  String host=null;
  String workers=null;
  String port=null;
  String zone=null;
  String pod=null;
  String guid=null;
  for (  String param : args) {
    final String[] tokens=param.split("=");
    if (tokens.length != 2) {
      System.out.println("Invalid Parameter: " + param);
      continue;
    }
    final String paramName=tokens[0];
    final String paramValue=tokens[1];
    _cmdLineProperties.put(paramName,paramValue);
    if (paramName.equalsIgnoreCase("port")) {
      port=paramValue;
    }
 else     if (paramName.equalsIgnoreCase("threads") || paramName.equalsIgnoreCase("workers")) {
      workers=paramValue;
    }
 else     if (paramName.equalsIgnoreCase("host")) {
      host=paramValue;
    }
 else     if (paramName.equalsIgnoreCase("zone")) {
      zone=paramValue;
    }
 else     if (paramName.equalsIgnoreCase("pod")) {
      pod=paramValue;
    }
 else     if (paramName.equalsIgnoreCase("guid")) {
      guid=paramValue;
    }
 else     if (paramName.equalsIgnoreCase("eth1ip")) {
      _privateIp=paramValue;
    }
  }
  if (port == null) {
    port=getProperty(null,"port");
  }
  _port=NumberUtils.toInt(port,8250);
  _proxyPort=NumberUtils.toInt(getProperty(null,"consoleproxy.httpListenPort"),443);
  if (workers == null) {
    workers=getProperty(null,"workers");
  }
  _workers=NumberUtils.toInt(workers,5);
  if (host == null) {
    host=getProperty(null,"host");
  }
  if (host == null) {
    host="localhost";
  }
  _host=host;
  if (zone != null)   _zone=zone;
 else   _zone=getProperty(null,"zone");
  if (_zone == null || (_zone.startsWith("@") && _zone.endsWith("@"))) {
    _zone="default";
  }
  if (pod != null)   _pod=pod;
 else   _pod=getProperty(null,"pod");
  if (_pod == null || (_pod.startsWith("@") && _pod.endsWith("@"))) {
    _pod="default";
  }
  if (_host == null || (_host.startsWith("@") && _host.endsWith("@"))) {
    throw new ConfigurationException("Host is not configured correctly: " + _host);
  }
  final String retries=getProperty(null,"ping.retries");
  _pingRetries=NumbersUtil.parseInt(retries,5);
  String value=getProperty(null,"developer");
  boolean developer=Boolean.parseBoolean(value);
  if (guid != null)   _guid=guid;
 else   _guid=getProperty(null,"guid");
  if (_guid == null) {
    if (!developer) {
      throw new ConfigurationException("Unable to find the guid");
    }
    _guid=UUID.randomUUID().toString();
    _properties.setProperty("guid",_guid);
  }
  return true;
}
