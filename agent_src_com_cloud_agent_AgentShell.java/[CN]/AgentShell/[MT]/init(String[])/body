{
  File file=new File("/etc/cloudstack/agent/log4j-cloud.xml");
  if (!file.exists()) {
    file=PropertiesUtil.findConfigFile("log4j-cloud.xml");
  }
  DOMConfigurator.configureAndWatch(file.getAbsolutePath());
  s_logger.info("Agent started");
  final Class<?> c=this.getClass();
  _version=c.getPackage().getImplementationVersion();
  if (_version == null) {
    throw new CloudRuntimeException("Unable to find the implementation version of this agent");
  }
  s_logger.info("Implementation Version is " + _version);
  loadProperties();
  parseCommand(args);
  if (s_logger.isDebugEnabled()) {
    List<String> properties=Collections.list((Enumeration<String>)_properties.propertyNames());
    for (    String property : properties) {
      s_logger.debug("Found property: " + property);
    }
  }
  s_logger.info("Defaulting to using properties file for storage");
  _storage=new PropertiesStorage();
  _storage.configure("Storage",new HashMap<String,Object>());
  for (  Map.Entry<String,Object> cmdLineProp : getCmdLineProperties().entrySet()) {
    _properties.put(cmdLineProp.getKey(),cmdLineProp.getValue());
  }
  s_logger.info("Defaulting to the constant time backoff algorithm");
  _backoff=new ConstantTimeBackoff();
  _backoff.configure("ConstantTimeBackoff",new HashMap<String,Object>());
}
