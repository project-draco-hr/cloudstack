@attr(tags=['advanced', 'selfservice'])
def test_reservation_after_router_restart(self):
    guest_vm_cidr = u'10.1.1.0/29'
    update_response = Network.update(self.isolated_persistent_network, self.apiclient, id=self.isolated_persistent_network.id, guestvmcidr=guest_vm_cidr)
    self.assertEqual(guest_vm_cidr, update_response.cidr, 'cidr in response is not as expected')
    routers = Router.list(self.apiclient, networkid=self.isolated_persistent_network.id, listall=True)
    self.assertEqual(isinstance(routers, list), True, 'list router should return valid response')
    if (not routers):
        self.skipTest('Router list should not be empty, skipping test')
    Router.reboot(self.apiclient, routers[0].id)
    networks = Network.list(self.apiclient, id=self.isolated_persistent_network.id)
    self.assertEqual(isinstance(networks, list), True, 'list Networks should return valid response')
    self.assertEqual(networks[0].cidr, guest_vm_cidr, 'guestvmcidr should match after router reboot')
