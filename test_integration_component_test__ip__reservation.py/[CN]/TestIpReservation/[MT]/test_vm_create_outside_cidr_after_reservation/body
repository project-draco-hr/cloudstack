@attr(tags=['advanced'])
def test_vm_create_outside_cidr_after_reservation(self):
    ' Test create VM outside the range of reserved IPs\n        # steps\n        # 1. update guestvmcidr of persistent isolated network (LB through VR or\n        #    Netscaler\n        # 2. create another VM with ip outside guestvmcidr\n        '
    networkOffering = self.isolated_persistent_network_offering
    subnet = ('10.1.' + str(random.randrange(1, 254)))
    gateway = (subnet + '.1')
    resultSet = createIsolatedNetwork(self, networkOffering.id, gateway=gateway)
    if (resultSet[0] == FAIL):
        self.fail('Failed to create isolated network')
    else:
        isolated_network = resultSet[1]
    guest_vm_cidr = (subnet + '.0/29')
    isolated_network.update(self.apiclient, guestvmcidr=guest_vm_cidr)
    matchNetworkGuestVmCIDR(self, isolated_network.id, guest_vm_cidr)
    try:
        createVirtualMachine(self, network_id=self.isolated_network.id, ip_address=(subnet + '.9'))
        self.fail('vm should not be created ')
    except Exception as e:
        self.debug(('exception as IP is outside of guestvmcidr %s' % e))
    return
