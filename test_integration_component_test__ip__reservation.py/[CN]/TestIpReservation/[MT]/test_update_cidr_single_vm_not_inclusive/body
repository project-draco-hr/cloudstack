@attr(tags=['advanced'])
def test_update_cidr_single_vm_not_inclusive(self):
    ' Test reserving IP range in network such that existing VM is outside the range\n        # steps\n        # 1. Create vm in isolated network\n        # 2. Update guestvmcidr of network such that ip address of vm\n        #    is outside the given range\n        #\n        # validation\n        # 1. Network updation with this new range should fail'
    subnet = ('10.1.' + str(random.randrange(1, 254)))
    gateway = (subnet + '.1')
    resultSet = createIsolatedNetwork(self, self.isolated_network_offering.id, gateway=gateway)
    if (resultSet[0] == FAIL):
        self.fail('Failed to create isolated network')
    else:
        isolated_network = resultSet[1]
    guest_vm_cidr = (subnet + '.0/29')
    try:
        createVirtualMachine(self, network_id=isolated_network.id, ip_address=(subnet + '.9'))
    except Exception as e:
        self.fail(('VM creation failed: %s' % e))
    with self.assertRaises(Exception):
        isolated_network.update(self.apiclient, guestvmcidr=guest_vm_cidr)
    return
