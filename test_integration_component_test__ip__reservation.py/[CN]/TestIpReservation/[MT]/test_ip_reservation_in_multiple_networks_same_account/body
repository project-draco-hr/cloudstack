@attr(tags=['advanced'])
def test_ip_reservation_in_multiple_networks_same_account(self):
    ' Test IP reservation in multiple networks created in same account\n        # steps\n        # 1. Create two isolated networks with user defined cidr in same account\n        # Test below conditions for both the networks in the account\n        # 2. Create vm in persistent isolated network with ip in guestvmcidr\n        # 3. Update guestvmcidr\n        # 4. Create another VM\n        #\n        # validation\n        # 1. Guest vm cidr should be successfully updated with correct value\n        # 2. Existing guest vm ip should not be changed after reservation\n        # 3. Newly created VM should get ip in guestvmcidr'
    account_1 = Account.create(self.apiclient, self.testData['account'], domainid=self.domain.id)
    self.cleanup.append(account_1)
    random_subnet = str(random.randrange(1, 254))
    gateway = (('10.1.' + random_subnet) + '.1')
    isolated_network_1 = Network.create(self.apiclient, self.testData['isolated_network'], networkofferingid=self.isolated_network_offering.id, accountid=account_1.name, domainid=self.domain.id, zoneid=self.zone.id, gateway=gateway, netmask='255.255.255.0')
    guest_vm_cidr = (('10.1.' + random_subnet) + '.0/29')
    try:
        virtual_machine_1 = VirtualMachine.create(self.apiclient, self.testData['virtual_machine'], networkids=isolated_network_1.id, serviceofferingid=self.service_offering.id, accountid=account_1.name, domainid=self.domain.id, ipaddress=(('10.1.' + random_subnet) + '.3'))
    except Exception as e:
        self.fail(('VM creation failed: %s' % e))
    isolated_network_1.update(self.apiclient, guestvmcidr=guest_vm_cidr)
    matchNetworkGuestVmCIDR(self, isolated_network_1.id, guest_vm_cidr)
    vms = VirtualMachine.list(self.apiclient, id=virtual_machine_1.id)
    self.assertEqual(validateList(vms)[0], PASS, 'vm list validation failed')
    self.assertEqual(vms[0].nic[0].ipaddress, virtual_machine_1.ipaddress, 'VM IP should not change after reservation')
    try:
        virtual_machine_2 = VirtualMachine.create(self.apiclient, self.testData['virtual_machine'], networkids=isolated_network_1.id, serviceofferingid=self.service_offering.id, accountid=account_1.name, domainid=self.domain.id)
        if (netaddr.IPAddress(virtual_machine_2.ipaddress) not in netaddr.IPNetwork(guest_vm_cidr)):
            self.fail("Newly created VM doesn't get IP from reserverd CIDR")
    except Exception as e:
        self.fail(('VM creation failed, cannot validate the condition: %s' % e))
    random_subnet = str(random.randrange(1, 254))
    gateway = (('10.1.' + random_subnet) + '.1')
    isolated_network_2 = Network.create(self.apiclient, self.testData['isolated_network'], networkofferingid=self.isolated_network_offering.id, accountid=account_1.name, domainid=self.domain.id, zoneid=self.zone.id, gateway=gateway, netmask='255.255.255.0')
    guest_vm_cidr = (('10.1.' + random_subnet) + '.0/29')
    try:
        virtual_machine_3 = VirtualMachine.create(self.apiclient, self.testData['virtual_machine'], networkids=isolated_network_2.id, serviceofferingid=self.service_offering.id, accountid=account_1.name, domainid=self.domain.id, ipaddress=(('10.1.' + random_subnet) + '.3'))
    except Exception as e:
        self.fail(('VM creation failed: %s' % e))
    isolated_network_2.update(self.apiclient, guestvmcidr=guest_vm_cidr)
    matchNetworkGuestVmCIDR(self, isolated_network_2.id, guest_vm_cidr)
    vms = VirtualMachine.list(self.apiclient, id=virtual_machine_3.id)
    self.assertEqual(validateList(vms)[0], PASS, 'vm list validation failed')
    self.assertEqual(vms[0].nic[0].ipaddress, virtual_machine_3.ipaddress, 'VM IP should not change after reservation')
    try:
        virtual_machine_4 = VirtualMachine.create(self.apiclient, self.testData['virtual_machine'], networkids=isolated_network_2.id, serviceofferingid=self.service_offering.id, accountid=account_1.name, domainid=self.domain.id)
        if (netaddr.IPAddress(virtual_machine_4.ipaddress) not in netaddr.IPNetwork(guest_vm_cidr)):
            self.fail("Newly created VM doesn't get IP from reserverd CIDR")
    except Exception as e:
        self.fail(('VM creation failed, cannot validate the condition: %s' % e))
    return
