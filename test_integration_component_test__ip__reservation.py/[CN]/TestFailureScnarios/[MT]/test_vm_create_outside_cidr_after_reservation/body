@attr(tags=['advanced', 'selfservice'])
def test_vm_create_outside_cidr_after_reservation(self):
    networkOffering = self.isolated_persistent_network_offering
    subnet = ('10.1.' + str(random.randrange(1, 254)))
    gateway = (subnet + '.1')
    isolated_persistent_network = None
    resultSet = createIsolatedNetwork(self, networkOffering.id, gateway=gateway)
    if (resultSet[0] == FAIL):
        self.fail('Failed to create isolated network')
    else:
        isolated_persistent_network = resultSet[1]
    guest_vm_cidr = (subnet + '.0/29')
    update_response = Network.update(isolated_persistent_network, self.apiclient, id=isolated_persistent_network.id, guestvmcidr=guest_vm_cidr)
    self.assertEqual(guest_vm_cidr, update_response.cidr, 'cidr in response is not as expected')
    with self.assertRaises(Exception):
        VirtualMachine.create(self.apiclient, self.testData['virtual_machine'], networkids=isolated_persistent_network.id, serviceofferingid=self.service_offering.id, accountid=self.account.name, domainid=self.domain.id, ipaddress='10.1.1.9')
    return
