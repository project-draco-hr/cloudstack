{
  return Transaction.execute(TransactionLegacy.USAGE_DB,new TransactionCallback<List<QuotaCreditsVO>>(){
    @Override public List<QuotaCreditsVO> doInTransaction(    final TransactionStatus status){
      if ((startDate != null) && (endDate != null) && startDate.before(endDate)) {
        Filter filter=new Filter(QuotaCreditsVO.class,"updatedOn",true,0L,Long.MAX_VALUE);
        QueryBuilder<QuotaCreditsVO> qb=QueryBuilder.create(QuotaCreditsVO.class);
        qb.and(qb.entity().getAccountId(),SearchCriteria.Op.EQ,accountId);
        qb.and(qb.entity().getDomainId(),SearchCriteria.Op.EQ,domainId);
        qb.and(qb.entity().getUpdatedOn(),SearchCriteria.Op.BETWEEN,startDate,endDate);
        return search(qb.create(),filter);
      }
 else {
        return Collections.<QuotaCreditsVO>emptyList();
      }
    }
  }
);
}
