{
  UserVmService userVmService=Mockito.mock(UserVmService.class);
  UserVm userVm=Mockito.mock(UserVm.class);
  try {
    Mockito.when(userVmService.upgradeVirtualMachine(scaleVMCmd)).thenReturn(userVm);
  }
 catch (  Exception e) {
    Assert.fail("Received exception when success expected " + e.getMessage());
  }
  ResponseGenerator responseGenerator=Mockito.mock(ResponseGenerator.class);
  scaleVMCmd._responseGenerator=responseGenerator;
  UserVmResponse userVmResponse=Mockito.mock(UserVmResponse.class);
  List<UserVmResponse> list=new LinkedList<UserVmResponse>();
  list.add(userVmResponse);
  Mockito.when(responseGenerator.createUserVmResponse(ResponseView.Restricted,"virtualmachine",userVm)).thenReturn(list);
  scaleVMCmd._userVmService=userVmService;
  scaleVMCmd.execute();
}
