{
  String url=server + "?command=listEvents&page=1&pagesize=100&&account=" + _account.get();
  s_logger.info("Getting events for the account " + _account.get());
  HttpClient client=new HttpClient();
  HttpMethod method=new GetMethod(url);
  int responseCode=client.executeMethod(method);
  s_logger.info("get events response code: " + responseCode);
  if (responseCode == 200) {
    InputStream is=method.getResponseBodyAsStream();
    Map<String,List<String>> eventDescriptions=getMultipleValuesFromXML(is,new String[]{"description"});
    List<String> descriptionText=eventDescriptions.get("description");
    if (descriptionText == null) {
      s_logger.info("no events retrieved...");
    }
 else {
      for (      String text : descriptionText) {
        s_logger.info("event: " + text);
      }
    }
  }
 else {
    s_logger.error("list events failed with error code: " + responseCode + ". Following URL was sent: "+ url);
    return responseCode;
  }
  DateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd");
  Date currentDate=new Date();
  String endDate=dateFormat.format(currentDate);
  s_logger.info("Generating usage records from September 1st till " + endDate);
  url=server + "?command=generateUsageRecords&startdate=2009-09-01&enddate=" + endDate;
  client=new HttpClient();
  method=new GetMethod(url);
  responseCode=client.executeMethod(method);
  s_logger.info("generate usage records response code: " + responseCode);
  if (responseCode == 200) {
    InputStream is=method.getResponseBodyAsStream();
    Map<String,String> successStr=getSingleValueFromXML(is,new String[]{"success"});
    s_logger.info("successfully generated usage records? " + successStr.get("success"));
  }
 else {
    s_logger.error("generate usage records failed with error code: " + responseCode + ". Following URL was sent: "+ url);
    return responseCode;
  }
  try {
    Thread.sleep(120000);
  }
 catch (  Exception ex) {
    s_logger.error(ex);
  }
  url=server + "?command=listUsageRecords&startdate=2009-09-01&enddate=" + endDate+ "&account="+ _account.get()+ "&domaindid=1";
  s_logger.info("Getting all usage records with request: " + url);
  client=new HttpClient();
  method=new GetMethod(url);
  responseCode=client.executeMethod(method);
  s_logger.info("get usage records response code: " + responseCode);
  if (responseCode == 200) {
    InputStream is=method.getResponseBodyAsStream();
    Map<String,List<String>> usageRecValues=getMultipleValuesFromXML(is,new String[]{"description","usage"});
    if ((usageRecValues.containsKey("description") == true) && (usageRecValues.containsKey("usage") == true)) {
      List<String> descriptions=usageRecValues.get("description");
      List<String> usages=usageRecValues.get("usage");
      for (int i=0; i < descriptions.size(); i++) {
        String desc=descriptions.get(i);
        String usage="";
        if (usages != null) {
          if (i < usages.size()) {
            usage=", usage: " + usages.get(i);
          }
        }
        s_logger.info("desc: " + desc + usage);
      }
    }
  }
 else {
    s_logger.error("list usage records failed with error code: " + responseCode + ". Following URL was sent: "+ url);
    return responseCode;
  }
  return responseCode;
}
