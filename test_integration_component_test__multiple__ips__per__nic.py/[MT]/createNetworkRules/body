def createNetworkRules(self, virtual_machine, network, vmguestip, networktype, ruletype):
    ' Acquire public ip in the given network, open firewall if required and\n        create NAT rule for the public ip to the given guest vm ip address'
    try:
        public_ip = PublicIPAddress.create(self.api_client, accountid=self.account.name, zoneid=self.zone.id, domainid=self.account.domainid, networkid=network.id, vpcid=(network.vpcid if (networktype == VPC_NETWORK) else None))
        if (networktype != VPC_NETWORK):
            FireWallRule.create(self.apiclient, ipaddressid=public_ip.ipaddress.id, protocol='TCP', cidrlist=[self.services['fwrule']['cidr']], startport=self.services['fwrule']['startport'], endport=self.services['fwrule']['endport'])
        if (ruletype == 'nat'):
            NATRule.create(self.api_client, virtual_machine, self.services['natrule'], ipaddressid=public_ip.ipaddress.id, networkid=network.id, vmguestip=vmguestip)
        elif (ruletype == 'staticnat'):
            StaticNATRule.enable(self.apiclient, public_ip.ipaddress.id, virtual_machine.id, network.id, vmguestip=vmguestip)
    except Exception as e:
        self.debug(('Exception occured while creating network rules: %s' % e))
        return FAIL
    return PASS
