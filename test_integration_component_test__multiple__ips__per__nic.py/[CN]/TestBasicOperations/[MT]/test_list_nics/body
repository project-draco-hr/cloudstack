@data(ISOLATED_NETWORK, SHARED_NETWORK, VPC_NETWORK)
@attr(tags=['advanced'])
def test_list_nics(self, value):
    'Test listing nics associated with the ip address'
    self.account = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id)
    self.cleanup.append(self.account)
    network = createNetwork(self, value)
    virtual_machine = VirtualMachine.create(self.apiclient, self.services['virtual_machine'], networkids=[network.id], serviceofferingid=self.service_offering.id, accountid=self.account.name, domainid=self.account.domainid)
    NIC.addIp(self.apiclient, id=virtual_machine.nic[0].id)
    try:
        nics = NIC.list(self.apiclient)
        self.fail(('Listing NICs without passign VM id succeeded, it should have failed, list is %s' % nics))
    except Exception as e:
        self.debug('Listing NICs without passing virtual machine id failed as expected')
    try:
        NIC.list(self.apiclient, virtualmachineid=virtual_machine.id)
    except Exception as e:
        self.fail(('Listing NICs for virtual machine %s failed with Exception %s' % (virtual_machine.id, e)))
    NIC.list(self.apiclient, virtualmachineid=virtual_machine.id, nicid=virtual_machine.nic[0].id)
    try:
        nics = NIC.list(self.apiclient, virtualmachineid=(virtual_machine.id + random_gen()), nicid=virtual_machine.nic[0].id)
        self.fail('Listing NICs with wrong virtual machine id and right nic id succeeded, should have failed')
    except Exception as e:
        self.debug(('Listing NICs with wrong virtual machine id and right nic failed as expected with Exception %s' % e))
    try:
        nics = NIC.list(self.apiclient, virtualmachineid=virtual_machine.id, nicid=(virtual_machine.nic[0].id + random_gen()))
        self.fail('Listing NICs with correct virtual machine id but wrong nic id succeeded, should have failed')
    except Exception as e:
        self.debug(('Listing NICs with correct virtual machine id but wrong nic id failed as expected with Exception %s' % e))
    try:
        nics = NIC.list(self.apiclient, virtualmachineid=(virtual_machine.id + random_gen()), nicid=(virtual_machine.nic[0].id + random_gen()))
        self.fail('Listing NICs with wrong virtual machine id and wrong nic id succeeded, should have failed')
    except Exception as e:
        self.debug(('Listing NICs with wrong virtual machine id and wrong nic id failed as expected with Exception %s' % e))
    return
