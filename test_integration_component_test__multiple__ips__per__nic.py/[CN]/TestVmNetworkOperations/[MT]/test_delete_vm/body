@data(ISOLATED_NETWORK, SHARED_NETWORK, VPC_NETWORK)
@attr(tags=['advanced'])
def test_delete_vm(self, value):
    ' Test delete VM and verify network rules are cleaned up'
    if ((value == VPC_NETWORK) and (self.hypervisor == 'hyperv')):
        self.skipTest('VPC is not supported on Hyper-V')
    self.account = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id)
    self.cleanup.append(self.account)
    network = createNetwork(self, value)
    virtual_machine = VirtualMachine.create(self.apiclient, self.services['virtual_machine'], networkids=[network.id], serviceofferingid=self.service_offering.id, accountid=self.account.name, domainid=self.account.domainid)
    ipaddress_1 = NIC.addIp(self.apiclient, id=virtual_machine.nic[0].id)
    ipaddress_2 = NIC.addIp(self.apiclient, id=virtual_machine.nic[0].id)
    public_ip_1 = PublicIPAddress.create(self.api_client, accountid=self.account.name, zoneid=self.zone.id, domainid=self.account.domainid, networkid=network.id, vpcid=(network.vpcid if (value == VPC_NETWORK) else None))
    public_ip_2 = PublicIPAddress.create(self.api_client, accountid=self.account.name, zoneid=self.zone.id, domainid=self.account.domainid, networkid=network.id, vpcid=(network.vpcid if (value == VPC_NETWORK) else None))
    if (value != VPC_NETWORK):
        FireWallRule.create(self.apiclient, ipaddressid=public_ip_1.ipaddress.id, protocol='TCP', cidrlist=[self.services['fwrule']['cidr']], startport=self.services['fwrule']['startport'], endport=self.services['fwrule']['endport'])
    natrule = NATRule.create(self.api_client, virtual_machine, self.services['natrule'], ipaddressid=public_ip_1.ipaddress.id, networkid=network.id, vmguestip=ipaddress_1.ipaddress)
    StaticNATRule.enable(self.apiclient, public_ip_2.ipaddress.id, virtual_machine.id, network.id, vmguestip=ipaddress_2.ipaddress)
    virtual_machine.delete(self.apiclient, expunge=True)
    retriesCount = 20
    while True:
        vms = VirtualMachine.list(self.apiclient, id=virtual_machine.id)
        if (vms is None):
            break
        elif (retriesCount == 0):
            self.fail('Failed to expunge vm even after 20 minutes')
        time.sleep(60)
        retriesCount -= 1
    with self.assertRaises(Exception):
        NATRule.list(self.apiclient, id=natrule.id, listall=True)
    self.VerifyStaticNatForPublicIp(public_ip_2.ipaddress.id, False)
    return
