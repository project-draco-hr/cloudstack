{
  if (registered.contains(item))   return false;
  String[] order=new String[]{};
  Set<String> exclude=new HashSet<String>();
  if (orderConfigKeyObj != null) {
    Object value=orderConfigKeyObj.value();
    if (value != null && value.toString().trim().length() > 0) {
      order=value.toString().trim().split("\\s*,\\s*");
    }
  }
  if (excludeKeyObj != null) {
    Object value=excludeKeyObj.value();
    if (value != null && value.toString().trim().length() > 0) {
      for (      String e : value.toString().trim().split("\\s*,\\s*")) {
        exclude.add(e);
      }
    }
  }
  String name=RegistryUtils.getName(item);
  if (name != null && exclude.size() > 0 && exclude.contains(name)) {
    return false;
  }
  if (name == null && order.length > 0) {
    throw new RuntimeException("getName() is null for [" + item + "]");
  }
  int i=0;
  for (  String orderTest : order) {
    if (orderTest.equals(name)) {
      registered.add(i,item);
      i=-1;
      break;
    }
    if (registered.size() <= i) {
      break;
    }
    if (RegistryUtils.getName(registered.get(i)).equals(orderTest)) {
      i++;
    }
  }
  if (i != -1) {
    registered.add(item);
  }
  log.debug("Registering extension [{}] in [{}]",name,this.name);
  return true;
}
