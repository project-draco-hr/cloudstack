@attr(tags=['publiciprange', 'dedicate'])
def test_createPublicIpRange(self):
    'Test create public IP range\n        '
    self.debug('Creating Public IP range')
    self.public_ip_range = PublicIpRange.create(self.api_client, self.services)
    list_public_ip_range_response = PublicIpRange.list(self.apiclient, id=self.public_ip_range.vlan.id)
    self.debug(('Verify listPublicIpRanges response for public ip ranges: %s' % self.public_ip_range.vlan.id))
    self.assertEqual(isinstance(list_public_ip_range_response, list), True, 'Check for list Public IP range response')
    public_ip_response = list_public_ip_range_response[0]
    self.assertEqual(public_ip_response.id, self.public_ip_range.vlan.id, 'Check public ip range response id is in listVlanIpRanges')
    self.debug('Dedicating Public IP range')
    self.debug(('Vlan id %s' % self.public_ip_range.vlan.id))
    self.debug(('Zone id %s' % self.zone.id))
    self.debug(('Account name %s' % self.account.account.name))
    self.debug(('Domain id %s' % self.account.account.domainid))
    dedicate_public_ip_range_response = PublicIpRange.dedicate(self.apiclient, self.public_ip_range.vlan.id, zoneid=self.zone.id, account=self.account.account.name, domainid=self.account.account.domainid)
    return
