{
  String filterName=filter.getName();
  String[] valueSet=filter.getValueSet();
  if (filterName.equalsIgnoreCase("availability-zone"))   return containsString(vol.getZoneName(),valueSet);
 else   if (filterName.equalsIgnoreCase("create-time"))   return containsTime(vol.getCreated(),valueSet);
 else   if (filterName.equalsIgnoreCase("size"))   return containsLong(vol.getSize(),valueSet);
 else   if (filterName.equalsIgnoreCase("snapshot-id"))   return containsString(String.valueOf(vol.getSnapshotId()),valueSet);
 else   if (filterName.equalsIgnoreCase("status"))   return containsString(vol.getState(),valueSet);
 else   if (filterName.equalsIgnoreCase("volume-id"))   return containsString(vol.getId().toString(),valueSet);
 else   if (filterName.equalsIgnoreCase("attachment.attach-time")) {
    if (vol.getAttached() != null)     return containsTime(vol.getAttached(),valueSet);
 else     if (vol.getInstanceId() != null)     return containsTime(vol.getCreated(),valueSet);
 else     return false;
  }
 else   if (filterName.equalsIgnoreCase("attachment.device"))   return containsDevice(vol.getDeviceId(),valueSet);
 else   if (filterName.equalsIgnoreCase("attachment.instance-id"))   return containsString(String.valueOf(vol.getInstanceId()),valueSet);
 else   if (filterName.equalsIgnoreCase("attachment.status")) {
    return containsString(vol.getAttachmentState(),valueSet);
  }
 else   if (filterName.equalsIgnoreCase("tag-key")) {
    EC2TagKeyValue[] tagSet=vol.getResourceTags();
    for (    EC2TagKeyValue tag : tagSet)     if (containsString(tag.getKey(),valueSet))     return true;
    return false;
  }
 else   if (filterName.equalsIgnoreCase("tag-value")) {
    EC2TagKeyValue[] tagSet=vol.getResourceTags();
    for (    EC2TagKeyValue tag : tagSet) {
      if (tag.getValue() == null) {
        if (containsEmptyValue(valueSet))         return true;
      }
 else {
        if (containsString(tag.getValue(),valueSet))         return true;
      }
    }
    return false;
  }
 else   return false;
}
