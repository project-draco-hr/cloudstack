def startMarvin(self):
    '\n        @Name : startMarvin\n        @Desc : Initializes the Marvin\n                creates the test Client\n                creates the runlogger for logging\n                Parses the config and creates a parsedconfig\n                Creates a debugstream for tc debug log\n        '
    try:
        if self.__deployDcFlag:
            print '\n***Step1 :Deploy Flag is Enabled, will deployDC****'
            obj_marvininit = MarvinInit(self.__configFile, self.__deployDcFlag, 'DeployDc', self.__zoneForTests)
            if ((not obj_marvininit) or (obj_marvininit.init() != SUCCESS)):
                return FAILED
        print '\n====Now Start Running Test Suites===='
        if (len(self.conf.testNames) == 0):
            if (self.conf.workingDir == ''):
                print '\n==== No Test Suites are provided, please check ===='
                return FAILED
        elif (self.conf.workingDir != ''):
            test_names = self.conf.workingDir
        else:
            test_names = self.conf.testNames
        for suites in test_names:
            if os.path.isdir(suites):
                self.__runSuites(suites)
            if os.path.isfile(suites):
                self.__runSuite(suites)
        return SUCCESS
    except Exception as e:
        print ('Exception Occurred under startMarvin: %s' % GetDetailExceptionInfo(e))
        return FAILED
