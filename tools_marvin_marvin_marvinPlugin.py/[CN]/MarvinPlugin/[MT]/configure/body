def configure(self, options, config):
    self.enabled = 1
    self.enableOpt = '--with-marvin'
    self.logformat = logging.Formatter('%(asctime)s - %(levelname)s - %(name)s - %(message)s')
    if options.debug_log:
        self.logger = logging.getLogger('NoseTestExecuteEngine')
        self.debug_stream = logging.FileHandler(options.debug_log)
        self.debug_stream.setFormatter(self.logformat)
        self.logger.addHandler(self.debug_stream)
        self.logger.setLevel(logging.DEBUG)
    if options.result_log:
        ch = logging.StreamHandler()
        ch.setLevel(logging.ERROR)
        ch.setFormatter(self.logformat)
        self.logger.addHandler(ch)
        self.result_stream = open(options.result_log, 'w')
    else:
        self.result_stream = sys.stdout
    deploy = deployDataCenter.deployDataCenters(options.config)
    (deploy.loadCfg() if options.load else deploy.deploy())
    self.setClient(deploy.testClient)
    cfg = nose.config.Config()
    cfg.logStream = self.result_stream
    cfg.debugLog = self.debug_stream
    self.testrunner = nose.core.TextTestRunner(stream=self.result_stream, descriptions=True, verbosity=2, config=config)
