import os, sys, subprocess, socket, fcntl, struct
from socket import gethostname
import errno
from socket import error as socket_error
from xml.dom.minidom import parseString
from xmlrpclib import ServerProxy, Error
master = '192.168.1.161'
port = 8899
user = 'oracle'
password = 'test123'
auth = ('%s:%s' % (user, password))
server = getCon(auth, 'localhost', port)
mserver = getCon(auth, master, port)
poolNode = True
interface = 'c0a80100'
role = 'xen,utility'
hostname = gethostname()
ip = get_ip_address(interface)
poolMembers = []
xserver = server
poolCount = 0
try:
    print server.discover_pool_filesystem()
    print 
    print server.discover_server_pool()
    poolDom = parseString(server.discover_server_pool())
    for node in poolDom.getElementsByTagName('Server_Pool'):
        id = node.getElementsByTagName('Unique_Id')[0].firstChild.nodeValue
        alias = node.getElementsByTagName('Pool_Alias')[0].firstChild.nodeValue
        mvip = node.getElementsByTagName('Master_Virtual_Ip')[0].firstChild.nodeValue
        print ('pool: %s, %s, %s' % (id, mvip, alias))
        members = node.getElementsByTagName('Member')
        for member in members:
            poolCount = (poolCount + 1)
            mip = member.getElementsByTagName('Registered_IP')[0].firstChild.nodeValue
            print ('member: %s' % mip)
            if (mip == ip):
                pooled = True
            else:
                poolMembers.append(mip)
except Error as v:
    print 'ERROR', v
