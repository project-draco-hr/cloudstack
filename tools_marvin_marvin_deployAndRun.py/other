import deployDataCenter
import TestCaseExecuteEngine
import NoseTestExecuteEngine
from optparse import OptionParser
import os
if (__name__ == '__main__'):
    parser = OptionParser()
    parser.add_option('-c', '--config', action='store', default='./datacenterCfg', dest='config', help='the path where the json config file generated, by default is ./datacenterCfg')
    parser.add_option('-d', '--directory', dest='testCaseFolder', help='the test case directory')
    parser.add_option('-r', '--result', dest='result', help='test result log file')
    parser.add_option('-t', '--client', dest='testcaselog', help='test case log file')
    parser.add_option('-l', '--load', dest='load', action='store_true', help='only load config, do not deploy, it will only run testcase')
    parser.add_option('-f', '--file', dest='module', help='run tests in the given file')
    parser.add_option('-n', '--nose', dest='nose', action='store_true', help='run tests using nose')
    (options, args) = parser.parse_args()
    testResultLogFile = None
    if (options.result is not None):
        testResultLogFile = options.result
    testCaseLogFile = None
    if (options.testcaselog is not None):
        testCaseLogFile = options.testcaselog
    deploy = deployDataCenter.deployDataCenters(options.config)
    if options.load:
        deploy.loadCfg()
    else:
        deploy.deploy()
    if (options.testCaseFolder is None):
        if (options.module is None):
            parser.print_usage()
            exit(1)
        elif options.nose:
            engine = NoseTestExecuteEngine.NoseTestExecuteEngine(deploy.testClient, testCaseLogFile, testResultLogFile)
            engine.runTestsFromFile(options.module)
        else:
            engine = TestCaseExecuteEngine.TestCaseExecuteEngine(deploy.testClient, testCaseLogFile, testResultLogFile)
            engine.loadTestsFromFile(options.module)
            engine.run()
    elif options.nose:
        engine = NoseTestExecuteEngine.NoseTestExecuteEngine(deploy.testClient, clientLog=testCaseLogFile, resultLog=testResultLogFile, workingdir=options.testCaseFolder)
        engine.runTests()
    else:
        engine = TestCaseExecuteEngine.TestCaseExecuteEngine(deploy.testClient, testCaseLogFile, testResultLogFile)
        engine.loadTestsFromDir(options.testCaseFolder)
        engine.run()
