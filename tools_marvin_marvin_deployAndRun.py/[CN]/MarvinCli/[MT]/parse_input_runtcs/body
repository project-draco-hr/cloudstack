@VerifyAndExit('Invalid input options, please check')
def parse_input_runtcs(self, inputs):
    '\n        Parses,reads the options and verifies for the config file\n        '
    if inputs:
        out_dict = {}
        args = inputs.strip().split(' ')
        for item in args:
            (key, value) = item.split('=')
            out_dict[key] = value
        self.__configFile = out_dict.get('config-file', None)
        self.__deployFlag = out_dict.get('deploy', False)
        self.__zone = out_dict.get('zone', None)
        self.__hypervisorType = out_dict.get('hyp-type', None)
        self.__tcPath = out_dict.get('tc-path')
        self.__requiredHw = out_dict.get('required-hardware')
        if (not all([self.__tcPath, self.__configFile])):
            return FAILED
        print '\n==== Parsing Input Options Successful ===='
        return SUCCESS
    return FAILED
