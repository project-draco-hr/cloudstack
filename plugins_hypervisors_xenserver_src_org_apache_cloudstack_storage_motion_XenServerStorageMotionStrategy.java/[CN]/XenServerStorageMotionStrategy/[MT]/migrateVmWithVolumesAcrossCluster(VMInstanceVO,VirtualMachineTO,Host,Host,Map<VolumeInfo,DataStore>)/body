{
  try {
    List<Pair<VolumeTO,String>> volumeToStorageUuid=new ArrayList<>();
    for (    Map.Entry<VolumeInfo,DataStore> entry : volumeToPool.entrySet()) {
      VolumeInfo volumeInfo=entry.getKey();
      StoragePool storagePool=storagePoolDao.findById(volumeInfo.getPoolId());
      VolumeTO volumeTo=new VolumeTO(volumeInfo,storagePool);
      if (storagePool.isManaged()) {
        String iqn=handleManagedVolumePreMigration(volumeInfo,storagePool,destHost);
        volumeToStorageUuid.add(new Pair<>(volumeTo,iqn));
      }
 else {
        volumeToStorageUuid.add(new Pair<>(volumeTo,((StoragePool)entry.getValue()).getPath()));
      }
    }
    MigrateWithStorageReceiveCommand receiveCmd=new MigrateWithStorageReceiveCommand(to,volumeToStorageUuid);
    MigrateWithStorageReceiveAnswer receiveAnswer=(MigrateWithStorageReceiveAnswer)agentMgr.send(destHost.getId(),receiveCmd);
    if (receiveAnswer == null) {
      s_logger.error("Migration with storage of vm " + vm + " to host "+ destHost+ " failed.");
      throw new CloudRuntimeException("Error while migrating the vm " + vm + " to host "+ destHost);
    }
 else     if (!receiveAnswer.getResult()) {
      s_logger.error("Migration with storage of vm " + vm + " failed. Details: "+ receiveAnswer.getDetails());
      throw new CloudRuntimeException("Error while migrating the vm " + vm + " to host "+ destHost);
    }
    MigrateWithStorageSendCommand sendCmd=new MigrateWithStorageSendCommand(to,receiveAnswer.getVolumeToSr(),receiveAnswer.getNicToNetwork(),receiveAnswer.getToken());
    MigrateWithStorageSendAnswer sendAnswer=(MigrateWithStorageSendAnswer)agentMgr.send(srcHost.getId(),sendCmd);
    if (sendAnswer == null) {
      handleManagedVolumesAfterFailedMigration(volumeToPool,destHost);
      s_logger.error("Migration with storage of vm " + vm + " to host "+ destHost+ " failed.");
      throw new CloudRuntimeException("Error while migrating the vm " + vm + " to host "+ destHost);
    }
 else     if (!sendAnswer.getResult()) {
      handleManagedVolumesAfterFailedMigration(volumeToPool,destHost);
      s_logger.error("Migration with storage of vm " + vm + " failed. Details: "+ sendAnswer.getDetails());
      throw new CloudRuntimeException("Error while migrating the vm " + vm + " to host "+ destHost);
    }
    MigrateWithStorageCompleteCommand command=new MigrateWithStorageCompleteCommand(to);
    MigrateWithStorageCompleteAnswer answer=(MigrateWithStorageCompleteAnswer)agentMgr.send(destHost.getId(),command);
    if (answer == null) {
      s_logger.error("Migration with storage of vm " + vm + " failed.");
      throw new CloudRuntimeException("Error while migrating the vm " + vm + " to host "+ destHost);
    }
 else     if (!answer.getResult()) {
      s_logger.error("Migration with storage of vm " + vm + " failed. Details: "+ answer.getDetails());
      throw new CloudRuntimeException("Error while migrating the vm " + vm + " to host "+ destHost);
    }
 else {
      updateVolumePathsAfterMigration(volumeToPool,answer.getVolumeTos(),srcHost);
    }
    return answer;
  }
 catch (  OperationTimedoutException e) {
    s_logger.error("Error while migrating vm " + vm + " to host "+ destHost,e);
    throw new AgentUnavailableException("Operation timed out on storage motion for " + vm,destHost.getId());
  }
}
