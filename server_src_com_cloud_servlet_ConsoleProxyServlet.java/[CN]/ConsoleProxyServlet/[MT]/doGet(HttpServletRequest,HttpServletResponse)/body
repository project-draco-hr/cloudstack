{
  try {
    String userId=null;
    String account=null;
    Account accountObj=null;
    Map<String,Object[]> params=new HashMap<String,Object[]>();
    params.putAll(req.getParameterMap());
    HttpSession session=req.getSession(false);
    if (session == null) {
      if (verifyRequest(params)) {
        userId=(String)params.get("userid")[0];
        account=(String)params.get("account")[0];
        accountObj=(Account)params.get("accountobj")[0];
      }
 else {
        s_logger.info("Invalid web session or API key in request, reject console/thumbnail access");
        sendResponse(resp,"Access denied. Invalid web session or API key in request");
        return;
      }
    }
 else {
      userId=((Long)session.getAttribute("userid")).toString();
      accountObj=(Account)session.getAttribute("accountobj");
      account="" + accountObj.getId();
    }
    if ((userId == null) || (account == null) || (accountObj == null)|| !verifyUser(Long.valueOf(userId))) {
      s_logger.info("Invalid user/account, reject console/thumbnail access");
      sendResponse(resp,"Access denied. Invalid or inconsistent account is found");
      return;
    }
    String cmd=req.getParameter("cmd");
    if (cmd == null || !isValidCmd(cmd)) {
      s_logger.info("invalid console servlet command: " + cmd);
      sendResponse(resp,"");
      return;
    }
    String vmIdString=req.getParameter("vm");
    long vmId=0;
    try {
      vmId=Long.parseLong(vmIdString);
    }
 catch (    NumberFormatException e) {
      s_logger.info("invalid console servlet command parameter: " + vmIdString);
      sendResponse(resp,"");
      return;
    }
    if (!checkSessionPermision(req,vmId,accountObj)) {
      sendResponse(resp,"Permission denied");
      return;
    }
    if (cmd.equalsIgnoreCase("thumbnail"))     handleThumbnailRequest(req,resp,vmId);
 else     if (cmd.equalsIgnoreCase("access"))     handleAccessRequest(req,resp,vmId);
 else     handleAuthRequest(req,resp,vmId);
  }
 catch (  Throwable e) {
    s_logger.error("Unexepected exception in ConsoleProxyServlet",e);
    sendResponse(resp,"Server Internal Error");
  }
}
