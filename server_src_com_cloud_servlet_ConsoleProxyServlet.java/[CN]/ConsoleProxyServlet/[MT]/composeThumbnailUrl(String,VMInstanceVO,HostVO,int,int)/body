{
  StringBuffer sb=new StringBuffer(rootUrl);
  String host=hostVo.getPrivateIpAddress();
  Pair<String,Integer> portInfo=_ms.getVncPort(vm);
  Ternary<String,String,String> parsedHostInfo=parseHostInfo(portInfo.first());
  String sid=vm.getVncPassword();
  String tag=String.valueOf(vm.getId());
  tag=_identityService.getIdentityUuid("vm_instance",tag);
  String ticket=genAccessTicket(host,String.valueOf(portInfo.second()),sid,tag);
  ConsoleProxyPasswordBasedEncryptor encryptor=new ConsoleProxyPasswordBasedEncryptor(_ms.getHashKey());
  ConsoleProxyClientParam param=new ConsoleProxyClientParam();
  param.setClientHostAddress(parsedHostInfo.first());
  param.setClientHostPort(portInfo.second());
  param.setClientHostPassword(sid);
  param.setClientTag(tag);
  param.setTicket(ticket);
  if (parsedHostInfo.second() != null && parsedHostInfo.third() != null) {
    param.setClientTunnelUrl(parsedHostInfo.second());
    param.setClientTunnelSession(parsedHostInfo.third());
  }
  sb.append("/ajax?token=" + encryptor.encryptObject(ConsoleProxyClientParam.class,param));
  sb.append("&w=").append(w).append("&h=").append(h);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Compose thumbnail url: " + sb.toString());
  }
  return sb.toString();
}
