{
  try {
    DocumentBuilderFactory docFactory=DocumentBuilderFactory.newInstance();
    DocumentBuilder docBuilder=docFactory.newDocumentBuilder();
    DOMImplementation domImpl=docBuilder.getDOMImplementation();
    Document doc=domImpl.createDocument("urn:ietf:params:xml:ns:netconf:base:1.0","nf:rpc",null);
    doc.getDocumentElement().setAttribute("message-id","101");
    doc.getDocumentElement().setAttributeNS("http://www.cisco.com/nxos:1.0:ppm","deleteportprofile","true");
    Element editConfig=doc.createElement("nf:edit-config");
    Element target=doc.createElement("nf:target");
    Element running=doc.createElement("nf:running");
    target.appendChild(running);
    Element config=doc.createElement("nf:config");
    Element configure=doc.createElementNS("http://www.cisco.com/nxos:1.0:ppm","nxos:configure");
    Element execConfigure=doc.createElement("nxos:__XML__MODE__exec_configure");
    Element delete=doc.createElement("no");
    Element portProfile=doc.createElement("port-profile");
    Element name=doc.createElement("name");
    Element value=doc.createElement("__XML__PARAM_value");
    value.setAttribute("isKey","true");
    value.setTextContent(portName);
    name.appendChild(value);
    portProfile.appendChild(name);
    delete.appendChild(portProfile);
    execConfigure.appendChild(delete);
    configure.appendChild(execConfigure);
    config.appendChild(configure);
    editConfig.appendChild(target);
    editConfig.appendChild(config);
    doc.getDocumentElement().appendChild(editConfig);
    return serialize(domImpl,doc);
  }
 catch (  ParserConfigurationException e) {
    s_logger.error("Error while creating delete message : " + e.getMessage());
    return null;
  }
catch (  DOMException e) {
    s_logger.error("Error while creating delete message : " + e.getMessage());
    return null;
  }
}
