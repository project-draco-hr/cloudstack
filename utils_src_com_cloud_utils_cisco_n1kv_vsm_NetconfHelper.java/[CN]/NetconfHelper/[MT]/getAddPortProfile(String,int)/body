{
  try {
    DocumentBuilderFactory docFactory=DocumentBuilderFactory.newInstance();
    DocumentBuilder docBuilder=docFactory.newDocumentBuilder();
    DOMImplementation domImpl=docBuilder.getDOMImplementation();
    Document doc=domImpl.createDocument("urn:ietf:params:xml:ns:netconf:base:1.0","nf:rpc",null);
    doc.getDocumentElement().setAttribute("message-id","101");
    doc.getDocumentElement().setAttributeNS("http://www.cisco.com/nxos:1.0:ppm","addportprofile","true");
    Element editConfig=doc.createElement("nf:edit-config");
    Element target=doc.createElement("nf:target");
    Element running=doc.createElement("nf:running");
    target.appendChild(running);
    Element config=doc.createElement("nf:config");
    Element configure=doc.createElementNS("http://www.cisco.com/nxos:1.0:ppm","nxos:configure");
    Element execConfigure=doc.createElement("nxos:__XML__MODE__exec_configure");
    Element portProfile=doc.createElement("port-profile");
    Element type=doc.createElement("type");
    Element ethernettype=doc.createElement("vethernet");
    Element name=doc.createElement("name");
    Element value=doc.createElement("__XML__PARAM_value");
    value.setAttribute("isKey","true");
    value.setTextContent(portName);
    Element portProf=doc.createElement("__XML__MODE__port-prof");
    Element switchport1=doc.createElement("switchport");
    Element mode1=doc.createElement("mode");
    Element access1=doc.createElement("access");
    mode1.appendChild(access1);
    switchport1.appendChild(mode1);
    Element switchport2=doc.createElement("switchport");
    Element access2=doc.createElement("access");
    Element vlan=doc.createElement("vlan");
    Element vlancreate=doc.createElement("vlan-id-create-delete");
    Element value2=doc.createElement("__XML__PARAM_value");
    value2.setTextContent(Integer.toString(vlanid));
    vlancreate.appendChild(value2);
    vlan.appendChild(vlancreate);
    access2.appendChild(vlan);
    switchport2.appendChild(access2);
    Element vmware1=doc.createElement("vmware");
    Element portgroup=doc.createElement("port-group");
    vmware1.appendChild(portgroup);
    Element vmware2=doc.createElement("vmware");
    Element state=doc.createElement("state");
    Element enabled=doc.createElement("enabled");
    state.appendChild(enabled);
    vmware2.appendChild(state);
    Element no=doc.createElement("no");
    Element shutdown=doc.createElement("shutdown");
    no.appendChild(shutdown);
    portProf.appendChild(switchport1);
    portProf.appendChild(switchport2);
    portProf.appendChild(vmware1);
    portProf.appendChild(vmware2);
    portProf.appendChild(no);
    name.appendChild(value);
    name.appendChild(portProf);
    ethernettype.appendChild(name);
    type.appendChild(ethernettype);
    portProfile.appendChild(type);
    execConfigure.appendChild(portProfile);
    configure.appendChild(execConfigure);
    config.appendChild(configure);
    editConfig.appendChild(target);
    editConfig.appendChild(config);
    doc.getDocumentElement().appendChild(editConfig);
    return serialize(domImpl,doc);
  }
 catch (  ParserConfigurationException e) {
    s_logger.error("Error while creating add port profile message : " + e.getMessage());
    return null;
  }
catch (  DOMException e) {
    s_logger.error("Error while creating add port profile message : " + e.getMessage());
    return null;
  }
}
