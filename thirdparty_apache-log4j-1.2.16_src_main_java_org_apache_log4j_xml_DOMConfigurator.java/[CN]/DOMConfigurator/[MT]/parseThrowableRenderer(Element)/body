{
  String className=subst(element.getAttribute(CLASS_ATTR));
  LogLog.debug("Parsing throwableRenderer of class: \"" + className + "\"");
  try {
    Object instance=Loader.loadClass(className).newInstance();
    ThrowableRenderer tr=(ThrowableRenderer)instance;
    PropertySetter propSetter=new PropertySetter(tr);
    NodeList params=element.getChildNodes();
    final int length=params.getLength();
    for (int loop=0; loop < length; loop++) {
      Node currentNode=(Node)params.item(loop);
      if (currentNode.getNodeType() == Node.ELEMENT_NODE) {
        Element currentElement=(Element)currentNode;
        String tagName=currentElement.getTagName();
        if (tagName.equals(PARAM_TAG)) {
          setParameter(currentElement,propSetter);
        }
 else {
          parseUnrecognizedElement(instance,currentElement,props);
        }
      }
    }
    propSetter.activate();
    return tr;
  }
 catch (  Exception oops) {
    if (oops instanceof InterruptedException || oops instanceof InterruptedIOException) {
      Thread.currentThread().interrupt();
    }
    LogLog.error("Could not create the ThrowableRenderer. Reported error follows.",oops);
    return null;
  }
}
