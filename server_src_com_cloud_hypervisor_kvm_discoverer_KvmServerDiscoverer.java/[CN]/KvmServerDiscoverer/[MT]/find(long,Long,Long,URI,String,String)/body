{
  Map<KvmDummyResourceBase,Map<String,String>> resources=new HashMap<KvmDummyResourceBase,Map<String,String>>();
  Map<String,String> details=new HashMap<String,String>();
  if (!uri.getScheme().equals("http")) {
    String msg="urlString is not http so we're not taking care of the discovery for this: " + uri;
    s_logger.debug(msg);
    return null;
  }
  com.trilead.ssh2.Connection sshConnection=null;
  Session sshSession=null;
  String agentIp=null;
  try {
    String hostname=uri.getHost();
    InetAddress ia=InetAddress.getByName(hostname);
    agentIp=ia.getHostAddress();
    String guid=UUID.nameUUIDFromBytes(agentIp.getBytes()).toString();
    sshConnection=new com.trilead.ssh2.Connection(agentIp,22);
    sshConnection.connect(null,60000,60000);
    if (!sshConnection.authenticateWithPassword(username,password)) {
      throw new Exception("Unable to authenticate");
    }
    SCPClient scp=new SCPClient(sshConnection);
    scp.put(_setupAgentPath,"/usr/bin","0755");
    sshSession=sshConnection.openSession();
    s_logger.debug("/usr/bin/setup_agent.sh " + " -h " + _hostIp + " -z "+ dcId+ " -p "+ podId+ " -u "+ guid);
    sshSession.execCommand("/usr/bin/setup_agent.sh " + " -h " + _hostIp + " -z "+ dcId+ " -p "+ podId+ " -u "+ guid+ " 1>&2");
    KvmDummyResourceBase kvmResource=new KvmDummyResourceBase();
    Map<String,Object> params=new HashMap<String,Object>();
    params.put("zone",Long.toString(dcId));
    params.put("pod",Long.toString(podId));
    params.put("guid",guid);
    params.put("agentIp",agentIp);
    kvmResource.configure("kvm agent",params);
    kvmResource.setRemoteAgent(true);
    resources.put(kvmResource,details);
    return resources;
  }
 catch (  Exception e) {
    String msg=" can't setup agent, due to " + e.toString() + " - "+ e.getMessage();
    s_logger.warn(msg);
  }
 finally {
    if (sshSession != null)     sshSession.close();
    if (sshConnection != null)     sshConnection.close();
  }
  return null;
}
