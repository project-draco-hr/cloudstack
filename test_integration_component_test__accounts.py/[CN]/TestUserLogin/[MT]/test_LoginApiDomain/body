@attr(tags=['login', 'accounts', 'simulator', 'advanced', 'advancedns', 'basic', 'eip', 'sg'])
def test_LoginApiDomain(self):
    'Test login API with domain\n        '
    self.debug('Creating a domain for login with API domain test')
    domain = Domain.create(self.apiclient, self.services['domain'], parentdomainid=self.domain.id)
    self.debug(('Domain: %s is created succesfully.' % domain.name))
    self.debug('Checking if the created domain is listed in list domains API')
    domains = Domain.list(self.apiclient, id=domain.id, listall=True)
    self.assertEqual(isinstance(domains, list), True, 'List domains shall return a valid response')
    self.debug(('Creating an user account in domain: %s' % domain.name))
    self.account = Account.create(self.apiclient, self.services['account'], domainid=domain.id)
    self.cleanup.append(self.account)
    accounts = Account.list(self.apiclient, name=self.account.name, domainid=self.account.domainid, listall=True)
    self.assertEqual(isinstance(accounts, list), True, 'List accounts should return a valid response')
    self.debug('Logging into the cloudstack with login API')
    respose = User.login(self.apiclient, username=self.account.name, password=self.services['account']['password'], domainid=domain.id)
    self.debug(('Login API response: %s' % respose))
    self.assertNotEqual(respose.sessionkey, None, ('Login to the CloudStack should be successful' + 'response shall have non Null key'))
    return
