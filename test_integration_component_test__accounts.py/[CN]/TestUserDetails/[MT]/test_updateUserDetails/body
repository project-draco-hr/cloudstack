@attr(tags=['role', 'accounts', 'simulator', 'advanced', 'advancedns', 'basic', 'eip', 'sg'])
def test_updateUserDetails(self):
    'Test user update API\n        '
    self.debug('Creating an user account..')
    self.account = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id)
    self.cleanup.append(self.account)
    self.debug(('Fetching user details for account: %s' % self.account.account.name))
    users = User.list(self.apiclient, account=self.account.account.name, domainid=self.account.account.domainid)
    self.assertEqual(isinstance(users, list), True, 'List users should return a valid list for account')
    user_1 = users[0]
    self.debug(('Updating the details of user: %s' % user_1.name))
    firstname = random_gen()
    lastname = random_gen()
    self.debug(('New firstname: %s, lastname: %s' % (firstname, lastname)))
    User.update(self.apiclient, user_1.id, firstname=firstname, lastname=lastname)
    self.debug(('Fetching user details for user: %s' % user_1.name))
    users = User.list(self.apiclient, id=user_1.id, listall=True)
    self.assertEqual(isinstance(users, list), True, 'List users should return a valid list for account')
    user_1 = users[0]
    self.assertEqual(user_1.firstname, firstname, "User's first name should be updated with new one")
    self.assertEqual(user_1.lastname, lastname, "User's last name should be updated with new one")
    return
