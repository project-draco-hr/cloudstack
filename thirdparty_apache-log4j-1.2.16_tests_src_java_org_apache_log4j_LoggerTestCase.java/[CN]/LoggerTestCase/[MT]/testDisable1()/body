{
  CountingAppender caRoot=new CountingAppender();
  Logger root=Logger.getRootLogger();
  root.addAppender(caRoot);
  LoggerRepository h=LogManager.getLoggerRepository();
  h.setThreshold((Level)Level.INFO);
  assertEquals(caRoot.counter,0);
  root.debug(MSG);
  assertEquals(caRoot.counter,0);
  root.info(MSG);
  assertEquals(caRoot.counter,1);
  root.log(Level.WARN,MSG);
  assertEquals(caRoot.counter,2);
  root.warn(MSG);
  assertEquals(caRoot.counter,3);
  h.setThreshold((Level)Level.WARN);
  root.debug(MSG);
  assertEquals(caRoot.counter,3);
  root.info(MSG);
  assertEquals(caRoot.counter,3);
  root.log(Level.WARN,MSG);
  assertEquals(caRoot.counter,4);
  root.error(MSG);
  assertEquals(caRoot.counter,5);
  root.log(Level.ERROR,MSG);
  assertEquals(caRoot.counter,6);
  h.setThreshold(Level.OFF);
  root.debug(MSG);
  assertEquals(caRoot.counter,6);
  root.info(MSG);
  assertEquals(caRoot.counter,6);
  root.log(Level.WARN,MSG);
  assertEquals(caRoot.counter,6);
  root.error(MSG);
  assertEquals(caRoot.counter,6);
  root.log(Level.FATAL,MSG);
  assertEquals(caRoot.counter,6);
  root.log(Level.FATAL,MSG);
  assertEquals(caRoot.counter,6);
  h.setThreshold(Level.OFF);
  root.debug(MSG);
  assertEquals(caRoot.counter,6);
  root.info(MSG);
  assertEquals(caRoot.counter,6);
  root.log(Level.WARN,MSG);
  assertEquals(caRoot.counter,6);
  root.error(MSG);
  assertEquals(caRoot.counter,6);
  root.log(Level.ERROR,MSG);
  assertEquals(caRoot.counter,6);
  root.log(Level.FATAL,MSG);
  assertEquals(caRoot.counter,6);
}
