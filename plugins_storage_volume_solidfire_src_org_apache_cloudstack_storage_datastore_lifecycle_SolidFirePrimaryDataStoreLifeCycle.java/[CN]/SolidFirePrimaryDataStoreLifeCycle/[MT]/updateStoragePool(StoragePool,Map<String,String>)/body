{
  StoragePoolVO storagePoolVo=storagePoolDao.findById(storagePool.getId());
  String strCapacityBytes=details.get(PrimaryDataStoreLifeCycle.CAPACITY_BYTES);
  Long capacityBytes=strCapacityBytes != null ? Long.parseLong(strCapacityBytes) : null;
  if (capacityBytes != null) {
    long usedBytes=_capacityMgr.getUsedBytes(storagePoolVo);
    if (capacityBytes < usedBytes) {
      throw new CloudRuntimeException("Cannot reduce the number of bytes for this storage pool as it would lead to an insufficient number of bytes");
    }
  }
  String strCapacityIops=details.get(PrimaryDataStoreLifeCycle.CAPACITY_IOPS);
  Long capacityIops=strCapacityIops != null ? Long.parseLong(strCapacityIops) : null;
  if (capacityIops != null) {
    long usedIops=_capacityMgr.getUsedIops(storagePoolVo);
    if (capacityIops < usedIops) {
      throw new CloudRuntimeException("Cannot reduce the number of IOPS for this storage pool as it would lead to an insufficient number of IOPS");
    }
  }
}
