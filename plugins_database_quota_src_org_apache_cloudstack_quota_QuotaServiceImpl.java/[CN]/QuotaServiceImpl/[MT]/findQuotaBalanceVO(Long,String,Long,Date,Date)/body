{
  if ((accountId == null) && (accountName != null) && (domainId != null)) {
    Account userAccount=null;
    Account caller=CallContext.current().getCallingAccount();
    if (_domainDao.isChildDomain(caller.getDomainId(),domainId)) {
      Filter filter=new Filter(AccountVO.class,"id",Boolean.FALSE,null,null);
      List<AccountVO> accounts=_accountDao.listAccounts(accountName,domainId,filter);
      if (!accounts.isEmpty()) {
        userAccount=accounts.get(0);
      }
      if (userAccount != null) {
        accountId=userAccount.getId();
      }
 else {
        throw new InvalidParameterValueException("Unable to find account " + accountName + " in domain "+ domainId);
      }
    }
 else {
      throw new PermissionDeniedException("Invalid Domain Id or Account");
    }
  }
  startDate=startDate == null ? new Date() : startDate;
  if (endDate == null) {
    Date adjustedStartDate=computeAdjustedTime(_respBldr.startOfNextDay(startDate));
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("getQuotaBalance1: Getting quota balance records for account: " + accountId + ", domainId: "+ domainId+ ", on or before "+ adjustedStartDate);
    }
    List<QuotaBalanceVO> qbrecords=_quotaBalanceDao.lastQuotaBalanceVO(accountId,domainId,adjustedStartDate);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Found records size=" + qbrecords.size());
    }
    if (qbrecords.isEmpty()) {
      s_logger.info("Incorrect Date there are no quota records before this date " + adjustedStartDate);
      return qbrecords;
    }
 else {
      return qbrecords;
    }
  }
 else {
    Date adjustedStartDate=computeAdjustedTime(startDate);
    if (endDate.after(_respBldr.startOfNextDay())) {
      throw new InvalidParameterValueException("Incorrect Date Range. End date:" + endDate + " should not be in future. ");
    }
 else     if (startDate.before(endDate)) {
      Date adjustedEndDate=computeAdjustedTime(endDate);
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("getQuotaBalance2: Getting quota balance records for account: " + accountId + ", domainId: "+ domainId+ ", between "+ adjustedStartDate+ " and "+ adjustedEndDate);
      }
      List<QuotaBalanceVO> qbrecords=_quotaBalanceDao.findQuotaBalance(accountId,domainId,adjustedStartDate,adjustedEndDate);
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("getQuotaBalance3: Found records size=" + qbrecords.size());
      }
      if (qbrecords.isEmpty()) {
        s_logger.info("There are no quota records between these dates start date " + adjustedStartDate + " and end date:"+ endDate);
        return qbrecords;
      }
 else {
        return qbrecords;
      }
    }
 else {
      throw new InvalidParameterValueException("Incorrect Date Range. Start date: " + startDate + " is after end date:"+ endDate);
    }
  }
}
