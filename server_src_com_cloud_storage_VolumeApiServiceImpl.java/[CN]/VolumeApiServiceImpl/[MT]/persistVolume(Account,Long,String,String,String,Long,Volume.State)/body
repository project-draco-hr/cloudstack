{
  return Transaction.execute(new TransactionCallback<VolumeVO>(){
    @Override public VolumeVO doInTransaction(    TransactionStatus status){
      VolumeVO volume=new VolumeVO(volumeName,zoneId,-1,-1,-1,new Long(-1),null,null,Storage.ProvisioningType.THIN,0,Volume.Type.DATADISK);
      volume.setPoolId(null);
      volume.setDataCenterId(zoneId);
      volume.setPodId(null);
      volume.setState(state);
      volume.setAccountId((owner == null) ? Account.ACCOUNT_ID_SYSTEM : owner.getAccountId());
      volume.setDomainId((owner == null) ? Domain.ROOT_DOMAIN : owner.getDomainId());
      if (diskOfferingId == null) {
        DiskOfferingVO diskOfferingVO=_diskOfferingDao.findByUniqueName("Cloud.com-Custom");
        if (diskOfferingVO != null) {
          long defaultDiskOfferingId=diskOfferingVO.getId();
          volume.setDiskOfferingId(defaultDiskOfferingId);
        }
      }
 else {
        volume.setDiskOfferingId(diskOfferingId);
      }
      volume.setInstanceId(null);
      volume.setUpdated(new Date());
      volume.setDomainId((owner == null) ? Domain.ROOT_DOMAIN : owner.getDomainId());
      volume.setFormat(ImageFormat.valueOf(format));
      volume=_volsDao.persist(volume);
      CallContext.current().setEventDetails("Volume Id: " + volume.getId());
      _resourceLimitMgr.incrementResourceCount(volume.getAccountId(),ResourceType.volume);
      if (url != null) {
        _resourceLimitMgr.incrementResourceCount(volume.getAccountId(),ResourceType.secondary_storage,UriUtils.getRemoteSize(url));
      }
      return volume;
    }
  }
);
}
