{
  VMInstanceVO vm=_entityMgr.findById(VMInstanceVO.class,work.getVmId());
  if (vm == null) {
    s_logger.info("Unable to find vm " + work.getVmId());
  }
  assert(vm != null);
  if (work instanceof VmWorkAttachVolume) {
    VmWorkAttachVolume attachWork=(VmWorkAttachVolume)work;
    if (s_logger.isDebugEnabled())     s_logger.debug("Execute Attach-Volume within VM work job context. vmId: " + attachWork.getVmId() + ", volId: "+ attachWork.getVolumeId()+ ", deviceId: "+ attachWork.getDeviceId());
    orchestrateAttachVolumeToVM(attachWork.getVmId(),attachWork.getVolumeId(),attachWork.getDeviceId());
    if (s_logger.isDebugEnabled())     s_logger.debug("Done executing Attach-Volume within VM work job context. vmId: " + attachWork.getVmId() + ", volId: "+ attachWork.getVolumeId()+ ", deviceId: "+ attachWork.getDeviceId());
    return new Pair<JobInfo.Status,String>(JobInfo.Status.SUCCEEDED,null);
  }
 else   if (work instanceof VmWorkDetachVolume) {
    VmWorkDetachVolume detachWork=(VmWorkDetachVolume)work;
    if (s_logger.isDebugEnabled())     s_logger.debug("Execute Detach-Volume within VM work job context. vmId: " + detachWork.getVmId() + ", volId: "+ detachWork.getVolumeId());
    orchestrateDetachVolumeFromVM(detachWork.getVmId(),detachWork.getVolumeId());
    if (s_logger.isDebugEnabled())     s_logger.debug("Done executing Detach-Volume within VM work job context. vmId: " + detachWork.getVmId() + ", volId: "+ detachWork.getVolumeId());
    return new Pair<JobInfo.Status,String>(JobInfo.Status.SUCCEEDED,null);
  }
 else {
    RuntimeException e=new RuntimeException("Unsupported VM work command: " + job.getCmd());
    String exceptionJson=JobSerializerHelper.toSerializedString(e);
    s_logger.error("Serialize exception object into json: " + exceptionJson);
    return new Pair<JobInfo.Status,String>(JobInfo.Status.FAILED,exceptionJson);
  }
}
