{
  ManagementServer managementServer=getManagementServer();
  VolumeVO volume=managementServer.findVolumeById(volumeId);
  if (volume == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Unable to find a volume with id " + volumeId);
  }
  checkAccountPermissions(params,volume.getAccountId(),volume.getDomainId(),"volume",volumeId);
  if (userId == null) {
    userId=Long.valueOf(1);
  }
  try {
    long jobId=managementServer.createSnapshotAsync(userId,volumeId.longValue());
    if (jobId == 0) {
      s_logger.warn("Unable to schedule async-job for CreateSnapshot comamnd");
    }
 else {
      if (s_logger.isDebugEnabled())       s_logger.debug("CreateSnapshot command has been accepted, job id: " + jobId);
    }
    long snapshotId=waitInstanceCreation(jobId);
    List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.SNAPSHOT_ID.getName(),Long.valueOf(snapshotId)));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.JOB_ID.getName(),Long.valueOf(jobId)));
    return returnValues;
  }
 catch (  ResourceAllocationException rae) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to create a snapshot for volume with id " + volumeId + ": "+ rae.getMessage());
  }
catch (  ServerApiException apiEx) {
    throw apiEx;
  }
catch (  Exception ex) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to create a snapshot for volume with id " + volumeId + " because of: "+ ex.getMessage());
  }
}
