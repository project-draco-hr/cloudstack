{
  System.setProperty("streamer.Element.debug","true");
  byte[] packet=new byte[]{(byte)0x03,(byte)0x00,(byte)0x00,(byte)0x25,(byte)0x02,(byte)0xf0,(byte)0x80,(byte)0x64,(byte)0x00,(byte)0x03,(byte)0x03,(byte)0xeb,(byte)0x70,(byte)0x80,(byte)0x16,(byte)0x16,(byte)0x00,(byte)0x17,(byte)0x00,(byte)0xec,(byte)0x03,(byte)0xea,(byte)0x03,(byte)0x01,(byte)0x00,(byte)0x00,(byte)0x01,(byte)0x08,(byte)0x00,(byte)0x1f,(byte)0x00,(byte)0x00,(byte)0x00,(byte)0x01,(byte)0x00,(byte)0xea,(byte)0x03};
  MockSource source=new MockSource("source",ByteBuffer.convertByteArraysToByteBuffers(new byte[]{1,2,3}));
  Element todo=new ClientSynchronizePDU("TODO");
  Element x224=new ClientX224DataPDU("x224");
  Element tpkt=new ClientTpkt("tpkt");
  Element sink=new MockSink("sink",ByteBuffer.convertByteArraysToByteBuffers(packet));
  Element mainSink=new MockSink("mainSink",ByteBuffer.convertByteArraysToByteBuffers(new byte[]{1,2,3}));
  Pipeline pipeline=new PipelineImpl("test");
  pipeline.add(source,todo,x224,tpkt,sink,mainSink);
  pipeline.link("source","TODO","mainSink");
  pipeline.link("TODO >" + OTOUT,"x224","tpkt","sink");
  pipeline.runMainLoop("source",STDOUT,false,false);
}
