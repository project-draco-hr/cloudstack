{
  List<Pair<String,Class<? extends HostAllocator>>> hostAllocators=new ArrayList<Pair<String,Class<? extends HostAllocator>>>();
  hostAllocators.add(new Pair<String,Class<? extends HostAllocator>>("FirstFitRouting",RecreateHostAllocator.class));
  addAdapterChain(HostAllocator.class,hostAllocators);
  List<Pair<String,Class<? extends StoragePoolAllocator>>> poolAllocators=new ArrayList<Pair<String,Class<? extends StoragePoolAllocator>>>();
  poolAllocators.add(new Pair<String,Class<? extends StoragePoolAllocator>>("LocalStorage",LocalStoragePoolAllocator.class));
  poolAllocators.add(new Pair<String,Class<? extends StoragePoolAllocator>>("Storage",FirstFitStoragePoolAllocator.class));
  poolAllocators.add(new Pair<String,Class<? extends StoragePoolAllocator>>("GarbageCollecting",GarbageCollectingStoragePoolAllocator.class));
  addAdapterChain(StoragePoolAllocator.class,poolAllocators);
  List<Pair<String,Class<? extends PodAllocator>>> podAllocators=new ArrayList<Pair<String,Class<? extends PodAllocator>>>();
  podAllocators.add(new Pair<String,Class<? extends PodAllocator>>("User First",UserConcentratedAllocator.class));
  addAdapterChain(PodAllocator.class,podAllocators);
  List<Pair<String,Class<? extends ConsoleProxyAllocator>>> proxyAllocators=new ArrayList<Pair<String,Class<? extends ConsoleProxyAllocator>>>();
  proxyAllocators.add(new Pair<String,Class<? extends ConsoleProxyAllocator>>("Balance",ConsoleProxyBalanceAllocator.class));
  addAdapterChain(ConsoleProxyAllocator.class,proxyAllocators);
  addAdapterChain("GuestNetworkGuru",GuestNetworkGuru.class);
  addAdapterChain("PublicNetworkGuru",PublicNetworkGuru.class);
  addAdapterChain("PodBasedNetworkGuru",PodBasedNetworkGuru.class);
  addAdapterChain("ControlNetworkGuru",ControlNetworkGuru.class);
  addAdapterChain("Balance",SecondaryStorageVmDefaultAllocator.class);
  addAdapterChain("Basic",ExteralIpAddressAllocator.class);
  addAdapterChain("MD5",MD5UserAuthenticator.class);
  addAdapterChain("SimpleInvestigator",CheckOnAgentInvestigator.class);
  addAdapterChain("XenServerInvestigator",XenServerInvestigator.class);
  addAdapterChain("PingInvestigator",InvestigatorImpl.class);
  addAdapterChain("StorageFenceBuilder",StorageFence.class);
  addAdapterChain("XCP Agent",XcpServerDiscoverer.class);
  addAdapterChain("SecondaryStorage",SecondaryStorageDiscoverer.class);
  addAdapterChain("KVM Agent",KvmServerDiscoverer.class);
  addAdapterChain("Simple",SimplePlanner.class);
}
