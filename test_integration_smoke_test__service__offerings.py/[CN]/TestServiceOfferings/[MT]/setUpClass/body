@classmethod
def setUpClass(cls):
    cls.api_client = super(TestServiceOfferings, cls).getClsTestClient().getApiClient()
    cls.services = Services().services
    domain = get_domain(cls.api_client, cls.services)
    cls.zone = get_zone(cls.api_client, cls.services)
    cls.services['mode'] = cls.zone.networktype
    cls.service_offering_1 = ServiceOffering.create(cls.api_client, cls.services['off'])
    cls.service_offering_2 = ServiceOffering.create(cls.api_client, cls.services['off'])
    template = get_template(cls.api_client, cls.zone.id, cls.services['ostype'])
    cls.services['small']['zoneid'] = cls.zone.id
    cls.services['small']['template'] = template.id
    cls.services['medium']['zoneid'] = cls.zone.id
    cls.services['medium']['template'] = template.id
    cls.account = Account.create(cls.api_client, cls.services['account'], domainid=domain.id)
    cls.small_offering = ServiceOffering.create(cls.api_client, cls.services['service_offerings']['small'])
    cls.medium_offering = ServiceOffering.create(cls.api_client, cls.services['service_offerings']['medium'])
    cls.medium_virtual_machine = VirtualMachine.create(cls.api_client, cls.services['medium'], accountid=cls.account.name, domainid=cls.account.domainid, serviceofferingid=cls.medium_offering.id, mode=cls.services['mode'])
    cls._cleanup = [cls.small_offering, cls.medium_offering, cls.account]
    return
