@attr(tags=['advanced'], required_hardware='false')
def test_13_1_deployvm_admin_foruserinotherdomain_crossnetwork(self):
    '\n        # Validate that Admin should not be able deploy VM for a user in a network that does not belong to the user\n\t'
    self.apiclient.connection.apiKey = self.user_root_apikey
    self.apiclient.connection.securityKey = self.user_root_secretkey
    vmData = {'name': 'd11a-root-invalidnetwork', 'displayname': 'd11a-root-invalidnetwork', }
    try:
        vm = VirtualMachine.create(self.apiclient, vmData, zoneid=self.zone.id, serviceofferingid=self.service_offering.id, templateid=self.template.id, networkids=self.network_d11b.id, accountid=self.account_d11a.name, domainid=self.account_d11a.domainid)
        self.fail('Admin is allowed to deploy VM for a user in a network that does not belong to the user ')
    except Exception as e:
        self.debug(('When admin tries to deploy vm for users in network that does not belong to the user %s' % e))
        if (not CloudstackAclException.verifyMsginException(e, CloudstackAclException.UNABLE_TO_USE_NETWORK)):
            self.fail('Admin tries to deploy VM for a user in a network that does not belong to the user ')
