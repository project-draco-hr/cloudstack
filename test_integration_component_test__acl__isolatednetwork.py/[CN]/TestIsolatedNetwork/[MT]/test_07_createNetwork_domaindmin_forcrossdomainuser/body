@attr(tags=['advanced'], required_hardware='false')
def test_07_createNetwork_domaindmin_forcrossdomainuser(self):
    '\n        # Validate that Domain admin should not be able to create network for users in his sub domain\n\t'
    self.apiclient.connection.apiKey = self.user_d1_apikey
    self.apiclient.connection.securityKey = self.user_d1_secretkey
    self.acldata['network']['name'] = 'd1_d2a'
    self.acldata['network']['displayname'] = 'd1_d2a'
    try:
        network = Network.create(self.apiclient, self.acldata['network'], networkofferingid=self.isolated_network_offering_id, zoneid=self.zone.id, accountid=self.account_d2a.name, domainid=self.account_d2a.domainid)
        self.fail('Domain admin is allowed to create network for users not in his domain ')
    except Exception as e:
        self.debug(('When Domain admin tries to create network for users in his sub domain %s' % e))
        if (not CloudstackAclException.verifyMsginException(e, CloudstackAclException.NO_PERMISSION_TO_OPERATE_DOMAIN)):
            self.fail('Error message validation failed when Domain admin tries to create network for users not in his domain ')
