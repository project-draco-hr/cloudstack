{
  if (s_logger.isInfoEnabled())   s_logger.info("Create blank VM. cpuCount: " + cpuCount + ", cpuSpeed(MHz): "+ cpuSpeedMHz+ ", mem(Mb): "+ memoryMB);
  VirtualMachineConfigSpec vmConfig=new VirtualMachineConfigSpec();
  vmConfig.setName(vmName);
  VmwareHelper.setBasicVmConfig(vmConfig,cpuCount,cpuSpeedMHz,cpuReservedMHz,memoryMB,memoryReserveMB,guestOsIdentifier,limitCpuUse);
  VirtualLsiLogicController scsiController=new VirtualLsiLogicController();
  scsiController.setSharedBus(VirtualSCSISharing.NO_SHARING);
  scsiController.setBusNumber(0);
  scsiController.setKey(1);
  VirtualDeviceConfigSpec scsiControllerSpec=new VirtualDeviceConfigSpec();
  scsiControllerSpec.setDevice(scsiController);
  scsiControllerSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);
  VirtualMachineFileInfo fileInfo=new VirtualMachineFileInfo();
  DatastoreMO dsMo=new DatastoreMO(host.getContext(),morDs);
  fileInfo.setVmPathName(String.format("[%s]",dsMo.getName()));
  vmConfig.setFiles(fileInfo);
  VirtualMachineVideoCard videoCard=new VirtualMachineVideoCard();
  videoCard.setControllerKey(100);
  videoCard.setUseAutoDetect(true);
  VirtualDeviceConfigSpec videoDeviceSpec=new VirtualDeviceConfigSpec();
  videoDeviceSpec.setDevice(videoCard);
  videoDeviceSpec.setOperation(VirtualDeviceConfigSpecOperation.ADD);
  vmConfig.getDeviceChange().add(scsiControllerSpec);
  vmConfig.getDeviceChange().add(videoDeviceSpec);
  if (host.createVm(vmConfig)) {
    VirtualMachineMO vmMo=host.findVmOnHyperHost(vmName);
    assert(vmMo != null);
    int ideControllerKey=-1;
    while (ideControllerKey < 0) {
      ideControllerKey=vmMo.tryGetIDEDeviceControllerKey();
      if (ideControllerKey >= 0)       break;
      s_logger.info("Waiting for IDE controller be ready in VM: " + vmName);
      Thread.sleep(1000);
    }
    return true;
  }
  return false;
}
