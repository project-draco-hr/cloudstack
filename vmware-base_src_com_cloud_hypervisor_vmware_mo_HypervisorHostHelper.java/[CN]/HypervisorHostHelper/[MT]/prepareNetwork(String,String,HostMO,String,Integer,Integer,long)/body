{
  ManagedObjectReference morNetwork=null;
  VmwareContext context=hostMo.getContext();
  ManagedObjectReference dcMor=hostMo.getHyperHostDatacenter();
  DatacenterMO dataCenterMo=new DatacenterMO(context,dcMor);
  ManagedObjectReference morEthernetPortProfile=dataCenterMo.getDvPortGroupMor(ethPortProfileName);
  if (morEthernetPortProfile == null) {
    String msg="Unable to find Ethernet port profile " + ethPortProfileName;
    s_logger.error(msg);
    throw new Exception(msg);
  }
 else {
    s_logger.info("Found Ethernet port profile  " + ethPortProfileName);
  }
  boolean createGCTag=false;
  String networkName;
  Integer vid=null;
  if (vlanId != null && !UNTAGGED_VLAN_NAME.equalsIgnoreCase(vlanId)) {
    createGCTag=true;
    vid=Integer.parseInt(vlanId);
  }
  networkName=composeCloudNetworkName(namePrefix,vlanId,networkRateMbps,ethPortProfileName);
  long averageBandwidth=0L;
  if (networkRateMbps != null && networkRateMbps.intValue() > 0) {
    averageBandwidth=(long)(networkRateMbps.intValue() * 1024L * 1024L);
  }
  long peakBandwidth=(long)(averageBandwidth * 1.5);
  long burstSize=5 * averageBandwidth / 8;
  boolean bWaitPortGroupReady=false;
  if (!dataCenterMo.hasDvPortGroup(networkName)) {
    s_logger.info("Port profile " + networkName + " not found.");
    createPortProfile(context,ethPortProfileName,networkName,vid,networkRateMbps);
    bWaitPortGroupReady=true;
  }
 else {
    s_logger.info("Port profile " + networkName + " found.");
    updatePortProfile(context,ethPortProfileName,vid,networkRateMbps);
    bWaitPortGroupReady=true;
  }
  if (bWaitPortGroupReady)   morNetwork=waitForDvPortGroupReady(dataCenterMo,networkName,timeOutMs);
 else   morNetwork=dataCenterMo.getDvPortGroupMor(networkName);
  if (morNetwork == null) {
    String msg="Failed to create guest network " + networkName;
    s_logger.error(msg);
    throw new Exception(msg);
  }
  if (createGCTag) {
    NetworkMO networkMo=new NetworkMO(hostMo.getContext(),morNetwork);
    networkMo.setCustomFieldValue(CustomFieldConstants.CLOUD_GC,"true");
  }
  return new Pair<ManagedObjectReference,String>(morNetwork,networkName);
}
