{
  AssociateIpAddressResultObject resultObject=new AssociateIpAddressResultObject();
  resultObject.setIpAddress(newIpAddr);
  List<IPAddressVO> ipAddresses=managementServer.listPublicIpAddressesBy(param.getAccountId(),true,null,null);
  IPAddressVO ipAddress=null;
  for (Iterator<IPAddressVO> iter=ipAddresses.iterator(); iter.hasNext(); ) {
    IPAddressVO current=iter.next();
    if (current.getAddress().equals(newIpAddr)) {
      ipAddress=current;
      break;
    }
  }
  if (ipAddress != null) {
    if (ipAddress.getAllocated() != null)     resultObject.setAllocated(ipAddress.getAllocated());
    resultObject.setZoneId(ipAddress.getDataCenterId());
    resultObject.setZoneName(managementServer.findDataCenterById(ipAddress.getDataCenterId()).getName());
    resultObject.setSourceNat(ipAddress.isSourceNat());
    resultObject.setVlanDbId(ipAddress.getVlanDbId());
    resultObject.setVlanId(managementServer.findVlanById(ipAddress.getVlanDbId()).getVlanId());
    Account account=getAsyncJobMgr().getExecutorContext().getManagementServer().findAccountById(param.getAccountId());
    if (account != null)     resultObject.setAcountName(account.getAccountName());
 else     resultObject.setAcountName("");
  }
  return resultObject;
}
