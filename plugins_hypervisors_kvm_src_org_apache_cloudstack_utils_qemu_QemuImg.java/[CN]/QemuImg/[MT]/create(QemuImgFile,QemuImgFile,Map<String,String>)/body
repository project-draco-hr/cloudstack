{
  final Script s=new Script(_qemuImgPath,timeout);
  s.add("create");
  if (options != null && !options.isEmpty()) {
    s.add("-o");
    final StringBuilder optionsStr=new StringBuilder();
    final Iterator<Map.Entry<String,String>> optionsIter=options.entrySet().iterator();
    while (optionsIter.hasNext()) {
      final Map.Entry option=optionsIter.next();
      optionsStr.append(option.getKey()).append('=').append(option.getValue());
      if (optionsIter.hasNext()) {
        optionsStr.append(',');
      }
    }
    s.add(optionsStr.toString());
  }
  s.add("-f");
  if (backingFile != null) {
    s.add(backingFile.getFormat().toString());
    s.add("-b");
    s.add(backingFile.getFileName());
  }
 else {
    s.add(file.getFormat().toString());
  }
  s.add(file.getFileName());
  if (file.getSize() != 0L) {
    s.add(Long.toString(file.getSize()));
  }
 else   if (backingFile == null) {
    throw new QemuImgException("No size was passed, and no backing file was passed");
  }
  final String result=s.execute();
  if (result != null) {
    throw new QemuImgException(result);
  }
}
