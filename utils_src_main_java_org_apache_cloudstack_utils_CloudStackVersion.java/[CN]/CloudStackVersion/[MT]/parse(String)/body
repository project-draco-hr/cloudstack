{
  final String trimmedValue=substringBefore(value,"-");
  checkArgument(isNotBlank(trimmedValue),CloudStackVersion.class.getName() + ".parse(String) requires a non-blank value");
  checkArgument(VERSION_FORMAT.matcher(trimmedValue).matches(),CloudStackVersion.class.getName() + "parse(String) passed " + value+ ", but requires a value in the format of int.int.int(.int)(-<legacy patch>)");
  final String[] components=trimmedValue.split("\\.");
  checkState(components != null && (components.length == 3 || components.length == 4),"Expected " + value + " to parse to 3 or 4 positions.");
  final int majorRelease=Integer.valueOf(components[0]);
  final int minorRelease=Integer.valueOf(components[1]);
  final int patchRelease=Integer.valueOf(components[2]);
  final Integer securityRelease=components.length == 3 ? null : Integer.valueOf(components[3]);
  return new CloudStackVersion(majorRelease,minorRelease,patchRelease,securityRelease);
}
