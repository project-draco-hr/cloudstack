{
  DomainRouterResponse routerResponse=new DomainRouterResponse();
  routerResponse.setId(router.getId());
  routerResponse.setZoneId(router.getDataCenterId());
  routerResponse.setName(router.getHostName());
  routerResponse.setPodId(router.getPodId());
  routerResponse.setTemplateId(router.getTemplateId());
  routerResponse.setCreated(router.getCreated());
  routerResponse.setState(router.getState());
  routerResponse.setNetworkDomain(router.getDomain());
  if (router.getHostId() != null) {
    routerResponse.setHostId(router.getHostId());
    routerResponse.setHostName(ApiDBUtils.findHostById(router.getHostId()).getName());
  }
  Account accountTemp=ApiDBUtils.findAccountById(router.getAccountId());
  if (accountTemp != null) {
    routerResponse.setAccountName(accountTemp.getAccountName());
    routerResponse.setDomainId(accountTemp.getDomainId());
    routerResponse.setDomainName(ApiDBUtils.findDomainById(accountTemp.getDomainId()).getName());
  }
  List<? extends Nic> nics=ApiDBUtils.getNics(router);
  List<NicResponse> nicResponses=new ArrayList<NicResponse>();
  for (  Nic singleNic : nics) {
    NicResponse nicResponse=new NicResponse();
    nicResponse.setId(singleNic.getId());
    nicResponse.setIpaddress(singleNic.getIp4Address());
    nicResponse.setGateway(singleNic.getGateway());
    nicResponse.setNetmask(singleNic.getNetmask());
    nicResponse.setNetworkid(singleNic.getNetworkId());
    if (singleNic.getBroadcastUri() != null) {
      nicResponse.setBroadcastUri(singleNic.getBroadcastUri().toString());
    }
    if (singleNic.getIsolationUri() != null) {
      nicResponse.setIsolationUri(singleNic.getIsolationUri().toString());
    }
    nicResponse.setObjectName("nic");
    nicResponses.add(nicResponse);
  }
  routerResponse.setNics(nicResponses);
  DataCenter zone=ApiDBUtils.findZoneById(router.getDataCenterId());
  if (zone != null) {
    routerResponse.setZoneName(zone.getName());
    routerResponse.setDns1(zone.getDns1());
    routerResponse.setDns2(zone.getDns2());
  }
  routerResponse.setObjectName("domainrouter");
  return routerResponse;
}
