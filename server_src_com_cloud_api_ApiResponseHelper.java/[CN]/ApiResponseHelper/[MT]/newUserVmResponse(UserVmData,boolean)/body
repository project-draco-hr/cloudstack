{
  UserVmResponse userVmResponse=new UserVmResponse();
  userVmResponse.setHypervisor(userVmData.getHypervisor());
  userVmResponse.setId(userVmData.getId());
  userVmResponse.setName(userVmData.getName());
  userVmResponse.setDisplayName(userVmData.getDisplayName());
  userVmResponse.setIpAddress(userVmData.getIpAddress());
  populateAccount(userVmResponse,userVmData.getAccountId());
  populateDomain(userVmResponse,userVmData.getDomainId());
  userVmResponse.setCreated(userVmData.getCreated());
  userVmResponse.setState(userVmData.getState());
  userVmResponse.setHaEnable(userVmData.getHaEnable());
  userVmResponse.setGroupId(userVmData.getGroupId());
  userVmResponse.setGroup(userVmData.getGroup());
  userVmResponse.setZoneId(userVmData.getZoneId());
  userVmResponse.setZoneName(userVmData.getZoneName());
  if (caller_is_admin) {
    userVmResponse.setHostId(userVmData.getHostId());
    userVmResponse.setHostName(userVmData.getHostName());
  }
  userVmResponse.setTemplateId(userVmData.getTemplateId());
  userVmResponse.setTemplateName(userVmData.getTemplateName());
  userVmResponse.setTemplateDisplayText(userVmData.getTemplateDisplayText());
  userVmResponse.setPasswordEnabled(userVmData.getPasswordEnabled());
  userVmResponse.setIsoId(userVmData.getIsoId());
  userVmResponse.setIsoName(userVmData.getIsoName());
  userVmResponse.setIsoDisplayText(userVmData.getIsoDisplayText());
  userVmResponse.setServiceOfferingId(userVmData.getServiceOfferingId());
  userVmResponse.setServiceOfferingName(userVmData.getServiceOfferingName());
  userVmResponse.setCpuNumber(userVmData.getCpuNumber());
  userVmResponse.setCpuSpeed(userVmData.getCpuSpeed());
  userVmResponse.setMemory(userVmData.getMemory());
  userVmResponse.setCpuUsed(userVmData.getCpuUsed());
  userVmResponse.setNetworkKbsRead(userVmData.getNetworkKbsRead());
  userVmResponse.setNetworkKbsWrite(userVmData.getNetworkKbsWrite());
  userVmResponse.setGuestOsId(userVmData.getGuestOsId());
  userVmResponse.setRootDeviceId(userVmData.getRootDeviceId());
  userVmResponse.setRootDeviceType(userVmData.getRootDeviceType());
  userVmResponse.setPassword(userVmData.getPassword());
  userVmResponse.setJobId(userVmData.getJobId());
  userVmResponse.setJobStatus(userVmData.getJobStatus());
  userVmResponse.setForVirtualNetwork(userVmData.getForVirtualNetwork());
  Set<SecurityGroupResponse> securityGroupResponse=new HashSet<SecurityGroupResponse>();
  for (  SecurityGroupData sgd : userVmData.getSecurityGroupList()) {
    if (sgd.getId() != null) {
      SecurityGroupResponse sgr=new SecurityGroupResponse();
      sgr.setId(sgd.getId());
      sgr.setName(sgd.getName());
      sgr.setDescription(sgd.getDescription());
      Account account=ApiDBUtils.findAccountByNameDomain(sgd.getAccountName(),sgd.getDomainId());
      populateAccount(sgr,account.getId());
      populateDomain(sgr,sgd.getDomainId());
      sgr.setObjectName(sgd.getObjectName());
      securityGroupResponse.add(sgr);
    }
  }
  userVmResponse.setSecurityGroupList(new ArrayList<SecurityGroupResponse>(securityGroupResponse));
  Set<NicResponse> nicResponses=new HashSet<NicResponse>();
  for (  NicData nd : userVmData.getNics()) {
    NicResponse nr=new NicResponse();
    nr.setId(nd.getId());
    nr.setNetworkid(nd.getNetworkid());
    nr.setNetmask(nd.getNetmask());
    nr.setGateway(nd.getGateway());
    nr.setIpaddress(nd.getIpaddress());
    nr.setIsolationUri(nd.getIsolationUri());
    nr.setBroadcastUri(nd.getBroadcastUri());
    nr.setTrafficType(nd.getTrafficType());
    nr.setType(nd.getType());
    nr.setIsDefault(nd.getIsDefault());
    nr.setMacAddress(nd.getMacAddress());
    nr.setObjectName(nd.getObjectName());
    nicResponses.add(nr);
  }
  userVmResponse.setNics(new ArrayList<NicResponse>(nicResponses));
  return userVmResponse;
}
