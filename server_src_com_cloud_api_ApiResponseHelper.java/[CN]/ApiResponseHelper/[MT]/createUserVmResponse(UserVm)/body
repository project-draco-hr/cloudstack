{
  UserVmResponse userVmResponse=new UserVmResponse();
  Account acct=ApiDBUtils.findAccountById(Long.valueOf(userVm.getAccountId()));
  if ((acct != null) && (acct.getRemoved() == null)) {
    userVmResponse.setAccountName(acct.getAccountName());
    userVmResponse.setDomainId(acct.getDomainId());
    userVmResponse.setDomainName(ApiDBUtils.findDomainById(acct.getDomainId()).getName());
  }
 else {
    return null;
  }
  userVmResponse.setId(userVm.getId());
  userVmResponse.setName(userVm.getName());
  userVmResponse.setCreated(userVm.getCreated());
  if (userVm.getState() != null) {
    userVmResponse.setState(userVm.getState().toString());
  }
  userVmResponse.setHaEnable(userVm.isHaEnabled());
  if (userVm.getDisplayName() != null) {
    userVmResponse.setDisplayName(userVm.getDisplayName());
  }
 else {
    userVmResponse.setDisplayName(userVm.getName());
  }
  InstanceGroupVO group=ApiDBUtils.findInstanceGroupForVM(userVm.getId());
  if (group != null) {
    userVmResponse.setGroup(group.getName());
    userVmResponse.setGroupId(group.getId());
  }
  userVmResponse.setZoneId(userVm.getDataCenterId());
  userVmResponse.setZoneName(ApiDBUtils.findZoneById(userVm.getDataCenterId()).getName());
  Account account=UserContext.current().getCaller();
  if (((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN)) && (userVm.getHostId() != null)) {
    userVmResponse.setHostId(userVm.getHostId());
    userVmResponse.setHostName(ApiDBUtils.findHostById(userVm.getHostId()).getName());
  }
  if (userVm.getHypervisorType() != null) {
    userVmResponse.setHypervisor(userVm.getHypervisorType().toString());
  }
  VMTemplateVO template=ApiDBUtils.findTemplateById(userVm.getTemplateId());
  if (template != null) {
    userVmResponse.setTemplateId(userVm.getTemplateId());
    userVmResponse.setTemplateName(template.getName());
    userVmResponse.setTemplateDisplayText(template.getDisplayText());
    userVmResponse.setPasswordEnabled(template.getEnablePassword());
  }
 else {
    userVmResponse.setTemplateId(-1L);
    userVmResponse.setTemplateName("ISO Boot");
    userVmResponse.setTemplateDisplayText("ISO Boot");
    userVmResponse.setPasswordEnabled(false);
  }
  if (userVm.getPassword() != null) {
    userVmResponse.setPassword(userVm.getPassword());
  }
  if (userVm.getIsoId() != null) {
    VMTemplateVO iso=ApiDBUtils.findTemplateById(userVm.getIsoId());
    if (iso != null) {
      userVmResponse.setIsoId(userVm.getIsoId());
      userVmResponse.setIsoName(iso.getName());
    }
  }
  ServiceOffering offering=ApiDBUtils.findServiceOfferingById(userVm.getServiceOfferingId());
  userVmResponse.setServiceOfferingId(userVm.getServiceOfferingId());
  userVmResponse.setServiceOfferingName(offering.getName());
  userVmResponse.setCpuNumber(offering.getCpu());
  userVmResponse.setCpuSpeed(offering.getSpeed());
  userVmResponse.setMemory(offering.getRamSize());
  VolumeVO rootVolume=ApiDBUtils.findRootVolume(userVm.getId());
  if (rootVolume != null) {
    userVmResponse.setRootDeviceId(rootVolume.getDeviceId());
    String rootDeviceType="Not created";
    if (rootVolume.getPoolId() != null) {
      StoragePoolVO storagePool=ApiDBUtils.findStoragePoolById(rootVolume.getPoolId());
      rootDeviceType=storagePool.getPoolType().toString();
    }
    userVmResponse.setRootDeviceType(rootDeviceType);
  }
  DecimalFormat decimalFormat=new DecimalFormat("#.##");
  String cpuUsed=null;
  VmStats vmStats=ApiDBUtils.getVmStatistics(userVm.getId());
  if (vmStats != null) {
    float cpuUtil=(float)vmStats.getCPUUtilization();
    cpuUsed=decimalFormat.format(cpuUtil) + "%";
    userVmResponse.setCpuUsed(cpuUsed);
    Double networkKbRead=Double.valueOf(vmStats.getNetworkReadKBs());
    userVmResponse.setNetworkKbsRead(networkKbRead.longValue());
    Double networkKbWrite=Double.valueOf(vmStats.getNetworkWriteKBs());
    userVmResponse.setNetworkKbsWrite(networkKbWrite.longValue());
  }
  userVmResponse.setGuestOsId(userVm.getGuestOSId());
  userVmResponse.setSecurityGroupList(ApiDBUtils.getNetworkGroupsNamesForVm(userVm.getId()));
  List<NicProfile> nicProfiles=ApiDBUtils.getNics(userVm);
  List<NicResponse> nicResponses=new ArrayList<NicResponse>();
  for (  NicProfile singleNicProfile : nicProfiles) {
    NicResponse nicResponse=new NicResponse();
    nicResponse.setId(singleNicProfile.getId());
    nicResponse.setIpaddress(singleNicProfile.getIp4Address());
    nicResponse.setGateway(singleNicProfile.getGateway());
    nicResponse.setNetmask(singleNicProfile.getNetmask());
    nicResponse.setNetworkid(singleNicProfile.getNetworkId());
    if (acct.getType() == Account.ACCOUNT_TYPE_ADMIN) {
      if (singleNicProfile.getBroadCastUri() != null) {
        nicResponse.setBroadcastUri(singleNicProfile.getBroadCastUri().toString());
      }
      if (singleNicProfile.getIsolationUri() != null) {
        nicResponse.setIsolationUri(singleNicProfile.getIsolationUri().toString());
      }
    }
    Network network=ApiDBUtils.findNetworkById(singleNicProfile.getNetworkId());
    nicResponse.setTrafficType(network.getTrafficType().toString());
    nicResponse.setType(network.getGuestType().toString());
    nicResponse.setIsDefault(singleNicProfile.isDefaultNic());
    nicResponse.setObjectName("nic");
    nicResponses.add(nicResponse);
  }
  userVmResponse.setNics(nicResponses);
  userVmResponse.setObjectName("virtualmachine");
  return userVmResponse;
}
