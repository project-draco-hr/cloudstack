{
  List<CapacityResponse> capacityResponses=new ArrayList<CapacityResponse>();
  for (  Capacity summedCapacity : result) {
    CapacityResponse capacityResponse=new CapacityResponse();
    capacityResponse.setCapacityTotal(summedCapacity.getTotalCapacity());
    capacityResponse.setCapacityType(summedCapacity.getCapacityType());
    capacityResponse.setCapacityUsed(summedCapacity.getUsedCapacity());
    if (summedCapacity.getPodId() != null) {
      capacityResponse.setPodId(summedCapacity.getPodId());
      if (summedCapacity.getPodId() > 0) {
        HostPodVO pod=ApiDBUtils.findPodById(summedCapacity.getPodId());
        if (pod != null) {
          capacityResponse.setPodName(pod.getName());
        }
      }
 else {
        capacityResponse.setPodName("All");
      }
    }
    capacityResponse.setZoneId(summedCapacity.getDataCenterId());
    capacityResponse.setZoneName(ApiDBUtils.findZoneById(summedCapacity.getDataCenterId()).getName());
    if (summedCapacity.getTotalCapacity() != 0) {
      capacityResponse.setPercentUsed(format.format((float)summedCapacity.getUsedCapacity() / (float)summedCapacity.getTotalCapacity() * 100f));
    }
 else {
      capacityResponse.setPercentUsed(format.format(0L));
    }
    capacityResponse.setObjectName("capacity");
    capacityResponses.add(capacityResponse);
  }
  return capacityResponses;
}
