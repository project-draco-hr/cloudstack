{
  VlanVO vlan=ApiDBUtils.findVlanById(ipAddr.getVlanId());
  boolean forVirtualNetworks=vlan.getVlanType().equals(VlanType.VirtualNetwork);
  long zoneId=ipAddr.getDataCenterId();
  IPAddressResponse ipResponse=new IPAddressResponse();
  ipResponse.setId(ipAddr.getId());
  ipResponse.setIpAddress(ipAddr.getAddress().toString());
  if (ipAddr.getAllocatedTime() != null) {
    ipResponse.setAllocated(ipAddr.getAllocatedTime());
  }
  ipResponse.setZoneId(zoneId);
  ipResponse.setZoneName(ApiDBUtils.findZoneById(ipAddr.getDataCenterId()).getName());
  ipResponse.setSourceNat(ipAddr.isSourceNat());
  ipResponse.setIsSystem(ipAddr.getSystem());
  populateOwner(ipResponse,ipAddr);
  ipResponse.setForVirtualNetwork(forVirtualNetworks);
  ipResponse.setStaticNat(ipAddr.isOneToOneNat());
  if (ipAddr.getAssociatedWithVmId() != null) {
    UserVm vm=ApiDBUtils.findUserVmById(ipAddr.getAssociatedWithVmId());
    ipResponse.setVirtualMachineId(vm.getId());
    ipResponse.setVirtualMachineName(vm.getHostName());
    if (vm.getDisplayName() != null) {
      ipResponse.setVirtualMachineDisplayName(vm.getDisplayName());
    }
 else {
      ipResponse.setVirtualMachineDisplayName(vm.getHostName());
    }
  }
  ipResponse.setAssociatedNetworkId(ipAddr.getAssociatedWithNetworkId());
  ipResponse.setVpcId(ipAddr.getVpcId());
  Long vlanNetworkId=ApiDBUtils.getVlanNetworkId(ipAddr.getVlanId());
  Long networkId;
  if (vlanNetworkId != null) {
    networkId=vlanNetworkId;
  }
 else {
    networkId=ApiDBUtils.getPublicNetworkIdByZone(zoneId);
  }
  ipResponse.setNetworkId(networkId);
  ipResponse.setState(ipAddr.getState().toString());
  ipResponse.setPhysicalNetworkId(ipAddr.getPhysicalNetworkId());
  Account account=UserContext.current().getCaller();
  if ((account == null) || account.getType() == Account.ACCOUNT_TYPE_ADMIN) {
    ipResponse.setVlanId(ipAddr.getVlanId());
    ipResponse.setVlanName(ApiDBUtils.findVlanById(ipAddr.getVlanId()).getVlanTag());
  }
  if (ipAddr.getSystem()) {
    if (ipAddr.isOneToOneNat()) {
      ipResponse.setPurpose(IpAddress.Purpose.StaticNat.toString());
    }
 else {
      ipResponse.setPurpose(IpAddress.Purpose.Lb.toString());
    }
  }
  List<? extends ResourceTag> tags=ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.PublicIpAddress,ipAddr.getId());
  List<ResourceTagResponse> tagResponses=new ArrayList<ResourceTagResponse>();
  for (  ResourceTag tag : tags) {
    ResourceTagResponse tagResponse=createResourceTagResponse(tag,true);
    tagResponses.add(tagResponse);
  }
  ipResponse.setTags(tagResponses);
  ipResponse.setObjectName("ipaddress");
  return ipResponse;
}
