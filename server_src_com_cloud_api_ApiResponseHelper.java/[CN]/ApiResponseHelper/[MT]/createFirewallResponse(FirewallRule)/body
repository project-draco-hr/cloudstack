{
  FirewallResponse response=new FirewallResponse();
  response.setId(fwRule.getUuid());
  response.setProtocol(fwRule.getProtocol());
  if (fwRule.getSourcePortStart() != null) {
    response.setStartPort(fwRule.getSourcePortStart());
  }
  if (fwRule.getSourcePortEnd() != null) {
    response.setEndPort(fwRule.getSourcePortEnd());
  }
  List<String> cidrs=ApiDBUtils.findFirewallSourceCidrs(fwRule.getId());
  response.setCidrList(StringUtils.join(cidrs,","));
  if (fwRule.getTrafficType() == FirewallRule.TrafficType.Ingress) {
    IpAddress ip=ApiDBUtils.findIpAddressById(fwRule.getSourceIpAddressId());
    response.setPublicIpAddressId(ip.getUuid());
    response.setPublicIpAddress(ip.getAddress().addr());
  }
  Network network=ApiDBUtils.findNetworkById(fwRule.getNetworkId());
  response.setNetworkId(network.getUuid());
  FirewallRule.State state=fwRule.getState();
  String stateToSet=state.toString();
  if (state.equals(FirewallRule.State.Revoke)) {
    stateToSet="Deleting";
  }
  response.setIcmpCode(fwRule.getIcmpCode());
  response.setIcmpType(fwRule.getIcmpType());
  response.setForDisplay(fwRule.isDisplay());
  List<? extends ResourceTag> tags=ApiDBUtils.listByResourceTypeAndId(ResourceObjectType.FirewallRule,fwRule.getId());
  List<ResourceTagResponse> tagResponses=new ArrayList<ResourceTagResponse>();
  for (  ResourceTag tag : tags) {
    ResourceTagResponse tagResponse=createResourceTagResponse(tag,true);
    CollectionUtils.addIgnoreNull(tagResponses,tagResponse);
  }
  response.setTags(tagResponses);
  response.setState(stateToSet);
  response.setObjectName("firewallrule");
  return response;
}
