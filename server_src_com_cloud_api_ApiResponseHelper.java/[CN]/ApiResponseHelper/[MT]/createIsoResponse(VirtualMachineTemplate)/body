{
  TemplateResponse response=new TemplateResponse();
  response.setId(result.getId());
  response.setName(result.getName());
  response.setDisplayText(result.getDisplayText());
  response.setPublic(result.isPublicTemplate());
  response.setCreated(result.getCreated());
  response.setFormat(result.getFormat());
  response.setOsTypeId(result.getGuestOSId());
  response.setOsTypeName(ApiDBUtils.findGuestOSById(result.getGuestOSId()).getDisplayName());
  response.setDetails(result.getDetails());
  Account caller=UserContext.current().getCaller();
  if (result.getFormat() == ImageFormat.ISO) {
    response.setBootable(result.isBootable());
  }
 else {
    response.setHypervisor(result.getHypervisorType().toString());
  }
  Account owner=ApiDBUtils.findAccountById(result.getAccountId());
  populateAccount(response,owner.getId());
  populateDomain(response,owner.getDomainId());
  List<? extends ResourceTag> tags=null;
  if (result.getFormat() == ImageFormat.ISO) {
    tags=ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.ISO,result.getId());
  }
 else {
    tags=ApiDBUtils.listByResourceTypeAndId(TaggedResourceType.Template,result.getId());
  }
  List<ResourceTagResponse> tagResponses=new ArrayList<ResourceTagResponse>();
  for (  ResourceTag tag : tags) {
    ResourceTagResponse tagResponse=createResourceTagResponse(tag,true);
    tagResponses.add(tagResponse);
  }
  response.setTags(tagResponses);
  response.setObjectName("iso");
  return response;
}
