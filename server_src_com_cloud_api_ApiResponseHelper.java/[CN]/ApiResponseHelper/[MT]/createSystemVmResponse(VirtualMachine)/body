{
  SystemVmResponse vmResponse=new SystemVmResponse();
  if (vm.getType() == Type.SecondaryStorageVm || vm.getType() == Type.ConsoleProxy || vm.getType() == Type.DomainRouter) {
    vmResponse.setId(vm.getUuid());
    vmResponse.setSystemVmType(vm.getType().toString().toLowerCase());
    vmResponse.setName(vm.getHostName());
    if (vm.getPodIdToDeployIn() != null) {
      HostPodVO pod=ApiDBUtils.findPodById(vm.getPodIdToDeployIn());
      if (pod != null) {
        vmResponse.setPodId(pod.getUuid());
      }
    }
    VMTemplateVO template=ApiDBUtils.findTemplateById(vm.getTemplateId());
    if (template != null) {
      vmResponse.setTemplateId(template.getUuid());
    }
    vmResponse.setCreated(vm.getCreated());
    if (vm.getHostId() != null) {
      Host host=ApiDBUtils.findHostById(vm.getHostId());
      if (host != null) {
        vmResponse.setHostId(host.getUuid());
        vmResponse.setHostName(host.getName());
      }
    }
    if (vm.getState() != null) {
      vmResponse.setState(vm.getState().toString());
    }
    if (vm.getType() == Type.ConsoleProxy) {
      ConsoleProxyVO proxy=ApiDBUtils.findConsoleProxy(vm.getId());
      if (proxy != null) {
        vmResponse.setActiveViewerSessions(proxy.getActiveSession());
      }
    }
    DataCenter zone=ApiDBUtils.findZoneById(vm.getDataCenterId());
    if (zone != null) {
      vmResponse.setZoneId(zone.getUuid());
      vmResponse.setZoneName(zone.getName());
      vmResponse.setDns1(zone.getDns1());
      vmResponse.setDns2(zone.getDns2());
    }
    List<NicProfile> nicProfiles=ApiDBUtils.getNics(vm);
    for (    NicProfile singleNicProfile : nicProfiles) {
      Network network=ApiDBUtils.findNetworkById(singleNicProfile.getNetworkId());
      if (network != null) {
        if (network.getTrafficType() == TrafficType.Management) {
          vmResponse.setPrivateIp(singleNicProfile.getIp4Address());
          vmResponse.setPrivateMacAddress(singleNicProfile.getMacAddress());
          vmResponse.setPrivateNetmask(singleNicProfile.getNetmask());
        }
 else         if (network.getTrafficType() == TrafficType.Control) {
          vmResponse.setLinkLocalIp(singleNicProfile.getIp4Address());
          vmResponse.setLinkLocalMacAddress(singleNicProfile.getMacAddress());
          vmResponse.setLinkLocalNetmask(singleNicProfile.getNetmask());
        }
 else         if (network.getTrafficType() == TrafficType.Public) {
          vmResponse.setPublicIp(singleNicProfile.getIp4Address());
          vmResponse.setPublicMacAddress(singleNicProfile.getMacAddress());
          vmResponse.setPublicNetmask(singleNicProfile.getNetmask());
          vmResponse.setGateway(singleNicProfile.getGateway());
        }
 else         if (network.getTrafficType() == TrafficType.Guest) {
          NetworkOffering networkOffering=ApiDBUtils.findNetworkOfferingById(network.getNetworkOfferingId());
          if (networkOffering.getElasticIp()) {
            IpAddress ip=ApiDBUtils.findIpByAssociatedVmId(vm.getId());
            if (ip != null) {
              vmResponse.setPublicIp(ip.getAddress().addr());
            }
          }
 else {
            vmResponse.setPublicIp(singleNicProfile.getIp4Address());
            vmResponse.setPublicMacAddress(singleNicProfile.getMacAddress());
            vmResponse.setPublicNetmask(singleNicProfile.getNetmask());
            vmResponse.setGateway(singleNicProfile.getGateway());
          }
        }
      }
    }
  }
  vmResponse.setObjectName("systemvm");
  return vmResponse;
}
