{
  Account caller=CallContext.current().getCallingAccount();
  AsyncJob job=_entityMgr.findById(AsyncJob.class,cmd.getId());
  if (job == null) {
    throw new InvalidParameterValueException("Unable to find a job by id " + cmd.getId());
  }
  User userJobOwner=_accountMgr.getUserIncludingRemoved(job.getUserId());
  Account jobOwner=_accountMgr.getAccount(userJobOwner.getAccountId());
  if (_accountMgr.isNormalUser(caller.getId())) {
    if (caller.getId() != jobOwner.getId()) {
      throw new PermissionDeniedException("Account " + caller + " is not authorized to see job id="+ job.getId());
    }
  }
 else   if (_accountMgr.isDomainAdmin(caller.getId())) {
    _accountMgr.checkAccess(caller,null,true,jobOwner);
  }
  return createAsyncJobResponse(_jobMgr.queryJob(cmd.getId(),true));
}
