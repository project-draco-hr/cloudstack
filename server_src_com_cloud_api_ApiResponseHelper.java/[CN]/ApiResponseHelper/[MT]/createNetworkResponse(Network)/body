{
  NetworkProfile profile=ApiDBUtils.getNetworkProfile(network.getId());
  NetworkResponse response=new NetworkResponse();
  response.setId(network.getId());
  response.setName(network.getName());
  response.setDisplaytext(network.getDisplayText());
  if (network.getBroadcastDomainType() != null) {
    response.setBroadcastDomainType(network.getBroadcastDomainType().toString());
  }
  if (network.getTrafficType() != null) {
    response.setTrafficType(network.getTrafficType().name());
  }
  if (network.getGuestType() != null) {
    response.setType(network.getGuestType().toString());
  }
  response.setGateway(network.getGateway());
  response.setCidr(network.getCidr());
  if (network.getCidr() != null) {
    response.setNetmask(NetUtils.cidr2Netmask(network.getCidr()));
  }
  if (network.getBroadcastUri() != null) {
    String broadcastUri=network.getBroadcastUri().toString();
    response.setBroadcastUri(broadcastUri);
    String vlan=broadcastUri.substring("vlan://".length(),broadcastUri.length());
    response.setVlan(vlan);
  }
  DataCenter zone=ApiDBUtils.findZoneById(network.getDataCenterId());
  response.setZoneId(network.getDataCenterId());
  response.setZoneName(zone.getName());
  response.setPhysicalNetworkId(network.getPhysicalNetworkId());
  NetworkOffering networkOffering=ApiDBUtils.findNetworkOfferingById(network.getNetworkOfferingId());
  if (networkOffering != null) {
    response.setNetworkOfferingId(networkOffering.getId());
    response.setNetworkOfferingName(networkOffering.getName());
    response.setNetworkOfferingDisplayText(networkOffering.getDisplayText());
    response.setIsSystem(networkOffering.isSystemOnly());
    response.setNetworkOfferingAvailability(networkOffering.getAvailability().toString());
  }
  if (network.getAclType() != null) {
    response.setAclType(network.getAclType().toString());
  }
  response.setState(network.getState().toString());
  response.setRestartRequired(network.isRestartRequired());
  response.setRelated(network.getRelated());
  response.setNetworkDomain(network.getNetworkDomain());
  response.setDns1(profile.getDns1());
  response.setDns2(profile.getDns2());
  Map<Service,Map<Capability,String>> serviceCapabilitiesMap=ApiDBUtils.getNetworkCapabilities(network.getId(),network.getDataCenterId());
  List<ServiceResponse> serviceResponses=new ArrayList<ServiceResponse>();
  if (serviceCapabilitiesMap != null) {
    for (    Service service : serviceCapabilitiesMap.keySet()) {
      ServiceResponse serviceResponse=new ServiceResponse();
      if (service == Service.Gateway) {
        continue;
      }
      serviceResponse.setName(service.getName());
      List<CapabilityResponse> capabilityResponses=new ArrayList<CapabilityResponse>();
      Map<Capability,String> serviceCapabilities=serviceCapabilitiesMap.get(service);
      if (serviceCapabilities != null) {
        for (        Capability capability : serviceCapabilities.keySet()) {
          CapabilityResponse capabilityResponse=new CapabilityResponse();
          String capabilityValue=serviceCapabilities.get(capability);
          capabilityResponse.setName(capability.getName());
          capabilityResponse.setValue(capabilityValue);
          capabilityResponse.setObjectName("capability");
          capabilityResponses.add(capabilityResponse);
        }
        serviceResponse.setCapabilities(capabilityResponses);
      }
      serviceResponse.setObjectName("service");
      serviceResponses.add(serviceResponse);
    }
  }
  response.setServices(serviceResponses);
  if (network.getAclType() == null || network.getAclType() == ACLType.Account) {
    populateOwner(response,network);
  }
 else {
    Pair<Long,Boolean> domainNetworkDetails=ApiDBUtils.getDomainNetworkDetails(network.getId());
    response.setDomainId(domainNetworkDetails.first());
    response.setSubdomainAccess(domainNetworkDetails.second());
  }
  Long dedicatedDomainId=ApiDBUtils.getDedicatedNetworkDomain(network.getId());
  if (dedicatedDomainId != null) {
    Domain domain=ApiDBUtils.findDomainById(dedicatedDomainId);
    response.setDomainId(dedicatedDomainId);
    response.setDomainName(domain.getName());
  }
  response.setSpecifyIpRanges(network.getSpecifyIpRanges());
  response.setObjectName("network");
  return response;
}
