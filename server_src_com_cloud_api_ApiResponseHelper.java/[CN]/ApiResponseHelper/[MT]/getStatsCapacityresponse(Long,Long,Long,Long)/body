{
  List<CapacityVO> capacities=new ArrayList<CapacityVO>();
  capacities.add(ApiDBUtils.getStoragePoolUsedStats(poolId,clusterId,podId,zoneId));
  if (clusterId == null && podId == null) {
    capacities.add(ApiDBUtils.getSecondaryStorageUsedStats(poolId,zoneId));
  }
  List<CapacityResponse> capacityResponses=new ArrayList<CapacityResponse>();
  for (  CapacityVO capacity : capacities) {
    CapacityResponse capacityResponse=new CapacityResponse();
    capacityResponse.setCapacityType(capacity.getCapacityType());
    capacityResponse.setCapacityUsed(capacity.getUsedCapacity());
    capacityResponse.setCapacityTotal(capacity.getTotalCapacity());
    if (capacityResponse.getCapacityTotal() != 0) {
      capacityResponse.setPercentUsed(s_percentFormat.format((float)capacityResponse.getCapacityUsed() / (float)capacityResponse.getCapacityTotal() * 100f));
    }
 else {
      capacityResponse.setPercentUsed(s_percentFormat.format(0L));
    }
    capacityResponses.add(capacityResponse);
  }
  return capacityResponses;
}
