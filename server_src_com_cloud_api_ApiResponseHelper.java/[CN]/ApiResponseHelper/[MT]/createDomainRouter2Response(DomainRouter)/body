{
  DomainRouterResponse routerResponse=new DomainRouterResponse();
  routerResponse.setId(router.getId());
  routerResponse.setZoneId(router.getDataCenterId());
  routerResponse.setName(router.getHostName());
  routerResponse.setPodId(router.getPodId());
  routerResponse.setTemplateId(router.getTemplateId());
  routerResponse.setCreated(router.getCreated());
  routerResponse.setState(router.getState());
  routerResponse.setNetworkDomain(router.getDomain());
  if (router.getHostId() != null) {
    routerResponse.setHostId(router.getHostId());
    routerResponse.setHostName(ApiDBUtils.findHostById(router.getHostId()).getName());
  }
  Account accountTemp=ApiDBUtils.findAccountById(router.getAccountId());
  if (accountTemp != null) {
    routerResponse.setAccountName(accountTemp.getAccountName());
    routerResponse.setDomainId(accountTemp.getDomainId());
    routerResponse.setDomainName(ApiDBUtils.findDomainById(accountTemp.getDomainId()).getName());
  }
  AsyncJobVO asyncJob=ApiDBUtils.findInstancePendingAsyncJob("domain_router",router.getId());
  if (asyncJob != null) {
    routerResponse.setJobId(asyncJob.getId());
    routerResponse.setJobStatus(asyncJob.getStatus());
  }
  List<? extends Nic> nics=BaseCmd._networkMgr.getNics(router);
  for (  Nic singleNic : nics) {
    long configId=singleNic.getNetworkId();
    Network networkConf=BaseCmd._networkMgr.getNetworkConfiguration(configId);
    if (networkConf.getTrafficType() == TrafficType.Guest) {
      routerResponse.setGuestIpAddress(singleNic.getIp4Address());
      routerResponse.setGuestMacAddress(singleNic.getMacAddress());
      routerResponse.setGuestNetmask(singleNic.getNetmask());
    }
    if (networkConf.getTrafficType() == TrafficType.Control) {
      routerResponse.setPrivateIp(singleNic.getIp4Address());
      routerResponse.setPrivateMacAddress(singleNic.getMacAddress());
      routerResponse.setPrivateNetmask(singleNic.getNetmask());
    }
    if (networkConf.getTrafficType() == TrafficType.Public) {
      routerResponse.setPublicIp(singleNic.getIp4Address());
      routerResponse.setPublicMacAddress(singleNic.getMacAddress());
      routerResponse.setPublicNetmask(singleNic.getNetmask());
      routerResponse.setGateway(singleNic.getGateway());
    }
    DataCenter zone=ApiDBUtils.findZoneById(router.getDataCenterId());
    if (zone != null) {
      routerResponse.setZoneName(zone.getName());
      routerResponse.setDns1(zone.getDns1());
      routerResponse.setDns2(zone.getDns2());
    }
  }
  routerResponse.setObjectName("domainrouter");
  return routerResponse;
}
