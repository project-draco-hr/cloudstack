{
  Account caller=UserContext.current().getCaller();
  boolean caller_is_admin=((caller == null) || (caller.getType() == Account.ACCOUNT_TYPE_ADMIN));
  Hashtable<Long,UserVmData> vmDataList=new Hashtable<Long,UserVmData>();
  for (  UserVm userVm : userVms) {
    UserVmData userVmData=newUserVmData(userVm);
    vmDataList.put(userVm.getId(),userVmData);
  }
  vmDataList=ApiDBUtils.listVmDetails(vmDataList,details);
  List<UserVmResponse> vmResponses=new ArrayList<UserVmResponse>();
  DecimalFormat decimalFormat=new DecimalFormat("#.##");
  for (  UserVmData uvd : vmDataList.values()) {
    UserVmResponse userVmResponse=newUserVmResponse(uvd,caller_is_admin);
    String cpuUsed=null;
    VmStats vmStats=ApiDBUtils.getVmStatistics(uvd.getId());
    if (vmStats != null) {
      float cpuUtil=(float)vmStats.getCPUUtilization();
      cpuUsed=decimalFormat.format(cpuUtil) + "%";
      userVmResponse.setCpuUsed(cpuUsed);
      Double networkKbRead=Double.valueOf(vmStats.getNetworkReadKBs());
      userVmResponse.setNetworkKbsRead(networkKbRead.longValue());
      Double networkKbWrite=Double.valueOf(vmStats.getNetworkWriteKBs());
      userVmResponse.setNetworkKbsWrite(networkKbWrite.longValue());
    }
    userVmResponse.setObjectName(objectName);
    vmResponses.add(userVmResponse);
  }
  return vmResponses;
}
