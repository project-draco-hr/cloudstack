{
  if (this.mode.equalsIgnoreCase("Stop")) {
    MockHost host=_mockHostDao.findByVmId(this.vmId);
    if (host != null) {
      String guid=host.getGuid();
      if (guid != null) {
        AgentResourceBase res=_resources.get(guid);
        if (res != null) {
          res.stop();
          _resources.remove(guid);
        }
      }
    }
    return;
  }
  String resource=null;
  if (vmType.equalsIgnoreCase("secstorage")) {
    resource="com.cloud.agent.AgentStorageResource";
  }
  MockHostVO mockHost=new MockHostVO();
  mockHost.setDataCenterId(this.dcId);
  mockHost.setPodId(this.podId);
  mockHost.setCpuCount(DEFAULT_HOST_CPU_CORES);
  mockHost.setCpuSpeed(DEFAULT_HOST_SPEED_MHZ);
  mockHost.setMemorySize(DEFAULT_HOST_MEM_SIZE);
  mockHost.setGuid(this.guid);
  mockHost.setName(name);
  mockHost.setPrivateIpAddress(this.privateIpAddress);
  mockHost.setPublicIpAddress(this.privateIpAddress);
  mockHost.setStorageIpAddress(this.privateIpAddress);
  mockHost.setPrivateMacAddress(this.privateMacAddress);
  mockHost.setPublicMacAddress(this.privateMacAddress);
  mockHost.setStorageMacAddress(this.privateMacAddress);
  mockHost.setVersion(this.getClass().getPackage().getImplementationVersion());
  mockHost.setResource(resource);
  mockHost.setVmId(vmId);
  mockHost=_mockHostDao.persist(mockHost);
  if (vmType.equalsIgnoreCase("secstorage")) {
    AgentStorageResource storageResource=new AgentStorageResource();
    try {
      Map<String,Object> params=new HashMap<String,Object>();
      params.put("guid",this.guid);
      storageResource.configure("secondaryStorage",params);
      storageResource.start();
      StartupCommand[] cmds=storageResource.initialize();
      _resourceMgr.addHost(mockHost.getDataCenterId(),storageResource,Host.Type.SecondaryStorageVM,null);
      _resources.put(this.guid,storageResource);
    }
 catch (    ConfigurationException e) {
      s_logger.debug("Failed to load secondary storage resource: " + e.toString());
      return;
    }
  }
}
