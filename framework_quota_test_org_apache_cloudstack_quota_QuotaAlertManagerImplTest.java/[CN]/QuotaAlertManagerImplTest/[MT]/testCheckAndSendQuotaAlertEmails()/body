{
  AccountVO accountVO=new AccountVO();
  accountVO.setId(2L);
  accountVO.setDomainId(1L);
  accountVO.setType(Account.ACCOUNT_TYPE_NORMAL);
  Mockito.when(accountDao.findById(Mockito.anyLong())).thenReturn(accountVO);
  QuotaAccountVO acc=new QuotaAccountVO(2L);
  acc.setQuotaBalance(new BigDecimal(404));
  acc.setQuotaMinBalance(new BigDecimal(100));
  acc.setQuotaBalanceDate(new Date());
  acc.setQuotaAlertDate(null);
  acc.setQuotaEnforce(0);
  List<QuotaAccountVO> accounts=new ArrayList<>();
  accounts.add(acc);
  Mockito.when(quotaAcc.listAllQuotaAccount()).thenReturn(accounts);
  Mockito.doNothing().when(quotaAlertManager).sendQuotaAlert(Mockito.any(QuotaAlertManagerImpl.DeferredQuotaEmail.class));
  Mockito.doReturn(true).when(quotaAlertManager).lockAccount(Mockito.anyLong());
  Mockito.doCallRealMethod().when(quotaAlertManager).checkAndSendQuotaAlertEmails();
  quotaAlertManager.checkAndSendQuotaAlertEmails();
  Mockito.verify(quotaAlertManager,Mockito.times(0)).sendQuotaAlert(Mockito.any(QuotaAlertManagerImpl.DeferredQuotaEmail.class));
  accounts.get(0).setQuotaBalance(new BigDecimal(99));
  quotaAlertManager.checkAndSendQuotaAlertEmails();
  Mockito.verify(quotaAlertManager,Mockito.times(1)).sendQuotaAlert(Mockito.any(QuotaAlertManagerImpl.DeferredQuotaEmail.class));
}
