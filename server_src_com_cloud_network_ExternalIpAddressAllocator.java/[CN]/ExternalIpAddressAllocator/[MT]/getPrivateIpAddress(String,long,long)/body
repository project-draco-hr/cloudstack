{
  if (_externalIpAllocatorUrl == null || this._externalIpAllocatorUrl.equalsIgnoreCase("")) {
    return new IpAddr();
  }
  String urlString=this._externalIpAllocatorUrl + "?command=getIpAddr&mac=" + macAddr+ "&dc="+ dcId+ "&pod="+ podId;
  s_logger.debug("getIP:" + urlString);
  BufferedReader in=null;
  try {
    URL url=new URL(urlString);
    URLConnection conn=url.openConnection();
    conn.setReadTimeout(30000);
    in=new BufferedReader(new InputStreamReader(conn.getInputStream()));
    String inputLine;
    while ((inputLine=in.readLine()) != null) {
      s_logger.debug(inputLine);
      String[] tokens=inputLine.split(",");
      if (tokens.length != 3) {
        s_logger.debug("the return value should be: mac,netmask,gateway");
        return new IpAddr();
      }
      return new IpAddr(tokens[0],tokens[1],tokens[2]);
    }
    return new IpAddr();
  }
 catch (  MalformedURLException e) {
    throw new CloudRuntimeException("URL is malformed " + urlString,e);
  }
catch (  IOException e) {
    return new IpAddr();
  }
 finally {
    if (in != null) {
      try {
        in.close();
      }
 catch (      IOException e) {
      }
    }
  }
}
