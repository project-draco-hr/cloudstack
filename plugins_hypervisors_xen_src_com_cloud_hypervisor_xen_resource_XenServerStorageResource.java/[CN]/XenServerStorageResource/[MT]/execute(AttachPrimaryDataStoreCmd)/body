{
  String dataStoreUri=cmd.getDataStore();
  Connection conn=hypervisorResource.getConnection();
  Map<String,String> params=null;
  try {
    try {
      URI uri=new URI(dataStoreUri);
      params=getParameters(uri);
    }
 catch (    URISyntaxException e1) {
      s_logger.debug("uri exception",e1);
      return new CreateVolumeAnswer(cmd,false,e1.toString());
    }
    SR sr=hypervisorResource.getStorageRepository(conn,params.get("storeUuid"));
    hypervisorResource.setupHeartbeatSr(conn,sr,false);
    long capacity=sr.getPhysicalSize(conn);
    long available=capacity - sr.getPhysicalUtilisation(conn);
    if (capacity == -1) {
      String msg="Pool capacity is -1! pool: ";
      s_logger.warn(msg);
      return new Answer(cmd,false,msg);
    }
    AttachPrimaryDataStoreAnswer answer=new AttachPrimaryDataStoreAnswer(cmd);
    answer.setCapacity(capacity);
    answer.setUuid(sr.getUuid(conn));
    answer.setAvailable(available);
    return answer;
  }
 catch (  XenAPIException e) {
    String msg="AttachPrimaryDataStoreCmd add XenAPIException:" + e.toString();
    s_logger.warn(msg,e);
    return new Answer(cmd,false,msg);
  }
catch (  Exception e) {
    String msg="AttachPrimaryDataStoreCmd failed:" + e.getMessage();
    s_logger.warn(msg,e);
    return new Answer(cmd,false,msg);
  }
}
