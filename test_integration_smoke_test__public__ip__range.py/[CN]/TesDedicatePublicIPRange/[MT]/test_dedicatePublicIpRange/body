@attr(tags=['simulator', 'publiciprange', 'dedicate', 'release'])
def test_dedicatePublicIpRange(self):
    'Test public IP range dedication\n        '
    self.debug('Creating Public IP range')
    self.public_ip_range = PublicIpRange.create(self.api_client, self.services)
    list_public_ip_range_response = PublicIpRange.list(self.apiclient, id=self.public_ip_range.vlan.id)
    self.debug(('Verify listPublicIpRanges response for public ip ranges: %s' % self.public_ip_range.vlan.id))
    self.assertEqual(isinstance(list_public_ip_range_response, list), True, 'Check for list Public IP range response')
    public_ip_response = list_public_ip_range_response[0]
    self.assertEqual(public_ip_response.id, self.public_ip_range.vlan.id, 'Check public ip range response id is in listVlanIpRanges')
    self.debug('Dedicating Public IP range')
    dedicate_public_ip_range_response = PublicIpRange.dedicate(self.apiclient, self.public_ip_range.vlan.id, account=self.account.name, domainid=self.account.domainid)
    list_public_ip_range_response = PublicIpRange.list(self.apiclient, id=self.public_ip_range.vlan.id)
    public_ip_response = list_public_ip_range_response[0]
    self.assertEqual(public_ip_response.account, self.account.name, 'Check account name is in listVlanIpRanges as the account public ip range is dedicated to')
    self.debug('Releasing Public IP range')
    self.public_ip_range.release(self.apiclient)
    list_public_ip_range_response = PublicIpRange.list(self.apiclient, id=self.public_ip_range.vlan.id)
    public_ip_response = list_public_ip_range_response[0]
    self.assertEqual(public_ip_response.account, 'system', 'Check account name is system account in listVlanIpRanges')
    self.debug('Deleting Public IP range')
    self.public_ip_range.delete(self.apiclient)
    return
