{
  ServerSocket serverSocket=null;
  try {
    serverSocket=createServerSocket(port);
    serverSocket.setSoTimeout(1000);
  }
 catch (  Exception e) {
    if (e instanceof InterruptedIOException || e instanceof InterruptedException) {
      Thread.currentThread().interrupt();
    }
    LogLog.error("exception setting timeout, shutting down server socket.",e);
    keepRunning=false;
    return;
  }
  try {
    try {
      serverSocket.setSoTimeout(1000);
    }
 catch (    SocketException e) {
      LogLog.error("exception setting timeout, shutting down server socket.",e);
      return;
    }
    while (keepRunning) {
      Socket socket=null;
      try {
        socket=serverSocket.accept();
      }
 catch (      InterruptedIOException e) {
      }
catch (      SocketException e) {
        LogLog.error("exception accepting socket, shutting down server socket.",e);
        keepRunning=false;
      }
catch (      IOException e) {
        LogLog.error("exception accepting socket.",e);
      }
      if (socket != null) {
        try {
          InetAddress remoteAddress=socket.getInetAddress();
          LogLog.debug("accepting connection from " + remoteAddress.getHostName() + " ("+ remoteAddress.getHostAddress()+ ")");
          ObjectOutputStream oos=new ObjectOutputStream(socket.getOutputStream());
          if (buffer != null && buffer.length() > 0) {
            sendCachedEvents(oos);
          }
          oosList.addElement(oos);
        }
 catch (        IOException e) {
          if (e instanceof InterruptedIOException) {
            Thread.currentThread().interrupt();
          }
          LogLog.error("exception creating output stream on socket.",e);
        }
      }
    }
  }
  finally {
    try {
      serverSocket.close();
    }
 catch (    InterruptedIOException e) {
      Thread.currentThread().interrupt();
    }
catch (    IOException e) {
    }
  }
}
