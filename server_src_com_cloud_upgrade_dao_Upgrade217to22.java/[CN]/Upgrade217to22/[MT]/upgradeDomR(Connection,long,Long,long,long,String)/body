{
  s_logger.debug("Upgrading domR" + domrId);
  PreparedStatement pstmt=conn.prepareStatement("SELECT vm_instance.id, vm_instance.state, vm_instance.private_mac_address, vm_instance.private_ip_address, vm_instance.private_netmask, domain_router.public_mac_address, domain_router.public_ip_address, domain_router.public_netmask, domain_router.guest_mac_address, domain_router.guest_ip_address, domain_router.guest_netmask, domain_router.vnet, domain_router.gateway, vm_instance.type FROM vm_instance INNER JOIN domain_router ON vm_instance.id=domain_router.id WHERE vm_instance.removed is NULL AND vm_instance.id=?");
  pstmt.setLong(1,domrId);
  ResultSet rs=pstmt.executeQuery();
  if (!rs.next()) {
    throw new CloudRuntimeException("Unable to find router " + domrId);
  }
  long id=rs.getLong(1);
  String state=rs.getString(2);
  boolean running=state.equals("Running") | state.equals("Starting") | state.equals("Stopping");
  String privateMac=rs.getString(3);
  String privateIp=rs.getString(4);
  String privateNetmask=rs.getString(5);
  String publicMac=rs.getString(6);
  String publicIp=rs.getString(7);
  String publicNetmask=rs.getString(8);
  String guestMac=rs.getString(9);
  String guestIp=rs.getString(10);
  String guestNetmask=rs.getString(11);
  String vnet=rs.getString(12);
  String gateway=rs.getString(13);
  String type=rs.getString(14);
  rs.close();
  pstmt.close();
  if (zoneType.equalsIgnoreCase("Basic")) {
    insertNic(conn,controlNetworkId,domrId,running,privateMac,privateIp,privateNetmask,"Start","169.254.0.1",null,"ControlNetworkGuru",false,1,"Static",privateIp != null ? (domrId + privateIp) : null);
    insertNic(conn,guestNetworkId,domrId,running,guestMac,guestIp,guestNetmask,"Start",gateway,vnet,"DirectPodBasedNetworkGuru",false,0,"Static",null);
  }
 else {
    insertNic(conn,publicNetworkId,domrId,running,publicMac,publicIp,publicNetmask,"Create",gateway,null,"PublicNetworkGuru",true,2,"Static",null);
    insertNic(conn,controlNetworkId,domrId,running,privateMac,privateIp,privateNetmask,"Start","169.254.0.1",null,"ControlNetworkGuru",false,1,"Static",privateIp != null ? (domrId + privateIp) : null);
    insertNic(conn,guestNetworkId,domrId,running,guestMac,guestIp,guestNetmask,"Start",null,vnet,"GuestNetworkGuru",false,0,"Static",null);
  }
}
