{
  s_logger.debug("Upgrading cp" + cpId);
  PreparedStatement pstmt=conn.prepareStatement("SELECT vm_instance.id, vm_instance.state, vm_instance.private_mac_address, vm_instance.private_ip_address, vm_instance.private_netmask, console_proxy.public_mac_address, console_proxy.public_ip_address, console_proxy.public_netmask, console_proxy.guest_mac_address, console_proxy.guest_ip_address, console_proxy.guest_netmask, console_proxy.vnet, console_proxy.gateway FROM vm_instance INNER JOIN console_proxy ON vm_instance.id=console_proxy.id WHERE vm_instance.removed is NULL AND vm_instance.id=?");
  pstmt.setLong(1,cpId);
  ResultSet rs=pstmt.executeQuery();
  if (!rs.next()) {
    throw new CloudRuntimeException("Unable to find cp " + cpId);
  }
  long id=rs.getLong(1);
  String state=rs.getString(2);
  boolean running=state.equals("Running") | state.equals("Starting") | state.equals("Stopping");
  String privateMac=rs.getString(3);
  String privateIp=rs.getString(4);
  String privateNetmask=rs.getString(5);
  String publicMac=rs.getString(6);
  String publicIp=rs.getString(7);
  String publicNetmask=rs.getString(8);
  String guestMac=rs.getString(9);
  String guestIp=rs.getString(10);
  String guestNetmask=rs.getString(11);
  String vnet=rs.getString(12);
  String gateway=rs.getString(13);
  rs.close();
  pstmt.close();
  insertNic(conn,publicNetworkId,cpId,running,publicMac,publicIp,publicNetmask,"Create",gateway,null,"PublicNetworkGuru",true,2,"Static",null);
  insertNic(conn,controlNetworkId,cpId,running,privateMac,privateIp,privateNetmask,"Create",null,null,"ControlNetworkGuru",false,1,"Static",privateIp != null ? (cpId + privateIp) : null);
  insertNic(conn,managementNetworkId,cpId,running,guestMac,guestIp,guestNetmask,"Start",null,vnet,"GuestNetworkGuru",false,0,"Static",null);
}
