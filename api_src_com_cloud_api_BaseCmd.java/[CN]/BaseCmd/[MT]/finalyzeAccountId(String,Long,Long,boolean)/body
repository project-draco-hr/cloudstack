{
  if (accountName != null) {
    if (domainId == null) {
      throw new InvalidParameterValueException("Account must be specified with domainId parameter");
    }
    Domain domain=_domainService.getDomain(domainId);
    if (domain == null) {
      throw new InvalidParameterValueException("Unable to find domain by id");
    }
    Account account=_accountService.getActiveAccountByName(accountName,domainId);
    if (account != null && account.getType() != Account.ACCOUNT_TYPE_PROJECT) {
      if (!enabledOnly || account.getState() == Account.State.enabled) {
        return account.getId();
      }
 else {
        throw new PermissionDeniedException("Can't add resources to the account id=" + account.getId() + " in state="+ account.getState()+ " as it's no longer active");
      }
    }
 else {
      List<IdentityProxy> idList=new ArrayList<IdentityProxy>();
      idList.add(new IdentityProxy("domain",domainId,"domainId"));
      throw new InvalidParameterValueException("Unable to find account by name " + accountName + " in domain with specified id");
    }
  }
  if (projectId != null) {
    Project project=_projectService.getProject(projectId);
    if (project != null) {
      if (!enabledOnly || project.getState() == Project.State.Active) {
        return project.getProjectAccountId();
      }
 else {
        PermissionDeniedException ex=new PermissionDeniedException("Can't add resources to the project with specified projectId in state=" + project.getState() + " as it's no longer active");
        ex.addProxyObject(project,projectId,"projectId");
        throw ex;
      }
    }
 else {
      throw new InvalidParameterValueException("Unable to find project by id");
    }
  }
  return null;
}
