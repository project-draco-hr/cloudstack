{
  LOGGER.info("Setting up Benchmark Test");
  completedTestCount=0;
  testBytes=new byte[1000000];
  randomGenerator.nextBytes(testBytes);
  server=new NioServer("NioTestServer",0,1,new NioTestServer());
  try {
    server.start();
  }
 catch (  final NioConnectionException e) {
    Assert.fail(e.getMessage());
  }
  for (int i=0; i < totalTestCount; i++) {
    final NioClient maliciousClient=new NioMaliciousClient("NioMaliciousTestClient-" + i,"127.0.0.1",server.getPort(),1,new NioMaliciousTestClient());
    maliciousClients.add(maliciousClient);
    maliciousExecutor.submit(new ThreadedNioClient(maliciousClient));
  }
  for (int i=0; i < totalTestCount; i++) {
    final NioClient client=new NioClient("NioTestClient-" + i,"127.0.0.1",server.getPort(),1,new NioTestClient());
    clients.add(client);
    clientExecutor.submit(new ThreadedNioClient(client));
  }
}
