def VerifyRouterState(apiclient, account, domainid, desiredState, retries=0):
    'List the router associated with the account and\n       verify that router state matches with the desired state\n       Return PASS/FAIL depending upon whether router state matches\n       or not'
    isRouterStateDesired = False
    failureMessage = ''
    while (retries >= 0):
        routers = Router.list(apiclient, account=account, domainid=domainid, listall=True)
        if (str(routers[0].state).lower() == str(desiredState).lower()):
            isRouterStateDesired = True
            break
        time.sleep(60)
        retries -= 1
    if (not isRouterStateDesired):
        failureMessage = ('Router state should be %s,                but it is %s' % (desiredState, routers[0].state))
    return [isRouterStateDesired, failureMessage]
