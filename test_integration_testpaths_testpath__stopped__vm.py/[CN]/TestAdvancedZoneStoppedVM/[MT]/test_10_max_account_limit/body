@attr('simulator_only', tags=['advanced', 'basic'], required_hardware='false')
def test_10_max_account_limit(self):
    ' Positive test for stopped VM test path - T12\n\n        # 1.  Create an account in root domain and set the VM limit\n        #     to max 2 VMs\n        # 2.  Deploy two VMs in the account with startvm parameter\n        #     as false\n        # 3.  Deployment of both VMs should be successful\n        # 4.  Try to deploy 3rd VM with startvm False, deployment should fail\n        '
    account = Account.create(self.apiclient, self.testdata['account'], domainid=self.domain.id)
    self.cleanup.append(account)
    Resources.updateLimit(self.apiclient, resourcetype=0, max=2, account=account.name, domainid=account.domainid)
    VirtualMachine.create(self.apiclient, self.testdata['small'], templateid=self.defaultTemplateId, accountid=account.name, domainid=account.domainid, serviceofferingid=self.service_offering.id, zoneid=self.zone.id, startvm=False, mode=self.zone.networktype)
    VirtualMachine.create(self.apiclient, self.testdata['small'], templateid=self.defaultTemplateId, accountid=account.name, domainid=account.domainid, serviceofferingid=self.service_offering.id, zoneid=self.zone.id, startvm=False, mode=self.zone.networktype)
    with self.assertRaises(Exception):
        VirtualMachine.create(self.apiclient, self.testdata['small'], templateid=self.defaultTemplateId, accountid=account.name, domainid=account.domainid, serviceofferingid=self.service_offering.id, zoneid=self.zone.id, startvm=False, mode=self.zone.networktype)
    return
