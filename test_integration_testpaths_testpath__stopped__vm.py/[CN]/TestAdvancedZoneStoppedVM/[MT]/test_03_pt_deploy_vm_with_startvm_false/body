@attr(tags=['advanced', 'basic'], required_hardware='False')
def test_03_pt_deploy_vm_with_startvm_false(self):
    ' Positive test for stopped VM test path - T2\n\n        # 1.  Deploy VM in the network with specifying startvm parameter\n        #     as False\n        # 2.  List VMs and verify that VM is in stopped state\n        # For Advanced zone\n        # 3.  Start the VM, now router should be in running state\n        '
    virtual_machine = VirtualMachine.create(self.userapiclient, self.testdata['small'], templateid=self.defaultTemplateId, accountid=self.account.name, domainid=self.account.domainid, serviceofferingid=self.service_offering.id, networkids=([self.networkid] if self.networkid else None), zoneid=self.zone.id, startvm=False, mode=self.zone.networktype)
    self.cleanup.append(virtual_machine)
    response = virtual_machine.getState(self.apiclient, VirtualMachine.STOPPED)
    self.assertEqual(response[0], PASS, response[1])
    if (str(self.zone.networktype).lower() == 'advanced'):
        virtual_machine.start(self.userapiclient)
        response = VerifyRouterState(self.apiclient, self.account.name, self.account.domainid, RUNNING)
        self.assertTrue(response[0], response[1])
    return
