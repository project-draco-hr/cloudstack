{
  if (ipAddresses == null || ipAddresses.isEmpty()) {
    s_logger.debug("No ip association rules to be applied for network " + network.getId());
    return true;
  }
  VirtualRouter router=routers.get(0);
  if (router.getVpcId() == null) {
    return super.associatePublicIP(network,ipAddresses,routers);
  }
  s_logger.debug("APPLYING VPC IP RULES");
  final String typeString="vpc ip association";
  final boolean isPodLevelException=false;
  final boolean failWhenDisconnect=false;
  final Long podId=null;
  NicPlugInOutRules nicPlugInOutRules=new NicPlugInOutRules(network,ipAddresses);
  nicPlugInOutRules.accept(_advancedVisitor,router);
  VpcIpAssociationRules ipAssociationRules=new VpcIpAssociationRules(network,ipAddresses);
  boolean result=applyRules(network,routers,typeString,isPodLevelException,podId,failWhenDisconnect,new RuleApplierWrapper<RuleApplier>(ipAssociationRules));
  if (result) {
    _advancedVisitor.visit(nicPlugInOutRules);
  }
  return result;
}
