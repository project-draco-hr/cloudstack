def test_01_clusters(self):
    "Test Add clusters & hosts - simulator\n\n\n        # Validate the following:\n        # 1. Verify hypervisortype returned by API is Simulator/Xen/KVM/VWare\n        # 2. Verify that the cluster is in 'Enabled' allocation state\n        # 3. Verify that the host is added successfully and in Up state\n        #    with listHosts API response\n\n        #Create clusters with Hypervisor type Simulator/XEN/KVM/VWare\n        "
    for (k, v) in self.services['clusters'].items():
        cluster = Cluster.create(self.apiclient, v, zoneid=self.zone.id, podid=self.pod.id, hypervisor=self.hypervisor)
        self.debug(('Created Cluster for hypervisor type %s & ID: %s' % (v['hypervisor'], cluster.id)))
        self.assertEqual(cluster.hypervisortype, v['hypervisor'], (('Check hypervisor type is ' + v['hypervisor']) + ' or not'))
        self.assertEqual(cluster.allocationstate, 'Enabled', 'Check whether allocation state of cluster is enabled')
        response = list_hosts(self.apiclient, clusterid=cluster.id)
        if (not response):
            hypervisor_type = str(cluster.hypervisortype.lower())
            host = Host.create(self.apiclient, cluster, self.services['hosts'][hypervisor_type], zoneid=self.zone.id, podid=self.pod.id, hypervisor=self.hypervisor)
            if (host == FAILED):
                self.fail('Host Creation Failed')
            self.debug(('Created host (ID: %s) in cluster ID %s' % (host.id, cluster.id)))
        self.cleanup.append(host)
        self.cleanup.append(cluster)
        list_hosts_response = list_hosts(self.apiclient, clusterid=cluster.id)
        self.assertEqual(isinstance(list_hosts_response, list), True, 'Check list response returns a valid list')
        self.assertNotEqual(len(list_hosts_response), 0, 'Check list Hosts response')
        host_response = list_hosts_response[0]
        self.assertEqual(host_response.state, 'Up', 'Check if state of host is Up or not')
        list_cluster_response = list_clusters(self.apiclient, id=cluster.id)
        self.assertEqual(isinstance(list_cluster_response, list), True, 'Check list response returns a valid list')
        self.assertNotEqual(len(list_cluster_response), 0, 'Check list Hosts response')
        cluster_response = list_cluster_response[0]
        self.assertEqual(cluster_response.id, cluster.id, 'Check cluster ID with list clusters response')
        self.assertEqual(cluster_response.hypervisortype, cluster.hypervisortype, (('Check hypervisor type with is ' + v['hypervisor']) + ' or not'))
    return
