{
  super.onStart();
  ntlmState.domain=targetDomain;
  ntlmState.user=user;
  ntlmState.password=password;
  ntlmState.workstation=workstation;
  ntlmState.generateServicePrincipalName(serverHostName);
  ntlmState.ntlm_construct_authenticate_target_info();
  ntlmState.ntlm_generate_timestamp();
  ntlmState.ntlm_generate_client_challenge();
  ntlmState.ntlm_compute_lm_v2_response();
  ntlmState.ntlm_compute_ntlm_v2_response();
  ntlmState.ntlm_generate_key_exchange_key();
  ntlmState.ntlm_generate_random_session_key();
  ntlmState.ntlm_generate_exported_session_key();
  ntlmState.ntlm_encrypt_random_session_key();
  ntlmState.ntlm_init_rc4_seal_states();
  ByteBuffer authenticateMessage=generateAuthenticateMessage(ntlmState);
  ByteBuffer messageSignatureAndEncryptedServerPublicKey=generateMessageSignatureAndEncryptedServerPublicKey(ntlmState);
  ByteBuffer buf=new ByteBuffer(4096,true);
  TSRequest tsRequest=new TSRequest("TSRequest");
  tsRequest.version.value=2L;
  NegoItem negoItem=new NegoItem("NegoItem");
  negoItem.negoToken.value=authenticateMessage;
  tsRequest.negoTokens.tags=new Tag[]{negoItem};
  tsRequest.pubKeyAuth.value=messageSignatureAndEncryptedServerPublicKey;
  tsRequest.writeTag(buf);
  buf.trimAtCursor();
  pushDataToOTOut(buf);
  switchOff();
}
