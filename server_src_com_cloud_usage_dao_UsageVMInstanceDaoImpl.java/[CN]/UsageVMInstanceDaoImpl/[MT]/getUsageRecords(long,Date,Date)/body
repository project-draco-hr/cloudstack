{
  Transaction txn=Transaction.open(Transaction.USAGE_DB);
  PreparedStatement pstmt=null;
  List<UsageVMInstanceVO> usageInstances=new ArrayList<UsageVMInstanceVO>();
  try {
    String sql=GET_USAGE_RECORDS_BY_ACCOUNT;
    pstmt=txn.prepareAutoCloseStatement(sql);
    pstmt.setLong(1,accountId);
    pstmt.setString(2,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),startDate));
    pstmt.setString(3,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),endDate));
    pstmt.setString(4,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),startDate));
    pstmt.setString(5,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),endDate));
    pstmt.setString(6,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),startDate));
    pstmt.setString(7,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),endDate));
    ResultSet rs=pstmt.executeQuery();
    while (rs.next()) {
      int r_usageType=rs.getInt(1);
      long r_zoneId=rs.getLong(2);
      long r_accountId=rs.getLong(3);
      long r_vmId=rs.getLong(4);
      String r_vmName=rs.getString(5);
      long r_soId=rs.getLong(6);
      long r_tId=rs.getLong(7);
      String hypervisorType=rs.getString(8);
      String r_startDate=rs.getString(9);
      String r_endDate=rs.getString(10);
      Date instanceStartDate=null;
      Date instanceEndDate=null;
      if (r_startDate != null) {
        instanceStartDate=DateUtil.parseDateString(s_gmtTimeZone,r_startDate);
      }
      if (r_endDate != null) {
        instanceEndDate=DateUtil.parseDateString(s_gmtTimeZone,r_endDate);
      }
      UsageVMInstanceVO usageInstance=new UsageVMInstanceVO(r_usageType,r_zoneId,r_accountId,r_vmId,r_vmName,r_soId,r_tId,hypervisorType,instanceStartDate,instanceEndDate);
      usageInstances.add(usageInstance);
    }
  }
 catch (  Exception ex) {
    s_logger.error("error retrieving usage vm instances for account id: " + accountId,ex);
  }
 finally {
    txn.close();
  }
  return usageInstances;
}
