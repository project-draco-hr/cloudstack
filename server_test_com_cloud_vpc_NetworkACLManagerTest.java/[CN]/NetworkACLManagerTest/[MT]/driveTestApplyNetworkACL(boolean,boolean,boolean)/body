{
  NetworkACLManager aclManager=Mockito.spy(_aclMgr);
  Mockito.reset(_networkACLItemDao);
  long aclId=1L;
  NetworkVO network=Mockito.mock(NetworkVO.class);
  List<NetworkVO> networks=new ArrayList<NetworkVO>();
  networks.add(network);
  Mockito.when(_networkDao.listByAclId(Matchers.anyLong())).thenReturn(networks);
  Mockito.when(_networkDao.findById(Matchers.anyLong())).thenReturn(network);
  Mockito.when(_networkModel.isProviderSupportServiceInNetwork(Matchers.anyLong(),Matchers.any(Network.Service.class),Matchers.any(Network.Provider.class))).thenReturn(true);
  Mockito.when(_networkAclElements.get(0).applyNetworkACLs(Matchers.any(Network.class),Matchers.anyList())).thenReturn(applyNetworkACLs);
  List<VpcGatewayVO> vpcGateways=new ArrayList<VpcGatewayVO>();
  VpcGatewayVO vpcGateway=Mockito.mock(VpcGatewayVO.class);
  PrivateGateway privateGateway=Mockito.mock(PrivateGateway.class);
  Mockito.when(_vpcSvc.getVpcPrivateGateway(Mockito.anyLong())).thenReturn(privateGateway);
  vpcGateways.add(vpcGateway);
  Mockito.when(_vpcGatewayDao.listByAclIdAndType(aclId,VpcGateway.Type.Private)).thenReturn(vpcGateways);
  List<NetworkACLItemVO> rules=new ArrayList<NetworkACLItemVO>();
  NetworkACLItemVO ruleActive=Mockito.mock(NetworkACLItemVO.class);
  NetworkACLItemVO ruleStaged=Mockito.mock(NetworkACLItemVO.class);
  NetworkACLItemVO rule2Revoke=Mockito.mock(NetworkACLItemVO.class);
  NetworkACLItemVO rule2Add=Mockito.mock(NetworkACLItemVO.class);
  Mockito.when(ruleActive.getState()).thenReturn(NetworkACLItem.State.Active);
  Mockito.when(ruleStaged.getState()).thenReturn(NetworkACLItem.State.Staged);
  Mockito.when(rule2Add.getState()).thenReturn(NetworkACLItem.State.Add);
  Mockito.when(rule2Revoke.getState()).thenReturn(NetworkACLItem.State.Revoke);
  rules.add(ruleActive);
  rules.add(ruleStaged);
  rules.add(rule2Add);
  rules.add(rule2Revoke);
  long revokeId=8;
  Mockito.when(rule2Revoke.getId()).thenReturn(revokeId);
  long addId=9;
  Mockito.when(rule2Add.getId()).thenReturn(addId);
  Mockito.when(_networkACLItemDao.findById(addId)).thenReturn(rule2Add);
  Mockito.when(_networkACLItemDao.listByACL(aclId)).thenReturn(rules);
  Mockito.doReturn(applyACLToPrivateGw).when(aclManager).applyACLToPrivateGw(privateGateway);
  assertEquals("Result was not congruent with applyNetworkACLs and applyACLToPrivateGw",result,aclManager.applyNetworkACL(aclId));
  int timesProcessingDone=(applyNetworkACLs && applyACLToPrivateGw) ? 1 : 0;
  Mockito.verify(_networkACLItemDao,Mockito.times(timesProcessingDone)).remove(revokeId);
  Mockito.verify(rule2Add,Mockito.times(timesProcessingDone)).setState(NetworkACLItem.State.Active);
  Mockito.verify(_networkACLItemDao,Mockito.times(timesProcessingDone)).update(addId,rule2Add);
}
