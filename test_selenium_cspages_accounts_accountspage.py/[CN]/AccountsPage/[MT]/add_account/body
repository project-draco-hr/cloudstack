@try_except_decor
def add_account(self, username='', password='', email='', firstname='', lastname='', domain='', account='', type='', timezone='', network_domain=''):
    if ((len(username) == 0) or (len(password) == 0) or (len(email) == 0) or (len(firstname) == 0) or (len(lastname) == 0) or (len(domain) == 0) or (len(type) == 0)):
        return
    if (type not in ('User', 'Admin')):
        print 'Account type must be either User or Admin.'
        return
    if self.account_exists(username):
        return
    ele = self.browser.find_element_by_xpath("//div[@class='toolbar']")
    ele1 = ele.find_element_by_xpath('//div[3]/span')
    ele1.click()
    Shared.wait_for_element(self.browser, 'id', 'label_username')
    ele = self.browser.find_element_by_xpath("(//input[@name='username' and @type='text' and @id='label_username'])")
    ele.send_keys(username)
    ele = self.browser.find_element_by_xpath("(//input[@name='password' and @type='password' and @id='password'])")
    ele.send_keys(password)
    ele = self.browser.find_element_by_xpath("(//input[@name='password-confirm' and @type='password' and @id='label_confirm_password'])")
    ele.send_keys(password)
    ele = self.browser.find_element_by_xpath("(//input[@name='email' and @type='text' and @id='label_email'])")
    ele.send_keys(email)
    ele = self.browser.find_element_by_xpath("(//input[@name='firstname' and @type='text' and @id='label_first_name'])")
    ele.send_keys(firstname)
    ele = self.browser.find_element_by_xpath("(//input[@name='lastname' and @type='text' and @id='label_last_name'])")
    ele.send_keys(lastname)
    Shared.option_selection(self.browser, 'id', 'label_domain', 'ROOT')
    if (len(account) > 0):
        ele = self.browser.find_element_by_xpath("(//input[@name='account' and @type='text' and @id='label_account'])")
        ele.send_keys(account)
    Shared.option_selection(self.browser, 'id', 'label_type', type)
    Shared.option_selection(self.browser, 'id', 'label_timezone', timezone)
    if (len(network_domain) > 0):
        ele = self.browser.find_element_by_xpath("(//input[@name='networkdomain' and @type='text' and @id='label_network_domain'])")
        ele.send_keys(network_domain)
    self.button_add()
    Shared.wait_for_element(self.browser, 'class_name', 'fixed-header')
