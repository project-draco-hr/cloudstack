def __parseConfig(self):
    '\n        @Name : __parseConfig\n        @Description: Parses the Input configuration Json file\n                  and returns a dictionary from the file.\n        @Input      : NA\n        @Output     : Returns the parsed dictionary from json file\n                      Returns None for invalid input or if parsing failed\n        '
    config_dict = None
    try:
        try:
            configlines = []
            count = 0
            with open(self.__filePath, 'r') as fp:
                for line in fp:
                    print 'line number', (count + 1)
                    if (len(line) != 0):
                        ws = line.strip()
                        if (not ws.startswith('#')):
                            configlines.append(ws)
            config_dict = json.loads('\n'.join(configlines))
        except Exception as e:
            print '\n Exception occurred under ConfigManager:__parseConfig :%s', GetDetailExceptionInfo(e)
    finally:
        return config_dict
