def createVlanIpRanges(self, mode, ipranges, zoneId, podId=None, networkId=None, forvirtualnetwork=None):
    if (ipranges is None):
        return
    for iprange in ipranges:
        vlanipcmd = createVlanIpRange.createVlanIpRangeCmd()
        vlanipcmd.account = iprange.account
        vlanipcmd.domainid = iprange.domainid
        vlanipcmd.endip = iprange.endip
        vlanipcmd.gateway = iprange.gateway
        vlanipcmd.netmask = iprange.netmask
        vlanipcmd.networkid = networkId
        vlanipcmd.podid = podId
        vlanipcmd.startip = iprange.startip
        vlanipcmd.zoneid = zoneId
        vlanipcmd.vlan = iprange.vlan
        if (mode == 'Basic'):
            if forvirtualnetwork:
                vlanipcmd.forvirtualnetwork = 'true'
            else:
                vlanipcmd.forvirtualnetwork = 'false'
        else:
            vlanipcmd.forvirtualnetwork = 'true'
        ret = self.__apiClient.createVlanIpRange(vlanipcmd)
        if ((ret != FAILED) and ret.id):
            self.__tcRunLogger.debug('=== Creating Vlan Ip Range Successful===')
            self.__addToCleanUp('VlanIpRange', ret.id)
        else:
            self.__tcRunLogger.exception('=== Create Vlan Ip Range Failed===')
            self.__cleanAndExit()
