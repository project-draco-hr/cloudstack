def createPrimaryStorages(self, primaryStorages, zoneId, podId, clusterId):
    try:
        if (primaryStorages is None):
            return
        for primary in primaryStorages:
            primarycmd = createStoragePool.createStoragePoolCmd()
            if primary.details:
                for (key, value) in vars(primary.details).iteritems():
                    primarycmd.details.append({key: value, })
            primarycmd.name = primary.name
            primarycmd.podid = podId
            primarycmd.tags = primary.tags
            primarycmd.url = primary.url
            if (primary.scope.lower() == 'zone'):
                primarycmd.scope = primary.scope
            else:
                primarycmd.clusterid = clusterId
            primarycmd.zoneid = zoneId
            ret = self.__apiClient.createStoragePool(primarycmd)
            if ret.id:
                self.__tcRunLogger.debug('=== Creating Storage Pool Successful===')
                self.__addToCleanUp('StoragePool', ret.id)
    except Exception as e:
        print ('Exception Occurred: %s' % GetDetailExceptionInfo(e))
        self.__tcRunLogger.exception('=== Create Storage Pool Failed===')
        self.__cleanAndExit()
