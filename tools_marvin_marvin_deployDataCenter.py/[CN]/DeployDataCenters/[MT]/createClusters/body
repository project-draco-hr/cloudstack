def createClusters(self, clusters, zoneId, podId, vmwareDc=None):
    try:
        if (clusters is None):
            return
        if (vmwareDc is not None):
            vmwareDc.zoneid = zoneId
            self.addVmWareDataCenter(vmwareDc)
        for cluster in clusters:
            clustercmd = addCluster.addClusterCmd()
            clustercmd.clustername = cluster.clustername
            clustercmd.clustertype = cluster.clustertype
            clustercmd.hypervisor = cluster.hypervisor
            clustercmd.password = cluster.password
            clustercmd.podid = podId
            clustercmd.url = cluster.url
            clustercmd.username = cluster.username
            clustercmd.zoneid = zoneId
            clusterresponse = self.__apiClient.addCluster(clustercmd)
            if clusterresponse[0].id:
                clusterId = clusterresponse[0].id
                self.__tcRunLogger.debug(('Cluster Name : %s Id : %s Created Successfully' % (str(cluster.clustername), str(clusterId))))
                self.__addToCleanUp('Cluster', clusterId)
            if (cluster.hypervisor.lower() != 'vmware'):
                self.addHosts(cluster.hosts, zoneId, podId, clusterId, cluster.hypervisor)
            self.waitForHost(zoneId, clusterId)
            if (cluster.hypervisor.lower() != 'baremetal'):
                self.createPrimaryStorages(cluster.primaryStorages, zoneId, podId, clusterId)
    except Exception as e:
        print ('Exception Occurred %s' % GetDetailExceptionInfo(e))
        self.__tcRunLogger.exception(('====Cluster %s Creation Failed=====' % str(cluster.clustername)))
        self.__cleanAndExit()
