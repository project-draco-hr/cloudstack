def configureProviders(self, phynetwrk, zone):
    pnetprov = listNetworkServiceProviders.listNetworkServiceProvidersCmd()
    pnetprov.physicalnetworkid = phynetwrk.id
    pnetprov.state = 'Disabled'
    pnetprov.name = 'VirtualRouter'
    pnetprovres = self.apiClient.listNetworkServiceProviders(pnetprov)
    vrprov = listVirtualRouterElements.listVirtualRouterElementsCmd()
    vrprov.nspid = pnetprovres[0].id
    vrprovresponse = self.apiClient.listVirtualRouterElements(vrprov)
    vrprovid = vrprovresponse[0].id
    vrconfig = configureVirtualRouterElement.configureVirtualRouterElementCmd()
    vrconfig.enabled = 'true'
    vrconfig.id = vrprovid
    vrconfigresponse = self.apiClient.configureVirtualRouterElement(vrconfig)
    upnetprov = updateNetworkServiceProvider.updateNetworkServiceProviderCmd()
    upnetprov.id = vrprov.nspid
    upnetprov.state = 'Enabled'
    upnetprovresponse = self.apiClient.updateNetworkServiceProvider(upnetprov)
    if ((zone.networktype == 'Basic') and zone.securitygroupenabled):
        sgprovider = configGenerator.provider()
        sgprovider.name = 'SecurityGroupProvider'
        zone.providers.append(sgprovider)
    if (zone.networktype == 'Advanced'):
        pnetprov = listNetworkServiceProviders.listNetworkServiceProvidersCmd()
        pnetprov.physicalnetworkid = phynetwrk.id
        pnetprov.state = 'Disabled'
        pnetprov.name = 'VpcVirtualRouter'
        pnetprovres = self.apiClient.listNetworkServiceProviders(pnetprov)
        if (len(pnetprovres) > 0):
            vpcvrprov = listVirtualRouterElements.listVirtualRouterElementsCmd()
            vpcvrprov.nspid = pnetprovres[0].id
            vpcvrprovresponse = self.apiClient.listVirtualRouterElements(vpcvrprov)
            vpcvrprovid = vpcvrprovresponse[0].id
            vpcvrconfig = configureVirtualRouterElement.configureVirtualRouterElementCmd()
            vpcvrconfig.enabled = 'true'
            vpcvrconfig.id = vpcvrprovid
            vpcvrconfigresponse = self.apiClient.configureVirtualRouterElement(vpcvrconfig)
            upnetprov = updateNetworkServiceProvider.updateNetworkServiceProviderCmd()
            upnetprov.id = vpcvrprov.nspid
            upnetprov.state = 'Enabled'
            upnetprovresponse = self.apiClient.updateNetworkServiceProvider(upnetprov)
