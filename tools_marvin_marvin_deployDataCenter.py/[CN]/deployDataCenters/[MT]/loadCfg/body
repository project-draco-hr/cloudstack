def loadCfg(self):
    try:
        self.config = configGenerator.get_setup_config(self.configFile)
    except:
        raise cloudstackException.InvalidParameterException(('Failed to load config %s' % self.configFile))
    mgtDetails = self.config.mgtSvr[0]
    loggers = self.config.logger
    testClientLogFile = None
    self.testCaseLogFile = None
    self.testResultLogFile = None
    if ((loggers is not None) and (len(loggers) > 0)):
        for log in loggers:
            if (log.name == 'TestClient'):
                testClientLogFile = log.file
            elif (log.name == 'TestCase'):
                self.testCaseLogFile = log.file
            elif (log.name == 'TestResult'):
                self.testResultLogFile = log.file
    testClientLogger = None
    if (testClientLogFile is not None):
        testClientLogger = logging.getLogger('testclient.testengine.run')
        fh = logging.FileHandler(testClientLogFile)
        fh.setFormatter(logging.Formatter('%(asctime)s - %(levelname)s - %(name)s\\ - %(message)s'))
        testClientLogger.addHandler(fh)
        testClientLogger.setLevel(logging.INFO)
    self.testClientLogger = testClientLogger
    self.testClient = cloudstackTestClient.cloudstackTestClient(mgtDetails, logging=self.testClientLogger)
    if (mgtDetails.apiKey is None):
        (mgtDetails.apiKey, mgtDetails.securityKey) = self.registerApiKey()
        mgtDetails.port = 8080
        self.testClient = cloudstackTestClient.cloudstackTestClient(mgtDetails, logging=self.testClientLogger)
    'config database'
    dbSvr = self.config.dbSvr
    if (dbSvr is not None):
        self.testClient.dbConfigure(dbSvr.dbSvr, dbSvr.port, dbSvr.user, dbSvr.passwd, dbSvr.db)
    self.apiClient = self.testClient.getApiClient()
    'set hypervisor'
    if mgtDetails.hypervisor:
        self.apiClient.hypervisor = mgtDetails.hypervisor
    else:
        self.apiClient.hypervisor = 'XenServer'
