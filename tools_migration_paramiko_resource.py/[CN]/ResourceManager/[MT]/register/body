def register(self, obj, resource):
    '\n        Register a resource to be closed with an object is collected.\n        \n        When the given C{obj} is garbage-collected by the python interpreter,\n        the C{resource} will be closed by having its C{close()} method called.\n        Any exceptions are ignored.\n        \n        @param obj: the object to track\n        @type obj: object\n        @param resource: the resource to close when the object is collected\n        @type resource: object\n        '

    def callback(ref):
        try:
            resource.close()
        except:
            pass
        del self._table[id(resource)]
    self._table[id(resource)] = weakref.ref(obj, callback)
