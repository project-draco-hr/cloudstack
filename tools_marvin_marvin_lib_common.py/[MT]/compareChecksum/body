def compareChecksum(apiclient, service=None, original_checksum=None, disk_type=None, virt_machine=None):
    '\n    Create md5 checksum of the data present on the disk and compare\n    it with the given checksum\n    '
    if (virt_machine.state != 'Running'):
        virt_machine.start(apiclient)
    try:
        ssh = SshClient(virt_machine.ssh_ip, virt_machine.ssh_port, virt_machine.username, virt_machine.password)
    except Exception:
        raise Exception(('SSH access failed for server with IP address: %s' % virt_machine.ssh_ip))
    cmds = ['blkid', 'fdisk -l', ('mkdir -p %s' % service['data_write_paths']['mount_dir']), ('mount -t ext3 %s1 %s' % (service['volume_write_path'][virt_machine.hypervisor.lower()][disk_type], service['data_write_paths']['mount_dir']))]
    for c in cmds:
        ssh.execute(c)
    returned_data_0 = ssh.execute(('cat %s/%s/%s/%s' % (service['data_write_paths']['mount_dir'], service['data_write_paths']['sub_dir'], service['data_write_paths']['sub_lvl_dir1'], service['data_write_paths']['random_data'])))
    n = hashlib.md5()
    n.update(returned_data_0[0])
    ckecksum_returned_data_0 = n.hexdigest()
    assert (original_checksum == ckecksum_returned_data_0), 'Cheskum does not match with checksum of original data'
    cmds = [('umount %s' % service['data_write_paths']['mount_dir'])]
    for c in cmds:
        ssh.execute(c)
    return
