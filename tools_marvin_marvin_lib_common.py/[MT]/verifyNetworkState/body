def verifyNetworkState(apiclient, networkid, state, listall=True):
    'List networks and check if the network state matches the given state'
    retriesCount = 10
    isNetworkInDesiredState = False
    exceptionOccured = False
    exceptionMessage = ''
    try:
        while (retriesCount >= 0):
            networks = Network.list(apiclient, id=networkid, listall=listall)
            assert (validateList(networks)[0] == PASS), 'Networks list validation failed'
            if (str(networks[0].state).lower() == state):
                isNetworkInDesiredState = True
                break
            retriesCount -= 1
            time.sleep(60)
        if (not isNetworkInDesiredState):
            exceptionMessage = ('Network state should be %s, it is %s' % (state, networks[0].state))
    except Exception as e:
        exceptionOccured = True
        exceptionMessage = e
        return [exceptionOccured, isNetworkInDesiredState, exceptionMessage]
    return [exceptionOccured, isNetworkInDesiredState, exceptionMessage]
