def matchResourceCount(apiclient, expectedCount, resourceType, accountid=None, projectid=None):
    'Match the resource count of account/project with the expected\n    resource count'
    try:
        resourceholderlist = None
        if accountid:
            resourceholderlist = Account.list(apiclient, id=accountid)
        elif projectid:
            resourceholderlist = Project.list(apiclient, id=projectid, listall=True)
        validationresult = validateList(resourceholderlist)
        assert (validationresult[0] == PASS), 'accounts list validation failed'
        if (resourceType == RESOURCE_PRIMARY_STORAGE):
            resourceCount = resourceholderlist[0].primarystoragetotal
        elif (resourceType == RESOURCE_SECONDARY_STORAGE):
            resourceCount = resourceholderlist[0].secondarystoragetotal
        elif (resourceType == RESOURCE_CPU):
            resourceCount = resourceholderlist[0].cputotal
        elif (resourceType == RESOURCE_MEMORY):
            resourceCount = resourceholderlist[0].memorytotal
        assert (str(resourceCount) == str(expectedCount)), ('Resource count %s should match with the expected resource count %s' % (resourceCount, expectedCount))
    except Exception as e:
        return [FAIL, e]
    return [PASS, None]
