def isIpInDesiredState(apiclient, ipaddressid, state):
    ' Check if the given IP is in the correct state (given)\n    and return True/False accordingly'
    retriesCount = 10
    ipInDesiredState = False
    exceptionOccured = False
    exceptionMessage = ''
    try:
        while (retriesCount >= 0):
            portableips = PublicIPAddress.list(apiclient, id=ipaddressid)
            assert (validateList(portableips)[0] == PASS), 'IPs list validation failed'
            if (str(portableips[0].state).lower() == state):
                ipInDesiredState = True
                break
            retriesCount -= 1
            time.sleep(60)
    except Exception as e:
        exceptionOccured = True
        exceptionMessage = e
        return [exceptionOccured, ipInDesiredState, e]
    if (not ipInDesiredState):
        exceptionMessage = ('Ip should be in %s state, it is in %s' % (state, portableips[0].state))
    return [False, ipInDesiredState, exceptionMessage]
