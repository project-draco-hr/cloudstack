{
  PhysicalNetworkVO network=_physicalNetworkDao.findById(physicalNetworkId);
  if (network == null) {
    throw new InvalidParameterValueException("Physical Network id=" + physicalNetworkId + "doesn't exist in the system");
  }
  Networks.TrafficType trafficType=null;
  if (trafficTypeStr != null && !trafficTypeStr.isEmpty()) {
    try {
      trafficType=Networks.TrafficType.valueOf(trafficTypeStr);
    }
 catch (    IllegalArgumentException ex) {
      throw new InvalidParameterValueException("Unable to resolve trafficType '" + trafficTypeStr + "' to a supported value");
    }
  }
  if (_pNTrafficTypeDao.isTrafficTypeSupported(physicalNetworkId,trafficType)) {
    throw new CloudRuntimeException("This physical network already supports the traffic type: " + trafficType);
  }
  if (TrafficType.isSystemNetwork(trafficType) || TrafficType.Public.equals(trafficType) || TrafficType.Storage.equals(trafficType)) {
    if (!_physicalNetworkDao.listByZoneAndTrafficType(network.getDataCenterId(),trafficType).isEmpty()) {
      throw new CloudRuntimeException("Fail to add the traffic type to physical network because Zone already has a physical network with this traffic type: " + trafficType);
    }
  }
  if (TrafficType.Storage.equals(trafficType)) {
    List<SecondaryStorageVmVO> ssvms=_stnwMgr.getSSVMWithNoStorageNetwork(network.getDataCenterId());
    if (!ssvms.isEmpty()) {
      StringBuilder sb=new StringBuilder("Cannot add " + trafficType + " traffic type as there are below secondary storage vm still running. Please stop them all and add Storage traffic type again, then destory them all to allow CloudStack recreate them with storage network(If you have added storage network ip range)");
      sb.append("SSVMs:");
      for (      SecondaryStorageVmVO ssvm : ssvms) {
        sb.append(ssvm.getInstanceName()).append(":").append(ssvm.getState());
      }
      throw new CloudRuntimeException(sb.toString());
    }
  }
  Transaction txn=Transaction.currentTxn();
  try {
    txn.start();
    if (xenLabel == null) {
      xenLabel=getDefaultXenNetworkLabel(trafficType);
    }
    PhysicalNetworkTrafficTypeVO pNetworktrafficType=new PhysicalNetworkTrafficTypeVO(physicalNetworkId,trafficType,xenLabel,kvmLabel,vmwareLabel,simulatorLabel,vlan);
    pNetworktrafficType=_pNTrafficTypeDao.persist(pNetworktrafficType);
    txn.commit();
    return pNetworktrafficType;
  }
 catch (  Exception ex) {
    s_logger.warn("Exception: ",ex);
    throw new CloudRuntimeException("Fail to add a traffic type to physical network");
  }
}
