def registerTemplate(self, inProject=False):
    'Register and download template by default in the account/domain,\n        in project if stated so'
    try:
        builtin_info = get_builtin_template_info(self.apiclient, self.zone.id)
        self.services['template_2']['url'] = builtin_info[0]
        self.services['template_2']['hypervisor'] = builtin_info[1]
        self.services['template_2']['format'] = builtin_info[2]
        template = Template.register(self.apiclient, self.services['template_2'], zoneid=self.zone.id, account=(self.child_do_admin.name if (not inProject) else None), domainid=(self.child_do_admin.domainid if (not inProject) else None), projectid=(self.project.id if inProject else None))
        template.download(self.apiclient)
        templates = Template.list(self.apiclient, templatefilter=self.services['template_2']['templatefilter'], id=template.id)
        self.assertEqual(validateList(templates)[0], PASS, 'templates list validation failed')
        self.templateSize = (templates[0].size / (1024 ** 3))
    except Exception as e:
        return [FAIL, e]
    return [PASS, None]
