@attr(tags=['advanced'], required_hardware='false')
def test_02_deploy_vm_account_limit_reached(self):
    'Test Try to deploy VM with admin account where account has used\n            the resources but @ domain they are available\n\n        # Validate the following\n        # 1. Try to register template with admin account where account has used the\n        #    resources but @ domain they are available\n        # 2. Template registration should fail'
    response = self.setupAccounts()
    self.assertEqual(response[0], PASS, response[1])
    response = self.registerTemplate()
    self.assertEqual(response[0], PASS, response[1])
    expectedCount = self.templateSize
    response = matchResourceCount(self.apiclient, expectedCount, RESOURCE_SECONDARY_STORAGE, accountid=self.child_do_admin.id)
    self.assertEqual(response[0], PASS, response[1])
    accountLimit = self.templateSize
    response = self.updateSecondaryStorageLimits(accountLimit=accountLimit)
    self.assertEqual(response[0], PASS, response[1])
    with self.assertRaises(Exception):
        template = Template.register(self.apiclient, self.services['template_2'], zoneid=self.zone.id, account=self.child_do_admin.name, domainid=self.child_do_admin.domainid)
    return
