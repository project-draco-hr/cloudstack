def remoteaccessvpn_iptables(self, publicip, obj):
    publicdev = obj['public_interface']
    localcidr = obj['local_cidr']
    local_ip = obj['local_ip']
    self.fw.append(['', '', ('-A INPUT -i %s --dst %s -p udp -m udp --dport 500 -j ACCEPT' % (publicdev, publicip))])
    self.fw.append(['', '', ('-A INPUT -i %s --dst %s -p udp -m udp --dport 4500 -j ACCEPT' % (publicdev, publicip))])
    self.fw.append(['', '', ('-A INPUT -i %s --dst %s -p udp -m udp --dport 1701 -j ACCEPT' % (publicdev, publicip))])
    self.fw.append(['', '', ('-A INPUT -i %s -p ah -j ACCEPT' % publicdev)])
    self.fw.append(['', '', ('-A INPUT -i %s -p esp -j ACCEPT' % publicdev)])
    if self.config.is_vpc():
        self.fw.append(['', '', ' -N VPN_FORWARD'])
        self.fw.append(['', '', '-I FORWARD -i ppp+ -j VPN_FORWARD'])
        self.fw.append(['', '', '-I FORWARD -o ppp+ -j VPN_FORWARD'])
        self.fw.append(['', '', '-I FORWARD -o ppp+ -j VPN_FORWARD'])
        self.fw.append(['', '', ('-A VPN_FORWARD -s  %s -j RETURN' % localcidr)])
        self.fw.append(['', '', ('-A VPN_FORWARD -i ppp+ -d %s -j RETURN' % localcidr)])
        self.fw.append(['', '', '-A VPN_FORWARD -i ppp+  -o ppp+ -j RETURN'])
    else:
        self.fw.append(['', '', '-A FORWARD -i ppp+ -o  ppp+ -j ACCEPT'])
        self.fw.append(['', '', ('-A FORWARD -s %s -o  ppp+ -j ACCEPT' % localcidr)])
        self.fw.append(['', '', ('-A FORWARD -i ppp+ -d %s  -j ACCEPT' % localcidr)])
    self.fw.append(['', '', '-A INPUT -i ppp+ -m udp -p udp --dport 53 -j ACCEPT'])
    self.fw.append(['', '', '-A INPUT -i ppp+ -m tcp -p tcp --dport 53 -j ACCEPT'])
    self.fw.append(['nat', '', ('-I PREROUTING -i ppp+ -m tcp --dport 53 -j DNAT --to-destination %s' % local_ip)])
    if self.config.is_vpc():
        return
    self.fw.append(['mangle', '', ('-N  VPN_%s ' % publicip)])
    self.fw.append(['mangle', '', ('-I PREROUTING  -d %s -j VPN_%s ' % (publicip, publicip))])
    self.fw.append(['mangle', '', ('-A VPN_%s -p ah  -j ACCEPT ' % publicip)])
    self.fw.append(['mangle', '', ('-A VPN_%s -p esp  -j ACCEPT ' % publicip)])
    self.fw.append(['mangle', '', ('-A VPN_%s -j RETURN ' % publicip)])
