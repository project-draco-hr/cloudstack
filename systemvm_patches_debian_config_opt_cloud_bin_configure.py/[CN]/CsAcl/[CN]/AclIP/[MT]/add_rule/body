def add_rule(self, cidr):
    icmp_type = ''
    rule = self.rule
    icmp_type = 'any'
    if (('icmp_type' in self.rule.keys()) and (self.rule['icmp_type'] != (-1))):
        icmp_type = self.rule['icmp_type']
    if (('icmp_code' in self.rule.keys()) and (rule['icmp_code'] != (-1))):
        icmp_type = ('%s/%s' % (self.rule['icmp_type'], self.rule['icmp_code']))
    rnge = ''
    if (('first_port' in self.rule.keys()) and (self.rule['first_port'] == self.rule['last_port'])):
        rnge = self.rule['first_port']
    if (('first_port' in self.rule.keys()) and (self.rule['first_port'] != self.rule['last_port'])):
        rnge = ('%s:%s' % (rule['first_port'], rule['last_port']))
    if (self.direction == 'ingress'):
        if (rule['protocol'] == 'icmp'):
            self.fw.append(['mangle', 'front', (((((' -A FIREWALL_%s' % self.ip) + (' -s %s ' % cidr)) + (' -p %s ' % rule['protocol'])) + (' -m %s ' % rule['protocol'])) + (' --icmp-type %s -j %s' % (icmp_type, self.rule['action'])))])
        else:
            self.fw.append(['mangle', 'front', (((((' -A FIREWALL_%s' % self.ip) + (' -s %s ' % cidr)) + (' -p %s ' % rule['protocol'])) + (' -m %s ' % rule['protocol'])) + (' --dport %s -j RETURN' % rnge))])
    logging.debug('Current ACL IP direction is ==> %s', self.direction)
    if (self.direction == 'egress'):
        self.fw.append(['filter', '', ' -A FW_OUTBOUND -j FW_EGRESS_RULES'])
        if (rule['protocol'] == 'icmp'):
            self.fw.append(['filter', 'front', ((((' -A FW_EGRESS_RULES' + (' -s %s ' % cidr)) + (' -p %s ' % rule['protocol'])) + (' -m %s ' % rule['protocol'])) + (' --icmp-type %s -j %s' % (icmp_type, self.rule['action'])))])
        else:
            fwr = (' -A FW_EGRESS_RULES' + (' -s %s ' % cidr))
            if (rule['protocol'] != 'all'):
                fwr += ((('-p %s ' % rule['protocol']) + (' -m %s ' % rule['protocol'])) + (' --dport %s' % rnge))
            self.fw.append(['filter', 'front', ('%s -j %s' % (fwr, rule['action']))])
        logging.debug('EGRESS rule configured for protocol ==> %s, action ==> %s', rule['protocol'], rule['action'])
