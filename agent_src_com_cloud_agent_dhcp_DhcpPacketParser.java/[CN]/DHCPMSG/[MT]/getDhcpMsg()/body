{
  long magic=getUInt(DHCPPACKET.MAGIC.getValue());
  if (magic != 0x63538263) {
    return null;
  }
  DHCPMSG msg=new DHCPMSG();
  int pos=DHCPPACKET.OPTIONS.getValue();
  while (pos <= _len) {
    int type=(int)getByte(pos++) & 0xff;
    if (type == DHCPOPTIONTYPE.END.getValue()) {
      break;
    }
    if (type == DHCPOPTIONTYPE.PAD.getValue()) {
      continue;
    }
    int len=0;
    if (pos <= _len) {
      len=((int)getByte(pos++)) & 0xff;
    }
    if (type == DHCPOPTIONTYPE.MESSAGETYPE.getValue() || type == DHCPOPTIONTYPE.REQUESTEDIP.getValue()) {
      byte[] data=null;
      if ((len + pos) <= _len) {
        data=new byte[len];
        getByteArray(pos,data);
      }
      if (type == DHCPOPTIONTYPE.MESSAGETYPE.getValue()) {
        msg.msgType=DHCPMSGTYPE.valueOf((int)data[0]);
      }
 else       if (type == DHCPOPTIONTYPE.REQUESTEDIP.getValue()) {
        msg.requestedIP=data;
      }
    }
    pos+=len;
  }
  if (msg.msgType == DHCPMSGTYPE.DHCPREQUEST) {
    getByteArray(DHCPPACKET.CHADDR.getValue(),msg.chaddr);
    getByteArray(DHCPPACKET.CIADDR.getValue(),msg.caddr);
  }
 else   if (msg.msgType == DHCPMSGTYPE.DHCPACK) {
    getByteArray(DHCPPACKET.YIADDR.getValue(),msg.yaddr);
  }
  return msg;
}
