{
  try {
    StringBuilder sBuilder=new StringBuilder();
    sBuilder.append("command=");
    sBuilder.append(command);
    if (params != null && params.size() > 0) {
      Iterator<String> keys=params.keySet().iterator();
      while (keys.hasNext()) {
        String key=keys.next();
        sBuilder.append("&");
        sBuilder.append(key);
        sBuilder.append("=");
        sBuilder.append(URLEncoder.encode(params.get(key),"UTF-8"));
      }
    }
    String reqUrl=rootUrl + "?" + sBuilder.toString();
    URL url=new URL(reqUrl);
    HttpURLConnection conn=(HttpURLConnection)url.openConnection();
    conn.setRequestMethod("GET");
    if (!command.equals("login") && cookieToSent != null) {
      conn.setRequestProperty("Cookie",cookieToSent);
    }
    conn.connect();
    if (command.equals("login")) {
      String headerName=null;
      for (int i=1; (headerName=conn.getHeaderFieldKey(i)) != null; i++) {
        if (headerName.equals("Set-Cookie")) {
          String cookie=conn.getHeaderField(i);
          cookie=cookie.substring(0,cookie.indexOf(";"));
          String cookieName=cookie.substring(0,cookie.indexOf("="));
          String cookieValue=cookie.substring(cookie.indexOf("=") + 1,cookie.length());
          cookieToSent=cookieName + "=" + cookieValue;
        }
      }
    }
    StringBuilder response=new StringBuilder();
    BufferedReader rd=new BufferedReader(new InputStreamReader(conn.getInputStream()));
    String line;
    try {
      while ((line=rd.readLine()) != null) {
        response.append(line);
      }
    }
 catch (    EOFException ex) {
      System.out.println("EOF exception due to java bug");
    }
    rd.close();
    return response.toString();
  }
 catch (  Exception e) {
    throw new CloudRuntimeException("Problem with sending api request",e);
  }
}
