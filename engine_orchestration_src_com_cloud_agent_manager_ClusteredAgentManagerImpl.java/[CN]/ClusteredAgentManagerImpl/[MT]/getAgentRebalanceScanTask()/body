{
  return new ManagedContextRunnable(){
    @Override protected void runInContext(){
      try {
        if (s_logger.isTraceEnabled()) {
          s_logger.trace("Agent rebalance task check, management server id:" + _nodeId);
        }
        if (!_agentLbHappened) {
          QueryBuilder<HostVO> sc=QueryBuilder.create(HostVO.class);
          sc.and(sc.entity().getManagementServerId(),Op.NNULL);
          sc.and(sc.entity().getType(),Op.EQ,Host.Type.Routing);
          final List<HostVO> allManagedRoutingAgents=sc.list();
          sc=QueryBuilder.create(HostVO.class);
          sc.and(sc.entity().getType(),Op.EQ,Host.Type.Routing);
          final List<HostVO> allAgents=sc.list();
          final double allHostsCount=allAgents.size();
          final double managedHostsCount=allManagedRoutingAgents.size();
          if (allHostsCount > 0.0) {
            final double load=managedHostsCount / allHostsCount;
            if (load > ConnectedAgentThreshold.value()) {
              s_logger.debug("Scheduling agent rebalancing task as the average agent load " + load + " is more than the threshold "+ ConnectedAgentThreshold.value());
              scheduleRebalanceAgents();
              _agentLbHappened=true;
            }
 else {
              s_logger.debug("Not scheduling agent rebalancing task as the average load " + load + " has not crossed the threshold "+ ConnectedAgentThreshold.value());
            }
          }
        }
      }
 catch (      final Throwable e) {
        s_logger.error("Problem with the clustered agent transfer scan check!",e);
      }
    }
  }
;
}
