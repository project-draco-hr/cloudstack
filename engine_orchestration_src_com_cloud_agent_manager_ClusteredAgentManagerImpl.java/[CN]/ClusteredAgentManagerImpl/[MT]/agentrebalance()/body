{
  Profiler profilerAgentLB=new Profiler();
  profilerAgentLB.start();
  if (EnableLB.value() && !_agentLbHappened) {
    GenericQueryBuilder<HostVO,HostVO> sc=GenericQueryBuilder.create(HostVO.class);
    sc.addAnd(sc.getEntity().getManagementServerId(),Op.NNULL);
    sc.addAnd(sc.getEntity().getType(),Op.EQ,Host.Type.Routing);
    List<HostVO> allManagedRoutingAgents=sc.list();
    sc=GenericQueryBuilder.create(HostVO.class);
    sc.addAnd(sc.getEntity().getType(),Op.EQ,Host.Type.Routing);
    List<HostVO> allAgents=sc.list();
    double allHostsCount=allAgents.size();
    double managedHostsCount=allManagedRoutingAgents.size();
    if (allHostsCount > 0.0) {
      double load=managedHostsCount / allHostsCount;
      if (load >= ConnectedAgentThreshold.value()) {
        s_logger.debug("Scheduling agent rebalancing task as the average agent load " + load + " is more than the threshold "+ ConnectedAgentThreshold.value());
        _rebalanceService.scheduleRebalanceAgents();
        _agentLbHappened=true;
      }
 else {
        s_logger.trace("Not scheduling agent rebalancing task as the averages load " + load + " is less than the threshold "+ ConnectedAgentThreshold.value());
      }
    }
  }
  profilerAgentLB.stop();
}
