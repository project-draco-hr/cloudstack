{
  List<UserVmJoinVO> vmList=new ArrayList<UserVmJoinVO>();
  UserVmJoinVO vm1=new UserVmJoinVO();
  String uuid1=UUID.randomUUID().toString();
  vm1.setUuid(uuid1);
  vmList.add(vm1);
  UserVmJoinVO vm2=new UserVmJoinVO();
  String uuid2=UUID.randomUUID().toString();
  vmList.add(vm2);
  List<UserVmResponse> respList=new ArrayList<UserVmResponse>();
  UserVmResponse resp1=new UserVmResponse();
  resp1.setId(uuid1);
  respList.add(resp1);
  UserVmResponse resp2=new UserVmResponse();
  resp2.setId(uuid2);
  respList.add(resp2);
  Mockito.when(userVmService.searchForUserVMs(listVmCmd)).thenReturn(new Pair<List<UserVmJoinVO>,Integer>(vmList,2));
  Mockito.when(responseGenerator.createUserVmResponse("virtualmachine",EnumSet.of(VMDetails.all),vm1,vm2)).thenReturn(respList);
  try {
    listVmCmd.execute();
    ListResponse<UserVmResponse> listResp=(ListResponse<UserVmResponse>)listVmCmd.getResponseObject();
    assertNotNull(listResp);
    assertEquals(2,listResp.getCount().intValue());
    List<UserVmResponse> vmResp=listResp.getResponses();
    assertTrue(vmResp != null && vmResp.size() == 2);
  }
 catch (  ServerApiException exception) {
    assertEquals("Failed to list user vms without pagination",exception.getDescription());
  }
  List<UserVmJoinVO> pVmList=new ArrayList<UserVmJoinVO>();
  pVmList.add(vm1);
  List<UserVmResponse> pRespList=new ArrayList<UserVmResponse>();
  pRespList.add(resp1);
  listVmCmd=new ListVMsCmd(){
    public Integer getPage(){
      return 1;
    }
    public Integer getPageSize(){
      return 1;
    }
  }
;
  Mockito.when(userVmService.searchForUserVMs(listVmCmd)).thenReturn(new Pair<List<UserVmJoinVO>,Integer>(pVmList,2));
  Mockito.when(responseGenerator.createUserVmResponse("virtualmachine",EnumSet.of(VMDetails.all),vm1)).thenReturn(pRespList);
  try {
    listVmCmd.execute();
    ListResponse<UserVmResponse> listResp=(ListResponse<UserVmResponse>)listVmCmd.getResponseObject();
    assertNotNull(listResp);
    assertEquals(2,listResp.getCount().intValue());
    List<UserVmResponse> vmResp=listResp.getResponses();
    assertTrue(vmResp != null && vmResp.size() == 1);
    UserVmResponse v=vmResp.get(0);
    assertEquals(uuid1,v.getId());
  }
 catch (  ServerApiException exception) {
    assertEquals("Failed to list user vms with pagination",exception.getDescription());
  }
}
