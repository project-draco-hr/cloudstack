@data(ROOT_DOMAIN_ADMIN, CHILD_DOMAIN_ADMIN)
@attr(tags=['advanced', 'basic'], required_hardware='false')
def test_deploy_multiple_vm(self, value):
    "Test Deploy multiple VMs with & verify the usage\n        # Validate the following\n        # 1. Deploy multiple VMs with this service offering\n        # 2. Update Resource count for the root admin Primary Storage usage\n        # 3. Primary Storage usage should list properly\n        # 4. Destroy one VM among multiple VM's and verify that primary storage count\n        #  decreases by equivalent amount\n        "
    response = self.setupAccount(value)
    self.assertEqual(response[0], PASS, response[1])
    self.virtualMachine_2 = VirtualMachine.create(self.api_client, self.services['virtual_machine'], accountid=self.account.name, domainid=self.account.domainid, diskofferingid=self.disk_offering.id, serviceofferingid=self.service_offering.id)
    expectedCount = (self.initialResourceCount * 2)
    response = matchResourceCount(self.apiclient, expectedCount, RESOURCE_PRIMARY_STORAGE, accountid=self.account.id)
    self.assertEqual(response[0], PASS, response[1])
    self.virtualMachine_3 = VirtualMachine.create(self.api_client, self.services['virtual_machine'], accountid=self.account.name, domainid=self.account.domainid, diskofferingid=self.disk_offering.id, serviceofferingid=self.service_offering.id)
    expectedCount = (self.initialResourceCount * 3)
    response = matchResourceCount(self.apiclient, expectedCount, RESOURCE_PRIMARY_STORAGE, accountid=self.account.id)
    self.assertEqual(response[0], PASS, response[1])
    self.debug(('Destroying instance: %s' % self.virtualMachine_2.name))
    try:
        self.virtualMachine_2.delete(self.apiclient)
    except Exception as e:
        self.fail(('Failed to delete instance: %s' % e))
    self.assertTrue(isVmExpunged(self.apiclient, self.virtualMachine_2.id), 'VM not expunged                 in allotted time')
    expectedCount -= (self.template.size / (1024 ** 3))
    response = matchResourceCount(self.apiclient, expectedCount, RESOURCE_PRIMARY_STORAGE, accountid=self.account.id)
    self.assertEqual(response[0], PASS, response[1])
    return
