{
  long zoneId=cmd.getZoneId();
  Long podId=cmd.getPod();
  String apiUsername;
  String apiPassword;
  String apid;
  DataCenterVO zone=_dcDao.findById(zoneId);
  if (zone == null) {
    throw new InvalidParameterValueException("Could not find zone with ID: " + zoneId);
  }
  List<HostVO> pxeServers=_hostDao.listBy(Host.Type.PxeServer,null,podId,zoneId);
  if (pxeServers.size() != 0) {
    throw new InvalidParameterValueException("Already had a PXE server in Pod: " + podId + " zone: "+ zoneId);
  }
  URI uri;
  try {
    uri=new URI(cmd.getUrl());
  }
 catch (  Exception e) {
    s_logger.debug(e);
    throw new InvalidParameterValueException(e.getMessage());
  }
  apiUsername=cmd.getLinMinUsername();
  apiPassword=cmd.getLinMinPassword();
  apid=cmd.getLinMinApid();
  if (apiUsername == null) {
    throw new InvalidParameterValueException("No LinMin username specified, without it I can user LinMin API");
  }
  if (apiPassword == null) {
    throw new InvalidParameterValueException("No LinMin password specified, without it I can user LinMin API");
  }
  if (apid == null) {
    throw new InvalidParameterValueException("No LinMin apid specified, without it I can user LinMin API");
  }
  String ipAddress=uri.getHost();
  String username=cmd.getUsername();
  String password=cmd.getPassword();
  String guid=getPxeServerGuid(Long.toString(zoneId),PxeServerType.LinMin.getName(),ipAddress);
  Map params=new HashMap<String,String>();
  params.put("zone",Long.toString(zoneId));
  params.put("pod",podId.toString());
  params.put("ip",ipAddress);
  params.put("username",username);
  params.put("password",password);
  params.put("guid",guid);
  params.put("pod",Long.toString(cmd.getPod()));
  params.put("apiUsername",apiUsername);
  params.put("apiPassword",apiPassword);
  params.put("apid",apid);
  ServerResource resource=null;
  try {
    if (cmd.getType().equalsIgnoreCase(PxeServerType.LinMin.getName())) {
      resource=new LinMinPxeServerResource();
      resource.configure("LinMin PXE resource",params);
    }
  }
 catch (  Exception e) {
    s_logger.debug(e);
    throw new CloudRuntimeException(e.getMessage());
  }
  Host pxeServer=_agentMgr.addHost(zoneId,resource,Host.Type.PxeServer,params);
  if (pxeServer == null) {
    throw new CloudRuntimeException("Cannot add PXE server as a host");
  }
  return pxeServer;
}
