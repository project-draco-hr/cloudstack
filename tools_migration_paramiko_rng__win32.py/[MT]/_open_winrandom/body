def _open_winrandom():
    if (_winrandom is None):
        raise error('Crypto.Util.winrandom module not found')
    try:
        r0 = _winrandom.new()
        r1 = _winrandom.new()
    except Exception as exc:
        raise error(('winrandom.new() failed: %s' % str(exc)), exc)
    try:
        x = r0.get_bytes(20)
        y = r1.get_bytes(20)
    except Exception as exc:
        raise error(('winrandom get_bytes failed: %s' % str(exc)), exc)
    if ((len(x) != 20) or (len(y) != 20)):
        raise error('Error reading from winrandom: input truncated')
    if (x == y):
        raise error('winrandom broken: returning identical data')
    return _RNG(r0.get_bytes)
