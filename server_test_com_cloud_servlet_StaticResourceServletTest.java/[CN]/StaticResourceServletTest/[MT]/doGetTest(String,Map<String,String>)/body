{
  final StaticResourceServlet servlet=Mockito.mock(StaticResourceServlet.class);
  Mockito.doCallRealMethod().when(servlet).doGet(Matchers.any(HttpServletRequest.class),Matchers.any(HttpServletResponse.class));
  final ServletContext servletContext=Mockito.mock(ServletContext.class);
  Mockito.when(servletContext.getRealPath(uri)).thenReturn(new File(rootDirectory,uri).getAbsolutePath());
  Mockito.when(servlet.getServletContext()).thenReturn(servletContext);
  final HttpServletRequest request=Mockito.mock(HttpServletRequest.class);
  Mockito.when(request.getServletPath()).thenReturn(uri);
  Mockito.when(request.getHeader(Matchers.anyString())).thenAnswer(new Answer<String>(){
    @Override public String answer(    final InvocationOnMock invocation) throws Throwable {
      return headers.get(invocation.getArguments()[0]);
    }
  }
);
  final HttpServletResponse response=Mockito.mock(HttpServletResponse.class);
  final ServletOutputStream responseBody=Mockito.mock(ServletOutputStream.class);
  Mockito.when(response.getOutputStream()).thenReturn(responseBody);
  servlet.doGet(request,response);
  return response;
}
