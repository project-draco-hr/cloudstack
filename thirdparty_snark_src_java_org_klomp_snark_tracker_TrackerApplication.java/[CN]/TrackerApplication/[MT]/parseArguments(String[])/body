{
  int user_port=DEFAULT_PORT;
  Level level=Level.INFO;
  HashSet<String> hashes=new HashSet<String>();
  int i=0;
  while (i < args.length) {
    if (args[i].equals("--debug")) {
      level=Level.FINE;
      i++;
      if (i < args.length) {
        try {
          level=Level.parse(args[i]);
        }
 catch (        IllegalArgumentException iae) {
        }
      }
    }
 else     if (args[i].equals("--port")) {
      if (args.length - 1 < i + 1) {
        usage("--port needs port number to listen on");
      }
      try {
        user_port=Integer.parseInt(args[i + 1]);
      }
 catch (      NumberFormatException nfe) {
        usage("--port argument must be a number (" + nfe + ")");
      }
      i+=2;
    }
 else     if (args[i].equals("--help")) {
      usage(null);
    }
 else {
      hashes.add(args[i]);
      i++;
      break;
    }
  }
  log.setLevel(level);
  Snark.setLogLevel(level);
  if (hashes.isEmpty()) {
    usage("Need at least one <hash>.");
  }
  Tracker tracker=new Tracker(hashes);
  HttpAcceptor httpacceptor=new HttpAcceptor(tracker);
  ConnectionAcceptor acceptor=new ConnectionAcceptor(new ServerSocket(user_port),httpacceptor,null);
  return acceptor;
}
