{
  String result;
  s_logger.debug("Make cmdline call to mount " + remoteDevice + " at "+ localRootPath+ " based on uri "+ uri+ ((nfsVersion != null) ? " nfsVersion=" + nfsVersion : ""));
  Script command=new Script(!_inSystemVM,"mount",_timeout,s_logger);
  String scheme=uri.getScheme().toLowerCase();
  command.add("-t",scheme);
  if (scheme.equals("nfs")) {
    if ("Mac OS X".equalsIgnoreCase(System.getProperty("os.name"))) {
      command.add("-o","resvport");
    }
    if (_inSystemVM) {
      command.add("-o","soft,timeo=133,retrans=2147483647,tcp,acdirmax=0,acdirmin=0" + ((nfsVersion != null) ? ",vers=" + nfsVersion : ""));
    }
  }
 else   if (scheme.equals("cifs")) {
    String extraOpts=parseCifsMountOptions(uri);
    command.add("-o",extraOpts + "soft,actimeo=0");
  }
 else {
    String errMsg="Unsupported storage device scheme " + scheme + " in uri "+ uri.toString();
    s_logger.error(errMsg);
    throw new CloudRuntimeException(errMsg);
  }
  command.add(remoteDevice);
  command.add(localRootPath);
  result=command.execute();
  if (result != null) {
    String errMsg="Unable to mount " + remoteDevice + " at "+ localRootPath+ " due to "+ result;
    s_logger.error(errMsg);
    File file=new File(localRootPath);
    if (file.exists()) {
      file.delete();
    }
    throw new CloudRuntimeException(errMsg);
  }
  s_logger.debug("Successfully mounted " + remoteDevice + " at "+ localRootPath);
}
