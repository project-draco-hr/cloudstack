{
  TenantNetwork req=new TenantNetwork();
  req.name=networkName;
  req.tenantUuid=tenantUuid;
  HttpPost method=new HttpPost();
  method.setEntity(new StringEntity(new Gson().toJson(req),ContentType.APPLICATION_JSON));
  HttpResponse res=executeMethod(method,"/ssp.v1/tenant-networks");
  if (res == null || res.getStatusLine().getStatusCode() != HttpStatus.SC_CREATED) {
    return null;
  }
  try {
    return new Gson().fromJson(new InputStreamReader(res.getEntity().getContent()),TenantNetwork.class);
  }
 catch (  JsonSyntaxException e) {
    s_logger.error("reading response body failed",e);
  }
catch (  JsonIOException e) {
    s_logger.error("reading response body failed",e);
  }
catch (  IllegalStateException e) {
    s_logger.error("reading response body failed",e);
  }
catch (  IOException e) {
    s_logger.error("reading response body failed",e);
  }
  return null;
}
