{
  _selector=Selector.open();
  SocketChannel sch=SocketChannel.open();
  sch.configureBlocking(true);
  s_logger.info("Connecting to " + _host + ":"+ _port);
  if (_bindAddress != null) {
    s_logger.info("Binding outbound interface at " + _bindAddress);
    InetSocketAddress addr=new InetSocketAddress(_bindAddress,0);
    sch.socket().bind(addr);
  }
  InetSocketAddress addr=new InetSocketAddress(_host,_port);
  try {
    sch.connect(addr);
  }
 catch (  IOException e) {
    _selector.close();
    throw e;
  }
  SSLEngine sslEngine=null;
  try {
    sch.configureBlocking(true);
    SSLContext sslContext=Link.initSSLContext(true);
    sslEngine=sslContext.createSSLEngine(_host,_port);
    sslEngine.setUseClientMode(true);
    Link.doHandshake(sch,sslEngine,true);
    s_logger.info("SSL: Handshake done");
  }
 catch (  Exception e) {
    throw new IOException("SSL: Fail to init SSL! " + e);
  }
  sch.configureBlocking(false);
  Link link=new Link(addr,this);
  link.setSSLEngine(sslEngine);
  SelectionKey key=sch.register(_selector,SelectionKey.OP_READ);
  link.setKey(key);
  key.attach(link);
  Task task=_factory.create(Task.Type.CONNECT,link,null);
  _executor.execute(task);
}
