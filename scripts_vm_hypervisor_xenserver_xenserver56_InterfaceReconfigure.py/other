import sys
import syslog
import os
from xml.dom.minidom import getDOMImplementation
from xml.dom.minidom import parse as parseXML
the_root_prefix = ''
log_destination = 'syslog'
_PIF_XML_TAG = 'pif'
_VLAN_XML_TAG = 'vlan'
_BOND_XML_TAG = 'bond'
_NETWORK_XML_TAG = 'network'
_ETHTOOL_OTHERCONFIG_ATTRS = [('ethtool-%s' % x) for x in ('autoneg', 'speed', 'duplex', 'rx', 'tx', 'sg', 'tso', 'ufo', 'gso')]
_PIF_OTHERCONFIG_ATTRS = ((['domain', 'peerdns', 'defaultroute', 'mtu', 'static-routes'] + [('bond-%s' % x) for x in ('mode', 'miimon', 'downdelay', 'updelay', 'use_carrier')]) + _ETHTOOL_OTHERCONFIG_ATTRS)
_PIF_ATTRS = {'uuid': (_str_to_xml, _str_from_xml), 'management': (_bool_to_xml, _bool_from_xml), 'network': (_str_to_xml, _str_from_xml), 'device': (_str_to_xml, _str_from_xml), 'bond_master_of': ((lambda x, p, t, v: _strlist_to_xml(x, p, 'bond_master_of', 'slave', v)), (lambda n: _strlist_from_xml(n, 'bond_master_of', 'slave'))), 'bond_slave_of': (_str_to_xml, _str_from_xml), 'VLAN': (_str_to_xml, _str_from_xml), 'VLAN_master_of': (_str_to_xml, _str_from_xml), 'VLAN_slave_of': ((lambda x, p, t, v: _strlist_to_xml(x, p, 'VLAN_slave_of', 'master', v)), (lambda n: _strlist_from_xml(n, 'VLAN_slave_Of', 'master'))), 'ip_configuration_mode': (_str_to_xml, _str_from_xml), 'IP': (_str_to_xml, _str_from_xml), 'netmask': (_str_to_xml, _str_from_xml), 'gateway': (_str_to_xml, _str_from_xml), 'DNS': (_str_to_xml, _str_from_xml), 'MAC': (_str_to_xml, _str_from_xml), 'other_config': ((lambda x, p, t, v: _otherconfig_to_xml(x, p, v, _PIF_OTHERCONFIG_ATTRS)), (lambda n: _otherconfig_from_xml(n, _PIF_OTHERCONFIG_ATTRS))), 'currently_attached': (_bool_to_xml, (lambda n: False)), }
_VLAN_ATTRS = {'uuid': (_str_to_xml, _str_from_xml), 'tagged_PIF': (_str_to_xml, _str_from_xml), 'untagged_PIF': (_str_to_xml, _str_from_xml), }
_BOND_ATTRS = {'uuid': (_str_to_xml, _str_from_xml), 'master': (_str_to_xml, _str_from_xml), 'slaves': ((lambda x, p, t, v: _strlist_to_xml(x, p, 'slaves', 'slave', v)), (lambda n: _strlist_from_xml(n, 'slaves', 'slave'))), }
_NETWORK_OTHERCONFIG_ATTRS = (['mtu', 'static-routes'] + _ETHTOOL_OTHERCONFIG_ATTRS)
_NETWORK_ATTRS = {'uuid': (_str_to_xml, _str_from_xml), 'bridge': (_str_to_xml, _str_from_xml), 'MTU': (_str_to_xml, _str_from_xml), 'PIFs': ((lambda x, p, t, v: _strlist_to_xml(x, p, 'PIFs', 'PIF', v)), (lambda n: _strlist_from_xml(n, 'PIFs', 'PIF'))), 'other_config': ((lambda x, p, t, v: _otherconfig_to_xml(x, p, v, _NETWORK_OTHERCONFIG_ATTRS)), (lambda n: _otherconfig_from_xml(n, _NETWORK_OTHERCONFIG_ATTRS))), }
_db = None
