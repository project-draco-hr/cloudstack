{
  if (getListAll()) {
    LdapListConfigurationCmd listConfigurationCmd=new LdapListConfigurationCmd(_ldapManager);
    Pair<List<? extends LdapConfigurationVO>,Integer> result=_ldapManager.listConfigurations(listConfigurationCmd);
    ListResponse<LDAPConfigResponse> response=new ListResponse<LDAPConfigResponse>();
    List<LDAPConfigResponse> responses=new ArrayList<LDAPConfigResponse>();
    if (result.second() > 0) {
      boolean useSSlConfig=_ldapConfiguration.getSSLStatus();
      String searchBaseConfig=_ldapConfiguration.getBaseDn();
      String bindDnConfig=_ldapConfiguration.getBindPrincipal();
      for (      LdapConfigurationVO ldapConfigurationVO : result.first()) {
        responses.add(createLDAPConfigResponse(ldapConfigurationVO.getHostname(),ldapConfigurationVO.getPort(),useSSlConfig,null,searchBaseConfig,bindDnConfig));
      }
    }
    response.setResponses(responses);
    response.setResponseName(getCommandName());
    setResponseObject(response);
  }
 else   if (getHostname() == null || getPort() == null) {
    throw new InvalidParameterValueException("You need to provide hostname, port to configure your LDAP server");
  }
 else {
    boolean result=updateLDAP();
    if (result) {
      LDAPConfigResponse lr=this.createLDAPConfigResponse(getHostname(),getPort().toString(),getUseSSL(),getQueryFilter(),getSearchBase(),getBindDN());
      lr.setResponseName(getCommandName());
      setResponseObject(lr);
    }
  }
}
