{
  String sql="select * from (" + "select h.data_center_id, h.type, count(*) as count from host as h INNER JOIN mshost as m ON h.mgmt_server_id=m.msid " + "where h.status='Up' and h.type='SecondaryStorage' and m.last_update > ? "+ "group by h.data_center_id, h.type "+ "UNION ALL "+ "select h.data_center_id, h.type, count(*) as count from host as h INNER JOIN mshost as m ON h.mgmt_server_id=m.msid "+ "where h.status='Up' and h.type='Routing' and m.last_update > ? "+ "group by h.data_center_id, h.type) as t "+ "ORDER by t.data_center_id, t.type";
  ArrayList<RunningHostCountInfo> l=new ArrayList<RunningHostCountInfo>();
  Transaction txn=Transaction.currentTxn();
  ;
  PreparedStatement pstmt=null;
  try {
    pstmt=txn.prepareAutoCloseStatement(sql);
    String gmtCutTime=DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),cutTime);
    pstmt.setString(1,gmtCutTime);
    pstmt.setString(2,gmtCutTime);
    ResultSet rs=pstmt.executeQuery();
    while (rs.next()) {
      RunningHostCountInfo info=new RunningHostCountInfo();
      info.setDcId(rs.getLong(1));
      info.setHostType(rs.getString(2));
      info.setCount(rs.getInt(3));
      l.add(info);
    }
  }
 catch (  SQLException e) {
  }
catch (  Throwable e) {
  }
  return l;
}
