{
  String guid=cmd.getContextParam("guid");
  if (guid == null || guid.isEmpty()) {
    s_logger.error("Invalid command context parameter guid");
    return null;
  }
  String username=cmd.getContextParam("username");
  if (username == null || username.isEmpty()) {
    s_logger.error("Invalid command context parameter username");
    return null;
  }
  String password=cmd.getContextParam("password");
  String[] tokens=guid.split("@");
  if (tokens == null || tokens.length != 2) {
    s_logger.error("Invalid content in command context parameter guid");
    return null;
  }
  String vCenterAddress=tokens[1];
  String[] hostTokens=tokens[0].split(":");
  if (hostTokens == null || hostTokens.length != 2) {
    s_logger.error("Invalid content in command context parameter guid");
    return null;
  }
  int vCenterSessionTimeout=NumbersUtil.parseInt(cmd.getContextParam("vCenterSessionTimeout"),1200000);
  try {
    _resource.ensureOutgoingRuleForAddress(vCenterAddress);
    VmwareContext context=currentContext.get();
    if (context != null) {
      if (!context.validate()) {
        invalidateServiceContext(context);
        context=null;
      }
 else {
        context.registerStockObject("serviceconsole",cmd.getContextParam("serviceconsole"));
        context.registerStockObject("manageportgroup",cmd.getContextParam("manageportgroup"));
        context.registerStockObject("noderuninfo",cmd.getContextParam("noderuninfo"));
      }
    }
    if (context == null) {
      s_logger.info("Open new VmwareContext. vCenter: " + vCenterAddress + ", user: "+ username+ ", password: "+ StringUtils.getMaskedPasswordForDisplay(password));
      VmwareSecondaryStorageContextFactory.setVcenterSessionTimeout(vCenterSessionTimeout);
      context=VmwareSecondaryStorageContextFactory.getContext(vCenterAddress,username,password);
    }
    currentContext.set(context);
    return context;
  }
 catch (  Exception e) {
    s_logger.error("Unexpected exception " + e.toString(),e);
    return null;
  }
}
