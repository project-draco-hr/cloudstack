{
  try {
    Transaction.execute(new TransactionCallbackNoReturn(){
      @Override public void doInTransactionWithoutResult(      TransactionStatus status){
        _queueMgr.cleanupActiveQueueItems(msid,true);
        _jobDao.resetJobProcess(msid,ApiErrorCode.INTERNAL_ERROR.getHttpCode(),"job cancelled because of management server restart or shutdown");
        List<AsyncJobVO> cancelJobs=_jobDao.getResetJobs(msid);
        for (        AsyncJobVO job : cancelJobs) {
          _queueMgr.purgeAsyncJobQueueItemId(job.getId());
        }
      }
    }
);
  }
 catch (  Throwable e) {
    s_logger.warn("Unexpected exception in cleaning up left over jobs for mamagement server node " + msid,e);
  }
}
