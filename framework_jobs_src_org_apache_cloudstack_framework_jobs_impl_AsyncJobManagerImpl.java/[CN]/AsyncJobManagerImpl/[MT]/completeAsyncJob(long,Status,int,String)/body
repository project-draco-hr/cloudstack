{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Complete async job-" + jobId + ", jobStatus: "+ jobStatus+ ", resultCode: "+ resultCode+ ", result: "+ resultObject);
  }
  final AsyncJobVO job=_jobDao.findById(jobId);
  if (job == null) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("job-" + jobId + " no longer exists, we just log completion info here. "+ jobStatus+ ", resultCode: "+ resultCode+ ", result: "+ resultObject);
    }
    return;
  }
  if (job.getStatus() != JobInfo.Status.IN_PROGRESS) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("job-" + jobId + " is already completed.");
    }
    return;
  }
  List<Long> wakeupList=Transaction.execute(new TransactionCallback<List<Long>>(){
    @Override public List<Long> doInTransaction(    TransactionStatus status){
      job.setCompleteMsid(getMsid());
      job.setStatus(jobStatus);
      job.setResultCode(resultCode);
      job.setInstanceType(null);
      job.setInstanceId(null);
      if (resultObject != null) {
        job.setResult(resultObject);
      }
 else {
        job.setResult(null);
      }
      job.setLastUpdated(DateUtil.currentGMTTime());
      _jobDao.update(jobId,job);
      List<Long> wakeupList=wakeupByJoinedJobCompletion(jobId);
      _joinMapDao.disjoinAllJobs(jobId);
      return wakeupList;
    }
  }
);
  _messageBus.publish(null,AsyncJob.Topics.JOB_STATE,PublishScope.GLOBAL,jobId);
}
