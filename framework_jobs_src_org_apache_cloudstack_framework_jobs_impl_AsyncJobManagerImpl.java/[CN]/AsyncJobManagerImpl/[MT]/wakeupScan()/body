{
  final Date cutDate=DateUtil.currentGMTTime();
  SearchCriteria<Long> sc=JoinJobTimeSearch.create();
  sc.setParameters("beginTime",cutDate);
  sc.setParameters("endTime",cutDate);
  final List<Long> result=_joinMapDao.customSearch(sc,null);
  return Transaction.execute(new TransactionCallback<List<Long>>(){
    @Override public List<Long> doInTransaction(    TransactionStatus status){
      if (result.size() > 0) {
        Collections.sort(result);
        Long[] ids=result.toArray(new Long[result.size()]);
        AsyncJobVO job=_jobDao.createForUpdate();
        job.setPendingSignals(AsyncJob.Constants.SIGNAL_MASK_WAKEUP);
        SearchCriteria<AsyncJobVO> sc2=JobIdsSearch.create("ids",ids);
        SearchCriteria<SyncQueueItemVO> queueItemsSC=QueueJobIdsSearch.create("contentIds",ids);
        _jobDao.update(job,sc2);
        SyncQueueItemVO item=_queueItemDao.createForUpdate();
        item.setLastProcessNumber(null);
        item.setLastProcessMsid(null);
        _queueItemDao.update(item,queueItemsSC);
      }
      return _joinMapDao.findJobsToWakeBetween(cutDate);
    }
  }
);
}
