{
  assert(socket == null);
  InetAddress addr=null;
  try {
    addr=InetAddress.getByName(strClusterAddress);
  }
 catch (  IOException e) {
    s_logger.error("Unexpected exception ",e);
  }
  if (addr != null && addr.isMulticastAddress()) {
    try {
      socket=new MulticastSocket(nPort);
      socket.setReuseAddress(true);
      if (s_logger.isInfoEnabled())       s_logger.info("Join multicast group : " + addr);
      ((MulticastSocket)socket).joinGroup(addr);
      ((MulticastSocket)socket).setTimeToLive(1);
      if (strOutboundAddress != null) {
        if (s_logger.isInfoEnabled())         s_logger.info("set outgoing interface to : " + strOutboundAddress);
        InetAddress ia=InetAddress.getByName(strOutboundAddress);
        NetworkInterface ni=NetworkInterface.getByInetAddress(ia);
        ((MulticastSocket)socket).setNetworkInterface(ni);
      }
    }
 catch (    IOException e) {
      s_logger.error("Unexpected exception ",e);
    }
  }
 else {
    socket=new DatagramSocket(nPort);
    socket.setReuseAddress(true);
  }
  driver=new Thread(this,"Multi-caster");
  driver.setDaemon(true);
  driver.start();
}
