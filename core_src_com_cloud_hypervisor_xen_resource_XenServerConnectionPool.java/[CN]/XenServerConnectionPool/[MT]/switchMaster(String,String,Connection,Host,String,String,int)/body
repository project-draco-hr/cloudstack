{
  String ipaddr=host.getAddress(conn);
  PoolSyncDB(conn);
  s_logger.debug("Designating the new master to " + ipaddr);
  Pool.designateNewMaster(conn,host);
  XenServerConnection slaveConn=null;
  XenServerConnection masterConn=null;
  int retry=30;
  for (int i=0; i < retry; i++) {
    try {
      Thread.sleep(5000);
    }
 catch (    InterruptedException e) {
    }
    try {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Logging on as the slave to " + lipaddr);
      }
      slaveConn=null;
      masterConn=null;
      URL slaveUrl=null;
      URL masterUrl=null;
      Session slaveSession=null;
      slaveUrl=new URL("http://" + lipaddr);
      slaveConn=new XenServerConnection(slaveUrl,username,password,_retries,_interval,10);
      slaveSession=Session.slaveLocalLoginWithPassword(slaveConn,username,password);
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Slave logon successful. session= " + slaveSession);
      }
      Pool.Record pr=getPoolRecord(slaveConn);
      Host master=pr.master;
      String ma=master.getAddress(slaveConn);
      if (!ma.trim().equals(ipaddr.trim())) {
        continue;
      }
      Session.localLogout(slaveConn);
      masterUrl=new URL("http://" + ipaddr);
      masterConn=new XenServerConnection(masterUrl,username,password,_retries,_interval,wait);
      Session.loginWithPassword(masterConn,username,password,APIVersion.latest().toString());
      cleanup(poolUuid);
      Pool.recoverSlaves(masterConn);
      PoolSyncDB(masterConn);
      return;
    }
 catch (    Types.HostIsSlave e) {
      s_logger.debug("HostIsSlaveException: Still waiting for the conversion to the master");
    }
catch (    XmlRpcException e) {
      s_logger.debug("XmlRpcException: Still waiting for the conversion to the master " + e.getMessage());
    }
catch (    Exception e) {
      s_logger.debug("Exception: Still waiting for the conversion to the master" + e.getMessage());
    }
 finally {
      if (masterConn != null) {
        try {
          Session.logout(masterConn);
        }
 catch (        Exception e) {
          s_logger.debug("Unable to log out of session: " + e.getMessage());
        }
        masterConn.dispose();
        masterConn=null;
      }
    }
  }
  throw new CloudRuntimeException("Unable to logon to the new master after " + retry + " retries");
}
