{
  SearchCriteria<PhysicalNetworkServiceProviderVO> sc=AllFieldsSearch.create();
  sc.setParameters("physicalNetworkId",physicalNetworkId);
  sc.setParameters("serviceProvderType",providerType);
  sc.setParameters("state",PhysicalNetworkServiceProvider.State.Enabled.toString());
  if (serviceType.equalsIgnoreCase(Service.Dhcp.getName())) {
    sc.setParameters("dhcpService",true);
  }
 else   if (serviceType.equalsIgnoreCase(Service.Dns.getName())) {
    sc.setParameters("dnsService",true);
  }
 else   if (serviceType.equalsIgnoreCase(Service.Firewall.getName())) {
    sc.setParameters("firewallService",true);
  }
 else   if (serviceType.equalsIgnoreCase(Service.Gateway.getName())) {
    sc.setParameters("gatewayService",true);
  }
 else   if (serviceType.equalsIgnoreCase(Service.Lb.getName())) {
    sc.setParameters("lbService",true);
  }
 else   if (serviceType.equalsIgnoreCase(Service.PortForwarding.getName())) {
    sc.setParameters("pfService",true);
  }
 else   if (serviceType.equalsIgnoreCase(Service.SecurityGroup.getName())) {
    sc.setParameters("securityGroupService",true);
  }
 else   if (serviceType.equalsIgnoreCase(Service.SourceNat.getName())) {
    sc.setParameters("sourceNatService",true);
  }
 else   if (serviceType.equalsIgnoreCase(Service.StaticNat.getName())) {
    sc.setParameters("staticNatService",true);
  }
 else   if (serviceType.equalsIgnoreCase(Service.UserData.getName())) {
    sc.setParameters("userDataService",true);
  }
 else   if (serviceType.equalsIgnoreCase(Service.Vpn.getName())) {
    sc.setParameters("vpnService",true);
  }
  PhysicalNetworkServiceProviderVO map=findOneBy(sc);
  if (map != null) {
    return true;
  }
 else {
    return false;
  }
}
