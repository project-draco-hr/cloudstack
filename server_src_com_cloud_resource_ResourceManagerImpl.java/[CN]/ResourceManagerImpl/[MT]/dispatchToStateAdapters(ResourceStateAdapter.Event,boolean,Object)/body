{
synchronized (_resourceStateAdapters) {
    final Iterator<Map.Entry<String,ResourceStateAdapter>> it=_resourceStateAdapters.entrySet().iterator();
    Object result=null;
    while (it.hasNext()) {
      final Map.Entry<String,ResourceStateAdapter> item=it.next();
      final ResourceStateAdapter adapter=item.getValue();
      final String msg="Dispatching resource state event " + event + " to "+ item.getKey();
      s_logger.debug(msg);
      if (event == ResourceStateAdapter.Event.CREATE_HOST_VO_FOR_CONNECTED) {
        result=adapter.createHostVOForConnectedAgent((HostVO)args[0],(StartupCommand[])args[1]);
        if (result != null && singleTaker) {
          break;
        }
      }
 else       if (event == ResourceStateAdapter.Event.CREATE_HOST_VO_FOR_DIRECT_CONNECT) {
        result=adapter.createHostVOForDirectConnectAgent((HostVO)args[0],(StartupCommand[])args[1],(ServerResource)args[2],(Map<String,String>)args[3],(List<String>)args[4]);
        if (result != null && singleTaker) {
          break;
        }
      }
 else       if (event == ResourceStateAdapter.Event.DELETE_HOST) {
        try {
          result=adapter.deleteHost((HostVO)args[0],(Boolean)args[1],(Boolean)args[2]);
          if (result != null) {
            break;
          }
        }
 catch (        final UnableDeleteHostException e) {
          s_logger.debug("Adapter " + adapter.getName() + " says unable to delete host",e);
          result=new ResourceStateAdapter.DeleteHostAnswer(false,true);
        }
      }
 else {
        throw new CloudRuntimeException("Unknown resource state event:" + event);
      }
    }
    return result;
  }
}
