{
  Long hostId=cmd.getId();
  Long guestOSCategoryId=cmd.getOsCategoryId();
  HostVO host=_hostDao.findById(hostId);
  if (host == null) {
    throw new InvalidParameterValueException("Host with id " + hostId + " doesn't exist");
  }
  if (cmd.getAllocationState() != null) {
    ResourceState.Event resourceEvent=ResourceState.Event.toEvent(cmd.getAllocationState());
    if (resourceEvent != ResourceState.Event.Enable && resourceEvent != ResourceState.Event.Disable) {
      throw new CloudRuntimeException("Invalid allocation state:" + cmd.getAllocationState() + ", only Enable/Disable are allowed");
    }
    resourceStateTransitTo(host,resourceEvent,_nodeId);
  }
  if (guestOSCategoryId != null) {
    if (!(guestOSCategoryId > 0) || _guestOSCategoryDao.findById(guestOSCategoryId) == null) {
      throw new InvalidParameterValueException("Please specify a valid guest OS category.");
    }
    GuestOSCategoryVO guestOSCategory=_guestOSCategoryDao.findById(guestOSCategoryId);
    DetailVO guestOSDetail=_hostDetailsDao.findDetail(hostId,"guest.os.category.id");
    if (guestOSCategory != null && !GuestOSCategoryVO.CATEGORY_NONE.equalsIgnoreCase(guestOSCategory.getName())) {
      if (guestOSDetail != null) {
        guestOSDetail.setValue(String.valueOf(guestOSCategory.getId()));
        _hostDetailsDao.update(guestOSDetail.getId(),guestOSDetail);
      }
 else {
        Map<String,String> detail=new HashMap<String,String>();
        detail.put("guest.os.category.id",String.valueOf(guestOSCategory.getId()));
        _hostDetailsDao.persist(hostId,detail);
      }
    }
 else {
      if (guestOSDetail != null) {
        _hostDetailsDao.remove(guestOSDetail.getId());
      }
    }
  }
  List<String> hostTags=cmd.getHostTags();
  if (hostTags != null) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Updating Host Tags to :" + hostTags);
    }
    _hostTagsDao.persist(hostId,hostTags);
  }
  String url=cmd.getUrl();
  if (url != null) {
    _storageMgr.updateSecondaryStorage(cmd.getId(),cmd.getUrl());
  }
  HostVO updatedHost=_hostDao.findById(hostId);
  return updatedHost;
}
