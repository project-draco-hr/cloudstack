{
  HostVO host;
  host=_hostDao.findById(hostId);
  if (host == null || host.getRemoved() != null) {
    s_logger.warn("Unable to find host " + hostId);
    return true;
  }
  if (host.getResourceState() != ResourceState.PrepareForMaintenance && host.getResourceState() != ResourceState.Maintenance && host.getResourceState() != ResourceState.ErrorInMaintenance) {
    throw new CloudRuntimeException("Cannot perform cancelMaintenance when resource state is " + host.getResourceState() + ", hostId = "+ hostId);
  }
  _haMgr.cancelScheduledMigrations(host);
  List<VMInstanceVO> vms=_haMgr.findTakenMigrationWork();
  for (  VMInstanceVO vm : vms) {
    if (vm.getHostId() != null && vm.getHostId() == hostId) {
      s_logger.info("Unable to cancel migration because the vm is being migrated: " + vm);
      return false;
    }
  }
  try {
    resourceStateTransitTo(host,ResourceState.Event.AdminCancelMaintenance,_nodeId);
    _agentMgr.pullAgentOutMaintenance(hostId);
    if (host.getHypervisorType() == HypervisorType.KVM) {
      _hostDao.loadDetails(host);
      String password=host.getDetail("password");
      String username=host.getDetail("username");
      if (password == null || username == null) {
        s_logger.debug("Can't find password/username");
        return false;
      }
      com.trilead.ssh2.Connection connection=SSHCmdHelper.acquireAuthorizedConnection(host.getPrivateIpAddress(),22,username,password);
      if (connection == null) {
        s_logger.debug("Failed to connect to host: " + host.getPrivateIpAddress());
        return false;
      }
      try {
        SSHCmdHelper.sshExecuteCmdOneShot(connection,"service cloud-agent restart");
      }
 catch (      sshException e) {
        return false;
      }
    }
    return true;
  }
 catch (  NoTransitionException e) {
    s_logger.debug("Cannot transmit host " + host.getId() + "to Enabled state",e);
    return false;
  }
}
