{
  checkAvailability(req.getCommands());
  long seq=getNextSequence();
  req.setSequence(seq);
  if (listener != null) {
    registerListener(seq,listener);
  }
 else   if (s_logger.isDebugEnabled()) {
    s_logger.debug(log(seq,"Routing: "));
  }
synchronized (this) {
    try {
      if (isClosed()) {
        throw new AgentUnavailableException("The link to the agent has been closed",_id);
      }
      if (req.executeInSequence() && _currentSequence != null) {
        req.logD("Waiting for Seq " + _currentSequence + " Scheduling: ",true);
        addRequest(req);
        return;
      }
      req.logD("Sending ",true);
      send(req);
      if (req.executeInSequence() && _currentSequence == null) {
        _currentSequence=seq;
        if (s_logger.isTraceEnabled()) {
          s_logger.trace(log(seq," is current sequence"));
        }
      }
    }
 catch (    AgentUnavailableException e) {
      s_logger.info(log(seq,"Unable to send due to " + e.getMessage()));
      cancel(seq);
      throw e;
    }
catch (    Exception e) {
      s_logger.warn(log(seq,"Unable to send due to "),e);
      cancel(seq);
      throw new AgentUnavailableException("Problem due to other exception " + e.getMessage(),_id);
    }
  }
}
