{
  _localgw=(String)params.get("localgw");
  _eth1mask=(String)params.get("eth1mask");
  _eth1ip=(String)params.get("eth1ip");
  if (_eth1ip != null) {
    params.put("private.network.device","eth1");
  }
 else {
    s_logger.warn("WARNING: eth1ip parameter is not found!");
  }
  String eth2ip=(String)params.get("eth2ip");
  if (eth2ip != null) {
    params.put("public.network.device","eth2");
  }
 else {
    s_logger.warn("WARNING: eth2ip parameter is not found!");
  }
  super.configure(name,params);
  for (  Map.Entry<String,Object> entry : params.entrySet()) {
    _properties.put(entry.getKey(),entry.getValue());
  }
  String value=(String)params.get("premium");
  if (value != null && value.equals("premium"))   _proxyPort=443;
 else {
    value=(String)params.get("consoleproxy.httpListenPort");
    _proxyPort=NumbersUtil.parseInt(value,80);
  }
  value=(String)params.get("proxy_vm");
  _proxyVmId=NumbersUtil.parseLong(value,0);
  if (_localgw != null) {
    String internalDns1=(String)params.get("dns1");
    String internalDns2=(String)params.get("dns2");
    if (internalDns1 == null) {
      s_logger.warn("No DNS entry found during configuration of NfsSecondaryStorage");
    }
 else {
      addRouteToInternalIpOrCidr(_localgw,_eth1ip,_eth1mask,internalDns1);
    }
    String mgmtHost=(String)params.get("host");
    addRouteToInternalIpOrCidr(_localgw,_eth1ip,_eth1mask,mgmtHost);
    if (internalDns2 != null) {
      addRouteToInternalIpOrCidr(_localgw,_eth1ip,_eth1mask,internalDns2);
    }
  }
  _pubIp=(String)params.get("public.ip");
  value=(String)params.get("disable_rp_filter");
  if (value != null && value.equalsIgnoreCase("true")) {
    disableRpFilter();
  }
  if (s_logger.isInfoEnabled())   s_logger.info("Receive proxyVmId in ConsoleProxyResource configuration as " + _proxyVmId);
  return true;
}
