{
  String datePattern="yyyy-MM-dd_HH_mm_ss";
  PatternLayout layout1=new PatternLayout("%c{1} - %m%n");
  RollingFileAppender rfa1=new RollingFileAppender();
  rfa1.setLayout(layout1);
  TimeBasedRollingPolicy tbrp1=new TimeBasedRollingPolicy();
  rfa1.setFile("test4.log");
  tbrp1.setFileNamePattern("test4-%d{" + datePattern + "}");
  tbrp1.activateOptions();
  rfa1.setRollingPolicy(tbrp1);
  rfa1.setAppend(false);
  rfa1.activateOptions();
  logger.addAppender(rfa1);
  SimpleDateFormat sdf=new SimpleDateFormat(datePattern);
  String[] filenames=new String[4];
  Calendar cal=Calendar.getInstance();
  for (int i=0; i < 3; i++) {
    filenames[i]="test4-" + sdf.format(cal.getTime());
    cal.add(Calendar.SECOND,1);
  }
  filenames[3]="test4.log";
  System.out.println("Waiting until next second and 100 millis.");
  delayUntilNextSecond(100);
  System.out.println("Done waiting.");
  for (int i=0; i <= 2; i++) {
    logger.debug("Hello---" + i);
    Thread.sleep(500);
  }
  logger.removeAppender(rfa1);
  rfa1.close();
  PatternLayout layout2=new PatternLayout("%c{1} - %m%n");
  RollingFileAppender rfa2=new RollingFileAppender();
  rfa2.setLayout(layout2);
  TimeBasedRollingPolicy tbrp2=new TimeBasedRollingPolicy();
  tbrp2.setFileNamePattern("test4-%d{" + datePattern + "}");
  rfa2.setFile("test4.log");
  tbrp2.activateOptions();
  rfa2.setRollingPolicy(tbrp2);
  rfa2.activateOptions();
  logger.addAppender(rfa2);
  for (int i=3; i <= 4; i++) {
    logger.debug("Hello---" + i);
    Thread.sleep(500);
  }
  rfa2.close();
  for (int i=0; i < 4; i++) {
    assertTrue(compare(filenames[i],"witness/rolling/tbr-test4." + i));
  }
}
