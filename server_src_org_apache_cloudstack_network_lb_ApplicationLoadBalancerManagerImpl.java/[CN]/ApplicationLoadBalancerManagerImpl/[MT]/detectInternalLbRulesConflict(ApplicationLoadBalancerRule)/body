{
  List<ApplicationLoadBalancerRuleVO> lbRules=_lbDao.listBySourceIpAndNotRevoked(newLbRule.getSourceIp(),newLbRule.getSourceIpNetworkId());
  for (  ApplicationLoadBalancerRuleVO lbRule : lbRules) {
    if (lbRule.getId() == newLbRule.getId()) {
      continue;
    }
    if (lbRule.getNetworkId() != newLbRule.getNetworkId() && lbRule.getState() != State.Revoke) {
      throw new NetworkRuleConflictException("New rule is for a different network than what's specified in rule " + lbRule.getXid());
    }
    if ((lbRule.getSourcePortStart().intValue() <= newLbRule.getSourcePortStart().intValue() && lbRule.getSourcePortEnd().intValue() >= newLbRule.getSourcePortStart().intValue()) || (lbRule.getSourcePortStart().intValue() <= newLbRule.getSourcePortEnd().intValue() && lbRule.getSourcePortEnd().intValue() >= newLbRule.getSourcePortEnd().intValue()) || (newLbRule.getSourcePortStart().intValue() <= lbRule.getSourcePortStart().intValue() && newLbRule.getSourcePortEnd().intValue() >= lbRule.getSourcePortStart().intValue())|| (newLbRule.getSourcePortStart().intValue() <= lbRule.getSourcePortEnd().intValue() && newLbRule.getSourcePortEnd().intValue() >= lbRule.getSourcePortEnd().intValue())) {
      throw new NetworkRuleConflictException("The range specified, " + newLbRule.getSourcePortStart().intValue() + "-"+ newLbRule.getSourcePortEnd().intValue()+ ", conflicts with rule "+ lbRule.getId()+ " which has "+ lbRule.getSourcePortStart().intValue()+ "-"+ lbRule.getSourcePortEnd().intValue());
    }
  }
  if (logger.isDebugEnabled()) {
    logger.debug("No network rule conflicts detected for " + newLbRule + " against "+ (lbRules.size() - 1)+ " existing rules");
  }
}
