{
  RouterData routerData=new RouterData(cmd.getTenantId());
  List<AclData> acls=new ArrayList<AclData>();
  acls.addAll(cmd.getAcls());
  routerData.getRouter().getAcls().addAll(acls);
  routerData.getRouter().addExternalGateway(cmd.getPublicIp());
  try {
    String hash=_bigswitchBcfApi.modifyRouter(cmd.getTenantId(),routerData);
    return new BcfAnswer(cmd,true,"tenant " + cmd.getTenantId() + " router updated",hash);
  }
 catch (  BigSwitchBcfApiException e) {
    if (e.is_topologySyncRequested()) {
      cmd.setTopologySyncRequested(true);
      return new BcfAnswer(cmd,true,"tenant " + cmd.getTenantId() + " router updated but topology sync required.");
    }
 else {
      if (numRetries > 0) {
        return retry(cmd,--numRetries);
      }
 else {
        return new BcfAnswer(cmd,e);
      }
    }
  }
catch (  IllegalArgumentException e1) {
    return new BcfAnswer(cmd,false,"Illegal argument in BCF router update");
  }
}
