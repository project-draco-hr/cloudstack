{
  FloatingIpData fip=new FloatingIpData();
  fip.setTenantId(cmd.getTenantId());
  fip.setNetworkId(cmd.getNetworkId());
  fip.setFixedIp(cmd.getPrivateIp());
  fip.setFloatingIpAndId(cmd.getPublicIp());
  fip.setMac(cmd.getMac());
  try {
    String hash=_bigswitchBcfApi.createFloatingIp(cmd.getTenantId(),fip);
    return new BcfAnswer(cmd,true,"floating ip " + cmd.getPublicIp() + ":"+ cmd.getPrivateIp()+ " created",hash);
  }
 catch (  BigSwitchBcfApiException e) {
    if (e.is_topologySyncRequested()) {
      cmd.setTopologySyncRequested(true);
      return new BcfAnswer(cmd,true,"floating ip " + cmd.getPublicIp() + ":"+ cmd.getPrivateIp()+ " created; topology sync required.");
    }
 else {
      if (numRetries > 0) {
        return retry(cmd,--numRetries);
      }
 else {
        return new BcfAnswer(cmd,e);
      }
    }
  }
}
