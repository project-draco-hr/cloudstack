{
  if (_scspClient != null) {
    return _scspClient;
  }
  String[] cfg=mountedRoot.split(" ");
  int numIPs=cfg.length - 1;
  String possiblePort=cfg[cfg.length - 1];
  int castorPort=DEFAULT_SCSP_PORT;
  try {
    castorPort=Integer.parseInt(possiblePort);
    --numIPs;
  }
 catch (  NumberFormatException nfe) {
  }
  if (numIPs <= 0) {
    throw new ConfigurationException("No CAStor nodes specified in '" + mountedRoot + "'");
  }
  HashSet<String> ips=new HashSet<String>();
  String clusterName=null;
  for (int i=0; i < numIPs; ++i) {
    String option=cfg[i + 1];
    if (option.toLowerCase().startsWith("zeroconf=")) {
      String[] confStr=option.split("=");
      if (confStr.length != 2) {
        throw new ConfigurationException("Could not parse cluster name from '" + option + "'");
      }
      clusterName=confStr[1];
    }
 else     if (option.toLowerCase().startsWith("domain=")) {
      String[] confStr=option.split("=");
      if (confStr.length != 2) {
        throw new ConfigurationException("Could not parse domain name from '" + option + "'");
      }
      _domain=confStr[1];
    }
 else {
      ips.add(option);
    }
  }
  if (clusterName == null && ips.isEmpty()) {
    throw new ConfigurationException("No CAStor nodes specified in '" + mountedRoot + "'");
  }
  String[] castorNodes=ips.toArray(new String[0]);
  if (clusterName == null) {
    try {
      _locator=new StaticLocator(castorNodes,castorPort,LOCATOR_RETRY_TIMEOUT);
      _locator.start();
    }
 catch (    IOException e) {
      throw new ConfigurationException("Could not create CAStor static locator for '" + Arrays.toString(castorNodes) + "'");
    }
  }
 else {
    try {
      clusterName=clusterName.replace(".","_");
      _locator=new ZeroconfLocator(clusterName);
      _locator.start();
    }
 catch (    IOException e) {
      throw new ConfigurationException("Could not create CAStor zeroconf locator for '" + clusterName + "'");
    }
  }
  try {
    s_logger.info("CAStor client starting: " + (_domain == null ? "default domain" : "domain " + _domain) + " "+ (clusterName == null ? Arrays.toString(castorNodes) : clusterName)+ " :"+ castorPort);
    _scspClient=new ScspClient(_locator,castorPort,DEFAULT_MAX_POOL_SIZE,DEFAULT_MAX_RETRIES,CONNECTION_TIMEOUT,CM_IDLE_TIMEOUT);
    _scspClient.start();
  }
 catch (  Exception e) {
    s_logger.error("Unable to create CAStor client for '" + mountedRoot + "': "+ e.getMessage(),e);
    throw new ConfigurationException("Unable to create CAStor client for '" + mountedRoot + "': "+ e);
  }
  return _scspClient;
}
