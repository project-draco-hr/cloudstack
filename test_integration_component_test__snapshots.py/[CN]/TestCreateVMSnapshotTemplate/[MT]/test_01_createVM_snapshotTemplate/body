@attr(speed='slow')
@attr(tags=['advanced', 'advancedns'])
def test_01_createVM_snapshotTemplate(self):
    'Test create VM, Snapshot and Template\n        '
    self.virtual_machine = VirtualMachine.create(self.apiclient, self.services['server'], templateid=self.template.id, accountid=self.account.name, domainid=self.account.domainid, serviceofferingid=self.service_offering.id)
    self.debug(('Created VM with ID: %s' % self.virtual_machine.id))
    volumes = list_volumes(self.apiclient, virtualmachineid=self.virtual_machine.id, type='ROOT', listall=True)
    volume = volumes[0]
    snapshot = Snapshot.create(self.apiclient, volumes[0].id)
    self.debug(('Snapshot created: ID - %s' % snapshot.id))
    self.cleanup.append(snapshot)
    snapshots = list_snapshots(self.apiclient, id=snapshot.id)
    self.assertEqual(isinstance(snapshots, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(snapshots, None, 'Check if result exists in list snapshots call')
    self.assertEqual(snapshots[0].id, snapshot.id, 'Check snapshot id in list resources call')
    self.debug(("select backup_snap_id, account_id, volume_id from snapshots where uuid = '%s';" % snapshot.id))
    snapshot_uuid = snapshot.id
    template = Template.create_from_snapshot(self.apiclient, snapshot, self.services['templates'])
    self.debug(('Created template from snapshot: %s' % template.id))
    self.cleanup.append(template)
    templates = list_templates(self.apiclient, templatefilter=self.services['templates']['templatefilter'], id=template.id)
    self.assertNotEqual(templates, None, 'Check if result exists in list item call')
    self.assertEqual(templates[0].isready, True, 'Check new template state in list templates call')
    new_virtual_machine = VirtualMachine.create(self.apiclient, self.services['server'], templateid=template.id, accountid=self.account.name, domainid=self.account.domainid, serviceofferingid=self.service_offering.id)
    self.debug(('Created VM with ID: %s from template: %s' % (new_virtual_machine.id, template.id)))
    self.cleanup.append(new_virtual_machine)
    virtual_machines = list_virtual_machines(self.apiclient, id=new_virtual_machine.id, account=self.account.name, domainid=self.account.domainid)
    self.assertEqual(isinstance(virtual_machines, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(virtual_machines), 0, 'Check list virtual machines response')
    for virtual_machine in virtual_machines:
        self.assertEqual(virtual_machine.state, 'Running', 'Check list VM response for Running state')
    self.assertTrue(is_snapshot_on_nfs(self.apiclient, self.dbclient, self.config, self.zone.id, snapshot_uuid))
    return
