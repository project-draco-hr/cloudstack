@classmethod
def setUpClass(cls):
    cls.testClient = super(TestSnapshots, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.services = Services().services
    cls.domain = get_domain(cls.api_client)
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.services['mode'] = cls.zone.networktype
    cls.hypervisor = cls.testClient.getHypervisorInfo()
    if (cls.hypervisor.lower() in ['lxc']):
        raise unittest.SkipTest(('snapshots are not supported on %s' % cls.hypervisor.lower()))
    cls.disk_offering = DiskOffering.create(cls.api_client, cls.services['disk_offering'])
    cls.template = get_template(cls.api_client, cls.zone.id, cls.services['ostype'])
    cls.services['domainid'] = cls.domain.id
    cls.services['volume']['zoneid'] = cls.services['server_with_disk']['zoneid'] = cls.zone.id
    cls.services['server_with_disk']['diskoffering'] = cls.disk_offering.id
    cls.services['server_without_disk']['zoneid'] = cls.zone.id
    cls.services['templates']['ostypeid'] = cls.template.ostypeid
    cls.services['zoneid'] = cls.zone.id
    cls.services['diskoffering'] = cls.disk_offering.id
    cls.service_offering = ServiceOffering.create(cls.api_client, cls.services['service_offering'])
    cls.hypervisor = get_hypervisor_type(cls.api_client).lower()
    cls._cleanup = [cls.service_offering, cls.disk_offering]
    return
