{
  _name=name;
  _uuid=(String)params.get("guid");
  try {
    _memCapacity=Long.parseLong((String)params.get(ApiConstants.MEMORY)) * 1024L * 1024L;
    _cpuCapacity=Long.parseLong((String)params.get(ApiConstants.CPU_SPEED));
    _cpuNum=Long.parseLong((String)params.get(ApiConstants.CPU_NUMBER));
  }
 catch (  NumberFormatException e) {
    throw new ConfigurationException(String.format("Unable to parse number of CPU or memory capacity " + "or cpu capacity(cpu number = %1$s memCapacity=%2$s, cpuCapacity=%3$s",(String)params.get(ApiConstants.CPU_NUMBER),(String)params.get(ApiConstants.MEMORY),(String)params.get(ApiConstants.CPU_SPEED)));
  }
  _zone=(String)params.get("zone");
  _pod=(String)params.get("pod");
  _cluster=(String)params.get("cluster");
  _ip=(String)params.get(ApiConstants.PRIVATE_IP);
  _mac=(String)params.get(ApiConstants.HOST_MAC);
  _username=(String)params.get(ApiConstants.USERNAME);
  _password=(String)params.get(ApiConstants.PASSWORD);
  _vmName=(String)params.get("vmName");
  if (_pod == null) {
    throw new ConfigurationException("Unable to get the pod");
  }
  if (_cluster == null) {
    throw new ConfigurationException("Unable to get the pod");
  }
  if (_ip == null) {
    throw new ConfigurationException("Unable to get the host address");
  }
  if (_mac.equalsIgnoreCase("unknown")) {
    throw new ConfigurationException("Unable to get the host mac address");
  }
  if (_mac.split(":").length != 6) {
    throw new ConfigurationException("Wrong MAC format(" + _mac + "). It must be in format of for example 00:11:ba:33:aa:dd which is not case sensitive");
  }
  if (_uuid == null) {
    throw new ConfigurationException("Unable to get the uuid");
  }
  String injectScript="scripts/util/ipmi.py";
  String scriptPath=Script.findScript("",injectScript);
  if (scriptPath == null) {
    throw new ConfigurationException("Cannot find ping script " + scriptPath);
  }
  _pingCommand=new Script2(scriptPath,s_logger);
  _pingCommand.add("ping");
  _pingCommand.add("hostname=" + _ip);
  _pingCommand.add("usrname=" + _username);
  _pingCommand.add("password=" + _password,ParamType.PASSWORD);
  _setPxeBootCommand=new Script2(scriptPath,s_logger);
  _setPxeBootCommand.add("boot_dev");
  _setPxeBootCommand.add("hostname=" + _ip);
  _setPxeBootCommand.add("usrname=" + _username);
  _setPxeBootCommand.add("password=" + _password,ParamType.PASSWORD);
  _setPxeBootCommand.add("dev=pxe");
  _setDiskBootCommand=new Script2(scriptPath,s_logger);
  _setDiskBootCommand.add("boot_dev");
  _setDiskBootCommand.add("hostname=" + _ip);
  _setDiskBootCommand.add("usrname=" + _username);
  _setDiskBootCommand.add("password=" + _password,ParamType.PASSWORD);
  _setDiskBootCommand.add("dev=disk");
  _rebootCommand=new Script2(scriptPath,s_logger);
  _rebootCommand.add("reboot");
  _rebootCommand.add("hostname=" + _ip);
  _rebootCommand.add("usrname=" + _username);
  _rebootCommand.add("password=" + _password,ParamType.PASSWORD);
  _getStatusCommand=new Script2(scriptPath,s_logger);
  _getStatusCommand.add("ping");
  _getStatusCommand.add("hostname=" + _ip);
  _getStatusCommand.add("usrname=" + _username);
  _getStatusCommand.add("password=" + _password,ParamType.PASSWORD);
  _powerOnCommand=new Script2(scriptPath,s_logger);
  _powerOnCommand.add("power");
  _powerOnCommand.add("hostname=" + _ip);
  _powerOnCommand.add("usrname=" + _username);
  _powerOnCommand.add("password=" + _password,ParamType.PASSWORD);
  _powerOnCommand.add("action=on");
  _powerOffCommand=new Script2(scriptPath,s_logger);
  _powerOffCommand.add("power");
  _powerOffCommand.add("hostname=" + _ip);
  _powerOffCommand.add("usrname=" + _username);
  _powerOffCommand.add("password=" + _password,ParamType.PASSWORD);
  _powerOffCommand.add("action=soft");
  _forcePowerOffCommand=new Script2(scriptPath,s_logger);
  _forcePowerOffCommand.add("power");
  _forcePowerOffCommand.add("hostname=" + _ip);
  _forcePowerOffCommand.add("usrname=" + _username);
  _forcePowerOffCommand.add("password=" + _password,ParamType.PASSWORD);
  _forcePowerOffCommand.add("action=off");
  _bootOrRebootCommand=new Script2(scriptPath,s_logger);
  _bootOrRebootCommand.add("boot_or_reboot");
  _bootOrRebootCommand.add("hostname=" + _ip);
  _bootOrRebootCommand.add("usrname=" + _username);
  _bootOrRebootCommand.add("password=" + _password,ParamType.PASSWORD);
  return true;
}
