{
  String queries=t.getRequestURI().getQuery();
  Map<String,String> queryMap=ConsoleProxyHttpHandlerHelper.getQueryMap(queries);
  String host=queryMap.get("host");
  String portStr=queryMap.get("port");
  String sid=queryMap.get("sid");
  String tag=queryMap.get("tag");
  String ticket=queryMap.get("ticket");
  String keyStr=queryMap.get("key");
  int key=0;
  if (tag == null)   tag="";
  int port;
  if (host == null || portStr == null || sid == null)   throw new IllegalArgumentException();
  try {
    port=Integer.parseInt(portStr);
  }
 catch (  NumberFormatException e) {
    s_logger.warn("Invalid numeric parameter in query string: " + portStr);
    throw new IllegalArgumentException(e);
  }
  try {
    key=Integer.parseInt(keyStr);
  }
 catch (  NumberFormatException e) {
    s_logger.warn("Invalid numeric parameter in query string: " + keyStr);
    throw new IllegalArgumentException(e);
  }
  ConsoleProxyClientParam param=new ConsoleProxyClientParam();
  param.setClientHostAddress(host);
  param.setClientHostPort(port);
  param.setClientHostPassword(sid);
  param.setClientTag(tag);
  param.setTicket(ticket);
  ConsoleProxyClient viewer=ConsoleProxy.getVncViewer(param);
  byte[] img=viewer.getAjaxImageCache().getImage(key);
  if (img != null) {
    Headers hds=t.getResponseHeaders();
    hds.set("Content-Type","image/jpeg");
    t.sendResponseHeaders(200,img.length);
    OutputStream os=t.getResponseBody();
    try {
      os.write(img,0,img.length);
    }
  finally {
      os.close();
    }
  }
 else {
    if (s_logger.isInfoEnabled())     s_logger.info("Image has already been swept out, key: " + key);
    t.sendResponseHeaders(404,-1);
  }
}
