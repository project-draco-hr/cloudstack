@attr(tags=['advanced'])
def test_02_create_network_without_sourcenat(self):
    "\n        @Desc: Test create network if supported services doesn't have sourcenat\n        @Steps \n        Step1    : Create Network Offering without sourcenat\n        Step2    : Enable network offering\n        Step3    : Create network with sourcenat diasbled network offering\n        Step4    : Verifying that it raises an exception\n        "
    network_offering_without_sourcenat = NetworkOffering.create(self.apiClient, self.services['network_offering_without_sourcenat'])
    if (network_offering_without_sourcenat is None):
        self.fail('Creation of network offering without sourcenat failed')
    self.cleanup.append(network_offering_without_sourcenat)
    network_offering_without_sourcenat.update(self.apiClient, state='Enabled')
    self.services['network_without_acl']['networkoffering'] = network_offering_without_sourcenat.id
    with self.assertRaises(Exception):
        network_created = Network.create(self.userapiclient, self.services['network_without_acl'])
        if (network_created is not None):
            self.cleanup.append(network_created)
    self.services['network_without_acl']['networkoffering'] = self.network_offering.id
    return
