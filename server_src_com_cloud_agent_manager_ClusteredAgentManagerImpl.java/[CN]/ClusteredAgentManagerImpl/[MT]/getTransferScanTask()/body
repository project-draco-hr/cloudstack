{
  return new Runnable(){
    @Override public void run(){
      try {
        if (s_logger.isTraceEnabled()) {
          s_logger.trace("Clustered agent transfer scan check, management server id:" + _nodeId);
        }
synchronized (_agentToTransferIds) {
          if (_agentToTransferIds.size() > 0) {
            s_logger.debug("Found " + _agentToTransferIds.size() + " agents to transfer");
            for (Iterator<Long> iterator=_agentToTransferIds.iterator(); iterator.hasNext(); ) {
              Long hostId=iterator.next();
              AgentAttache attache=findAttache(hostId);
              Date cutTime=DateUtil.currentGMTTime();
              if (_hostTransferDao.isNotActive(hostId,new Date(cutTime.getTime() - rebalanceTimeOut))) {
                s_logger.debug("Timed out waiting for the host id=" + hostId + " to be ready to transfer, skipping rebalance for the host");
                iterator.remove();
                _hostTransferDao.completeAgentTransfer(hostId);
                continue;
              }
              if (attache.forForward()) {
                s_logger.debug("Management server " + _nodeId + " doesn't own host id="+ hostId+ " any more, skipping rebalance for the host");
                iterator.remove();
                _hostTransferDao.completeAgentTransfer(hostId);
                continue;
              }
              HostTransferMapVO transferMap=_hostTransferDao.findByIdAndCurrentOwnerId(hostId,_nodeId);
              if (transferMap == null) {
                s_logger.debug("Can't transfer host id=" + hostId + "; record for the host no longer exists in op_host_transfer table");
                iterator.remove();
                _hostTransferDao.completeAgentTransfer(hostId);
                continue;
              }
              ManagementServerHostVO ms=_mshostDao.findByMsid(transferMap.getFutureOwner());
              if (ms != null && ms.getState() != ManagementServerHost.State.Up) {
                s_logger.debug("Can't transfer host " + hostId + " as it's future owner is not in UP state: "+ ms+ ", skipping rebalance for the host");
                iterator.remove();
                _hostTransferDao.completeAgentTransfer(hostId);
                continue;
              }
              if (attache.getQueueSize() == 0 && attache.getNonRecurringListenersSize() == 0) {
                iterator.remove();
                try {
                  _executor.execute(new RebalanceTask(hostId,transferMap.getInitialOwner(),transferMap.getFutureOwner()));
                }
 catch (                RejectedExecutionException ex) {
                  s_logger.warn("Failed to submit rebalance task for host id=" + hostId + "; postponing the execution");
                  continue;
                }
              }
 else {
                s_logger.debug("Agent " + hostId + " can't be transfered yet as its request queue size is "+ attache.getQueueSize()+ " and listener queue size is "+ attache.getNonRecurringListenersSize());
              }
            }
          }
 else {
            if (s_logger.isTraceEnabled()) {
              s_logger.trace("Found no agents to be transfered by the management server " + _nodeId);
            }
          }
        }
      }
 catch (      Throwable e) {
        s_logger.error("Problem with the clustered agent transfer scan check!",e);
      }
    }
  }
;
}
