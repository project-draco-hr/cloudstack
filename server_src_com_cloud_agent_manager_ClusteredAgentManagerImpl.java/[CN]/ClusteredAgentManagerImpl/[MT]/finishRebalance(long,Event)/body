{
  HostTransferMapVO map=_hostTransferDao.findById(hostId);
  if (map.getInitialOwner() != _nodeId) {
    s_logger.warn("Why finish rebalance called not by initial host owner???");
    return false;
  }
  boolean success=(event == Event.RebalanceCompleted) ? true : false;
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Finishing rebalancing for the agent " + hostId + " with result "+ success);
  }
  AgentAttache attache=findAttache(hostId);
  if (attache == null) {
    s_logger.debug("Unable to find attache for the host id=" + hostId + ", assuming that the agent disconnected already");
    return true;
  }
 else   if (success) {
    s_logger.debug("Management server " + _nodeId + " is completing agent "+ hostId+ " rebalance");
    LinkedList<Request> requests=((ClusteredDirectAgentAttache)attache).getRequests();
    removeAgent(attache,Status.Rebalancing);
    try {
      getAttache(hostId);
      if (!requests.isEmpty()) {
        s_logger.debug("Forwarding requests held in transfer attache " + hostId + " from the management server "+ _nodeId+ " to "+ map.getFutureOwner());
        for (        Request request : requests) {
          routeToPeer(Long.toString(map.getFutureOwner()),request.getBytes());
        }
      }
    }
 catch (    AgentUnavailableException ex) {
      s_logger.warn("Not creating forward attache as agent is not available",ex);
    }
  }
 else {
    ((ClusteredDirectAgentAttache)attache).setTransferMode(false);
  }
  _hostTransferDao.completeAgentTransfer(hostId);
  return true;
}
