{
  final LibvirtConnectionWrapper libvirtConnectionWrapper=libvirtComputingResource.getLibvirtConnectionWrapper();
  try {
    final Connect conn=libvirtConnectionWrapper.getConnectionByVmName(command.getVmName());
    final String result=libvirtComputingResource.rebootVM(conn,command.getVmName());
    if (result == null) {
      Integer vncPort=null;
      try {
        vncPort=libvirtComputingResource.getVncPort(conn,command.getVmName());
      }
 catch (      final LibvirtException e) {
        s_logger.trace("Ignoring libvirt error.",e);
      }
      libvirtComputingResource.getRuleLogsForVms();
      return new RebootAnswer(command,null,vncPort);
    }
 else {
      return new RebootAnswer(command,result,false);
    }
  }
 catch (  final LibvirtException e) {
    return new RebootAnswer(command,e.getMessage(),false);
  }
}
