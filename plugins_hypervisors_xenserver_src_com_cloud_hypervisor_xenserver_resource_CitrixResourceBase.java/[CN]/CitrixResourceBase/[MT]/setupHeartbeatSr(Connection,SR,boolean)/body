{
  final SR.Record srRec=sr.getRecord(conn);
  final String srUuid=srRec.uuid;
  if (!srRec.shared || !SRType.LVMOHBA.equals(srRec.type) && !SRType.LVMOISCSI.equals(srRec.type) && !SRType.NFS.equals(srRec.type)) {
    return srUuid;
  }
  String result=null;
  final Host host=Host.getByUuid(conn,_host.uuid);
  final Set<String> tags=host.getTags(conn);
  if (force || !tags.contains("cloud-heartbeat-" + srUuid)) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Setting up the heartbeat sr for host " + _host.ip + " and sr "+ srUuid);
    }
    final Set<PBD> pbds=sr.getPBDs(conn);
    for (    final PBD pbd : pbds) {
      final PBD.Record pbdr=pbd.getRecord(conn);
      if (!pbdr.currentlyAttached && pbdr.host.getUuid(conn).equals(_host.uuid)) {
        pbd.plug(conn);
        break;
      }
    }
    result=callHostPluginThroughMaster(conn,"vmopspremium","setup_heartbeat_sr","host",_host.uuid,"sr",srUuid);
    if (result == null || !result.split("#")[1].equals("0")) {
      throw new CloudRuntimeException("Unable to setup heartbeat sr on SR " + srUuid + " due to "+ result);
    }
    if (!tags.contains("cloud-heartbeat-" + srUuid)) {
      tags.add("cloud-heartbeat-" + srUuid);
      host.setTags(conn,tags);
    }
  }
  result=callHostPluginPremium(conn,"setup_heartbeat_file","host",_host.uuid,"sr",srUuid,"add","true");
  if (result == null || !result.split("#")[1].equals("0")) {
    throw new CloudRuntimeException("Unable to setup heartbeat file entry on SR " + srUuid + " due to "+ result);
  }
  return srUuid;
}
