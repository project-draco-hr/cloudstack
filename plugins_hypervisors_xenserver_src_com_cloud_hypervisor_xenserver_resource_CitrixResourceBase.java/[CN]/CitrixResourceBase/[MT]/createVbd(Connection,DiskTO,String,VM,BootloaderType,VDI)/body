{
  final Volume.Type type=volume.getType();
  if (vdi == null) {
    vdi=mount(conn,vmName,volume);
  }
  if (vdi != null) {
    if ("detached".equals(vdi.getNameLabel(conn))) {
      vdi.setNameLabel(conn,vmName + "-DATA");
    }
    final Map<String,String> smConfig=vdi.getSmConfig(conn);
    for (    final String key : smConfig.keySet()) {
      if (key.startsWith("host_")) {
        vdi.removeFromSmConfig(conn,key);
        break;
      }
    }
  }
  final VBD.Record vbdr=new VBD.Record();
  vbdr.VM=vm;
  if (vdi != null) {
    vbdr.VDI=vdi;
  }
 else {
    vbdr.empty=true;
  }
  if (type == Volume.Type.ROOT && bootLoaderType == BootloaderType.PyGrub) {
    vbdr.bootable=true;
  }
 else   if (type == Volume.Type.ISO && bootLoaderType == BootloaderType.CD) {
    vbdr.bootable=true;
  }
  if (volume.getType() == Volume.Type.ISO) {
    vbdr.mode=Types.VbdMode.RO;
    vbdr.type=Types.VbdType.CD;
    vbdr.userdevice="3";
  }
 else {
    vbdr.mode=Types.VbdMode.RW;
    vbdr.type=Types.VbdType.DISK;
    vbdr.unpluggable=(volume.getType() == Volume.Type.ROOT) ? false : true;
    vbdr.userdevice="autodetect";
    final Long deviceId=volume.getDiskSeq();
    if (deviceId != null && !isDeviceUsed(conn,vm,deviceId)) {
      vbdr.userdevice=deviceId.toString();
    }
  }
  final VBD vbd=VBD.create(conn,vbdr);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("VBD " + vbd.getUuid(conn) + " created for "+ volume);
  }
  return vbd;
}
