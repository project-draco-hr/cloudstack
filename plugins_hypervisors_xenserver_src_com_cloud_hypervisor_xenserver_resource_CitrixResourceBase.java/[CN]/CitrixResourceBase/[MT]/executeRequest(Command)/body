{
  final CitrixRequestWrapper wrapper=CitrixRequestWrapper.getInstance();
  try {
    final Answer answer=wrapper.execute(cmd,this);
    return answer;
  }
 catch (  final Exception e) {
  }
  final Class<? extends Command> clazz=cmd.getClass();
  if (cmd instanceof NetworkElementCommand) {
    return _vrResource.executeRequest((NetworkElementCommand)cmd);
  }
 else   if (clazz == NetworkRulesSystemVmCommand.class) {
    return execute((NetworkRulesSystemVmCommand)cmd);
  }
 else   if (clazz == OvsCreateTunnelCommand.class) {
    return execute((OvsCreateTunnelCommand)cmd);
  }
 else   if (clazz == OvsSetupBridgeCommand.class) {
    return execute((OvsSetupBridgeCommand)cmd);
  }
 else   if (clazz == OvsDestroyBridgeCommand.class) {
    return execute((OvsDestroyBridgeCommand)cmd);
  }
 else   if (clazz == OvsDestroyTunnelCommand.class) {
    return execute((OvsDestroyTunnelCommand)cmd);
  }
 else   if (clazz == UpdateHostPasswordCommand.class) {
    return execute((UpdateHostPasswordCommand)cmd);
  }
 else   if (cmd instanceof ClusterVMMetaDataSyncCommand) {
    return execute((ClusterVMMetaDataSyncCommand)cmd);
  }
 else   if (clazz == CheckNetworkCommand.class) {
    return execute((CheckNetworkCommand)cmd);
  }
 else   if (clazz == PlugNicCommand.class) {
    return execute((PlugNicCommand)cmd);
  }
 else   if (clazz == UnPlugNicCommand.class) {
    return execute((UnPlugNicCommand)cmd);
  }
 else   if (cmd instanceof StorageSubSystemCommand) {
    return storageHandler.handleStorageCommands((StorageSubSystemCommand)cmd);
  }
 else   if (clazz == CreateVMSnapshotCommand.class) {
    return execute((CreateVMSnapshotCommand)cmd);
  }
 else   if (clazz == DeleteVMSnapshotCommand.class) {
    return execute((DeleteVMSnapshotCommand)cmd);
  }
 else   if (clazz == RevertToVMSnapshotCommand.class) {
    return execute((RevertToVMSnapshotCommand)cmd);
  }
 else   if (clazz == NetworkRulesVmSecondaryIpCommand.class) {
    return execute((NetworkRulesVmSecondaryIpCommand)cmd);
  }
 else   if (clazz == ScaleVmCommand.class) {
    return execute((ScaleVmCommand)cmd);
  }
 else   if (clazz == PvlanSetupCommand.class) {
    return execute((PvlanSetupCommand)cmd);
  }
 else   if (clazz == PerformanceMonitorCommand.class) {
    return execute((PerformanceMonitorCommand)cmd);
  }
 else {
    return Answer.createUnsupportedCommandAnswer(cmd);
  }
}
