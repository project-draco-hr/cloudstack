{
  _name=name;
  try {
    _dcId=Long.parseLong((String)params.get("zone"));
  }
 catch (  final NumberFormatException e) {
    throw new ConfigurationException("Unable to get the zone " + params.get("zone"));
  }
  _host.setUuid((String)params.get("guid"));
  _name=_host.getUuid();
  _host.setIp((String)params.get("ipaddress"));
  _username=(String)params.get("username");
  _password.add((String)params.get("password"));
  _pod=(String)params.get("pod");
  _cluster=(String)params.get("cluster");
  _privateNetworkName=(String)params.get("private.network.device");
  _publicNetworkName=(String)params.get("public.network.device");
  _guestNetworkName=(String)params.get("guest.network.device");
  _instance=(String)params.get("instance.name");
  _securityGroupEnabled=Boolean.parseBoolean((String)params.get("securitygroupenabled"));
  _linkLocalPrivateNetworkName=(String)params.get("private.linkLocal.device");
  if (_linkLocalPrivateNetworkName == null) {
    _linkLocalPrivateNetworkName="cloud_link_local_network";
  }
  _storageNetworkName1=(String)params.get("storage.network.device1");
  _storageNetworkName2=(String)params.get("storage.network.device2");
  _heartbeatTimeout=NumbersUtil.parseInt((String)params.get("xenserver.heartbeat.timeout"),120);
  _heartbeatInterval=NumbersUtil.parseInt((String)params.get("xenserver.heartbeat.interval"),60);
  String value=(String)params.get("wait");
  _wait=NumbersUtil.parseInt(value,600);
  value=(String)params.get("migratewait");
  _migratewait=NumbersUtil.parseInt(value,3600);
  _maxNics=NumbersUtil.parseInt((String)params.get("xenserver.nics.max"),7);
  if (_pod == null) {
    throw new ConfigurationException("Unable to get the pod");
  }
  if (_host.getIp() == null) {
    throw new ConfigurationException("Unable to get the host address");
  }
  if (_username == null) {
    throw new ConfigurationException("Unable to get the username");
  }
  if (_password.peek() == null) {
    throw new ConfigurationException("Unable to get the password");
  }
  if (_host.getUuid() == null) {
    throw new ConfigurationException("Unable to get the uuid");
  }
  CheckXenHostInfo();
  storageHandler=buildStorageHandler();
  _vrResource=new VirtualRoutingResource(this);
  if (!_vrResource.configure(name,params)) {
    throw new ConfigurationException("Unable to configure VirtualRoutingResource");
  }
  return true;
}
