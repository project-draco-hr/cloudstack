{
  String vmName="";
  try {
    vmName=vm.getNameLabel(conn);
    final List<Integer> usedDeviceNums=new ArrayList<Integer>();
    final Set<VIF> vifs=vm.getVIFs(conn);
    final Iterator<VIF> vifIter=vifs.iterator();
    while (vifIter.hasNext()) {
      final VIF vif=vifIter.next();
      try {
        final String deviceId=vif.getDevice(conn);
        if (vm.getIsControlDomain(conn) || vif.getCurrentlyAttached(conn)) {
          usedDeviceNums.add(Integer.valueOf(deviceId));
        }
 else {
          s_logger.debug("Found unplugged VIF " + deviceId + " in VM "+ vmName+ " destroy it");
          vif.destroy(conn);
        }
      }
 catch (      final NumberFormatException e) {
        final String msg="Obtained an invalid value for an allocated VIF device number for VM: " + vmName;
        s_logger.debug(msg,e);
        throw new CloudRuntimeException(msg);
      }
    }
    for (Integer i=0; i < _maxNics; i++) {
      if (!usedDeviceNums.contains(i)) {
        s_logger.debug("Lowest available Vif device number: " + i + " for VM: "+ vmName);
        return i.toString();
      }
    }
  }
 catch (  final XmlRpcException e) {
    final String msg="Caught XmlRpcException: " + e.getMessage();
    s_logger.warn(msg,e);
  }
catch (  final XenAPIException e) {
    final String msg="Caught XenAPIException: " + e.toString();
    s_logger.warn(msg,e);
  }
  throw new CloudRuntimeException("Could not find available VIF slot in VM with name: " + vmName);
}
