{
  final DataTO data=volume.getData();
  final Volume.Type type=volume.getType();
  if (type == Volume.Type.ISO) {
    final TemplateObjectTO iso=(TemplateObjectTO)data;
    final DataStoreTO store=iso.getDataStore();
    if (store == null) {
      return null;
    }
    final String templateName=iso.getName();
    if (templateName.startsWith("xs-tools")) {
      try {
        final Set<VDI> vdis=VDI.getByNameLabel(conn,templateName);
        if (vdis.isEmpty()) {
          throw new CloudRuntimeException("Could not find ISO with URL: " + templateName);
        }
        return vdis.iterator().next();
      }
 catch (      final XenAPIException e) {
        throw new CloudRuntimeException("Unable to get pv iso: " + templateName + " due to "+ e.toString());
      }
catch (      final Exception e) {
        throw new CloudRuntimeException("Unable to get pv iso: " + templateName + " due to "+ e.toString());
      }
    }
    if (!(store instanceof NfsTO)) {
      throw new CloudRuntimeException("only support mount iso on nfs");
    }
    final NfsTO nfsStore=(NfsTO)store;
    final String isoPath=nfsStore.getUrl() + File.separator + iso.getPath();
    final int index=isoPath.lastIndexOf("/");
    final String mountpoint=isoPath.substring(0,index);
    URI uri;
    try {
      uri=new URI(mountpoint);
    }
 catch (    final URISyntaxException e) {
      throw new CloudRuntimeException("Incorrect uri " + mountpoint,e);
    }
    final SR isoSr=createIsoSRbyURI(conn,uri,vmName,false);
    final String isoname=isoPath.substring(index + 1);
    final VDI isoVdi=getVDIbyLocationandSR(conn,isoname,isoSr);
    if (isoVdi == null) {
      throw new CloudRuntimeException("Unable to find ISO " + isoPath);
    }
    return isoVdi;
  }
 else {
    final VolumeObjectTO vol=(VolumeObjectTO)data;
    return VDI.getByUuid(conn,vol.getPath());
  }
}
