{
  _isOvs=true;
  final Connection conn=getConnection();
  String bridge="unkonwn";
  try {
    final Network nw=setupvSwitchNetwork(conn);
    bridge=nw.getBridge(conn);
    final String result=callHostPlugin(conn,"ovsgre","ovs_create_gre","bridge",bridge,"remoteIP",cmd.getRemoteIp(),"greKey",cmd.getKey(),"from",Long.toString(cmd.getFrom()),"to",Long.toString(cmd.getTo()));
    final String[] res=result.split(":");
    if (res.length != 2 || res.length == 2 && res[1].equalsIgnoreCase("[]")) {
      return new OvsCreateGreTunnelAnswer(cmd,false,result,_host.ip,bridge);
    }
 else {
      return new OvsCreateGreTunnelAnswer(cmd,true,result,_host.ip,bridge,Integer.parseInt(res[1]));
    }
  }
 catch (  final BadServerResponse e) {
    s_logger.error("An error occurred while creating a GRE tunnel to " + cmd.getRemoteIp() + " on host "+ _host.ip,e);
  }
catch (  final XenAPIException e) {
    s_logger.error("An error occurred while creating a GRE tunnel to " + cmd.getRemoteIp() + " on host "+ _host.ip,e);
  }
catch (  final XmlRpcException e) {
    s_logger.error("An error occurred while creating a GRE tunnel to " + cmd.getRemoteIp() + " on host "+ _host.ip,e);
  }
  return new OvsCreateGreTunnelAnswer(cmd,false,"EXCEPTION",_host.ip,bridge);
}
