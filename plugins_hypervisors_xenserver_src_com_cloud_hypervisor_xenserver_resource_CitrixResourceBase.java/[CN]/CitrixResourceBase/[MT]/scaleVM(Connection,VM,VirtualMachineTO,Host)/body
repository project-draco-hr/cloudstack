{
  final Long staticMemoryMax=vm.getMemoryStaticMax(conn);
  final Long staticMemoryMin=vm.getMemoryStaticMin(conn);
  final Long newDynamicMemoryMin=vmSpec.getMinRam();
  final Long newDynamicMemoryMax=vmSpec.getMaxRam();
  if (staticMemoryMin > newDynamicMemoryMin || newDynamicMemoryMax > staticMemoryMax) {
    throw new CloudRuntimeException("Cannot scale up the vm because of memory constraint violation: " + "0 <= memory-static-min(" + staticMemoryMin + ") <= memory-dynamic-min("+ newDynamicMemoryMin+ ") <= memory-dynamic-max("+ newDynamicMemoryMax+ ") <= memory-static-max("+ staticMemoryMax+ ")");
  }
  vm.setMemoryDynamicRange(conn,newDynamicMemoryMin,newDynamicMemoryMax);
  vm.setVCPUsNumberLive(conn,(long)vmSpec.getCpus());
  final Integer speed=vmSpec.getMinSpeed();
  if (speed != null) {
    int cpuWeight=_maxWeight;
    cpuWeight=(int)(speed * 0.99 / _host.getSpeed() * _maxWeight);
    if (cpuWeight > _maxWeight) {
      cpuWeight=_maxWeight;
    }
    if (vmSpec.getLimitCpuUse()) {
      long utilization=0;
      utilization=(int)(vmSpec.getMaxSpeed() * 0.99 * vmSpec.getCpus() / _host.getSpeed() * 100);
      callHostPlugin(conn,"vmops","add_to_VCPUs_params_live","key","cap","value",Long.toString(utilization),"vmname",vmSpec.getName());
    }
    callHostPlugin(conn,"vmops","add_to_VCPUs_params_live","key","weight","value",Integer.toString(cpuWeight),"vmname",vmSpec.getName());
  }
}
