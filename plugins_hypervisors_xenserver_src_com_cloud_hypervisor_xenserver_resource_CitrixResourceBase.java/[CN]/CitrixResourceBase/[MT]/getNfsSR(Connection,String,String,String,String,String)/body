{
  final Map<String,String> deviceConfig=new HashMap<String,String>();
  try {
    serverpath=serverpath.replace("//","/");
    final Set<SR> srs=SR.getAll(conn);
    if (srs != null && !srs.isEmpty()) {
      for (      final SR sr : srs) {
        if (!SRType.NFS.equals(sr.getType(conn))) {
          continue;
        }
        final Set<PBD> pbds=sr.getPBDs(conn);
        if (pbds.isEmpty()) {
          continue;
        }
        final PBD pbd=pbds.iterator().next();
        final Map<String,String> dc=pbd.getDeviceConfig(conn);
        if (dc == null) {
          continue;
        }
        if (dc.get("server") == null) {
          continue;
        }
        if (dc.get("serverpath") == null) {
          continue;
        }
        if (server.equals(dc.get("server")) && serverpath.equals(dc.get("serverpath"))) {
          throw new CloudRuntimeException("There is a SR using the same configuration server:" + dc.get("server") + ", serverpath:"+ dc.get("serverpath")+ " for pool "+ uuid+ " on host:"+ _host.getUuid());
        }
      }
    }
    deviceConfig.put("server",server);
    deviceConfig.put("serverpath",serverpath);
    final Host host=Host.getByUuid(conn,_host.getUuid());
    final Map<String,String> smConfig=new HashMap<String,String>();
    smConfig.put("nosubdir","true");
    final SR sr=SR.create(conn,host,deviceConfig,new Long(0),uuid,poolid,SRType.NFS.toString(),"user",true,smConfig);
    sr.scan(conn);
    return sr;
  }
 catch (  final XenAPIException e) {
    throw new CloudRuntimeException("Unable to create NFS SR " + pooldesc,e);
  }
catch (  final XmlRpcException e) {
    throw new CloudRuntimeException("Unable to create NFS SR " + pooldesc,e);
  }
}
