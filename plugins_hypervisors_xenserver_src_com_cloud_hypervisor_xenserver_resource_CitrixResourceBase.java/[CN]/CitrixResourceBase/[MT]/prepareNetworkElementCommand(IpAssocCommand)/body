{
  final Connection conn=getConnection();
  final String routerName=cmd.getAccessDetail(NetworkElementCommand.ROUTER_NAME);
  final String routerIp=cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);
  try {
    final IpAddressTO[] ips=cmd.getIpAddresses();
    for (    final IpAddressTO ip : ips) {
      final VM router=getVM(conn,routerName);
      final NicTO nic=new NicTO();
      nic.setMac(ip.getVifMacAddress());
      nic.setType(ip.getTrafficType());
      if (ip.getBroadcastUri() == null) {
        nic.setBroadcastType(BroadcastDomainType.Native);
      }
 else {
        final URI uri=BroadcastDomainType.fromString(ip.getBroadcastUri());
        nic.setBroadcastType(BroadcastDomainType.getSchemeValue(uri));
        nic.setBroadcastUri(uri);
      }
      nic.setDeviceId(0);
      nic.setNetworkRateMbps(ip.getNetworkRate());
      nic.setName(ip.getNetworkName());
      final Network network=getNetwork(conn,nic);
      VIF correctVif=getCorrectVif(conn,router,network);
      boolean addVif=false;
      if (ip.isAdd() && correctVif == null) {
        addVif=true;
      }
      if (addVif) {
        final String vifDeviceNum=getLowestAvailableVIFDeviceNum(conn,router);
        if (vifDeviceNum == null) {
          throw new InternalErrorException("There were no more available slots for a new VIF on router: " + router.getNameLabel(conn));
        }
        nic.setDeviceId(Integer.valueOf(vifDeviceNum));
        correctVif=createVif(conn,routerName,router,null,nic);
        correctVif.plug(conn);
        networkUsage(conn,routerIp,"addVif","eth" + correctVif.getDevice(conn));
      }
      if (ip.isAdd() && correctVif == null) {
        throw new InternalErrorException("Failed to find DomR VIF to associate/disassociate IP with.");
      }
      if (correctVif != null) {
        ip.setNicDevId(Integer.valueOf(correctVif.getDevice(conn)));
        ip.setNewNic(addVif);
      }
    }
  }
 catch (  final InternalErrorException e) {
    s_logger.error("Ip Assoc failure on applying one ip due to exception:  ",e);
    return new ExecutionResult(false,e.getMessage());
  }
catch (  final Exception e) {
    return new ExecutionResult(false,e.getMessage());
  }
  return new ExecutionResult(true,null);
}
