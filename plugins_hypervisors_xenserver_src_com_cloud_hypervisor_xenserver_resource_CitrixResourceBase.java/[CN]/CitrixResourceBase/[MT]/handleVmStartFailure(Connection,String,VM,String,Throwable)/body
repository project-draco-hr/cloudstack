{
  final String msg="Unable to start " + vmName + " due to "+ message;
  s_logger.warn(msg,th);
  if (vm == null) {
    return msg;
  }
  try {
    final VM.Record vmr=vm.getRecord(conn);
    final List<Network> networks=new ArrayList<Network>();
    for (    final VIF vif : vmr.VIFs) {
      try {
        final VIF.Record rec=vif.getRecord(conn);
        if (rec != null) {
          networks.add(rec.network);
        }
 else {
          s_logger.warn("Unable to cleanup VIF: " + vif.toWireString() + " As vif record is null");
        }
      }
 catch (      final Exception e) {
        s_logger.warn("Unable to cleanup VIF",e);
      }
    }
    if (vmr.powerState == VmPowerState.RUNNING) {
      try {
        vm.hardShutdown(conn);
      }
 catch (      final Exception e) {
        s_logger.warn("VM hardshutdown failed due to ",e);
      }
    }
    if (vm.getPowerState(conn) == VmPowerState.HALTED) {
      try {
        vm.destroy(conn);
      }
 catch (      final Exception e) {
        s_logger.warn("VM destroy failed due to ",e);
      }
    }
    for (    final VBD vbd : vmr.VBDs) {
      try {
        vbd.unplug(conn);
        vbd.destroy(conn);
      }
 catch (      final Exception e) {
        s_logger.warn("Unable to clean up VBD due to ",e);
      }
    }
    for (    final VIF vif : vmr.VIFs) {
      try {
        vif.unplug(conn);
        vif.destroy(conn);
      }
 catch (      final Exception e) {
        s_logger.warn("Unable to cleanup VIF",e);
      }
    }
    for (    final Network network : networks) {
      if (network.getNameLabel(conn).startsWith("VLAN")) {
        disableVlanNetwork(conn,network);
      }
    }
  }
 catch (  final Exception e) {
    s_logger.warn("VM getRecord failed due to ",e);
  }
  return msg;
}
