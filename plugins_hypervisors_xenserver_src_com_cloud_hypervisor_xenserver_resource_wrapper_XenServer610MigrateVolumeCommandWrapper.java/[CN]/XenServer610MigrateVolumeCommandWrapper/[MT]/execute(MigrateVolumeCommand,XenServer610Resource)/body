{
  final Connection connection=xenServer610Resource.getConnection();
  final String volumeUUID=command.getVolumePath();
  final StorageFilerTO poolTO=command.getPool();
  try {
    String uuid=poolTO.getUuid();
    final SR destinationPool=xenServer610Resource.getStorageRepository(connection,uuid);
    final VDI srcVolume=xenServer610Resource.getVDIbyUuid(connection,volumeUUID);
    final Map<String,String> other=new HashMap<String,String>();
    other.put("live","true");
    final Task task=srcVolume.poolMigrateAsync(connection,destinationPool,other);
    final long timeout=xenServer610Resource.getMigrateWait() * 1000L;
    xenServer610Resource.waitForTask(connection,task,1000,timeout);
    xenServer610Resource.checkForSuccess(connection,task);
    final VDI dvdi=Types.toVDI(task,connection);
    return new MigrateVolumeAnswer(command,true,null,dvdi.getUuid(connection));
  }
 catch (  final Exception e) {
    final String msg="Catch Exception " + e.getClass().getName() + " due to "+ e.toString();
    s_logger.error(msg,e);
    return new MigrateVolumeAnswer(command,false,msg,null);
  }
}
