{
  if (host.getType() != Host.Type.Routing) {
    return;
  }
  List<VlanMappingVO> maps=_mappingDao.listByHostId(host.getId());
  if (maps.size() == 0) {
    for (int i=0; i < 512; i++) {
      VlanMappingVO vo=new VlanMappingVO(0,host.getId(),i);
      _mappingDao.persist(vo);
    }
  }
  try {
    List<HostVO> hosts=_hostDao.listByType(Host.Type.Routing);
    for (    HostVO h : hosts) {
      if (h.getId() == host.getId()) {
        continue;
      }
      GreTunnelVO t=_tunnelDao.getByFromAndTo(host.getId(),h.getId());
      if (t == null) {
        t=new GreTunnelVO(host.getId(),h.getId());
        try {
          _tunnelDao.persist(t);
        }
 catch (        EntityExistsException e) {
          s_logger.debug(String.format("Already has (from=%1$s, to=%2$s)",host.getId(),h.getId()));
        }
      }
      t=_tunnelDao.getByFromAndTo(h.getId(),host.getId());
      if (t == null) {
        t=new GreTunnelVO(h.getId(),host.getId());
        try {
          _tunnelDao.persist(t);
        }
 catch (        EntityExistsException e) {
          s_logger.debug(String.format("Already has (from=%1$s, to=%2$s)",h.getId(),host.getId()));
        }
      }
    }
  }
 catch (  Exception e) {
    s_logger.warn("process connect failed",e);
  }
}
