{
  _agentMgr.registerForHostEvents(this,true,false,true);
  _messageBus.subscribe("VM_ReservedCapacity_Free",new MessageSubscriber(){
    @Override public void onPublishMessage(    String senderAddress,    String subject,    Object obj){
      VMInstanceVO vm=((VMInstanceVO)obj);
      s_logger.debug("MessageBus message: host reserved capacity released for VM: " + vm.getLastHostId() + ", checking if host reservation can be released for host:"+ vm.getLastHostId());
      Long hostId=vm.getLastHostId();
      checkHostReservationRelease(hostId);
    }
  }
);
  _vmCapacityReleaseInterval=NumbersUtil.parseInt(_configDao.getValue(Config.CapacitySkipcountingHours.key()),3600);
  String hostReservationReleasePeriod=_configDao.getValue(Config.HostReservationReleasePeriod.key());
  if (hostReservationReleasePeriod != null) {
    _hostReservationReleasePeriod=Long.parseLong(hostReservationReleasePeriod);
    if (_hostReservationReleasePeriod <= 0)     _hostReservationReleasePeriod=Long.parseLong(Config.HostReservationReleasePeriod.getDefaultValue());
  }
  _timer=new Timer("HostReservationReleaseChecker");
  _nodeId=ManagementServerNode.getManagementServerId();
  return super.configure(name,params);
}
