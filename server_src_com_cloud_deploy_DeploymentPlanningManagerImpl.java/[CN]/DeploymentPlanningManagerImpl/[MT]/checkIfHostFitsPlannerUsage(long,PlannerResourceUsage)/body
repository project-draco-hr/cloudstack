{
  PlannerHostReservationVO reservationEntry=_plannerHostReserveDao.findByHostId(hostId);
  if (reservationEntry != null) {
    long id=reservationEntry.getId();
    PlannerResourceUsage hostResourceType=reservationEntry.getResourceUsage();
    if (hostResourceType != null) {
      if (hostResourceType == resourceUsageRequired) {
        return true;
      }
 else {
        s_logger.debug("Cannot use this host for usage: " + resourceUsageRequired + ", since this host has been reserved for planner usage : "+ hostResourceType);
        return false;
      }
    }
 else {
      final Transaction txn=Transaction.currentTxn();
      try {
        txn.start();
        final PlannerHostReservationVO lockedEntry=_plannerHostReserveDao.lockRow(id,true);
        if (lockedEntry == null) {
          s_logger.error("Unable to lock the host entry for reservation, host: " + hostId);
          return false;
        }
        if (lockedEntry.getResourceUsage() == null) {
          lockedEntry.setResourceUsage(resourceUsageRequired);
          _plannerHostReserveDao.persist(lockedEntry);
          return true;
        }
 else {
          if (lockedEntry.getResourceUsage() == resourceUsageRequired) {
            return true;
          }
 else {
            s_logger.debug("Cannot use this host for usage: " + resourceUsageRequired + ", since this host has been reserved for planner usage : "+ hostResourceType);
            return false;
          }
        }
      }
  finally {
        txn.commit();
      }
    }
  }
  return false;
}
