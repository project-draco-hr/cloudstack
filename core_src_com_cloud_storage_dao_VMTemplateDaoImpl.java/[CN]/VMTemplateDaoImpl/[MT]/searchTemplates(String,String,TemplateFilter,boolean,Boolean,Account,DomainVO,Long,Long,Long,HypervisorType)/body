{
  Transaction txn=Transaction.currentTxn();
  txn.start();
  List<VMTemplateVO> templates=new ArrayList<VMTemplateVO>();
  PreparedStatement pstmt=null;
  ResultSet rs=null;
  try {
    short accountType;
    String accountId=null;
    if (account != null) {
      accountType=account.getType();
      accountId=Long.toString(account.getId());
    }
 else {
      accountType=Account.ACCOUNT_TYPE_ADMIN;
    }
    String guestOSJoin="";
    if (isIso && !hyperType.equals(HypervisorType.None)) {
      guestOSJoin=" INNER JOIN guest_os guestOS on (guestOS.id = t.guest_os_id) INNER JOIN guest_os_hypervisor goh on ( goh.guest_os_id = guestOS.id) ";
    }
    String sql=SELECT_ALL + guestOSJoin;
    String whereClause="";
    if (templateFilter == TemplateFilter.featured) {
      whereClause+=" WHERE t.public = 1 AND t.featured = 1";
    }
 else     if ((templateFilter == TemplateFilter.self || templateFilter == TemplateFilter.selfexecutable) && accountType != Account.ACCOUNT_TYPE_ADMIN) {
      if (accountType == Account.ACCOUNT_TYPE_DOMAIN_ADMIN) {
        whereClause+=" INNER JOIN account a on (t.account_id = a.id) INNER JOIN domain d on (a.domain_id = d.id) WHERE d.path LIKE '" + domain.getPath() + "%'";
      }
 else {
        whereClause+=" WHERE t.account_id = " + accountId;
      }
    }
 else     if (templateFilter == TemplateFilter.sharedexecutable && accountType != Account.ACCOUNT_TYPE_ADMIN) {
      if (accountType == Account.ACCOUNT_TYPE_NORMAL) {
        whereClause+=" LEFT JOIN launch_permission lp ON t.id = lp.template_id WHERE" + " (t.account_id = " + accountId + " OR"+ " lp.account_id = "+ accountId+ ")";
      }
 else {
        whereClause+=" INNER JOIN account a on (t.account_id = a.id) INNER JOIN domain d on (a.domain_id = d.id) WHERE d.path LIKE '" + domain.getPath() + "%'";
      }
    }
 else     if (templateFilter == TemplateFilter.executable && accountId != null) {
      whereClause+=" WHERE (t.public = 1 OR t.account_id = " + accountId + ")";
    }
 else     if (templateFilter == TemplateFilter.community) {
      whereClause+=" WHERE t.public = 1 AND t.featured = 0";
    }
 else     if (templateFilter == TemplateFilter.all && accountType == Account.ACCOUNT_TYPE_ADMIN) {
      whereClause+=" WHERE ";
    }
 else     if (accountType != Account.ACCOUNT_TYPE_ADMIN) {
      return templates;
    }
    if (whereClause.equals("")) {
      whereClause+=" WHERE ";
    }
 else     if (!whereClause.equals(" WHERE ")) {
      whereClause+=" AND ";
    }
    sql+=whereClause + getExtrasWhere(templateFilter,name,keyword,isIso,bootable,hyperType) + getOrderByLimit(pageSize,startIndex);
    pstmt=txn.prepareStatement(sql);
    rs=pstmt.executeQuery();
    while (rs.next()) {
      VMTemplateVO tmplt=toEntityBean(rs,false);
      if (zoneId != null) {
        VMTemplateZoneVO vtzvo=_templateZoneDao.findByZoneTemplate(zoneId,tmplt.getId());
        if (vtzvo != null) {
          templates.add(tmplt);
        }
      }
 else {
        templates.add(tmplt);
      }
    }
    if (isIso && (account.getType() == Account.ACCOUNT_TYPE_NORMAL)) {
      List<VMTemplateVO> xenToolsIso=xenToolsIsoSearch();
      templates.addAll(xenToolsIso);
    }
  }
 catch (  Exception e) {
    s_logger.warn("Error listing templates",e);
  }
 finally {
    try {
      if (rs != null) {
        rs.close();
      }
      if (pstmt != null) {
        pstmt.close();
      }
      txn.commit();
    }
 catch (    SQLException sqle) {
      s_logger.warn("Error in cleaning up",sqle);
    }
  }
  return templates;
}
