{
  IssuerBuilder issuerBuilder=new IssuerBuilder();
  Issuer issuer=issuerBuilder.buildObject();
  issuer.setValue(spId);
  NameIDPolicyBuilder nameIdPolicyBuilder=new NameIDPolicyBuilder();
  NameIDPolicy nameIdPolicy=nameIdPolicyBuilder.buildObject();
  nameIdPolicy.setFormat(NameIDType.PERSISTENT);
  nameIdPolicy.setSPNameQualifier("Apache CloudStack");
  nameIdPolicy.setAllowCreate(true);
  AuthnContextClassRefBuilder authnContextClassRefBuilder=new AuthnContextClassRefBuilder();
  AuthnContextClassRef authnContextClassRef=authnContextClassRefBuilder.buildObject(SAMLConstants.SAML20_NS,"AuthnContextClassRef","saml");
  authnContextClassRef.setAuthnContextClassRef("urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport");
  RequestedAuthnContextBuilder requestedAuthnContextBuilder=new RequestedAuthnContextBuilder();
  RequestedAuthnContext requestedAuthnContext=requestedAuthnContextBuilder.buildObject();
  requestedAuthnContext.setComparison(AuthnContextComparisonTypeEnumeration.MINIMUM);
  requestedAuthnContext.getAuthnContextClassRefs().add(authnContextClassRef);
  AuthnRequestBuilder authRequestBuilder=new AuthnRequestBuilder();
  AuthnRequest authnRequest=authRequestBuilder.buildObject();
  authnRequest.setID(authnId);
  authnRequest.setDestination(idpUrl);
  authnRequest.setVersion(SAMLVersion.VERSION_20);
  authnRequest.setForceAuthn(true);
  authnRequest.setIsPassive(false);
  authnRequest.setIssuer(issuer);
  authnRequest.setIssueInstant(new DateTime());
  authnRequest.setProviderName("Apache CloudStack");
  authnRequest.setProtocolBinding(SAMLConstants.SAML2_REDIRECT_BINDING_URI);
  authnRequest.setAssertionConsumerServiceURL(consumerUrl);
  authnRequest.setNameIDPolicy(nameIdPolicy);
  authnRequest.setRequestedAuthnContext(requestedAuthnContext);
  return authnRequest;
}
