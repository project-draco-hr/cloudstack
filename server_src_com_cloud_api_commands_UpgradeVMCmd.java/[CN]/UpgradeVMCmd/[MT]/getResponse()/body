{
  UserVmVO userVm=(UserVmVO)getResponseObject();
  UserVmResponse response=new UserVmResponse();
  if (userVm != null) {
    Account acct=ApiDBUtils.findAccountById(userVm.getAccountId());
    response.setId(userVm.getId());
    response.setAccountName(acct.getAccountName());
    ServiceOffering offering=ApiDBUtils.findServiceOfferingById(userVm.getServiceOfferingId());
    response.setCpuSpeed(offering.getSpeed());
    response.setMemory(offering.getRamSize());
    if (((ServiceOfferingVO)offering).getDisplayText() != null) {
      response.setServiceOfferingName(((ServiceOfferingVO)offering).getDisplayText());
    }
 else {
      response.setServiceOfferingName(offering.getName());
    }
    response.setServiceOfferingId(userVm.getServiceOfferingId());
    DecimalFormat decimalFormat=new DecimalFormat("#.##");
    String cpuUsed=null;
    VmStats vmStats=ApiDBUtils.getVmStatistics(userVm.getId());
    if (vmStats != null) {
      float cpuUtil=(float)vmStats.getCPUUtilization();
      cpuUsed=decimalFormat.format(cpuUtil) + "%";
      response.setCpuUsed(cpuUsed);
      long networkKbRead=(long)vmStats.getNetworkReadKBs();
      response.setNetworkKbsRead(networkKbRead);
      long networkKbWrite=(long)vmStats.getNetworkWriteKBs();
      response.setNetworkKbsWrite(networkKbWrite);
    }
    response.setCreated(userVm.getCreated());
    response.setDisplayName(userVm.getDisplayName());
    response.setDomainName(ApiDBUtils.findDomainById(acct.getDomainId()).getName());
    response.setDomainId(acct.getDomainId());
    response.setHaEnable(userVm.isHaEnabled());
    if (userVm.getHostId() != null) {
      response.setHostId(userVm.getHostId());
      response.setHostName(ApiDBUtils.findHostById(userVm.getHostId()).getName());
    }
    response.setIpAddress(userVm.getPrivateIpAddress());
    response.setName(userVm.getName());
    response.setState(userVm.getState().toString());
    response.setZoneId(userVm.getDataCenterId());
    response.setZoneName(ApiDBUtils.findZoneById(userVm.getDataCenterId()).getName());
    VMTemplateVO template=ApiDBUtils.findTemplateById(userVm.getTemplateId());
    response.setPasswordEnabled(template.getEnablePassword());
    response.setTemplateDisplayText(template.getDisplayText());
    response.setTemplateId(template.getId());
    response.setTemplateName(template.getName());
  }
 else {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to update zone; internal error.");
  }
  response.setResponseName(getName());
  return response;
}
