{
  SnapshotObject snapshotObj=(SnapshotObject)data;
  DataStore secStore=snapshotObj.getDataStore();
  CommandResult result=new CommandResult();
  SnapshotVO snapshot=snapshotObj.getSnapshotVO();
  if (snapshot == null) {
    s_logger.debug("Destroying snapshot " + snapshotObj.getId() + " backup failed due to unable to find snapshot ");
    result.setResult("Unable to find snapshot: " + snapshotObj.getId());
    callback.complete(result);
    return;
  }
  try {
    String secondaryStoragePoolUrl=secStore.getUri();
    Long dcId=snapshot.getDataCenterId();
    Long accountId=snapshot.getAccountId();
    Long volumeId=snapshot.getVolumeId();
    String backupOfSnapshot=snapshotObj.getBackupSnapshotId();
    if (backupOfSnapshot == null) {
      callback.complete(result);
      return;
    }
    DeleteSnapshotBackupCommand cmd=new DeleteSnapshotBackupCommand(secStore.getTO(),secondaryStoragePoolUrl,dcId,accountId,volumeId,backupOfSnapshot,false);
    EndPoint ep=_epSelector.select(secStore);
    Answer answer=ep.sendMessage(cmd);
    if ((answer != null) && answer.getResult()) {
      snapshot.setBackupSnapshotId(null);
      snapshotDao.update(snapshotObj.getId(),snapshot);
    }
 else     if (answer != null) {
      result.setResult(answer.getDetails());
    }
  }
 catch (  Exception e) {
    s_logger.debug("failed to delete snapshot: " + snapshotObj.getId() + ": "+ e.toString());
    result.setResult(e.toString());
  }
  callback.complete(result);
}
