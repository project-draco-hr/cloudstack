{
  if (delayMs == null) {
    delayMs=new Long(100l);
  }
  for (  Long vmId : affectedVms) {
    VmRulesetLogVO log=null;
    SecurityGroupWorkVO work=null;
    UserVm vm=null;
    Transaction txn=null;
    try {
      txn=Transaction.currentTxn();
      txn.start();
      vm=_userVMDao.acquireInLockTable(vmId);
      if (vm == null) {
        s_logger.warn("Failed to acquire lock on vm id " + vmId);
        continue;
      }
      log=_rulesetLogDao.findByVmId(vmId);
      if (log == null) {
        log=new VmRulesetLogVO(vmId);
        log=_rulesetLogDao.persist(log);
      }
      if (log != null && updateSeqno) {
        log.incrLogsequence();
        _rulesetLogDao.update(log.getId(),log);
      }
      work=_workDao.findByVmIdStep(vmId,Step.Scheduled);
      if (work == null) {
        work=new SecurityGroupWorkVO(vmId,null,null,SecurityGroupWorkVO.Step.Scheduled,null);
        work=_workDao.persist(work);
      }
      work.setLogsequenceNumber(log.getLogsequence());
      _workDao.update(work.getId(),work);
    }
  finally {
      if (vm != null) {
        _userVMDao.releaseFromLockTable(vmId);
      }
      if (txn != null)       txn.commit();
    }
    _executorPool.schedule(new WorkerThread(),delayMs,TimeUnit.MILLISECONDS);
  }
}
