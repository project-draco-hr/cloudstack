{
  Account caller=CallContext.current().getCallingAccount();
  if (secondaryIp == null) {
    throw new InvalidParameterValueException("Vm secondaryIp can't be null");
  }
  NicVO nic=_nicDao.findById(nicId);
  long vmId=nic.getInstanceId();
  UserVm vm=_userVMDao.findById(vmId);
  if (vm == null || vm.getType() != VirtualMachine.Type.User) {
    throw new InvalidParameterValueException("Can't configure the SG ipset, arprules rules for the non existing or non user vm");
  }
  _accountMgr.checkAccess(caller,null,false,vm);
  List<SecurityGroupVO> vmSgGrps=getSecurityGroupsForVm(vmId);
  if (vmSgGrps.isEmpty()) {
    s_logger.debug("Vm is not in any Security group ");
    return true;
  }
  Network network=_networkModel.getNetwork(nic.getNetworkId());
  if (!_networkModel.isSecurityGroupSupportedInNetwork(network)) {
    s_logger.debug("Network " + network + " is not enabled with security group service, "+ "so not applying SG rules for secondary ip");
    return true;
  }
  String vmMac=vm.getPrivateMacAddress();
  String vmName=vm.getInstanceName();
  if (vmMac == null || vmName == null) {
    throw new InvalidParameterValueException("vm name or vm mac can't be null");
  }
  NetworkRulesVmSecondaryIpCommand cmd=new NetworkRulesVmSecondaryIpCommand(vmName,vmMac,secondaryIp,ruleAction);
  s_logger.debug("Asking agent to configure rules for vm secondary ip");
  Commands cmds=null;
  cmds=new Commands(cmd);
  try {
    _agentMgr.send(vm.getHostId(),cmds);
  }
 catch (  AgentUnavailableException e) {
    s_logger.debug(e.toString());
  }
catch (  OperationTimedoutException e) {
    s_logger.debug(e.toString());
  }
  return true;
}
