{
  List<IpPortAndProto> ingressResult=new ArrayList<IpPortAndProto>();
  List<IpPortAndProto> egressResult=new ArrayList<IpPortAndProto>();
  for (  PortAndProto pAp : ingressRules.keySet()) {
    Set<String> cidrs=ingressRules.get(pAp);
    if (cidrs.size() > 0) {
      IpPortAndProto ipPortAndProto=new SecurityGroupRulesCmd.IpPortAndProto(pAp.getProto(),pAp.getStartPort(),pAp.getEndPort(),cidrs.toArray(new String[cidrs.size()]));
      ingressResult.add(ipPortAndProto);
    }
  }
  for (  PortAndProto pAp : egressRules.keySet()) {
    Set<String> cidrs=egressRules.get(pAp);
    if (cidrs.size() > 0) {
      IpPortAndProto ipPortAndProto=new SecurityGroupRulesCmd.IpPortAndProto(pAp.getProto(),pAp.getStartPort(),pAp.getEndPort(),cidrs.toArray(new String[cidrs.size()]));
      egressResult.add(ipPortAndProto);
    }
  }
  return new SecurityGroupRulesCmd(guestIp,guestMac,vmName,vmId,signature,seqnum,ingressResult.toArray(new IpPortAndProto[ingressResult.size()]),egressResult.toArray(new IpPortAndProto[egressResult.size()]));
}
