{
  String zoneName=(String)params.get(BaseCmd.Properties.NAME.getName());
  String dns1=(String)params.get(BaseCmd.Properties.DNS1.getName());
  String dns2=(String)params.get(BaseCmd.Properties.DNS2.getName());
  String dns3=(String)params.get(BaseCmd.Properties.INTERNAL_DNS1.getName());
  String dns4=(String)params.get(BaseCmd.Properties.INTERNAL_DNS2.getName());
  String vnet=(String)params.get(BaseCmd.Properties.VNET.getName());
  String guestCidr=(String)params.get(BaseCmd.Properties.GUEST_CIDR_ADDRESS.getName());
  Long userId=(Long)params.get(BaseCmd.Properties.USER_ID.getName());
  if (userId == null) {
    userId=Long.valueOf(User.UID_SYSTEM);
  }
  DataCenterVO zone=null;
  try {
    zone=getManagementServer().createZone(userId,zoneName,dns1,dns2,dns3,dns4,vnet,guestCidr);
  }
 catch (  Exception ex) {
    s_logger.error("Exception creating zone",ex);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,ex.getMessage());
  }
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  if (zone == null) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to create zone " + zoneName + ":  internal error.");
  }
 else {
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.ID.getName(),zone.getId()));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.NAME.getName(),zoneName));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.DNS1.getName(),dns1));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.DNS2.getName(),dns2));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.INTERNAL_DNS1.getName(),dns3));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.INTERNAL_DNS2.getName(),dns4));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.VNET.getName(),vnet));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.GUEST_CIDR_ADDRESS.getName(),guestCidr));
  }
  return returnValues;
}
