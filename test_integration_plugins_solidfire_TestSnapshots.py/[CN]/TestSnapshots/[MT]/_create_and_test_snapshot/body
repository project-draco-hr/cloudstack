def _create_and_test_snapshot(self, volume_id_for_snapshot, sf_volume, primary_storage_db_id, expected_num_snapshots, snapshot_err_msg):
    vol_snap = Snapshot.create(self.apiClient, volume_id=volume_id_for_snapshot)
    self._wait_for_snapshot_state(vol_snap.id, Snapshot.BACKED_UP)
    sf_volume_id = sf_volume['volumeID']
    sf_snapshots = self.sf_client.list_snapshots(volume_id=sf_volume_id)
    sf_util.check_list(sf_snapshots, expected_num_snapshots, self, snapshot_err_msg)
    sf_snapshot = self._most_recent_sf_snapshot(sf_snapshots)
    sf_snapshot_details_request = {'snapshotid': vol_snap.id, }
    sf_snapshot_details_response = self.cs_api.getVolumeSnapshotDetails(sf_snapshot_details_request)
    sf_snapshot_details = sf_snapshot_details_response['null']
    vol_snap_db_id = self._get_cs_volume_snapshot_db_id(vol_snap)
    self._check_snapshot_details(sf_snapshot_details, vol_snap_db_id, sf_volume_id, sf_snapshot['snapshotID'], primary_storage_db_id, sf_volume['totalSize'])
    return vol_snap
