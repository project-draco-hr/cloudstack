{
  if (canHandle(dest,network.getTrafficType())) {
    if (vm.getType() != VirtualMachine.Type.User) {
      return false;
    }
    @SuppressWarnings("unchecked") UserVmVO uservm=_userVmDao.findById(vm.getId());
    _userVmDao.loadDetails(uservm);
    String password=(String)vm.getParameter(VirtualMachineProfile.Param.VmPassword);
    String userData=uservm.getUserData();
    String sshPublicKey=uservm.getDetail("SSH.PublicKey");
    Commands cmds=new Commands(Command.OnError.Continue);
    if (password != null && nic.isDefaultNic()) {
      SavePasswordCommand cmd=new SavePasswordCommand(password,nic.getIPv4Address(),uservm.getHostName(),_networkMgr.getExecuteInSeqNtwkElmtCmd());
      cmds.addCommand("password",cmd);
    }
    String serviceOffering=_serviceOfferingDao.findByIdIncludingRemoved(uservm.getServiceOfferingId()).getDisplayText();
    String zoneName=_dcDao.findById(network.getDataCenterId()).getName();
    cmds.addCommand("vmdata",generateVmDataCommand(nic.getIPv4Address(),userData,serviceOffering,zoneName,nic.getIPv4Address(),uservm.getHostName(),uservm.getInstanceName(),uservm.getId(),uservm.getUuid(),sshPublicKey));
    try {
      _agentManager.send(dest.getHost().getId(),cmds);
    }
 catch (    OperationTimedoutException e) {
      s_logger.debug("Unable to send vm data command to host " + dest.getHost());
      return false;
    }
    Answer dataAnswer=cmds.getAnswer("vmdata");
    if (dataAnswer != null && dataAnswer.getResult()) {
      s_logger.info("Sent vm data successfully to vm " + uservm.getInstanceName());
      return true;
    }
    s_logger.info("Failed to send vm data to vm " + uservm.getInstanceName());
    return false;
  }
  return false;
}
