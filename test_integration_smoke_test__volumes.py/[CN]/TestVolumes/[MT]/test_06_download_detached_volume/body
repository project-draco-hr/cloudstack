@attr(tags=['advanced', 'advancedns', 'smoke', 'basic'])
def test_06_download_detached_volume(self):
    'Download a Volume unattached to an VM\n        '
    self.debug(('Extract detached Volume ID: %s' % self.volume.id))
    self.virtual_machine.attach_volume(self.apiClient, self.volume)
    self.virtual_machine.detach_volume(self.apiClient, self.volume)
    self.attached = False
    cmd = extractVolume.extractVolumeCmd()
    cmd.id = self.volume.id
    cmd.mode = 'HTTP_DOWNLOAD'
    cmd.zoneid = self.services['zoneid']
    extract_vol = self.apiClient.extractVolume(cmd)
    try:
        formatted_url = urllib.unquote_plus(extract_vol.url)
        self.debug(('Attempting to download volume at url %s' % formatted_url))
        response = urllib.urlopen(formatted_url)
        self.debug(('response from volume url %s' % response.getcode()))
        (fd, path) = tempfile.mkstemp()
        self.debug(('Saving volume %s to path %s' % (self.volume.id, path)))
        os.close(fd)
        with open(path, 'wb') as fd:
            fd.write(response.read())
        self.debug('Saved volume successfully')
    except Exception:
        self.fail(('Extract Volume Failed with invalid URL %s (vol id: %s)' % (extract_vol.url, self.volume.id)))
