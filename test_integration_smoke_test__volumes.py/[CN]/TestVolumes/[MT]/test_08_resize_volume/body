@attr(tags=['advanced', 'advancedns', 'smoke', 'basic'])
def test_08_resize_volume(self):
    'Resize a volume'
    self.debug(('Attaching volume (ID: %s) to VM (ID: %s)' % (self.volume.id, self.virtual_machine.id)))
    self.virtual_machine.attach_volume(self.apiClient, self.volume)
    self.attached = True
    if (self.services['hypervisor'].lower() == 'xenserver'):
        self.virtual_machine.stop(self.apiClient)
    self.debug(('Resize Volume ID: %s' % self.volume.id))
    cmd = resizeVolume.resizeVolumeCmd()
    cmd.id = self.volume.id
    cmd.diskofferingid = self.services['resizeddiskofferingid']
    self.apiClient.resizeVolume(cmd)
    count = 0
    success = False
    while (count < 3):
        list_volume_response = list_volumes(self.apiClient, id=self.volume.id, type='DATADISK')
        for vol in list_volume_response:
            if ((vol.id == self.volume.id) and (vol.size == 3221225472L) and (vol.state == 'Ready')):
                success = True
        if success:
            break
        else:
            time.sleep(10)
            count += 1
    self.assertEqual(success, True, 'Check if the volume resized appropriately')
    if (self.services['hypervisor'].lower() == 'xenserver'):
        self.virtual_machine.start(self.apiClient)
