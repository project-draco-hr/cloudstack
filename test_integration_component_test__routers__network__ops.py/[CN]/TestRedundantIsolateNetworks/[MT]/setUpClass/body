@classmethod
def setUpClass(cls):
    cls.logger = logging.getLogger('TestRedundantIsolateNetworks')
    cls.stream_handler = logging.StreamHandler()
    cls.logger.setLevel(logging.DEBUG)
    cls.logger.addHandler(cls.stream_handler)
    cls.testClient = super(TestRedundantIsolateNetworks, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.services = cls.testClient.getParsedTestDataConfig()
    cls.domain = get_domain(cls.api_client)
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.services['mode'] = cls.zone.networktype
    cls.template = get_template(cls.api_client, cls.zone.id, cls.services['ostype'])
    cls.services['virtual_machine']['zoneid'] = cls.zone.id
    cls.account = Account.create(cls.api_client, cls.services['account'], admin=True, domainid=cls.domain.id)
    cls.service_offering = ServiceOffering.create(cls.api_client, cls.services['service_offering'])
    cls.services['nw_off_persistent_RVR_egress_true'] = cls.services['nw_off_persistent_RVR'].copy()
    cls.services['nw_off_persistent_RVR_egress_true']['egress_policy'] = 'true'
    cls.services['nw_off_persistent_RVR_egress_false'] = cls.services['nw_off_persistent_RVR'].copy()
    cls.services['nw_off_persistent_RVR_egress_false']['egress_policy'] = 'false'
    cls.logger.debug('Creating Network Offering with default egress TRUE')
    cls.network_offering_egress_true = NetworkOffering.create(cls.api_client, cls.services['nw_off_persistent_RVR_egress_true'], conservemode=True)
    cls.network_offering_egress_true.update(cls.api_client, state='Enabled')
    cls.logger.debug('Creating Network Offering with default egress FALSE')
    cls.network_offering_egress_false = NetworkOffering.create(cls.api_client, cls.services['nw_off_persistent_RVR_egress_false'], conservemode=True)
    cls.network_offering_egress_false.update(cls.api_client, state='Enabled')
    cls._cleanup = [cls.service_offering, cls.network_offering_egress_true, cls.network_offering_egress_false, cls.account]
    return
