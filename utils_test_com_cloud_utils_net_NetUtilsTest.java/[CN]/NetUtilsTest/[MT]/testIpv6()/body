{
  assertTrue(NetUtils.isValidIpv6("fc00::1"));
  assertFalse(NetUtils.isValidIpv6(""));
  assertFalse(NetUtils.isValidIpv6(null));
  assertFalse(NetUtils.isValidIpv6("1234:5678::1/64"));
  assertTrue(NetUtils.isValidIp6Cidr("1234:5678::1/64"));
  assertFalse(NetUtils.isValidIp6Cidr("1234:5678::1"));
  assertEquals(NetUtils.getIp6CidrSize("1234:5678::1/32"),32);
  assertEquals(NetUtils.getIp6CidrSize("1234:5678::1"),0);
  BigInteger two=new BigInteger("2");
  assertEquals(NetUtils.countIp6InRange("1234:5678::1-1234:5678::2"),two);
  assertEquals(NetUtils.countIp6InRange("1234:5678::2-1234:5678::0"),null);
  assertEquals(NetUtils.getIp6FromRange("1234:5678::1-1234:5678::1"),"1234:5678::1");
  for (int i=0; i < 5; i++) {
    String ip=NetUtils.getIp6FromRange("1234:5678::1-1234:5678::2");
    assertTrue(ip.equals("1234:5678::1") || ip.equals("1234:5678::2"));
    s_logger.info("IP is " + ip);
  }
  String ipString=null;
  IPv6Address ipStart=IPv6Address.fromString("1234:5678::1");
  IPv6Address ipEnd=IPv6Address.fromString("1234:5678::ffff:ffff:ffff:ffff");
  for (int i=0; i < 10; i++) {
    ipString=NetUtils.getIp6FromRange(ipStart.toString() + "-" + ipEnd.toString());
    s_logger.info("IP is " + ipString);
    IPv6Address ip=IPv6Address.fromString(ipString);
    assertTrue(ip.compareTo(ipStart) >= 0);
    assertTrue(ip.compareTo(ipEnd) <= 0);
  }
  assertFalse(NetUtils.isIp6RangeOverlap("1234:5678::1-1234:5678::ffff","1234:5678:1::1-1234:5678:1::ffff"));
  assertTrue(NetUtils.isIp6RangeOverlap("1234:5678::1-1234:5678::ffff","1234:5678::2-1234:5678::f"));
  assertTrue(NetUtils.isIp6RangeOverlap("1234:5678::f-1234:5678::ffff","1234:5678::2-1234:5678::f"));
  assertFalse(NetUtils.isIp6RangeOverlap("1234:5678::f-1234:5678::ffff","1234:5678::2-1234:5678::e"));
  assertFalse(NetUtils.isIp6RangeOverlap("1234:5678::f-1234:5678::f","1234:5678::2-1234:5678::e"));
  String range="1234:5678::1-1234:5678::8000:0000";
  assertEquals(NetUtils.getNextIp6InRange("1234:5678::8000:0",range),"1234:5678::1");
  assertEquals(NetUtils.getNextIp6InRange("1234:5678::7fff:ffff",range),"1234:5678::8000:0");
  assertEquals(NetUtils.getNextIp6InRange("1234:5678::1",range),"1234:5678::2");
  range="1234:5678::1-1234:5678::ffff:ffff:ffff:ffff";
  assertEquals(NetUtils.getNextIp6InRange("1234:5678::ffff:ffff:ffff:ffff",range),"1234:5678::1");
  assertFalse(NetUtils.isIp6InNetwork("1234:5678:abcd::1","1234:5678::/64"));
  assertTrue(NetUtils.isIp6InNetwork("1234:5678::1","1234:5678::/64"));
  assertTrue(NetUtils.isIp6InNetwork("1234:5678::ffff:ffff:ffff:ffff","1234:5678::/64"));
  assertTrue(NetUtils.isIp6InNetwork("1234:5678::","1234:5678::/64"));
}
