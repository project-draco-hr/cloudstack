{
  String secondaryMountPoint=_mountService.getMountPoint(secStorageUrl);
  String srcOVAFileName=secondaryMountPoint + "/" + secStorageDir+ "/"+ backupName+ "."+ ImageFormat.OVA.getFileExtension();
  String srcFileName=getOVFFilePath(srcOVAFileName);
  if (srcFileName == null) {
    Script command=new Script("tar",0,s_logger);
    command.add("-xf",srcOVAFileName);
    command.setWorkDir(secondaryMountPoint + "/" + secStorageDir);
    String result=command.execute();
    if (result != null) {
      String msg="Unable to unpack snapshot OVA file at: " + srcOVAFileName;
      s_logger.error(msg);
      throw new Exception(msg);
    }
  }
  srcFileName=getOVFFilePath(srcOVAFileName);
  if (srcFileName == null) {
    String msg="Unable to locate OVF file in template package directory: " + srcOVAFileName;
    s_logger.error(msg);
    throw new Exception(msg);
  }
  VirtualMachineMO clonedVm=null;
  try {
    hyperHost.importVmFromOVF(srcFileName,newVolumeName,primaryDsMo,"thin");
    clonedVm=hyperHost.findVmOnHyperHost(newVolumeName);
    if (clonedVm == null)     throw new Exception("Unable to create container VM for volume creation");
    clonedVm.moveAllVmDiskFiles(primaryDsMo,"",false);
    clonedVm.detachAllDisks();
  }
  finally {
    if (clonedVm != null)     clonedVm.destroy();
  }
}
