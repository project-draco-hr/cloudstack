{
  s_logger.info("Executing copyTemplateFromSecondaryToPrimary. secondaryStorage: " + secondaryStorageUrl + ", templatePathAtSecondaryStorage: "+ templatePathAtSecondaryStorage+ ", templateName: "+ templateName);
  String secondaryMountPoint=_mountService.getMountPoint(secondaryStorageUrl);
  s_logger.info("Secondary storage mount point: " + secondaryMountPoint);
  String srcOVAFileName=secondaryMountPoint + "/" + templatePathAtSecondaryStorage+ templateName+ "."+ ImageFormat.OVA.getFileExtension();
  String srcFileName=getOVFFilePath(srcOVAFileName);
  if (srcFileName == null) {
    String msg="Unable to locate OVF file in template package directory: " + srcOVAFileName;
    s_logger.error(msg);
    throw new Exception(msg);
  }
  String vmName=templateName;
  hyperHost.importVmFromOVF(srcFileName,vmName,datastoreMo,"thin");
  VirtualMachineMO vmMo=hyperHost.findVmOnHyperHost(vmName);
  if (vmMo == null) {
    String msg="Failed to import OVA template. secondaryStorage: " + secondaryStorageUrl + ", templatePathAtSecondaryStorage: "+ templatePathAtSecondaryStorage+ ", templateName: "+ templateName;
    s_logger.error(msg);
    throw new Exception(msg);
  }
  if (vmMo.createSnapshot("cloud.template.base","Base snapshot",false,false)) {
    vmMo.setCustomFieldValue(CustomFieldConstants.CLOUD_UUID,templateName);
    vmMo.markAsTemplate();
  }
 else {
    vmMo.destroy();
    String msg="Unable to create base snapshot for template: " + templateName;
    s_logger.error(msg);
    throw new Exception(msg);
  }
}
