def set_combine_stderr(self, combine):
    '\n        Set whether stderr should be combined into stdout on this channel.\n        The default is C{False}, but in some cases it may be convenient to\n        have both streams combined.\n        \n        If this is C{False}, and L{exec_command} is called (or C{invoke_shell}\n        with no pty), output to stderr will not show up through the L{recv}\n        and L{recv_ready} calls.  You will have to use L{recv_stderr} and\n        L{recv_stderr_ready} to get stderr output.\n        \n        If this is C{True}, data will never show up via L{recv_stderr} or\n        L{recv_stderr_ready}.\n        \n        @param combine: C{True} if stderr output should be combined into\n            stdout on this channel.\n        @type combine: bool\n        @return: previous setting.\n        @rtype: bool\n        \n        @since: 1.1\n        '
    data = ''
    self.lock.acquire()
    try:
        old = self.combine_stderr
        self.combine_stderr = combine
        if (combine and (not old)):
            data = self.in_stderr_buffer.empty()
    finally:
        self.lock.release()
    if (len(data) > 0):
        self._feed(data)
    return old
