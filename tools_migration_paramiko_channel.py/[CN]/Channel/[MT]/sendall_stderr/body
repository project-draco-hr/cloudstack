def sendall_stderr(self, s):
    '\n        Send data to the channel\'s "stderr" stream, without allowing partial\n        results.  Unlike L{send_stderr}, this method continues to send data\n        from the given string until all data has been sent or an error occurs.\n        Nothing is returned.\n        \n        @param s: data to send to the client as "stderr" output.\n        @type s: str\n        \n        @raise socket.timeout: if sending stalled for longer than the timeout\n            set by L{settimeout}.\n        @raise socket.error: if an error occured before the entire string was\n            sent.\n            \n        @since: 1.1\n        '
    while s:
        if self.closed:
            raise socket.error('Socket is closed')
        sent = self.send_stderr(s)
        s = s[sent:]
    return None
