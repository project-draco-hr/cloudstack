def sendall(self, s):
    "\n        Send data to the channel, without allowing partial results.  Unlike\n        L{send}, this method continues to send data from the given string until\n        either all data has been sent or an error occurs.  Nothing is returned.\n\n        @param s: data to send.\n        @type s: str\n\n        @raise socket.timeout: if sending stalled for longer than the timeout\n            set by L{settimeout}.\n        @raise socket.error: if an error occured before the entire string was\n            sent.\n        \n        @note: If the channel is closed while only part of the data hase been\n            sent, there is no way to determine how much data (if any) was sent.\n            This is irritating, but identically follows python's API.\n        "
    while s:
        if self.closed:
            raise socket.error('Socket is closed')
        sent = self.send(s)
        s = s[sent:]
    return None
