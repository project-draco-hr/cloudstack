{
  PreparedStatement apiInsert=null;
  s_logger.debug("Populating acl_api_permission table for existing commands...");
  try {
    apiInsert=conn.prepareStatement("INSERT INTO `cloud`.`acl_api_permission` (role_id, api) values(?, ?)");
    Map<String,String> commandMap=PropertiesUtil.processConfigFile(new String[]{"commands.properties"});
    for (    Map.Entry<String,String> entry : commandMap.entrySet()) {
      String apiName=entry.getKey();
      String roleMask=entry.getValue();
      try {
        short cmdPermissions=Short.parseShort(roleMask);
        for (        RoleType roleType : RoleType.values()) {
          if ((cmdPermissions & roleType.getValue()) != 0) {
            apiInsert.setLong(1,roleType.ordinal() + 1);
            apiInsert.setString(2,apiName);
            apiInsert.executeUpdate();
          }
        }
      }
 catch (      NumberFormatException nfe) {
        s_logger.info("Malformed key=value pair for entry: " + entry.toString());
      }
    }
  }
 catch (  SQLException e) {
    String msg="Unable to populate acl_api_permission for existing commands." + e.getMessage();
    s_logger.error(msg);
    throw new CloudRuntimeException(msg,e);
  }
 finally {
    try {
      if (apiInsert != null) {
        apiInsert.close();
      }
    }
 catch (    SQLException e) {
    }
  }
  s_logger.debug("Completed populate acl_api_permission for existing commands.");
}
