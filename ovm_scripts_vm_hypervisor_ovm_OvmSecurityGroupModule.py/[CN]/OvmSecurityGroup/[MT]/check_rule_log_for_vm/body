@staticmethod
def check_rule_log_for_vm(vm_name, vm_id, vm_ip, dom_id, signature, seqno):
    log_file_name = (('/var/run/cloud/' + vm_name) + '.log')
    if (not os.path.exists(log_file_name)):
        return [True, True, True, True, True, True]
    try:
        lines = (line.rstrip() for line in open(log_file_name))
    except:
        logging.debug(('failed to open ' + log_file_name))
        return [True, True, True, True, True, True]
    [_vm_name, _vm_id, _vm_ip, _dom_id, _signature, _seqno] = ['_', '-1', '_', '-1', '_', '-1']
    try:
        for line in lines:
            [_vm_name, _vm_id, _vm_ip, _dom_id, _signature, _seqno] = line.split(',')
            break
    except:
        logging.debug(('Failed to parse log file for vm ' + vm_name))
        remove_rule_log_for_vm(vm_name)
        return [True, True, True, True, True, True]
    return [(vm_name != _vm_name), (vm_id != _vm_id), (vm_ip != _vm_ip), (dom_id != _dom_id), (signature != _signature), (seqno != _seqno)]
