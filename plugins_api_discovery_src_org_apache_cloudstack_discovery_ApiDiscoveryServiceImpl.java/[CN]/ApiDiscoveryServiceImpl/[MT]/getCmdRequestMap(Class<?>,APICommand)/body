{
  String apiName=apiCmdAnnotation.name();
  ApiDiscoveryResponse response=new ApiDiscoveryResponse();
  response.setName(apiName);
  response.setDescription(apiCmdAnnotation.description());
  if (!apiCmdAnnotation.since().isEmpty()) {
    response.setSince(apiCmdAnnotation.since());
  }
  Set<Field> fields=ReflectUtil.getAllFieldsForClass(cmdClass,new Class<?>[]{BaseCmd.class,BaseAsyncCmd.class,BaseAsyncCreateCmd.class});
  boolean isAsync=ReflectUtil.isCmdClassAsync(cmdClass,new Class<?>[]{BaseAsyncCmd.class,BaseAsyncCreateCmd.class});
  response.setAsync(isAsync);
  for (  Field field : fields) {
    Parameter parameterAnnotation=field.getAnnotation(Parameter.class);
    if (parameterAnnotation != null && parameterAnnotation.expose() && parameterAnnotation.includeInApiDoc()) {
      ApiParameterResponse paramResponse=new ApiParameterResponse();
      paramResponse.setName(parameterAnnotation.name());
      paramResponse.setDescription(parameterAnnotation.description());
      paramResponse.setType(parameterAnnotation.type().toString().toLowerCase());
      paramResponse.setLength(parameterAnnotation.length());
      paramResponse.setRequired(parameterAnnotation.required());
      if (!parameterAnnotation.since().isEmpty()) {
        paramResponse.setSince(parameterAnnotation.since());
      }
      paramResponse.setRelated(parameterAnnotation.entityType()[0].getName());
      response.addParam(paramResponse);
    }
  }
  return response;
}
