def setUp(self):
    self.testdata = self.testClient.getParsedTestDataConfig()['vgpu']
    self.apiclient = self.testClient.getApiClient()
    if (self.noSuitableHost or self.unsupportedHypervisor):
        self.skipTest('Skipping test because suitable hypervisor/host not                    present')
    self.domain = get_domain(self.apiclient)
    self.zone = get_zone(self.apiclient, self.testClient.getZoneForTests())
    self.testdata['mode'] = self.zone.networktype
    self.template = get_template(self.apiclient, self.zone.id, self.testdata['ostype'])
    if (self.template == FAILED):
        assert False, ('get_template() failed to return template with description %s' % self.testdata['ostype'])
    self.account = Account.create(self.apiclient, self.testdata['account'], domainid=self.domain.id)
    self.testdata['small']['zoneid'] = self.zone.id
    self.testdata['small']['template'] = self.template.id
    self.testdata['service_offerings']['vgpu260qwin']['serviceofferingdetails'] = [{'pciDevice': 'Group of NVIDIA Corporation GK107GL [GRID K1] GPUs', }, {'vgpuType': 'GRID K120Q', }]
    self.service_offering = ServiceOffering.create(self.apiclient, self.testdata['service_offerings']['vgpu260qwin'])
    self.cleanup = [self.service_offering, self.account]
