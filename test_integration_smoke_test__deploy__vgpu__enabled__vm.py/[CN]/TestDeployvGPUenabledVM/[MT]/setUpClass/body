@classmethod
def setUpClass(self):
    testClient = super(TestDeployvGPUenabledVM, self).getClsTestClient()
    self.apiclient = testClient.getApiClient()
    self.testdata = self.testClient.getParsedTestDataConfig()
    self.hostConfig = self.config.__dict__['zones'][0].__dict__['pods'][0].__dict__['clusters'][0].__dict__['hosts'][0].__dict__
    self._cleanup = []
    self.unsupportedHypervisor = False
    self.noSuitableHost = False
    hosts = list_hosts(self.apiclient, hypervisor='XenServer')
    if (hosts is None):
        self.unsupportedHypervisor = True
        return
    else:
        gpuhosts = 0
        for ghost in hosts:
            if (ghost.hypervisorversion >= '6.2.0'):
                sshClient = SshClient(host=ghost.ipaddress, port=self.testdata['configurableData']['host']['publicport'], user=self.hostConfig['username'], passwd=self.hostConfig['password'])
                if (ghost.hypervisorversion == '6.2.0'):
                    res = sshClient.execute('xe patch-list uuid=0850b186-4d47-11e3-a720-001b2151a503')
                    if (len(res) == 0):
                        continue
                res = sshClient.execute('xe vgpu-type-list model-name="GRID K120Q"')
                if (len(res) != 0):
                    gpuhosts = (gpuhosts + 1)
                else:
                    continue
    if (gpuhosts == 0):
        self.noSuitableHost = True
        return
    self.domain = get_domain(self.apiclient)
    self.zone = get_zone(self.apiclient, self.testClient.getZoneForTests())
    self.account = Account.create(self.apiclient, self.testdata['account'], domainid=self.domain.id)
    self._cleanup.append(self.account)
