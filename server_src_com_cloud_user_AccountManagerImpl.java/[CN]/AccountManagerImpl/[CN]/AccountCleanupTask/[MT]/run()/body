{
  try {
    GlobalLock lock=GlobalLock.getInternLock("AccountCleanup");
    if (lock == null) {
      s_logger.debug("Couldn't get the global lock");
      return;
    }
    if (!lock.lock(30)) {
      s_logger.debug("Couldn't lock the db");
      return;
    }
    Transaction txn=null;
    try {
      txn=Transaction.open(Transaction.CLOUD_DB);
      List<AccountVO> removedAccounts=_accountDao.findCleanupsForRemovedAccounts(null);
      s_logger.info("Found " + removedAccounts.size() + " removed accounts to cleanup");
      for (      AccountVO account : removedAccounts) {
        s_logger.debug("Cleaning up " + account.getId());
        try {
          cleanupAccount(account,getSystemUser().getId(),getSystemAccount());
        }
 catch (        Exception e) {
          s_logger.error("Skipping due to error on account " + account.getId(),e);
        }
      }
      List<AccountVO> disabledAccounts=_accountDao.findCleanupsForDisabledAccounts();
      s_logger.info("Found " + disabledAccounts.size() + " disabled accounts to cleanup");
      for (      AccountVO account : disabledAccounts) {
        s_logger.debug("Cleaning up " + account.getId());
        try {
          if (disableAccount(account.getId())) {
            account.setNeedsCleanup(false);
            _accountDao.update(account.getId(),account);
          }
        }
 catch (        Exception e) {
          s_logger.error("Skipping due to error on account " + account.getId(),e);
        }
      }
      List<DomainVO> inactiveDomains=_domainDao.findInactiveDomains();
      for (      DomainVO inactiveDomain : inactiveDomains) {
        long domainId=inactiveDomain.getId();
        try {
          List<AccountVO> accountsForCleanupInDomain=_accountDao.findCleanupsForRemovedAccounts(domainId);
          if (accountsForCleanupInDomain.isEmpty()) {
            s_logger.debug("Removing inactive domain id=" + domainId);
            _domainDao.remove(domainId);
          }
 else {
            s_logger.debug("Can't remove inactive domain id=" + domainId + " as it has accounts that need clenaup");
          }
        }
 catch (        Exception e) {
          s_logger.error("Skipping due to error on domain " + domainId,e);
        }
      }
    }
 catch (    Exception e) {
      s_logger.error("Exception ",e);
    }
 finally {
      if (txn != null) {
        txn.close();
      }
      lock.unlock();
    }
  }
 catch (  Exception e) {
    s_logger.error("Exception ",e);
  }
}
