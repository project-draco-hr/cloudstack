{
  String accountName=cmd.getAccountName();
  Long domainId=cmd.getDomainId();
  String userName=cmd.getUsername();
  String password=cmd.getPassword();
  String firstName=cmd.getFirstname();
  String lastName=cmd.getLastname();
  String email=cmd.getEmail();
  String timeZone=cmd.getTimezone();
  Long accountId=null;
  Long userId=UserContext.current().getCallerUserId();
  Account account=_accountDao.findActiveAccount(accountName,domainId);
  if (account == null) {
    throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"Unable to find account to create user");
  }
 else {
    accountId=account.getAccountId();
  }
  if (!_userAccountDao.validateUsernameInDomain(userName,domainId)) {
    throw new CloudRuntimeException("The user " + userName + " already exists in domain "+ domainId);
  }
  UserVO user=new UserVO();
  user.setUsername(userName);
  user.setPassword(password);
  user.setState(State.Enabled);
  user.setFirstname(firstName);
  user.setLastname(lastName);
  user.setAccountId(accountId.longValue());
  user.setEmail(email);
  user.setTimezone(timeZone);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Creating user: " + userName + ", account: "+ accountName+ " (id:"+ accountId+ "), domain: "+ domainId+ " timezone:"+ timeZone);
  }
  UserVO dbUser=_userDao.persist(user);
  if (!user.getPassword().equals(dbUser.getPassword())) {
    throw new CloudRuntimeException("The user " + userName + " being creating is using a password that is different than what's in the db");
  }
  EventUtils.saveEvent(userId,accountId,EventVO.LEVEL_INFO,EventTypes.EVENT_USER_CREATE,"User, " + userName + " for accountId = "+ accountId+ " and domainId = "+ domainId+ " was created.");
  return dbUser;
}
