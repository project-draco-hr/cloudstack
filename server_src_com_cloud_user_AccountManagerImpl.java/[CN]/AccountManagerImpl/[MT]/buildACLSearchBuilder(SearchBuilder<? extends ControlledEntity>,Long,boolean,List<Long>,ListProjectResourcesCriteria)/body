{
  if (sb.entity() instanceof IPAddressVO) {
    sb.and("accountIdIN",((IPAddressVO)sb.entity()).getAllocatedToAccountId(),SearchCriteria.Op.IN);
    sb.and("domainId",((IPAddressVO)sb.entity()).getAllocatedInDomainId(),SearchCriteria.Op.EQ);
  }
 else   if (sb.entity() instanceof ProjectInvitationVO) {
    sb.and("accountIdIN",((ProjectInvitationVO)sb.entity()).getForAccountId(),SearchCriteria.Op.IN);
    sb.and("domainId",((ProjectInvitationVO)sb.entity()).getInDomainId(),SearchCriteria.Op.EQ);
  }
 else {
    sb.and("accountIdIN",sb.entity().getAccountId(),SearchCriteria.Op.IN);
    sb.and("domainId",sb.entity().getDomainId(),SearchCriteria.Op.EQ);
  }
  if (((permittedAccounts.isEmpty()) && (domainId != null) && isRecursive)) {
    SearchBuilder<DomainVO> domainSearch=_domainDao.createSearchBuilder();
    domainSearch.and("path",domainSearch.entity().getPath(),SearchCriteria.Op.LIKE);
    if (sb.entity() instanceof IPAddressVO) {
      sb.join("domainSearch",domainSearch,((IPAddressVO)sb.entity()).getAllocatedInDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
    }
 else     if (sb.entity() instanceof ProjectInvitationVO) {
      sb.join("domainSearch",domainSearch,((ProjectInvitationVO)sb.entity()).getInDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
    }
 else {
      sb.join("domainSearch",domainSearch,sb.entity().getDomainId(),domainSearch.entity().getId(),JoinBuilder.JoinType.INNER);
    }
  }
  if (listProjectResourcesCriteria != null) {
    SearchBuilder<AccountVO> accountSearch=_accountDao.createSearchBuilder();
    if (listProjectResourcesCriteria == Project.ListProjectResourcesCriteria.ListProjectResourcesOnly) {
      accountSearch.and("type",accountSearch.entity().getType(),SearchCriteria.Op.EQ);
    }
 else     if (listProjectResourcesCriteria == Project.ListProjectResourcesCriteria.SkipProjectResources) {
      accountSearch.and("type",accountSearch.entity().getType(),SearchCriteria.Op.NEQ);
    }
    if (sb.entity() instanceof IPAddressVO) {
      sb.join("accountSearch",accountSearch,((IPAddressVO)sb.entity()).getAllocatedToAccountId(),accountSearch.entity().getId(),JoinBuilder.JoinType.INNER);
    }
 else     if (sb.entity() instanceof ProjectInvitationVO) {
      sb.join("accountSearch",accountSearch,((ProjectInvitationVO)sb.entity()).getForAccountId(),accountSearch.entity().getId(),JoinBuilder.JoinType.INNER);
    }
 else {
      sb.join("accountSearch",accountSearch,sb.entity().getAccountId(),accountSearch.entity().getId(),JoinBuilder.JoinType.INNER);
    }
  }
}
