{
  Long count=null;
  Transaction txn=Transaction.currentTxn();
  txn.start();
  try {
    SearchCriteria<ResourceCountVO> sc=ResourceCountSearch.create();
    sc.setParameters("accountId",accountId);
    _resourceCountDao.lockRows(sc,null,true);
switch (type) {
case user_vm:
      count=_userVmDao.countAllocatedVMsForAccount(accountId);
    break;
case volume:
  count=_volumeDao.countAllocatedVolumesForAccount(accountId);
long virtualRouterCount=_vmDao.countAllocatedVirtualRoutersForAccount(accountId);
count=count - virtualRouterCount;
break;
case snapshot:
count=_snapshotDao.countSnapshotsForAccount(accountId);
break;
case public_ip:
count=_ipAddressDao.countAllocatedIPsForAccount(accountId);
break;
case template:
count=_vmTemplateDao.countTemplatesForAccount(accountId);
break;
}
_resourceCountDao.setAccountCount(accountId,type,(count == null) ? 0 : count.longValue());
}
 catch (Exception e) {
throw new CloudRuntimeException("Failed to update resource count for account with Id" + accountId);
}
 finally {
txn.commit();
}
return (count == null) ? 0 : count.longValue();
}
