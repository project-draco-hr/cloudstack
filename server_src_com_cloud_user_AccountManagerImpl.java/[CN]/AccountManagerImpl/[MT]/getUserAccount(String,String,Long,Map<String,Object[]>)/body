{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Attempting to log in user: " + username + " in domain "+ domainId);
  }
  boolean authenticated=false;
  for (Enumeration<UserAuthenticator> en=_userAuthenticators.enumeration(); en.hasMoreElements(); ) {
    UserAuthenticator authenticator=en.nextElement();
    if (authenticator.authenticate(username,password,domainId,requestParameters)) {
      authenticated=true;
      break;
    }
  }
  if (authenticated) {
    UserAccount userAccount=_userAccountDao.getUserAccount(username,domainId);
    if (userAccount == null) {
      s_logger.warn("Unable to find an authenticated user with username " + username + " in domain "+ domainId);
      return null;
    }
    Domain domain=_domainMgr.getDomain(domainId);
    String domainName=null;
    if (domain != null) {
      domainName=domain.getName();
    }
    if (!userAccount.getState().equalsIgnoreCase(Account.State.enabled.toString()) || !userAccount.getAccountState().equalsIgnoreCase(Account.State.enabled.toString())) {
      if (s_logger.isInfoEnabled()) {
        s_logger.info("User " + username + " in domain "+ domainName+ " is disabled/locked (or account is disabled/locked)");
      }
      throw new CloudAuthenticationException("User " + username + " in domain "+ domainName+ " is disabled/locked (or account is disabled/locked)");
    }
    if (!isInternalAccount(userAccount.getType()))     updateLoginAttempts(userAccount.getId(),0,false);
    return userAccount;
  }
 else {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Unable to authenticate user with username " + username + " in domain "+ domainId);
    }
    UserAccount userAccount=_userAccountDao.getUserAccount(username,domainId);
    if (userAccount != null) {
      if (userAccount.getState().equalsIgnoreCase(Account.State.enabled.toString())) {
        if (!isInternalAccount(userAccount.getType())) {
          int attemptsMade=userAccount.getLoginAttempts() + 1;
          if (attemptsMade < _allowedLoginAttempts) {
            updateLoginAttempts(userAccount.getId(),attemptsMade,false);
            s_logger.warn("Login attempt failed. You have " + (_allowedLoginAttempts - attemptsMade) + " attempt(s) remaining");
          }
 else {
            updateLoginAttempts(userAccount.getId(),_allowedLoginAttempts,true);
            s_logger.warn("User " + userAccount.getUsername() + " has been disabled due to multiple failed login attempts."+ " Please contact admin.");
          }
        }
      }
 else {
        s_logger.info("User " + userAccount.getUsername() + " is disabled/locked");
      }
    }
 else {
      s_logger.warn("Authentication failure: No user with name " + username + " for domainId "+ domainId);
    }
    return null;
  }
}
