{
  UserAccount userAccount=null;
  Long accountId=null;
  String username=null;
  boolean result=false;
  try {
    UserVO user=_userDao.findById(userId);
    accountId=user != null ? user.getAccountId() : 1L;
    EventUtils.saveStartedEvent(UserContext.current().getUserId(),accountId,EventTypes.EVENT_USER_DELETE,"Start deleting the user id:" + userId,startEventId);
    if (user == null || user.getRemoved() != null) {
      result=true;
      return result;
    }
    username=user.getUsername();
    result=_userDao.remove(userId);
    if (!result) {
      s_logger.error("Unable to remove the user with id: " + userId + "; username: "+ user.getUsername());
      return result;
    }
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("User is removed, id: " + userId + "; username: "+ user.getUsername());
    }
    userAccount=_userAccountDao.findByIdIncludingRemoved(userId);
    List<UserVO> users=_userDao.listByAccount(accountId);
    if (users.size() != 0) {
      s_logger.debug("User (" + userId + "/"+ user.getUsername()+ ") is deleted but there's still other users in the account so not deleting account.");
      result=true;
      return result;
    }
    result=_accountDao.remove(accountId);
    if (!result) {
      s_logger.error("Unable to delete account " + accountId);
    }
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Remove account " + accountId);
    }
    AccountVO account=_accountDao.findByIdIncludingRemoved(accountId);
    deleteAccount(account);
    result=true;
    return result;
  }
 catch (  Exception e) {
    s_logger.error("exception deleting user: " + userId,e);
    return false;
  }
 finally {
    long domainId=0L;
    if (userAccount != null)     domainId=userAccount.getDomainId();
    String description="User " + username + " (id: "+ userId+ ") for accountId = "+ accountId+ " and domainId = "+ domainId;
    if (result) {
      EventUtils.saveEvent(UserContext.current().getUserId(),accountId,EventVO.LEVEL_INFO,EventTypes.EVENT_USER_DELETE,"Successfully deleted " + description,startEventId);
    }
 else {
      EventUtils.saveEvent(UserContext.current().getUserId(),accountId,EventVO.LEVEL_ERROR,EventTypes.EVENT_USER_DELETE,"Error deleting " + description,startEventId);
    }
  }
}
