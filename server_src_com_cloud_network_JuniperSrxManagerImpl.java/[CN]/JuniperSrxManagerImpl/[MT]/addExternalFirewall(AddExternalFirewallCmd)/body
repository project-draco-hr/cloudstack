{
  long zoneId=cmd.getZoneId();
  DataCenterVO zone=_dcDao.findById(zoneId);
  String zoneName;
  if (zone == null) {
    throw new InvalidParameterValueException("Could not find zone with ID: " + zoneId);
  }
 else {
    zoneName=zone.getName();
  }
  List<HostVO> externalFirewallsInZone=_hostDao.listByTypeDataCenter(Host.Type.ExternalFirewall,zoneId);
  if (externalFirewallsInZone.size() != 0) {
    throw new InvalidParameterValueException("Already added an external firewall in zone: " + zoneName);
  }
  URI uri;
  try {
    uri=new URI(cmd.getUrl());
  }
 catch (  Exception e) {
    s_logger.debug(e);
    throw new InvalidParameterValueException(e.getMessage());
  }
  String ipAddress=uri.getHost();
  String username=cmd.getUsername();
  String password=cmd.getPassword();
  Map<String,String> params=new HashMap<String,String>();
  UrlUtil.parseQueryParameters(uri.getQuery(),true,params);
  String publicInterface=params.get("publicinterface");
  String usageInterface=params.get("usageinterface");
  String privateInterface=params.get("privateinterface");
  String publicZone=params.get("publiczone");
  String privateZone=params.get("privatezone");
  String numRetries=params.get("numretries");
  String timeout=params.get("timeout");
  if (publicInterface != null) {
    if (!publicInterface.contains(".")) {
      publicInterface+=".0";
    }
  }
 else {
    throw new InvalidParameterValueException("Please specify a public interface.");
  }
  if (usageInterface != null) {
    if (!usageInterface.contains(".")) {
      usageInterface+=".0";
    }
  }
  if (privateInterface != null) {
    if (privateInterface.contains(".")) {
      throw new InvalidParameterValueException("The private interface name must not have a unit identifier.");
    }
  }
 else {
    throw new InvalidParameterValueException("Please specify a private interface.");
  }
  if (publicZone == null) {
    publicZone="untrust";
  }
  if (privateZone == null) {
    privateZone="trust";
  }
  if (numRetries == null) {
    numRetries="1";
  }
  if (timeout == null) {
    timeout="300";
  }
  JuniperSrxResource resource=new JuniperSrxResource();
  String guid=getExternalNetworkResourceGuid(zoneId,ExternalNetworkResourceName.JuniperSrx,ipAddress);
  Map hostDetails=new HashMap<String,String>();
  hostDetails.put("zoneId",String.valueOf(zoneId));
  hostDetails.put("ip",ipAddress);
  hostDetails.put("username",username);
  hostDetails.put("password",password);
  hostDetails.put("publicInterface",publicInterface);
  hostDetails.put("privateInterface",privateInterface);
  hostDetails.put("publicZone",publicZone);
  hostDetails.put("privateZone",privateZone);
  hostDetails.put("numRetries",numRetries);
  hostDetails.put("timeout",timeout);
  hostDetails.put("guid",guid);
  hostDetails.put("name",guid);
  if (usageInterface != null) {
    hostDetails.put("usageInterface",usageInterface);
  }
  try {
    resource.configure(guid,hostDetails);
  }
 catch (  ConfigurationException e) {
    throw new CloudRuntimeException(e.getMessage());
  }
  Host externalFirewall=_resourceMgr.addHost(zoneId,resource,Host.Type.ExternalFirewall,hostDetails);
  if (externalFirewall != null) {
    zone.setFirewallProvider(Network.Provider.JuniperSRX.getName());
    zone.setUserDataProvider(Network.Provider.DhcpServer.getName());
    zone.setVpnProvider(null);
    if (zone.getGatewayProvider() == null || !zone.getGatewayProvider().equals(Network.Provider.ExternalGateWay)) {
      zone.setGatewayProvider(Network.Provider.JuniperSRX.getName());
    }
    if (zone.getDnsProvider() == null || !zone.getDnsProvider().equals(Network.Provider.ExternalDhcpServer)) {
      zone.setDnsProvider(Network.Provider.DhcpServer.getName());
    }
    if (zone.getDhcpProvider() == null || !zone.getDhcpProvider().equals(Network.Provider.ExternalDhcpServer)) {
      zone.setDhcpProvider(Network.Provider.DhcpServer.getName());
    }
    if (zone.getLoadBalancerProvider() == null || !zone.getLoadBalancerProvider().equals(Network.Provider.F5BigIp.getName())) {
      zone.setLoadBalancerProvider(Network.Provider.None.getName());
    }
    _dcDao.update(zone.getId(),zone);
    return externalFirewall;
  }
 else {
    return null;
  }
}
