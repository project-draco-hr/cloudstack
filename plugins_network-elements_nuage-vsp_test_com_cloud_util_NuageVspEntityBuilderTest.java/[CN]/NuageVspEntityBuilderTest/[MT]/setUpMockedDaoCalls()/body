{
  when(_domainDao.findById(DOMAIN_ID)).thenReturn(_mockedDomain);
  when(_accountDao.findById(ACCOUNT_ID)).thenReturn(_mockedAccount);
  when(_networkOfferingDao.findById(NETWORK_OFFERING_ID)).thenReturn(_mockedNetworkOffering);
  when(_networkOfferingDao.findById(SHARED_NETWORK_OFFERING_ID)).thenReturn(_mockedSharedNetworkOffering);
  when(_networkOfferingDao.findById(L2_NETWORK_OFFERING_ID)).thenReturn(_mockedL2NetworkOffering);
  when(_networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(NETWORK_OFFERING_ID,Network.Service.SourceNat)).thenReturn(true);
  when(_networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(NETWORK_OFFERING_ID,Network.Service.StaticNat)).thenReturn(true);
  when(_networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(SHARED_NETWORK_OFFERING_ID,Network.Service.SourceNat)).thenReturn(true);
  when(_networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(SHARED_NETWORK_OFFERING_ID,Network.Service.StaticNat)).thenReturn(true);
  when(_networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(L2_NETWORK_OFFERING_ID,Network.Service.SourceNat)).thenReturn(false);
  when(_networkOfferingServiceMapDao.areServicesSupportedByNetworkOffering(L2_NETWORK_OFFERING_ID,Network.Service.StaticNat)).thenReturn(false);
  when(_networkModel.areServicesSupportedByNetworkOffering(NETWORK_OFFERING_ID,Network.Service.Firewall)).thenReturn(true);
  when(_networkModel.areServicesSupportedByNetworkOffering(SHARED_NETWORK_OFFERING_ID,Network.Service.Firewall)).thenReturn(true);
  when(_networkModel.areServicesSupportedByNetworkOffering(L2_NETWORK_OFFERING_ID,Network.Service.Firewall)).thenReturn(true);
  when(_vlanDao.listVlansByNetworkId(NETWORK_ID)).thenReturn(Lists.newArrayList(_mockedVlan));
  when(_vpcDao.findById(VPC_ID)).thenReturn(_mockedVpc);
  when(_ipAddressDao.findById(SOURCE_IP_ADDRESS_ID)).thenReturn(_mockedStaticNatIp);
}
