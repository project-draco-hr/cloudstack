{
  assertEquals(NETWORK_ID,vspNetwork.getId());
  assertEquals("networkUuid",vspNetwork.getUuid());
  assertEquals("networkName",vspNetwork.getName());
  assertNotNull(vspNetwork.getVspDomain());
  validateVspDomain(vspNetwork.getVspDomain());
  assertEquals("accountName",vspNetwork.getAccountName());
  assertEquals("accountUuid",vspNetwork.getAccountUuid());
  if (isVpc) {
    assertEquals("vpcUuid",vspNetwork.getVpcUuid());
    assertEquals("vpcName",vspNetwork.getVpcName());
  }
 else {
    assertNull(vspNetwork.getVpcUuid());
    assertNull(vspNetwork.getVpcName());
  }
  assertEquals(isL2,vspNetwork.isL2());
  assertEquals(isL3,vspNetwork.isL3());
  assertEquals(isVpc,vspNetwork.isVpc());
  assertEquals(isShared,vspNetwork.isShared());
  assertEquals(true,vspNetwork.isFirewallServiceSupported());
  assertEquals(true,vspNetwork.isEgressDefaultPolicy());
  assertEquals(domainTemplateName,vspNetwork.getDomainTemplateName());
  assertEquals("10.10.10.0/24",vspNetwork.getCidr());
  assertEquals("10.10.10.1",vspNetwork.getGateway());
  if (hasAddressRanges) {
    if (isShared) {
      assertEquals("192.168.2.2",vspNetwork.getVirtualRouterIp());
    }
 else {
      assertEquals("10.10.10.2",vspNetwork.getVirtualRouterIp());
    }
    List<Pair<String,String>> ipAddressRanges;
    if (isShared) {
      ipAddressRanges=Lists.newArrayList(Pair.of("192.168.2.3","192.168.2.200"));
    }
 else {
      ipAddressRanges=Lists.newArrayList(Pair.of("10.10.10.3","10.10.10.254"));
    }
    assertEquals(ipAddressRanges,vspNetwork.getIpAddressRanges());
  }
}
