def executeCmd(self, job):
    cmd = job.cmd
    jobstatus = jobStatus()
    jobId = None
    try:
        try:
            self.lock.acquire()
            if (cmd.isAsync == 'false'):
                jobstatus.startTime = datetime.datetime.now()
                result = self.connection.make_request(cmd)
                jobstatus.result = result
                jobstatus.endTime = datetime.datetime.now()
                jobstatus.duration = (time.mktime(jobstatus.endTime.timetuple()) - time.mktime(jobstatus.startTime.timetuple()))
            else:
                result = self.connection.make_request(cmd, None, True)
                if (result is None):
                    jobstatus.status = False
                else:
                    jobId = result.jobid
                    jobstatus.jobId = jobId
                    try:
                        responseName = cmd.__class__.__name__.replace('Cmd', 'Response')
                        jobstatus.responsecls = jsonHelper.getclassFromName(cmd, responseName)
                    except:
                        pass
                    jobstatus.status = True
        except cloudstackException.cloudstackAPIException as e:
            jobstatus.result = str(e)
            jobstatus.status = False
        except:
            jobstatus.status = False
            jobstatus.result = sys.exc_info()
    finally:
        self.lock.release()
    return jobstatus
