{
  String apiKey=region.getApiKey();
  String secretKey=region.getSecretKey();
  if (apiKey == null || secretKey == null) {
    return region.getEndPoint() + "?" + apiParams;
  }
  String encodedApiKey;
  try {
    encodedApiKey=URLEncoder.encode(apiKey,"UTF-8");
    List<String> sortedParams=new ArrayList<String>();
    sortedParams.add("apikey=" + encodedApiKey.toLowerCase());
    StringTokenizer st=new StringTokenizer(apiParams,"&");
    String url=null;
    boolean first=true;
    while (st.hasMoreTokens()) {
      String paramValue=st.nextToken();
      String param=paramValue.substring(0,paramValue.indexOf("="));
      String value=paramValue.substring(paramValue.indexOf("=") + 1,paramValue.length());
      if (first) {
        url=param + "=" + value;
        first=false;
      }
 else {
        url=url + "&" + param+ "="+ value;
      }
      sortedParams.add(param.toLowerCase() + "=" + value.toLowerCase());
    }
    Collections.sort(sortedParams);
    String sortedUrl=null;
    first=true;
    for (    String param : sortedParams) {
      if (first) {
        sortedUrl=param;
        first=false;
      }
 else {
        sortedUrl=sortedUrl + "&" + param;
      }
    }
    String encodedSignature=signRequest(sortedUrl,secretKey);
    String finalUrl=region.getEndPoint() + "?" + apiParams+ "&apiKey="+ apiKey+ "&signature="+ encodedSignature;
    return finalUrl;
  }
 catch (  UnsupportedEncodingException e) {
    s_logger.error(e.getMessage());
    return null;
  }
}
