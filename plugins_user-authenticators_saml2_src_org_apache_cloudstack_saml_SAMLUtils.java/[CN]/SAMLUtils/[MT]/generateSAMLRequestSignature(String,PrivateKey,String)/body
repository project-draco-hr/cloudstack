{
  if (signingKey == null) {
    return urlEncodedString;
  }
  String opensamlAlgoIdSignature=SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA1;
  String javaSignatureAlgorithmName="SHA1withRSA";
  if (sigAlgorithmName.equalsIgnoreCase("SHA256")) {
    opensamlAlgoIdSignature=SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA256;
    javaSignatureAlgorithmName="SHA256withRSA";
  }
 else   if (sigAlgorithmName.equalsIgnoreCase("SHA384")) {
    opensamlAlgoIdSignature=SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA384;
    javaSignatureAlgorithmName="SHA384withRSA";
  }
 else   if (sigAlgorithmName.equalsIgnoreCase("SHA512")) {
    opensamlAlgoIdSignature=SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA512;
    javaSignatureAlgorithmName="SHA512withRSA";
  }
  String url=urlEncodedString + "&SigAlg=" + URLEncoder.encode(opensamlAlgoIdSignature,HttpUtils.UTF_8);
  Signature signature=Signature.getInstance(javaSignatureAlgorithmName);
  signature.initSign(signingKey);
  signature.update(url.getBytes());
  String signatureString=Base64.encodeBytes(signature.sign(),Base64.DONT_BREAK_LINES);
  if (signatureString != null) {
    return url + "&Signature=" + URLEncoder.encode(signatureString,HttpUtils.UTF_8);
  }
  return url;
}
