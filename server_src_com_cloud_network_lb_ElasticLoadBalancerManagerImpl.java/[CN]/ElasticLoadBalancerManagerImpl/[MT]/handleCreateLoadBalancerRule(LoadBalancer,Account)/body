{
  long ipId=lb.getSourceIpAddressId();
  IPAddressVO ipAddr=_ipAddressDao.findById(ipId);
  Long networkId=ipAddr.getSourceNetworkId();
  NetworkVO network=_networkDao.findById(networkId);
  if (network.getGuestType() != GuestIpType.Direct) {
    s_logger.info("Elastic LB Manager: not handling guest traffic of type " + network.getGuestType());
    return;
  }
  DomainRouterVO elbVm=null;
  LoadBalancerVO lbvo;
  lbvo=_lbDao.findByAccountAndName(account.getId(),lb.getName());
  if (lbvo == null) {
    elbVm=findELBVmWithCapacity(network,ipAddr);
    if (elbVm == null) {
      elbVm=deployLoadBalancerVM(networkId,ipAddr,account.getId());
      if (elbVm == null) {
        s_logger.warn("Failed to deploy a new ELB vm for ip " + ipAddr + " in network "+ network+ "lb name="+ lb.getName());
        return;
      }
    }
  }
 else {
    ElasticLbVmMapVO elbVmMap=_elbVmMapDao.findOneByIp(lb.getSourceIpAddressId());
    if (elbVmMap != null) {
      elbVm=_routerDao.findById(elbVmMap.getElbVmId());
    }
  }
  if (elbVm == null) {
    s_logger.warn("No ELB VM can be found or deployed");
    return;
  }
  Transaction txn=Transaction.currentTxn();
  txn.start();
  IPAddressVO ipvo=_ipAddressDao.findById(ipId);
  ipvo.setAssociatedWithNetworkId(networkId);
  _ipAddressDao.update(ipvo.getId(),ipvo);
  ElasticLbVmMapVO mapping=new ElasticLbVmMapVO(ipId,elbVm.getId());
  _elbVmMapDao.persist(mapping);
  txn.commit();
}
