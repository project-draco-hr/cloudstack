{
  _name=name;
  ComponentLocator locator=ComponentLocator.getCurrentLocator();
  _hostDao=locator.getDao(HostDao.class);
  _hostDetailsDao=locator.getDao(DetailsDao.class);
  _vmDao=locator.getDao(UserVmDao.class);
  _offeringDao=locator.getDao(ServiceOfferingDao.class);
  _routerDao=locator.getDao(DomainRouterDao.class);
  _consoleProxyDao=locator.getDao(ConsoleProxyDao.class);
  _secStorgaeVmDao=locator.getDao(SecondaryStorageVmDao.class);
  _storagePoolHostDao=locator.getDao(StoragePoolHostDao.class);
  _configDao=locator.getDao(ConfigurationDao.class);
  _guestOSDao=locator.getDao(GuestOSDao.class);
  _guestOSCategoryDao=locator.getDao(GuestOSCategoryDao.class);
  if (_configDao != null) {
    Map<String,String> configs=_configDao.getConfiguration(params);
    String opFactor=configs.get("cpu.overprovisioning.factor");
    _factor=NumbersUtil.parseFloat(opFactor,1);
    if (_factor < 1) {
      _factor=1;
    }
    String allocationAlgorithm=configs.get("vm.allocation.algorithm");
    if (allocationAlgorithm != null && (allocationAlgorithm.equals("random") || allocationAlgorithm.equals("firstfit"))) {
      _allocationAlgorithm=allocationAlgorithm;
    }
  }
  return true;
}
