@attr(tags=['advanced', 'basic'], required_hardware='true')
def test2_attach_ISO_in_CentOSVM(self):
    '\n        @desc:Incorrect guest os mapping in vmware for CentOS 5.9 and above\n        Step1 :Register an CentOS 6.3 template\n        Step2 :Launch a VM\n        Step3: Try to attach VMware Tools ISO\n        Step4: Verify VMware tools ISO attached correctly\n        '
    self.hypervisor = str(get_hypervisor_type(self.api_client)).lower()
    if (self.hypervisor != 'vmware'):
        self.skipTest('This test can be run only on vmware')
    template = Template.register(self.userapiclient, self.services['CentOS6.3template'], zoneid=self.zone.id, account=self.account.name, domainid=self.account.domainid, hypervisor=self.hypervisor)
    self.debug('Registered a template with format {} and id {}'.format(self.services['CentOS6.3template']['format'], template.id))
    template.download(self.userapiclient)
    self.cleanup.append(template)
    vm = VirtualMachine.create(self.userapiclient, self.services['virtual_machine'], accountid=self.account.name, domainid=self.account.domainid, serviceofferingid=self.service_offering.id, templateid=template.id, zoneid=self.zone.id)
    self.cleanup.append(vm)
    response = VirtualMachine.list(self.userapiclient, id=vm.id)
    status = validateList(response)
    self.assertEqual(status[0], PASS, 'list vm response returned invalid list')
    list_default_iso_response = list_isos(self.api_client, name='vmware-tools.iso', account='system', isready='true')
    status = validateList(list_default_iso_response)
    self.assertEquals(PASS, status[0], 'ISO list is empty')
    self.debug('Registered a ISO with name {}'.format(list_default_iso_response[0].name))
    try:
        vm.attach_iso(self.userapiclient, list_default_iso_response[0])
    except CloudstackAPIException as e:
        self.fail(('Attached ISO failed : %s' % e))
    response = VirtualMachine.list(self.userapiclient, id=vm.id)
    status = validateList(response)
    self.assertEqual(status[0], PASS, 'list vm response returned invalid list')
    attachedIsoName = response[0].isoname
    self.assertEqual(attachedIsoName, 'vmware-tools.iso', 'vmware-tools.iso not attached')
    return
