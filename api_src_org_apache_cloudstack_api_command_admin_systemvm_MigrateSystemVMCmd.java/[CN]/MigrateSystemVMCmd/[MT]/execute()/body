{
  Host destinationHost=_resourceService.getHost(getHostId());
  if (destinationHost == null) {
    throw new InvalidParameterValueException("Unable to find the host to migrate the VM, host id=" + getHostId());
  }
  try {
    UserContext.current().setEventDetails("VM Id: " + getVirtualMachineId() + " to host Id: "+ getHostId());
    VirtualMachine migratedVm=_userVmService.migrateVirtualMachine(getVirtualMachineId(),destinationHost);
    if (migratedVm != null) {
      SystemVmInstanceResponse response=_responseGenerator.createSystemVmInstanceResponse(migratedVm);
      response.setResponseName(getCommandName());
      this.setResponseObject(response);
    }
 else {
      throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to migrate the system vm");
    }
  }
 catch (  ResourceUnavailableException ex) {
    s_logger.warn("Exception: ",ex);
    throw new ServerApiException(BaseCmd.RESOURCE_UNAVAILABLE_ERROR,ex.getMessage());
  }
catch (  ConcurrentOperationException e) {
    s_logger.warn("Exception: ",e);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,e.getMessage());
  }
catch (  ManagementServerException e) {
    s_logger.warn("Exception: ",e);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,e.getMessage());
  }
catch (  VirtualMachineMigrationException e) {
    s_logger.warn("Exception: ",e);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,e.getMessage());
  }
}
