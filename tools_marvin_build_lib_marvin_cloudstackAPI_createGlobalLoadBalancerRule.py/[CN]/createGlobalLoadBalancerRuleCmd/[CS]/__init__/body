def __init__(self):
    self.isAsync = 'true'
    'domain name for the GSLB service.'
    'Required'
    self.gslbdomainname = None
    'GSLB service type (tcp, udp)'
    'Required'
    self.gslbservicetype = None
    'name of the load balancer rule'
    'Required'
    self.name = None
    'region where the global load balancer is going to be created.'
    'Required'
    self.regionid = None
    'the account associated with the global load balancer. Must be used with the domainId parameter.'
    self.account = None
    'the description of the load balancer rule'
    self.description = None
    'the domain ID associated with the load balancer'
    self.domainid = None
    "load balancer algorithm (roundrobin, leastconn, proximity) that method is used to distribute traffic across the zones participating in global server load balancing, if not specified defaults to 'round robin'"
    self.gslblbmethod = None
    'session sticky method (sourceip) if not specified defaults to sourceip'
    self.gslbstickysessionmethodname = None
    self.required = ['gslbdomainname', 'gslbservicetype', 'name', 'regionid']
