@attr(tags=['advancedns'])
def test_nw_off_dedicated_mode(self):
    'Test network offering in dedicated mode device\n        '
    ns_list = NetScaler.list(self.apiclient, lbdeviceid=self.netscaler.lbdeviceid)
    self.assertEqual(isinstance(ns_list, list), True, 'NetScaler list should not be empty')
    ns = ns_list[0]
    self.assertEqual(ns.lbdevicededicated, False, 'NetScaler device is configured in shared mode')
    self.assertEqual(ns.lbdevicestate, 'Enabled', 'NetScaler device state should be enabled')
    self.debug(('Creating network with network offering: %s' % self.network_offering.id))
    self.network_1 = Network.create(self.apiclient, self.services['network'], accountid=self.account_1.name, domainid=self.account_1.domainid, networkofferingid=self.network_offering.id, zoneid=self.zone.id)
    self.debug(('Deploy Instance with network: %s' % self.network_1.name))
    with self.assertRaises(Exception):
        VirtualMachine.create(self.apiclient, self.services['virtual_machine'], accountid=self.account_1.name, domainid=self.account_1.domainid, serviceofferingid=self.service_offering.id, networkids=[str(self.network_1.id)])
    self.debug('Created instance failed!')
    return
