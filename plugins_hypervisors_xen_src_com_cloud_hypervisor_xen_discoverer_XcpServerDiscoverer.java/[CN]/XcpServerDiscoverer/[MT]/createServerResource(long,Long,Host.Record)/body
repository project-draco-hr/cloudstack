{
  String prodBrand=record.softwareVersion.get("product_brand");
  if (prodBrand == null) {
    prodBrand=record.softwareVersion.get("platform_name").trim();
  }
 else {
    prodBrand=prodBrand.trim();
  }
  String prodVersion=record.softwareVersion.get("product_version");
  if (prodVersion == null) {
    prodVersion=record.softwareVersion.get("platform_version").trim();
  }
 else {
    prodVersion=prodVersion.trim();
  }
  if (prodBrand.equals("XCP") && (prodVersion.equals("1.0.0") || prodVersion.equals("1.1.0") || prodVersion.equals("5.6.100")|| prodVersion.startsWith("1.4"))) {
    return new XcpServerResource();
  }
 else   if (prodBrand.equals("XCP") && prodVersion.startsWith("1.6")) {
    return new XcpServer16Resource();
  }
 else   if (prodBrand.equals("XenServer") && prodVersion.equals("5.6.0"))   return new XenServer56Resource();
 else   if (prodBrand.equals("XenServer") && prodVersion.equals("6.0.0"))   return new XenServer600Resource();
 else   if (prodBrand.equals("XenServer") && prodVersion.equals("6.0.2"))   return new XenServer602Resource();
 else   if (prodBrand.equals("XenServer") && prodVersion.equals("6.1.0"))   return new XenServer610Resource();
 else   if (prodBrand.equals("XenServer") && prodVersion.equals("5.6.100")) {
    String prodVersionTextShort=record.softwareVersion.get("product_version_text_short").trim();
    if ("5.6 SP2".equals(prodVersionTextShort)) {
      return new XenServer56SP2Resource();
    }
 else     if ("5.6 FP1".equals(prodVersionTextShort)) {
      return new XenServer56FP1Resource();
    }
  }
 else   if (prodBrand.equals("XCP_Kronos")) {
    return new XcpOssResource();
  }
  String msg="Only support XCP 1.0.0, 1.1.0, 1.4.x, 1.5 beta, 1.6.x; XenServer 5.6,  XenServer 5.6 FP1, XenServer 5.6 SP2, Xenserver 6.0, 6.0.2, 6.1.0 but this one is " + prodBrand + " "+ prodVersion;
  _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,msg,msg);
  s_logger.debug(msg);
  throw new RuntimeException(msg);
}
