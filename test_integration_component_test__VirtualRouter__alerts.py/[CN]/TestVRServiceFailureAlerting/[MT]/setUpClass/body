@classmethod
def setUpClass(cls):
    cls.testClient = super(TestVRServiceFailureAlerting, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.services = cls.testClient.getParsedTestDataConfig()
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    domain = get_domain(cls.api_client)
    cls.services['mode'] = cls.zone.networktype
    template = get_template(cls.api_client, cls.zone.id, cls.services['ostype'])
    if (template == FAILED):
        assert False, ('get_template() failed to return template with                            description %s' % cls.services['ostype'])
    cls.services['small']['zoneid'] = cls.zone.id
    cls.services['small']['template'] = template.id
    cls.account = Account.create(cls.api_client, cls.services['account'], domainid=domain.id)
    cls.small_offering = ServiceOffering.create(cls.api_client, cls.services['service_offerings']['small'])
    cls.virtual_machine = VirtualMachine.create(cls.api_client, cls.services['small'], accountid=cls.account.name, domainid=cls.account.domainid, serviceofferingid=cls.small_offering.id, mode=cls.services['mode'])
    cls._cleanup = [cls.small_offering, cls.account]
