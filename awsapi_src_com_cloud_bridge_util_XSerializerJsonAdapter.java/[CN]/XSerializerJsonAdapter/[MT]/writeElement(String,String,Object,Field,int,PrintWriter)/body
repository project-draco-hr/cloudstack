{
  Class<?> fieldType=f.getType();
  if (!serializer.isComposite(fieldType)) {
    if (fieldType == Date.class) {
      if (value != null) {
        indent(true,indentLevel,writer);
        writer.print(elementName + ":\"");
        writer.print(DateHelper.getGMTDateFormat("yyyy-MM-dd").format((Date)value) + "T" + DateHelper.getGMTDateFormat("HH:mm:ss").format((Date)value)+ ".000Z");
        writer.print("\"");
      }
 else {
        if (!serializer.omitNullField(f)) {
          indent(true,indentLevel,writer);
          writer.print(elementName + ":null");
        }
      }
    }
 else     if (fieldType == Calendar.class) {
      if (value != null) {
        indent(true,indentLevel,writer);
        Date dt=((Calendar)value).getTime();
        writer.print(elementName + ":\"");
        writer.print(DateHelper.getGMTDateFormat("yyyy-MM-dd").format(dt) + "T" + DateHelper.getGMTDateFormat("HH:mm:ss").format(dt)+ ".000Z");
        writer.print("\"");
      }
 else {
        if (!serializer.omitNullField(f)) {
          indent(true,indentLevel,writer);
          writer.print(elementName + ":null");
        }
      }
    }
 else {
      if (value != null) {
        indent(true,indentLevel,writer);
        writer.print(elementName + ":\"");
        writer.print(value);
        writer.print("\"");
      }
 else {
        if (!serializer.omitNullField(f)) {
          indent(true,indentLevel,writer);
          writer.print(elementName + ":null");
        }
      }
    }
  }
 else   if (fieldType.isArray()) {
    if (value != null) {
      indent(true,indentLevel,writer);
      writer.print(elementName + ":[");
      indentLevel++;
      Object[] array=(Object[])value;
      for (int i=0; i < array.length; i++) {
        serializer.serializeTo(array[i],"",null,indentLevel,writer);
        if (i < array.length - 1)         writeSeparator(indentLevel,writer);
      }
      indentLevel--;
      indent(true,indentLevel,writer);
      writer.print("]");
    }
 else {
      if (!serializer.omitNullField(f)) {
        indent(true,indentLevel,writer);
        writer.print(elementName + ":null");
      }
    }
  }
 else   if (Collection.class.isAssignableFrom(fieldType)) {
    if (value != null) {
      indent(true,indentLevel,writer);
      writer.print(elementName + ":[");
      indentLevel++;
      Iterator it=((Collection)value).iterator();
      if (it != null) {
        while (it.hasNext()) {
          Object sub=it.next();
          serializer.serializeTo(sub,"",null,indentLevel,writer);
          if (it.hasNext())           writeSeparator(indentLevel,writer);
        }
      }
      indentLevel--;
      indent(true,indentLevel,writer);
      writer.print("]");
    }
 else {
      if (!serializer.omitNullField(f)) {
        indent(true,indentLevel,writer);
        writer.print(elementName + ":null");
      }
    }
  }
 else {
    serializer.serializeTo(value,elementName,null,indentLevel,writer);
  }
}
