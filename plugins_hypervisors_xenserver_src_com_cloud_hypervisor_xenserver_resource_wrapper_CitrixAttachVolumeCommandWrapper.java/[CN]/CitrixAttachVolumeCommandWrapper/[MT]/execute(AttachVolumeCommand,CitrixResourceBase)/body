{
  final Connection conn=citrixResourceBase.getConnection();
  final boolean attach=command.getAttach();
  final String vmName=command.getVmName();
  final String vdiNameLabel=vmName + "-DATA";
  final Long deviceId=command.getDeviceId();
  String errorMsg;
  if (attach) {
    errorMsg="Failed to attach volume";
  }
 else {
    errorMsg="Failed to detach volume";
  }
  try {
    VDI vdi=null;
    if (command.getAttach() && command.isManaged()) {
      final SR sr=citrixResourceBase.getIscsiSR(conn,command.get_iScsiName(),command.getStorageHost(),command.get_iScsiName(),command.getChapInitiatorUsername(),command.getChapInitiatorPassword(),true);
      vdi=citrixResourceBase.getVDIbyUuid(conn,command.getVolumePath(),false);
      if (vdi == null) {
        vdi=citrixResourceBase.createVdi(sr,vdiNameLabel,command.getVolumeSize());
      }
    }
 else {
      vdi=citrixResourceBase.getVDIbyUuid(conn,command.getVolumePath());
    }
    final VM vm=citrixResourceBase.getVM(conn,vmName);
    if (attach) {
      String diskNumber=null;
      if (deviceId != null) {
        if (deviceId.longValue() == 3) {
          final String msg="Device 3 is reserved for CD-ROM, choose other device";
          return new AttachVolumeAnswer(command,msg);
        }
        if (citrixResourceBase.isDeviceUsed(conn,vm,deviceId)) {
          final String msg="Device " + deviceId + " is used in VM "+ vmName;
          return new AttachVolumeAnswer(command,msg);
        }
        diskNumber=deviceId.toString();
      }
 else {
        diskNumber=citrixResourceBase.getUnusedDeviceNum(conn,vm);
      }
      final VBD.Record vbdr=new VBD.Record();
      vbdr.VM=vm;
      vbdr.VDI=vdi;
      vbdr.bootable=false;
      vbdr.userdevice=diskNumber;
      vbdr.mode=Types.VbdMode.RW;
      vbdr.type=Types.VbdType.DISK;
      vbdr.unpluggable=true;
      final VBD vbd=VBD.create(conn,vbdr);
      vbd.plug(conn);
      vdi.setNameLabel(conn,vdiNameLabel);
      return new AttachVolumeAnswer(command,Long.parseLong(diskNumber),vdi.getUuid(conn));
    }
 else {
      final Set<VBD> vbds=vdi.getVBDs(conn);
      for (      final VBD vbd : vbds) {
        final VBD.Record vbdr=vbd.getRecord(conn);
        if (vbdr.currentlyAttached) {
          vbd.unplug(conn);
        }
        vbd.destroy(conn);
      }
      vdi.setNameLabel(conn,"detached");
      if (command.isManaged()) {
        citrixResourceBase.handleSrAndVdiDetach(command.get_iScsiName(),conn);
      }
      return new AttachVolumeAnswer(command);
    }
  }
 catch (  final XenAPIException e) {
    final String msg=errorMsg + " for uuid: " + command.getVolumePath()+ "  due to "+ e.toString();
    s_logger.warn(msg,e);
    return new AttachVolumeAnswer(command,msg);
  }
catch (  final Exception e) {
    final String msg=errorMsg + " for uuid: " + command.getVolumePath()+ "  due to "+ e.getMessage();
    s_logger.warn(msg,e);
    return new AttachVolumeAnswer(command,msg);
  }
}
