{
  List<StoragePool> suitablePools=new ArrayList<StoragePool>();
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("LocalStoragePoolAllocator trying to find storage pool to fit the vm");
  }
  if (dskCh.getType() == Volume.Type.DATADISK && plan.getHostId() != null) {
    List<StoragePoolHostVO> hostPools=_poolHostDao.listByHostId(plan.getHostId());
    for (    StoragePoolHostVO hostPool : hostPools) {
      StoragePoolVO pool=_storagePoolDao.findById(hostPool.getPoolId());
      if (pool != null && pool.isLocal()) {
        StoragePool pol=(StoragePool)this.dataStoreMgr.getPrimaryDataStore(pool.getId());
        if (filter(avoid,pol,dskCh,plan)) {
          s_logger.debug("Found suitable local storage pool " + pool.getId() + ", adding to list");
          suitablePools.add(pol);
        }
      }
      if (suitablePools.size() == returnUpTo) {
        break;
      }
    }
  }
 else {
    List<StoragePoolVO> availablePools=_storagePoolDao.findLocalStoragePoolsByTags(plan.getDataCenterId(),plan.getPodId(),plan.getClusterId(),dskCh.getTags());
    for (    StoragePoolVO pool : availablePools) {
      if (suitablePools.size() == returnUpTo) {
        break;
      }
      StoragePool pol=(StoragePool)this.dataStoreMgr.getPrimaryDataStore(pool.getId());
      if (filter(avoid,pol,dskCh,plan)) {
        suitablePools.add(pol);
      }
    }
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("LocalStoragePoolAllocator returning " + suitablePools.size() + " suitable storage pools");
  }
  return suitablePools;
}
