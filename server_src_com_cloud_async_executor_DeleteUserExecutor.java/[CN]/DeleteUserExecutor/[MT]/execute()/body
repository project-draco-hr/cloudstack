{
  Gson gson=GsonHelper.getBuilder().create();
  AsyncJobManager asyncMgr=getAsyncJobMgr();
  AsyncJobVO job=getJob();
  ManagementServer managementServer=asyncMgr.getExecutorContext().getManagementServer();
  DeleteUserParam param=gson.fromJson(job.getCmdInfo(),DeleteUserParam.class);
  try {
    User user=managementServer.getUser(param.getUserId(),true);
    String description="Starting deleting User " + user.getUsername() + " (id: "+ param.getUserId()+ ") for accountId = "+ user.getAccountId();
    managementServer.saveStartedEvent(1L,1L,EventTypes.EVENT_USER_DELETE,description,param.getEventId());
    if (managementServer.deleteUser(param.getUserId())) {
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_SUCCEEDED,0,"success");
    }
 else {
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"operation failed");
    }
  }
 catch (  Exception e) {
    s_logger.warn("Unable to delete User " + param.getUserId() + ": "+ e.getMessage(),e);
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,e.getMessage());
  }
  return true;
}
