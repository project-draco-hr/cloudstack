{
  LOGGER.debug("execute: " + cmd.getClass());
  StorageFilerTO primaryStorage=cmd.getPool();
  DiskProfile disk=cmd.getDiskCharacteristics();
  String fileName=UUID.randomUUID().toString() + ".raw";
  String dst=primaryStorage.getPath() + File.separator + primaryStorage.getUuid()+ File.separator+ fileName;
  try {
    StoragePlugin store=new StoragePlugin(c);
    if (cmd.getTemplateUrl() != null) {
      LOGGER.debug("CreateCommand " + cmd.getTemplateUrl() + " "+ dst);
      Linux host=new Linux(c);
      host.copyFile(cmd.getTemplateUrl(),dst);
    }
 else {
      LOGGER.debug("CreateCommand " + dst);
      store.storagePluginCreate(primaryStorage.getUuid(),primaryStorage.getHost(),dst,disk.getSize(),false);
    }
    FileProperties fp=store.storagePluginGetFileInfo(primaryStorage.getUuid(),primaryStorage.getHost(),dst);
    VolumeTO volume=new VolumeTO(cmd.getVolumeId(),disk.getType(),primaryStorage.getType(),primaryStorage.getUuid(),primaryStorage.getPath(),fileName,fp.getName(),fp.getSize(),null);
    return new CreateAnswer(cmd,volume);
  }
 catch (  Exception e) {
    LOGGER.debug("CreateCommand failed",e);
    return new CreateAnswer(cmd,e.getMessage());
  }
}
