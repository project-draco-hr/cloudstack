{
  if (newState == null) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("There's no way to transition from old state: " + oldState.toString() + " event: "+ event.toString());
    }
    return false;
  }
  VMInstanceVO vmi=(VMInstanceVO)vm;
  Long oldHostId=vmi.getHostId();
  SearchCriteria<VMInstanceVO> sc=StateChangeSearch.create();
  sc.setParameters("id",vmi.getId());
  sc.setParameters("states",oldState);
  sc.setParameters("host",vmi.getHostId());
  sc.setParameters("update",vmi.getUpdated());
  vmi.incrUpdated();
  UpdateBuilder ub=getUpdateBuilder(vmi);
  ub.set(vmi,"state",newState);
  ub.set(vmi,"hostId",hostId);
  ub.set(vmi,_updateTimeAttr,new Date());
  int result=update(vmi,sc);
  if (result == 0 && s_logger.isDebugEnabled()) {
    vmi.setState(oldState);
    vmi.setHostId(oldHostId);
    vmi.decrUpdated();
    VMInstanceVO vo=findById(vm.getId());
    StringBuilder str=new StringBuilder("Unable to update ").append(vo.toString());
    str.append(": DB Data={Host=").append(vo.getHostId()).append("; State=").append(vo.getState().toString()).append("; updated=").append(vo.getUpdated());
    str.append("} Stale Data: {Host=").append(vm.getHostId()).append("; State=").append(vm.getState().toString()).append("; updated=").append(vmi.getUpdated()).append("}");
    s_logger.debug(str.toString());
  }
  return result > 0;
}
