{
  Collections.sort(ipAddrList,new Comparator<IpAddress>(){
    @Override public int compare(    IpAddress o1,    IpAddress o2){
      return o1.getAddress().compareTo(o2.getAddress());
    }
  }
);
  boolean firstIP=true;
  for (  final PublicIpAddress ip : ipAddrList) {
    boolean add=(ip.getState() == IpAddress.State.Releasing ? false : true);
    boolean sourceNat=ip.isSourceNat();
    String vlanId=ip.getVlanTag();
    String vlanGateway=ip.getGateway();
    String vlanNetmask=ip.getNetmask();
    String vifMacAddress=ip.getMacAddress();
    String vmGuestAddress=null;
    if (vmId != 0) {
      vmGuestAddress=_vmDao.findById(vmId).getGuestIpAddress();
    }
    cmds.addCommand("IPAssocCommand",new IPAssocCommand(router.getInstanceName(),router.getPrivateIpAddress(),ip.getAddress(),add,firstIP,sourceNat,vlanId,vlanGateway,vlanNetmask,vifMacAddress,vmGuestAddress));
    firstIP=false;
  }
  return cmds;
}
