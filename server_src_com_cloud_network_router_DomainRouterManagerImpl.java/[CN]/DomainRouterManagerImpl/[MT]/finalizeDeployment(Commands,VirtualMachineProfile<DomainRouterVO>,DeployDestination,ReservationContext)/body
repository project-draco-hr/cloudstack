{
  NicProfile controlNic=(NicProfile)profile.getParameter("control.nic");
  cmds.addCommand("checkSsh",new CheckSshCommand(profile.getInstanceName(),controlNic.getIp4Address(),3922,5,20));
  DomainRouterVO router=profile.getVirtualMachine();
  List<NicVO> nics=_nicDao.listBy(router.getId());
  for (  NicVO nic : nics) {
    NetworkVO network=_networkDao.findById(nic.getNetworkId());
    if (network.getTrafficType() == TrafficType.Public) {
      router.setPublicIpAddress(nic.getIp4Address());
      router.setPublicNetmask(nic.getNetmask());
      router.setPublicMacAddress(nic.getMacAddress());
    }
 else     if (network.getTrafficType() == TrafficType.Guest) {
      router.setGuestIpAddress(nic.getIp4Address());
      router.setGuestMacAddress(nic.getMacAddress());
    }
 else     if (network.getTrafficType() == TrafficType.Control) {
      router.setPrivateIpAddress(nic.getIp4Address());
      router.setPrivateNetmask(nic.getNetmask());
      router.setPrivateMacAddress(nic.getMacAddress());
    }
  }
  final List<IPAddressVO> ipAddrs=_networkMgr.listPublicIpAddressesInVirtualNetwork(router.getAccountId(),router.getDataCenterId(),null);
  final List<String> ipAddrList=new ArrayList<String>();
  for (  final IPAddressVO ipVO : ipAddrs) {
    ipAddrList.add(ipVO.getAddress());
  }
  if (!ipAddrList.isEmpty()) {
    _networkMgr.getAssociateIPCommands(router,ipAddrList,true,0,cmds);
  }
  return true;
}
