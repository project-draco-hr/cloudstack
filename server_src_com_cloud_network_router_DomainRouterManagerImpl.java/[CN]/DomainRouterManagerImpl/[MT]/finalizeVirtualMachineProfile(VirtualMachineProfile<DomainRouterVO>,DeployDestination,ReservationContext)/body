{
  DomainRouterVO router=profile.getVirtualMachine();
  NetworkVO network=_networkDao.findById(router.getNetworkId());
  String type=null;
  String dhcpRange=null;
  if (network.getGuestType() == GuestIpType.Virtual) {
    String cidr=network.getCidr();
    String[] splitResult=cidr.split("\\/");
    long size=Long.valueOf(splitResult[1]);
    dhcpRange=NetUtils.getIpRangeStartIpFromCidr(splitResult[0],size);
  }
 else {
    List<VlanVO> vlans=_vlanDao.listVlansByNetworkId(network.getId());
    if (vlans != null) {
      String ipRange=vlans.get(0).getIpRange();
      String[] ips=ipRange.split("-");
      dhcpRange=ips[0];
    }
  }
  String domain=network.getNetworkDomain();
  if (router.getRole() == Role.DHCP_USERDATA) {
    type="dhcpsrvr";
  }
 else {
    type="router";
  }
  StringBuilder buf=profile.getBootArgsBuilder();
  buf.append(" template=domP type=" + type);
  buf.append(" name=").append(profile.getHostName());
  NicProfile controlNic=null;
  for (  NicProfile nic : profile.getNics()) {
    int deviceId=nic.getDeviceId();
    buf.append(" eth").append(deviceId).append("ip=").append(nic.getIp4Address());
    buf.append(" eth").append(deviceId).append("mask=").append(nic.getNetmask());
    if (nic.isDefaultNic()) {
      buf.append(" gateway=").append(nic.getGateway());
      buf.append(" dns1=").append(nic.getDns1());
      if (nic.getDns2() != null) {
        buf.append(" dns2=").append(nic.getDns2());
      }
    }
    if (nic.getTrafficType() == TrafficType.Management) {
      buf.append(" localgw=").append(dest.getPod().getGateway());
    }
 else     if (nic.getTrafficType() == TrafficType.Control) {
      controlNic=nic;
    }
  }
  if (dhcpRange != null) {
    buf.append(" dhcprange=" + dhcpRange);
  }
  if (domain != null) {
    buf.append(" domain=" + router.getDomain());
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Boot Args for " + profile + ": "+ buf.toString());
  }
  if (controlNic == null) {
    throw new CloudRuntimeException("Didn't start a control port");
  }
  profile.setParameter("control.nic",controlNic);
  return true;
}
