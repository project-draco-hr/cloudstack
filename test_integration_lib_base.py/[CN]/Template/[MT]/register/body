@classmethod
def register(cls, apiclient, services, zoneid=None, account=None, domainid=None):
    'Create template from URL'
    cmd = registerTemplate.registerTemplateCmd()
    cmd.displaytext = services['displaytext']
    cmd.name = '-'.join([services['name'], random_gen()])
    cmd.format = services['format']
    cmd.hypervisor = services['hypervisor']
    cmd.ostypeid = services['ostypeid']
    cmd.url = services['url']
    if zoneid:
        cmd.zoneid = zoneid
    else:
        cmd.zoneid = services['zoneid']
    cmd.isfeatured = (services['isfeatured'] if ('isfeatured' in services) else False)
    cmd.ispublic = (services['ispublic'] if ('ispublic' in services) else False)
    cmd.isextractable = (services['isextractable'] if ('isextractable' in services) else False)
    if account:
        cmd.account = account
    if domainid:
        cmd.domainid = domainid
    template = apiclient.registerTemplate(cmd)
    if isinstance(template, list):
        return Template(template[0].__dict__)
