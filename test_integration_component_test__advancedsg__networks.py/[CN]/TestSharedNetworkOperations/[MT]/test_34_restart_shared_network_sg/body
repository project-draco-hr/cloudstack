@data('account', 'domain', 'zone')
@attr(tags=['advancedsg'])
def test_34_restart_shared_network_sg(self, value):
    ' Test restart account/domain/zone wide shared network'
    domain = self.domain
    account = None
    self.services['shared_network_sg']['acltype'] = 'domain'
    if (value == 'domain'):
        domain = Domain.create(self.api_client, services=self.services['domain'], parentdomainid=self.domain.id)
        self.cleanup_domains.append(domain)
    elif (value == 'account'):
        account = Account.create(self.api_client, self.services['account'], admin=True, domainid=self.domain.id)
        self.cleanup_accounts.append(account)
        self.services['shared_network_sg']['acltype'] = 'account'
    (physical_network, vlan) = get_free_vlan(self.api_client, self.zone.id)
    self.services['shared_network_sg']['vlan'] = vlan
    self.services['shared_network_sg']['networkofferingid'] = self.shared_network_offering_sg.id
    self.services['shared_network_sg']['physicalnetworkid'] = physical_network.id
    self.setSharedNetworkParams('shared_network_sg')
    shared_network_sg = Network.create(self.api_client, self.services['shared_network_sg'], accountid=(account.name if account else None), domainid=domain.id, networkofferingid=self.shared_network_offering_sg.id, zoneid=self.zone.id)
    if ((value == 'domain') or (value == 'zone')):
        self.cleanup_networks.append(shared_network_sg)
    self.debug(('Created %s wide shared network %s' % (value, shared_network_sg.id)))
    try:
        self.debug(('Restarting shared network: %s' % shared_network_sg))
        shared_network_sg.restart(self.api_client)
    except Exception as e:
        self.fail(('Exception while restarting the shared network: %s' % e))
    return
