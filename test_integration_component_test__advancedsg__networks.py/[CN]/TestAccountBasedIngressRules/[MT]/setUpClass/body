@classmethod
def setUpClass(cls):
    cls.testClient = super(TestAccountBasedIngressRules, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.services = cls.testClient.getParsedTestDataConfig()
    cls.domain = get_domain(cls.api_client)
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.template = get_template(cls.api_client, cls.zone.id, cls.services['ostype'])
    cls.services['virtual_machine']['zoneid'] = cls.zone.id
    cls.services['virtual_machine']['template'] = cls.template.id
    cls.service_offering = ServiceOffering.create(cls.api_client, cls.services['service_offering'])
    cls.services['shared_network_offering_sg']['specifyVlan'] = 'True'
    cls.services['shared_network_offering_sg']['specifyIpRanges'] = 'True'
    cls.shared_network_offering_sg = NetworkOffering.create(cls.api_client, cls.services['shared_network_offering_sg'], conservemode=False)
    NetworkOffering.update(cls.shared_network_offering_sg, cls.api_client, state='enabled')
    cls._cleanup = [cls.service_offering, cls.shared_network_offering_sg]
    return
