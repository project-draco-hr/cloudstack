@attr(tags=['advancedsg'])
def test_19_DeployVM_DefaultSG(self):
    ' Test deploy VM in default security group'
    self.debug('Listing security groups')
    securitygroups = SecurityGroup.list(self.api_client)
    self.assertEqual(validateList(securitygroups)[0], PASS, ('securitygroups list validation                failed, securitygroups list is %s' % securitygroups))
    defaultSecurityGroup = securitygroups[0]
    self.debug(('Default security group: %s' % defaultSecurityGroup.id))
    try:
        self.debug('Trying to create virtual machine with the default security group')
        vm = VirtualMachine.create(self.api_client, self.services['virtual_machine'], templateid=self.template.id, securitygroupids=[defaultSecurityGroup.id], serviceofferingid=self.service_offering.id)
        self.debug(('Deployed Vm: %s' % vm.name))
        self.cleanup_vms.append(vm)
        self.debug('Listing vms')
        vm_list = list_virtual_machines(self.api_client, id=vm.id)
        self.assertEqual(validateList(vm_list)[0], PASS, ('vm list validation failed,                     vm list is %s' % vm_list))
        self.assertTrue((defaultSecurityGroup.id in [secgrp.id for secgrp in vm_list[0].securitygroup]), ("default sec group %s not present in the vm's sec group list %s" % (defaultSecurityGroup.id, vm_list[0].securitygroup)))
    except Exception as e:
        self.fail(('VM creation with default security group failed with exception: %s' % e))
    return
