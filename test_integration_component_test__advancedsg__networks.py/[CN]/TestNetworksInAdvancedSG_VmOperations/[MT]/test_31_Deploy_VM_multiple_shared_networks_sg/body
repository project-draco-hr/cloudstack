@attr(tags=['advancedsg'])
def test_31_Deploy_VM_multiple_shared_networks_sg(self):
    ' Test deploy VM in multiple SG enabled shared networks'
    self.services['shared_network_sg']['acltype'] = 'domain'
    self.services['shared_network_sg']['networkofferingid'] = self.shared_network_offering_sg.id
    (physical_network, vlan) = get_free_vlan(self.api_client, self.zone.id)
    self.services['shared_network_sg']['vlan'] = vlan
    self.services['shared_network_sg']['physicalnetworkid'] = physical_network.id
    self.setSharedNetworkParams('shared_network_sg')
    shared_network_1 = Network.create(self.api_client, self.services['shared_network_sg'], networkofferingid=self.shared_network_offering_sg.id, zoneid=self.zone.id)
    self.cleanup_networks.append(shared_network_1)
    self.debug(('Created shared network: %s' % shared_network_1.id))
    self.services['shared_network_sg']['vlan'] = get_free_vlan(self.api_client, self.zone.id)[1]
    self.setSharedNetworkParams('shared_network_sg')
    shared_network_2 = Network.create(self.api_client, self.services['shared_network_sg'], networkofferingid=self.shared_network_offering_sg.id, zoneid=self.zone.id)
    self.cleanup_networks.append(shared_network_2)
    self.debug(('Created shared network: %s' % shared_network_2.id))
    try:
        self.debug(('Creating virtual machine in shared networks %s and %s, this should fail' % (shared_network_1.id, shared_network_2.id)))
        vm = VirtualMachine.create(self.api_client, self.services['virtual_machine'], templateid=self.template.id, networkids=[shared_network_1.id, shared_network_2.id], serviceofferingid=self.service_offering.id)
        self.cleanup_vms.append(vm)
        self.fail(('Vm deployment should have failed, instead deployed vm %s' % vm.id))
    except Exception as e:
        self.debug(('VM deployment failed as expected with exception: %s' % e))
    return
