@attr(tags=['advancedsg'])
def test_06_SharedNwSGAccountSpecific(self):
    ' Test Account specific shared network creation with SG'
    self.admin_account = Account.create(self.api_client, self.services['account'], admin=True, domainid=self.domain.id)
    self.cleanup_accounts.append(self.admin_account)
    self.user_account = Account.create(self.api_client, self.services['account'], domainid=self.domain.id)
    self.cleanup_accounts.append(self.user_account)
    self.services['shared_network_offering_sg']['specifyVlan'] = 'True'
    self.services['shared_network_offering_sg']['specifyIpRanges'] = 'True'
    (physical_network, vlan) = get_free_vlan(self.api_client, self.zone.id)
    self.services['shared_network_sg']['acltype'] = 'account'
    self.services['shared_network_sg']['vlan'] = vlan
    self.services['shared_network_sg']['networkofferingid'] = self.shared_network_offering_sg.id
    self.services['shared_network_sg']['physicalnetworkid'] = physical_network.id
    self.setSharedNetworkParams('shared_network_sg')
    try:
        self.shared_network_sg_admin_account = Network.create(self.api_client, self.services['shared_network_sg'], accountid=self.admin_account.name, domainid=self.admin_account.domainid, networkofferingid=self.shared_network_offering_sg.id, zoneid=self.zone.id)
    except Exception as e:
        self.fail(('Exception while creating account specific shared network: %s' % e))
    self.debug(('Created shared network %s with admin account' % self.shared_network_sg_admin_account.id))
    list_networks_response = Network.list(self.api_client, id=self.shared_network_sg_admin_account.id)
    self.assertEqual(validateList(list_networks_response)[0], PASS, ('networks list validation failed, list is %s' % list_networks_response))
    self.debug(('Shared Network created: %s' % self.shared_network_sg_admin_account.id))
    self.debug(('Creating shared account in user account: %s' % self.user_account.id))
    (physical_network, vlan) = get_free_vlan(self.api_client, self.zone.id)
    self.services['shared_network_sg']['vlan'] = vlan
    self.setSharedNetworkParams('shared_network_sg')
    try:
        self.shared_network_sg_user_account = Network.create(self.api_client, self.services['shared_network_sg'], accountid=self.user_account.name, domainid=self.user_account.domainid, networkofferingid=self.shared_network_offering_sg.id, zoneid=self.zone.id)
    except Exception as e:
        self.fail(('Exception while creating account specific shared network: %s' % e))
    self.debug(('Created shared network %s with user account' % self.shared_network_sg_user_account.id))
    list_networks_response = Network.list(self.api_client, id=self.shared_network_sg_user_account.id)
    self.assertEqual(validateList(list_networks_response)[0], PASS, ('networks list validation failed, list is %s' % list_networks_response))
    self.debug(('Shared Network created: %s' % self.shared_network_sg_user_account.id))
    return
