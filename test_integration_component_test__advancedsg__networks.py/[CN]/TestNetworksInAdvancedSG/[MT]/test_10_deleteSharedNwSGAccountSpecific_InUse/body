@attr(tags=['advancedsg'])
def test_10_deleteSharedNwSGAccountSpecific_InUse(self):
    ' Test delete Account specific shared network creation with SG which is in use'
    self.admin_account = Account.create(self.api_client, self.services['account'], admin=True, domainid=self.domain.id)
    self.cleanup_accounts.append(self.admin_account)
    (physical_network, vlan) = get_free_vlan(self.api_client, self.zone.id)
    self.services['shared_network_sg']['acltype'] = 'account'
    self.services['shared_network_sg']['vlan'] = vlan
    self.services['shared_network_sg']['networkofferingid'] = self.shared_network_offering_sg.id
    self.services['shared_network_sg']['physicalnetworkid'] = physical_network.id
    self.setSharedNetworkParams('shared_network_sg')
    shared_network_sg_account = Network.create(self.api_client, self.services['shared_network_sg'], accountid=self.admin_account.name, domainid=self.admin_account.domainid, networkofferingid=self.shared_network_offering_sg.id, zoneid=self.zone.id)
    self.debug(('Shared Network created: %s' % shared_network_sg_account.id))
    self.debug(('Deploying vm in the shared network: %s' % shared_network_sg_account.id))
    vm = VirtualMachine.create(self.api_client, self.services['virtual_machine'], accountid=self.admin_account.name, domainid=self.admin_account.domainid, networkids=[shared_network_sg_account.id], serviceofferingid=self.service_offering.id)
    self.debug(('Created vm %s' % vm.id))
    self.debug(('Trying to delete shared network: %s' % shared_network_sg_account.id))
    try:
        shared_network_sg_account.delete(self.api_client)
        self.fail('Exception not raised while deleting network')
    except Exception as e:
        self.debug(('Network deletion failed with exception: %s' % e))
    return
