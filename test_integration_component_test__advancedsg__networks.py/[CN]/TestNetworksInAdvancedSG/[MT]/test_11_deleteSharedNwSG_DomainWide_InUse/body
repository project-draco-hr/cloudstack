@attr(tags=['advancedsg'])
def test_11_deleteSharedNwSG_DomainWide_InUse(self):
    ' Test delete Domain wide shared network with SG which is in use'
    domain = Domain.create(self.api_client, services=self.services['domain'], parentdomainid=self.domain.id)
    self.debug(('Created domain: %s' % domain.id))
    (physical_network, vlan) = get_free_vlan(self.api_client, self.zone.id)
    self.services['shared_network_sg']['acltype'] = 'domain'
    self.services['shared_network_sg']['vlan'] = vlan
    self.services['shared_network_sg']['networkofferingid'] = self.shared_network_offering_sg.id
    self.services['shared_network_sg']['physicalnetworkid'] = physical_network.id
    self.setSharedNetworkParams('shared_network_sg')
    self.debug(('Creating shared network domain: %s' % domain.name))
    shared_network_sg_domain = Network.create(self.api_client, self.services['shared_network_sg'], domainid=domain.id, networkofferingid=self.shared_network_offering_sg.id, zoneid=self.zone.id, subdomainaccess=True)
    self.debug(('Created shared network: %s' % shared_network_sg_domain.id))
    self.debug(('Deploying vm in the shared network: %s' % shared_network_sg_domain.id))
    vm = VirtualMachine.create(self.api_client, self.services['virtual_machine'], domainid=domain.id, networkids=[shared_network_sg_domain.id], serviceofferingid=self.service_offering.id)
    self.debug(('Created vm %s' % vm.id))
    self.debug(('Trying to delete shared network: %s' % shared_network_sg_domain.id))
    try:
        shared_network_sg_domain.delete(self.api_client)
        self.fail('Exception not raised while deleting network')
    except Exception as e:
        self.debug(('Network deletion failed with exception: %s' % e))
    self.cleanup_networks.append(shared_network_sg_domain)
    self.cleanup_vms.append(vm)
    self.cleanup_domains.append(domain)
    return
