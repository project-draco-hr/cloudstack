def tearDown(self):
    try:
        cleanup_resources(self.api_client, self.cleanup)
    except Exception as e:
        raise Exception(('Warning: Exception during cleanup : %s' % e))
    try:
        for vm in self.cleanup_vms:
            vm.delete(self.api_client)
    except Exception as e:
        raise Exception(('Warning: Exception during virtual machines cleanup : %s' % e))
    try:
        for project in self.cleanup_projects:
            project.delete(self.api_client)
    except Exception as e:
        raise Exception(('Warning: Exception during project cleanup : %s' % e))
    try:
        for account in self.cleanup_accounts:
            account.delete(self.api_client)
    except Exception as e:
        raise Exception(('Warning: Exception during account cleanup : %s' % e))
    try:
        for domain in self.cleanup_domains:
            domain.delete(self.api_client)
    except Exception as e:
        raise Exception(('Warning: Exception during domain cleanup : %s' % e))
    time.sleep(self.services['sleep'])
    try:
        for network in self.cleanup_networks:
            network.delete(self.api_client)
    except Exception as e:
        raise Exception(('Warning: Exception during network cleanup : %s' % e))
    return
