@attr(tags=['advancedsg'])
def test_04_createSharedNetwork_withoutSG(self):
    ' Test Shared Network creation without Security Group Service Provider in Network Offering'
    self.services['shared_network_offering']['specifyVlan'] = 'True'
    self.services['shared_network_offering']['specifyIpRanges'] = 'True'
    self.shared_network_offering = NetworkOffering.create(self.api_client, self.services['shared_network_offering'], conservemode=False)
    self.cleanup_nwOfferings.append(self.shared_network_offering)
    NetworkOffering.update(self.shared_network_offering, self.api_client, state='enabled')
    (physical_network, vlan) = get_free_vlan(self.api_client, self.zone.id)
    self.services['shared_network']['acltype'] = 'domain'
    self.services['shared_network']['vlan'] = vlan
    self.services['shared_network']['networkofferingid'] = self.shared_network_offering.id
    self.services['shared_network']['physicalnetworkid'] = physical_network.id
    self.setSharedNetworkParams('shared_network')
    try:
        self.shared_network = Network.create(self.api_client, self.services['shared_network'], networkofferingid=self.shared_network_offering.id, zoneid=self.zone.id)
        self.cleanup_networks.append(self.shared_network)
        self.fail('Network created without SecurityProvider , which is invalid')
    except Exception as e:
        self.debug(('Network creation failed because there is no SecurityProvider in the network offering.                        Exception: %s' % e))
    return
