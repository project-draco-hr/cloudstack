@unittest.skip('Skip - Failing - WIP')
@attr(tags=['advancedsg'])
def test_08_SharedNwSGAccountSpecific_samevlan_samesubnet(self):
    ' Test Account specific shared network creation with SG in multiple accounts\n            with same subnet and vlan'
    domain1 = Domain.create(self.api_client, services=self.services['domain'], parentdomainid=self.domain.id)
    self.debug(('Created domain: %s' % domain1.id))
    self.cleanup_domains.append(domain1)
    account1 = Account.create(self.api_client, self.services['account'], domainid=domain1.id)
    self.debug(('Created account %s under domain %s' % (account1.id, domain1.id)))
    self.cleanup_accounts.append(account1)
    domain2 = Domain.create(self.api_client, services=self.services['domain'], parentdomainid=self.domain.id)
    self.debug(('Created domain %s' % domain2.id))
    self.cleanup_domains.append(domain1)
    account2 = Account.create(self.api_client, self.services['account'], domainid=domain2.id)
    self.debug(('Created account %s under domain %s' % (account2.id, domain2.id)))
    self.cleanup_accounts.append(account1)
    self.services['shared_network_offering_sg']['specifyVlan'] = 'True'
    self.services['shared_network_offering_sg']['specifyIpRanges'] = 'True'
    (physical_network, vlan) = get_free_vlan(self.api_client, self.zone.id)
    self.services['shared_network_sg']['acltype'] = 'account'
    self.services['shared_network_sg']['vlan'] = vlan
    self.services['shared_network_sg']['networkofferingid'] = self.shared_network_offering_sg.id
    self.services['shared_network_sg']['physicalnetworkid'] = physical_network.id
    self.setSharedNetworkParams('shared_network_sg')
    self.debug(('Creating shared network in account 1: %s' % account1.name))
    self.shared_network_sg_account1 = Network.create(self.api_client, self.services['shared_network_sg'], accountid=account1.name, domainid=account1.domainid, networkofferingid=self.shared_network_offering_sg.id, zoneid=self.zone.id)
    self.debug(('Created shared network: %s' % self.shared_network_sg_account1.id))
    self.debug(('Creating shared network in account 2 with same subnet and vlan: %s' % account1.name))
    try:
        self.shared_network_sg_account2 = Network.create(self.api_client, self.services['shared_network_sg'], accountid=account2.name, domainid=account2.domainid, networkofferingid=self.shared_network_offering_sg.id, zoneid=self.zone.id)
    except Exception as e:
        self.fail(('Exception while creating account specific shared network with same subnet and vlan: %s' % e))
    self.debug(('Created shared network: %s' % self.shared_network_sg_account2.id))
    return
