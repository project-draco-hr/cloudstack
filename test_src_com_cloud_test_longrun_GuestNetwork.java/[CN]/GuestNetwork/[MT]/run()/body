{
  NDC.push("Following thread has started" + Thread.currentThread().getName());
  int retry=0;
  s_logger.info("The size of the array is " + this.virtualMachines.size());
  while (true) {
    try {
      if (retry > 0) {
        s_logger.info("Retry attempt : " + retry + " ...sleeping 120 seconds before next attempt");
        Thread.sleep(120000);
      }
      for (      VirtualMachine vm : this.virtualMachines) {
        s_logger.info("Attempting to SSH into linux host " + this.publicIp + " with retry attempt: "+ retry);
        Connection conn=new Connection(this.publicIp);
        conn.connect(null,600000,600000);
        s_logger.info("SSHed successfully into linux host " + this.publicIp);
        boolean isAuthenticated=conn.authenticateWithPassword("root","password");
        if (isAuthenticated == false) {
          s_logger.info("Authentication failed");
        }
        Session sess=conn.openSession();
        String fileName;
        Random ran=new Random();
        fileName=Math.abs(ran.nextInt()) + "-file";
        String copyCommand=new String("./scpScript " + vm.getPrivateIp() + " "+ fileName);
        s_logger.info("Executing " + copyCommand);
        sess.execCommand(copyCommand);
        Thread.sleep(120000);
        sess.close();
        sess=conn.openSession();
        String downloadCommand=new String("wget http://172.16.0.220/scripts/checkDiskSpace.sh; chmod +x *sh; ./checkDiskSpace.sh; rm -rf checkDiskSpace.sh");
        s_logger.info("Executing " + downloadCommand);
        sess.execCommand(downloadCommand);
        Thread.sleep(120000);
        sess.close();
        conn.close();
      }
    }
 catch (    Exception ex) {
      s_logger.error(ex);
      retry++;
      if (retry == retryNum) {
        s_logger.info("Performance Guest Network test failed with error " + ex.getMessage());
      }
    }
  }
}
