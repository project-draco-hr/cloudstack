{
  List<AccountVO> accounts=_accountDao.listAll();
  for (  AccountVO account : accounts) {
    Pair<List<? extends UsageVO>,Integer> usageRecords=_usageDao.getUsageRecordsPendingQuotaAggregation(account.getAccountId(),account.getDomainId());
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Usage entries size = " + usageRecords.second().intValue() + ", accId"+ account.getAccountId()+ ", domId"+ account.getDomainId());
    }
    List<QuotaUsageVO> quotaListForAccount=aggregatePendingQuotaRecordsForAccount(account,usageRecords);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Quota entries size = " + quotaListForAccount.size() + ", accId"+ account.getAccountId()+ ", domId"+ account.getDomainId());
    }
    processQuotaBalanceForAccount(account,quotaListForAccount);
  }
  return true;
}
