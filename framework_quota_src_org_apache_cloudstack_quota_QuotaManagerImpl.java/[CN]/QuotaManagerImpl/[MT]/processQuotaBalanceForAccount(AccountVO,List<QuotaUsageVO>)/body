{
  if (quotaListForAccount == null || quotaListForAccount.isEmpty()) {
    return;
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug(quotaListForAccount.get(0));
  }
  Date startDate=quotaListForAccount.get(0).getStartDate();
  Date endDate=quotaListForAccount.get(0).getEndDate();
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("processQuotaBalanceForAccount startDate " + startDate + " endDate="+ endDate);
    s_logger.debug("processQuotaBalanceForAccount last items startDate " + quotaListForAccount.get(quotaListForAccount.size() - 1).getStartDate() + " items endDate="+ quotaListForAccount.get(quotaListForAccount.size() - 1).getEndDate());
  }
  quotaListForAccount.add(new QuotaUsageVO());
  BigDecimal aggrUsage=new BigDecimal(0);
  List<QuotaBalanceVO> creditsReceived=null;
  QuotaUsageVO lastQuotaUsage=_quotaUsageDao.findLastQuotaUsageEntry(account.getAccountId(),account.getDomainId(),startDate);
  if (lastQuotaUsage == null) {
    aggrUsage=aggrUsage.add(aggregateCreditBetweenDates(account,new Date(0),startDate));
    QuotaBalanceVO firstBalance=new QuotaBalanceVO(account.getAccountId(),account.getDomainId(),aggrUsage,startDate);
    _quotaBalanceDao.saveQuotaBalance(firstBalance);
  }
 else {
    QuotaBalanceVO lastRealBalanceEntry=_quotaBalanceDao.findLastBalanceEntry(account.getAccountId(),account.getDomainId(),endDate);
    if (lastRealBalanceEntry != null) {
      aggrUsage=aggrUsage.add(lastRealBalanceEntry.getCreditBalance());
    }
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Last balance entry  " + lastRealBalanceEntry + " AggrUsage="+ aggrUsage);
    }
    aggrUsage=aggrUsage.add(aggregateCreditBetweenDates(account,lastRealBalanceEntry.getUpdatedOn(),endDate));
  }
  for (  QuotaUsageVO entry : quotaListForAccount) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Usage entry found " + entry);
    }
    if (entry.getQuotaUsed().compareTo(BigDecimal.ZERO) == 0) {
      aggrUsage=aggrUsage.add(aggregateCreditBetweenDates(account,entry.getStartDate(),entry.getEndDate()));
      continue;
    }
    if (startDate.compareTo(entry.getStartDate()) != 0) {
      saveQuotaBalance(account,aggrUsage,endDate);
      aggrUsage=new BigDecimal(0);
      startDate=entry.getStartDate();
      endDate=entry.getEndDate();
      QuotaBalanceVO lastRealBalanceEntry=_quotaBalanceDao.findLastBalanceEntry(account.getAccountId(),account.getDomainId(),endDate);
      Date lastBalanceDate=new Date(0);
      if (lastRealBalanceEntry != null) {
        lastBalanceDate=lastRealBalanceEntry.getUpdatedOn();
        aggrUsage=aggrUsage.add(lastRealBalanceEntry.getCreditBalance());
      }
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Getting Balance" + account.getAccountName() + ",Balance entry="+ aggrUsage+ " on Date="+ endDate);
      }
      aggrUsage=aggrUsage.add(aggregateCreditBetweenDates(account,lastBalanceDate,endDate));
    }
    aggrUsage=aggrUsage.subtract(entry.getQuotaUsed());
  }
  saveQuotaBalance(account,aggrUsage,endDate);
  saveQuotaAccount(account,aggrUsage,endDate);
}
