{
  if (quotaListForAccount == null || quotaListForAccount.isEmpty()) {
    return;
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug(quotaListForAccount.get(0));
  }
  Date startDate=quotaListForAccount.get(0).getStartDate();
  Date endDate=quotaListForAccount.get(0).getEndDate();
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("processQuotaBalanceForAccount startDate " + startDate + " endDate="+ endDate);
    s_logger.debug("processQuotaBalanceForAccount last items startDate " + quotaListForAccount.get(quotaListForAccount.size() - 1).getStartDate() + " items endDate="+ quotaListForAccount.get(quotaListForAccount.size() - 1).getEndDate());
  }
  quotaListForAccount.add(new QuotaUsageVO());
  BigDecimal aggrUsage=new BigDecimal(0);
  List<QuotaBalanceVO> creditsReceived=null;
  QuotaUsageVO lastQuotaUsage=_quotaUsageDao.findLastQuotaUsageEntry(account.getAccountId(),account.getDomainId(),startDate);
  if (lastQuotaUsage == null) {
    creditsReceived=_quotaBalanceDao.findCreditBalance(account.getAccountId(),account.getDomainId(),new Date(0),startDate);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Credit entries count " + creditsReceived.size() + " on Before Date="+ startDate);
    }
    if (creditsReceived != null) {
      for (      QuotaBalanceVO credit : creditsReceived) {
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Credit entry found " + credit);
          s_logger.debug("Total = " + aggrUsage);
        }
        aggrUsage=aggrUsage.add(credit.getCreditBalance());
      }
    }
    QuotaBalanceVO firstBalance=new QuotaBalanceVO(account.getAccountId(),account.getDomainId(),aggrUsage,startDate);
    _quotaBalanceDao.saveQuotaBalance(firstBalance);
  }
 else {
    QuotaBalanceVO lastRealBalanceEntry=_quotaBalanceDao.findLastBalanceEntry(account.getAccountId(),account.getDomainId(),endDate);
    aggrUsage=aggrUsage.add(lastRealBalanceEntry.getCreditBalance());
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Last balance entry  " + lastRealBalanceEntry + " AggrUsage="+ aggrUsage);
    }
  }
  for (  QuotaUsageVO entry : quotaListForAccount) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Usage entry found " + entry);
    }
    if (entry.getQuotaUsed().compareTo(BigDecimal.ZERO) == 0) {
      creditsReceived=_quotaBalanceDao.findCreditBalance(account.getAccountId(),account.getDomainId(),entry.getStartDate(),entry.getEndDate());
      if (creditsReceived != null) {
        for (        QuotaBalanceVO credit : creditsReceived) {
          if (s_logger.isDebugEnabled()) {
            s_logger.debug("Credit entry found " + credit);
            s_logger.debug("Total = " + aggrUsage);
          }
          aggrUsage=aggrUsage.add(credit.getCreditBalance());
        }
      }
      continue;
    }
    if (startDate.compareTo(entry.getStartDate()) != 0) {
      QuotaBalanceVO newBalance=new QuotaBalanceVO(account.getAccountId(),account.getDomainId(),aggrUsage,endDate);
      _quotaBalanceDao.saveQuotaBalance(newBalance);
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Saving Balance" + newBalance);
      }
      aggrUsage=new BigDecimal(0);
      startDate=entry.getStartDate();
      endDate=entry.getEndDate();
      QuotaBalanceVO lastRealBalanceEntry=_quotaBalanceDao.findLastBalanceEntry(account.getAccountId(),account.getDomainId(),endDate);
      Date lastBalanceDate=new Date(0);
      if (lastRealBalanceEntry != null) {
        lastBalanceDate=lastRealBalanceEntry.getUpdatedOn();
        aggrUsage=aggrUsage.add(lastRealBalanceEntry.getCreditBalance());
      }
      creditsReceived=_quotaBalanceDao.findCreditBalance(account.getAccountId(),account.getDomainId(),lastBalanceDate,endDate);
      if (creditsReceived != null) {
        for (        QuotaBalanceVO credit : creditsReceived) {
          aggrUsage=aggrUsage.add(credit.getCreditBalance());
        }
      }
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Getting Balance" + account.getAccountName() + ",Balance entry="+ aggrUsage+ " on Date="+ endDate);
      }
    }
    aggrUsage=aggrUsage.subtract(entry.getQuotaUsed());
  }
  QuotaBalanceVO newBalance=new QuotaBalanceVO(account.getAccountId(),account.getDomainId(),aggrUsage,endDate);
  _quotaBalanceDao.saveQuotaBalance(newBalance);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Saving Balance" + newBalance);
  }
  QuotaAccountVO quota_account=_quotaAcc.findByIdQuotaAccount(account.getAccountId());
  if (quota_account == null) {
    quota_account=new QuotaAccountVO(account.getAccountId());
    quota_account.setQuotaBalance(aggrUsage);
    quota_account.setQuotaBalanceDate(endDate);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug(quota_account);
    }
    _quotaAcc.persistQuotaAccount(quota_account);
  }
 else {
    quota_account.setQuotaBalance(aggrUsage);
    quota_account.setQuotaBalanceDate(endDate);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug(quota_account);
    }
    _quotaAcc.updateQuotaAccount(account.getAccountId(),quota_account);
  }
}
