{
  final SearchCriteria<SnapshotScheduleVO> sc=_snapshotScheduleDao.createSearchCriteria();
  sc.addAnd("asyncJobId",SearchCriteria.Op.NNULL);
  final List<SnapshotScheduleVO> snapshotSchedules=_snapshotScheduleDao.search(sc,null);
  for (  final SnapshotScheduleVO snapshotSchedule : snapshotSchedules) {
    final Long asyncJobId=snapshotSchedule.getAsyncJobId();
    final AsyncJobVO asyncJob=_asyncJobDao.findById(asyncJobId);
switch (asyncJob.getStatus()) {
case SUCCEEDED:
      scheduleNextSnapshotJob(snapshotSchedule);
    break;
case FAILED:
  final Long snapshotId=snapshotSchedule.getSnapshotId();
if (snapshotId == null) {
  scheduleNextSnapshotJob(snapshotSchedule);
}
 else {
  final SnapshotVO snapshot=_snapshotDao.findById(snapshotId);
  if (snapshot == null || snapshot.getRemoved() != null) {
    scheduleNextSnapshotJob(snapshotSchedule);
  }
 else {
    scheduleNextSnapshotJob(snapshotSchedule);
  }
}
break;
case IN_PROGRESS:
break;
}
}
}
