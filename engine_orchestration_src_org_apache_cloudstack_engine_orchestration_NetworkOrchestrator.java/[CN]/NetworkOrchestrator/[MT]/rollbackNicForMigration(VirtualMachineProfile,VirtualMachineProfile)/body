{
  for (  final NicProfile nicDst : dst.getNics()) {
    final NetworkVO network=_networksDao.findById(nicDst.getNetworkId());
    final NetworkGuru guru=AdapterBase.getAdapterByName(networkGurus,network.getGuruName());
    final NicProfile nicSrc=findNicProfileById(src,nicDst.getId());
    final ReservationContext src_context=new ReservationContextImpl(nicSrc.getReservationId(),null,null);
    final ReservationContext dst_context=new ReservationContextImpl(nicDst.getReservationId(),null,null);
    if (guru instanceof NetworkMigrationResponder) {
      ((NetworkMigrationResponder)guru).rollbackMigration(nicDst,network,dst,src_context,dst_context);
    }
    final List<Provider> providersToImplement=getNetworkProviders(network.getId());
    for (    final NetworkElement element : networkElements) {
      if (providersToImplement.contains(element.getProvider())) {
        if (!_networkModel.isProviderEnabledInPhysicalNetwork(_networkModel.getPhysicalNetworkId(network),element.getProvider().getName())) {
          throw new CloudRuntimeException("Service provider " + element.getProvider().getName() + " either doesn't exist or is not enabled in physical network id: "+ network.getPhysicalNetworkId());
        }
        if (element instanceof NetworkMigrationResponder) {
          ((NetworkMigrationResponder)element).rollbackMigration(nicDst,network,dst,src_context,dst_context);
        }
      }
    }
  }
}
