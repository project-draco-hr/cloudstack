{
  final List<NicVO> nics=_nicDao.listByVmId(vmProfile.getId());
  Collections.sort(nics,new Comparator<NicVO>(){
    @Override public int compare(    final NicVO nic1,    final NicVO nic2){
      final boolean isDefault1=nic1.isDefaultNic();
      final boolean isDefault2=nic2.isDefaultNic();
      return isDefault1 ^ isDefault2 ? isDefault1 ^ true ? 1 : -1 : 0;
    }
  }
);
  for (  final NicVO nic : nics) {
    final Pair<NetworkGuru,NetworkVO> implemented=implementNetwork(nic.getNetworkId(),dest,context,vmProfile.getVirtualMachine().getType() == Type.DomainRouter);
    if (implemented == null || implemented.first() == null) {
      s_logger.warn("Failed to implement network id=" + nic.getNetworkId() + " as a part of preparing nic id="+ nic.getId());
      throw new CloudRuntimeException("Failed to implement network id=" + nic.getNetworkId() + " as a part preparing nic id="+ nic.getId());
    }
    final NetworkVO network=implemented.second();
    final NicProfile profile=prepareNic(vmProfile,dest,context,nic.getId(),network);
    vmProfile.addNic(profile);
  }
}
