{
  List<NicVO> nics=_nicDao.listByVmId(vmProfile.getId());
  Collections.sort(nics,new Comparator<NicVO>(){
    @Override public int compare(    NicVO nic1,    NicVO nic2){
      boolean isDefault1=nic1.isDefaultNic();
      boolean isDefault2=nic2.isDefaultNic();
      return (isDefault1 ^ isDefault2) ? ((isDefault1 ^ true) ? 1 : -1) : 0;
    }
  }
);
  for (  NicVO nic : nics) {
    Pair<NetworkGuru,NetworkVO> implemented=null;
    if (vmProfile.getVirtualMachine().getType() != Type.DomainRouter) {
      implemented=implementNetwork(nic.getNetworkId(),dest,context);
    }
 else {
      NetworkVO network=_networksDao.findById(nic.getNetworkId());
      NetworkGuru guru=AdapterBase.getAdapterByName(networkGurus,network.getGuruName());
      implemented=new Pair<NetworkGuru,NetworkVO>(guru,network);
    }
    if (implemented == null || implemented.first() == null) {
      s_logger.warn("Failed to implement network id=" + nic.getNetworkId() + " as a part of preparing nic id="+ nic.getId());
      throw new CloudRuntimeException("Failed to implement network id=" + nic.getNetworkId() + " as a part preparing nic id="+ nic.getId());
    }
    NetworkVO network=implemented.second();
    NicProfile profile=prepareNic(vmProfile,dest,context,nic.getId(),network);
    vmProfile.addNic(profile);
  }
}
