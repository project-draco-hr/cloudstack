{
  boolean result=false;
  NetworkVO network=_networksDao.findById(networkId);
  if (network.getState() == Network.State.Allocated) {
    s_logger.debug("Network is already shutdown: " + network);
    return true;
  }
  if (network.getState() != Network.State.Implemented && network.getState() != Network.State.Shutdown) {
    s_logger.debug("Network is not implemented: " + network);
    return false;
  }
  try {
    network=_networksDao.acquireInLockTable(networkId,NetworkLockTimeout.value());
    if (network == null) {
      s_logger.warn("Unable to acquire lock for the network " + network + " as a part of network shutdown");
      return false;
    }
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Lock is acquired for network " + network + " as a part of network shutdown");
    }
    if (network.getState() == Network.State.Allocated) {
      s_logger.debug("Network is already shutdown: " + network);
      return true;
    }
    if (network.getState() != Network.State.Implemented && network.getState() != Network.State.Shutdown) {
      s_logger.debug("Network is not implemented: " + network);
      return false;
    }
    if (isSharedNetworkWithServices(network)) {
      network.setState(Network.State.Shutdown);
      _networksDao.update(network.getId(),network);
    }
 else {
      try {
        stateTransitTo(network,Event.DestroyNetwork);
      }
 catch (      NoTransitionException e) {
        network.setState(Network.State.Shutdown);
        _networksDao.update(network.getId(),network);
      }
    }
    boolean success=shutdownNetworkElementsAndResources(context,cleanupElements,network);
    Transaction txn=Transaction.currentTxn();
    txn.start();
    if (success) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Network id=" + networkId + " is shutdown successfully, cleaning up corresponding resources now.");
      }
      NetworkGuru guru=AdapterBase.getAdapterByName(_networkGurus,network.getGuruName());
      NetworkProfile profile=convertNetworkToNetworkProfile(network.getId());
      guru.shutdown(profile,_networkOfferingDao.findById(network.getNetworkOfferingId()));
      applyProfileToNetwork(network,profile);
      DataCenterVO zone=_dcDao.findById(network.getDataCenterId());
      if (isSharedNetworkOfferingWithServices(network.getNetworkOfferingId()) && (zone.getNetworkType() == NetworkType.Advanced)) {
        network.setState(Network.State.Setup);
      }
 else {
        try {
          stateTransitTo(network,Event.OperationSucceeded);
        }
 catch (        NoTransitionException e) {
          network.setState(Network.State.Allocated);
          network.setRestartRequired(false);
        }
      }
      _networksDao.update(network.getId(),network);
      _networksDao.clearCheckForGc(networkId);
      result=true;
    }
 else {
      try {
        stateTransitTo(network,Event.OperationFailed);
      }
 catch (      NoTransitionException e) {
        network.setState(Network.State.Implemented);
        _networksDao.update(network.getId(),network);
      }
      result=false;
    }
    txn.commit();
    return result;
  }
  finally {
    if (network != null) {
      _networksDao.releaseFromLockTable(network.getId());
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Lock is released for network " + network + " as a part of network shutdown");
      }
    }
  }
}
