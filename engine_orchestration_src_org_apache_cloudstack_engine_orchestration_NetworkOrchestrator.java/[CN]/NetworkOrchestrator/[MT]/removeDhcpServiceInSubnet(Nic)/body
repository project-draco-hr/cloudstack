{
  final Network network=_networksDao.findById(nic.getNetworkId());
  final DhcpServiceProvider dhcpServiceProvider=getDhcpServiceProvider(network);
  try {
    final NicIpAliasVO ipAlias=_nicIpAliasDao.findByGatewayAndNetworkIdAndState(nic.getIPv4Gateway(),network.getId(),NicIpAlias.State.active);
    if (ipAlias != null) {
      ipAlias.setState(NicIpAlias.State.revoked);
      Transaction.execute(new TransactionCallbackNoReturn(){
        @Override public void doInTransactionWithoutResult(        final TransactionStatus status){
          _nicIpAliasDao.update(ipAlias.getId(),ipAlias);
          final IPAddressVO aliasIpaddressVo=_publicIpAddressDao.findByIpAndSourceNetworkId(ipAlias.getNetworkId(),ipAlias.getIp4Address());
          _publicIpAddressDao.unassignIpAddress(aliasIpaddressVo.getId());
        }
      }
);
      if (!dhcpServiceProvider.removeDhcpSupportForSubnet(network)) {
        s_logger.warn("Failed to remove the ip alias on the router, marking it as removed in db and freed the allocated ip " + ipAlias.getIp4Address());
      }
    }
  }
 catch (  final ResourceUnavailableException e) {
    s_logger.info("Unable to delete the ip alias due to unable to contact the virtualrouter.");
  }
}
