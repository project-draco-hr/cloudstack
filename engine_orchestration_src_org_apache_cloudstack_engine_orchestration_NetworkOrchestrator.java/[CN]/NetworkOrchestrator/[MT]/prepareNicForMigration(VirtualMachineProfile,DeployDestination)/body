{
  List<NicVO> nics=_nicDao.listByVmId(vm.getId());
  ReservationContext context=new ReservationContextImpl(UUID.randomUUID().toString(),null,null);
  for (  NicVO nic : nics) {
    NetworkVO network=_networksDao.findById(nic.getNetworkId());
    Integer networkRate=_networkModel.getNetworkRate(network.getId(),vm.getId());
    NetworkGuru guru=AdapterBase.getAdapterByName(networkGurus,network.getGuruName());
    NicProfile profile=new NicProfile(nic,network,nic.getBroadcastUri(),nic.getIsolationUri(),networkRate,_networkModel.isSecurityGroupSupportedInNetwork(network),_networkModel.getNetworkTag(vm.getHypervisorType(),network));
    if (guru instanceof NetworkMigrationResponder) {
      if (!((NetworkMigrationResponder)guru).prepareMigration(profile,network,vm,dest,context)) {
        s_logger.error("NetworkGuru " + guru + " prepareForMigration failed.");
      }
    }
    List<Provider> providersToImplement=getNetworkProviders(network.getId());
    for (    NetworkElement element : networkElements) {
      if (providersToImplement.contains(element.getProvider())) {
        if (!_networkModel.isProviderEnabledInPhysicalNetwork(_networkModel.getPhysicalNetworkId(network),element.getProvider().getName())) {
          throw new CloudRuntimeException("Service provider " + element.getProvider().getName() + " either doesn't exist or is not enabled in physical network id: "+ network.getPhysicalNetworkId());
        }
        if (element instanceof NetworkMigrationResponder) {
          if (!((NetworkMigrationResponder)element).prepareMigration(profile,network,vm,dest,context)) {
            s_logger.error("NetworkElement " + element + " prepareForMigration failed.");
          }
        }
      }
    }
    guru.updateNicProfile(profile,network);
    vm.addNic(profile);
  }
}
