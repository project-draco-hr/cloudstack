@attr(tags=['advanced', 'selfservice'])
def test_03_delete_vm(self):
    "Test delete VM belonging to project\n\n        # Validate the following\n        # 1. Create VM with custom disk offering in a project and check\n        #    initial primary storage count\n        # 2. Delete VM and verify that it's expunged\n        # 3. Verify that primary storage count of project equals 0"
    try:
        self.vm.delete(self.apiclient)
    except Exception as e:
        self.fail(('Failed to detroy VM: %s' % e))
    self.assertTrue(isVmExpunged(self.apiclient, self.vm.id, self.project.id), 'VM not expunged')
    totalallottedtime = timeout = 600
    while (timeout >= 0):
        volumes = Volume.list(self.apiclient, projectid=self.project.id, listall=True)
        if (volumes is None):
            break
        if (timeout == 0):
            self.fail(('Volume attached to VM not cleaned up even                        after %s seconds' % totalallottedtime))
        timeout -= 60
        time.sleep(60)
    expectedCount = 0
    response = matchResourceCount(self.apiclient, expectedCount, RESOURCE_PRIMARY_STORAGE, projectid=self.project.id)
    self.assertEqual(response[0], PASS, response[1])
    return
