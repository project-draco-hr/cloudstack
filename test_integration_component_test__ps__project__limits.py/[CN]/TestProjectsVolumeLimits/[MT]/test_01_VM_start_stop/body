@attr(tags=['advanced'], required_hardware='false')
def test_01_VM_start_stop(self):
    'Test project primary storage count with VM stop/start operation\n\n        # Validate the following\n        # 1. Create VM with custom disk offering in a project and check\n        #    initial primary storage count\n        # 2. Stop the VM and verify primary storage count remains the same\n        # 3. Start the VM and verify priamay storage count remains the same\n        '
    try:
        self.vm.stop(self.apiclient)
    except Exception as e:
        self.fail(('Faield to stop VM: %s' % e))
    expectedCount = self.initialResourceCount
    response = matchResourceCount(self.apiclient, expectedCount, RESOURCE_PRIMARY_STORAGE, projectid=self.project.id)
    self.assertEqual(response[0], PASS, response[1])
    try:
        self.vm.start(self.apiclient)
    except Exception as e:
        self.fail(('Failed to start VM: %s' % e))
    response = matchResourceCount(self.apiclient, expectedCount, RESOURCE_PRIMARY_STORAGE, projectid=self.project.id)
    self.assertEqual(response[0], PASS, response[1])
    return
