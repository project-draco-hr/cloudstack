{
  _usageEventDao=new MockUsageEventDao();
  UsageEventUtils utils=new UsageEventUtils();
  List<String> usageUtilsFields=new ArrayList<String>();
  usageUtilsFields.add("usageEventDao");
  usageUtilsFields.add("accountDao");
  usageUtilsFields.add("dcDao");
  usageUtilsFields.add("configDao");
  for (  String fieldName : usageUtilsFields) {
    try {
      Field f=UsageEventUtils.class.getDeclaredField(fieldName);
      f.setAccessible(true);
      Field staticField=UsageEventUtils.class.getDeclaredField("s_" + fieldName);
      staticField.setAccessible(true);
      oldFields.put(f.getName(),staticField.get(null));
      f.set(utils,this.getClass().getSuperclass().getDeclaredField("_" + fieldName).get(this));
    }
 catch (    IllegalArgumentException|IllegalAccessException|NoSuchFieldException|SecurityException e) {
      e.printStackTrace();
    }
  }
  Method method;
  method=UsageEventUtils.class.getDeclaredMethod("init");
  method.setAccessible(true);
  method.invoke(utils);
  return utils;
}
