{
  List<StoragePool> suitablePools=new ArrayList<StoragePool>();
  long dcId=plan.getDataCenterId();
  Long podId=plan.getPodId();
  Long clusterId=plan.getClusterId();
  if (podId == null) {
    return null;
  }
  logger.debug("Looking for pools in dc: " + dcId + "  pod:"+ podId+ "  cluster:"+ clusterId);
  List<StoragePoolVO> pools=_storagePoolDao.listBy(dcId,podId,clusterId,ScopeType.CLUSTER);
  if (pools.size() == 0) {
    if (logger.isDebugEnabled()) {
      logger.debug("No storage pools available for allocation, returning");
    }
    return suitablePools;
  }
  Collections.shuffle(pools);
  if (logger.isDebugEnabled()) {
    logger.debug("RandomStoragePoolAllocator has " + pools.size() + " pools to check for allocation");
  }
  for (  StoragePoolVO pool : pools) {
    if (suitablePools.size() == returnUpTo) {
      break;
    }
    StoragePool pol=(StoragePool)this.dataStoreMgr.getPrimaryDataStore(pool.getId());
    if (filter(avoid,pol,dskCh,plan)) {
      suitablePools.add(pol);
    }
  }
  if (logger.isDebugEnabled()) {
    logger.debug("RandomStoragePoolAllocator returning " + suitablePools.size() + " suitable storage pools");
  }
  return suitablePools;
}
