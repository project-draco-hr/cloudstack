{
  List<VolumeVO> volumes=_volsDao.findByAccount(accountId);
  boolean success=true;
  for (  VolumeVO volume : volumes) {
    if (volume.getPoolId() == null) {
      continue;
    }
    Long volumeId=volume.getId();
    Long dcId=volume.getDataCenterId();
    if (_snapshotDao.listByVolumeIdIncludingRemoved(volumeId).isEmpty()) {
      continue;
    }
    List<HostVO> ssHosts=_hostDao.listSecondaryStorageHosts(dcId);
    SwiftTO swift=getSwiftTO(null);
    if (swift == null) {
      for (      HostVO ssHost : ssHosts) {
        DeleteSnapshotBackupCommand cmd=new DeleteSnapshotBackupCommand(null,ssHost.getStorageUrl(),dcId,accountId,volumeId,"",true);
        Answer answer=null;
        try {
          answer=_agentMgr.sendToSSVM(dcId,cmd);
        }
 catch (        Exception e) {
          s_logger.warn("Failed to delete all snapshot for volume " + volumeId + " on secondary storage "+ ssHost.getStorageUrl());
        }
        if ((answer != null) && answer.getResult()) {
          s_logger.debug("Deleted all snapshots for volume: " + volumeId + " under account: "+ accountId);
        }
 else {
          success=false;
          if (answer != null) {
            s_logger.error(answer.getDetails());
          }
        }
      }
    }
 else {
      DeleteSnapshotBackupCommand cmd=new DeleteSnapshotBackupCommand(swift,"",dcId,accountId,volumeId,"",true);
      Answer answer=null;
      try {
        answer=_agentMgr.sendToSSVM(dcId,cmd);
      }
 catch (      Exception e) {
        s_logger.warn("Failed to delete all snapshot for volume " + volumeId + " on swift");
      }
      if ((answer != null) && answer.getResult()) {
        s_logger.debug("Deleted all snapshots for volume: " + volumeId + " under account: "+ accountId);
      }
 else {
        success=false;
        if (answer != null) {
          s_logger.error(answer.getDetails());
        }
      }
    }
    List<SnapshotVO> snapshots=listSnapsforVolume(volumeId);
    for (    SnapshotVO snapshot : snapshots) {
      if (_snapshotDao.expunge(snapshot.getId())) {
        if (snapshot.getType() == Type.MANUAL) {
          _resourceLimitMgr.decrementResourceCount(accountId,ResourceType.snapshot);
        }
        UsageEventVO usageEvent=new UsageEventVO(EventTypes.EVENT_SNAPSHOT_DELETE,snapshot.getAccountId(),volume.getDataCenterId(),snapshot.getId(),snapshot.getName(),null,null,volume.getSize());
        _usageEventDao.persist(usageEvent);
      }
    }
  }
  return success;
}
