{
  List<VolumeVO> volumes=_volsDao.findByAccount(accountId);
  boolean success=true;
  for (  VolumeVO volume : volumes) {
    if (volume.getPoolId() == null) {
      continue;
    }
    Long volumeId=volume.getId();
    Long dcId=volume.getDataCenterId();
    String secondaryStoragePoolURL=_storageMgr.getSecondaryStorageURL(dcId);
    String primaryStoragePoolNameLabel=_storageMgr.getPrimaryStorageNameLabel(volume);
    if (_snapshotDao.listByVolumeIdIncludingRemoved(volumeId).isEmpty()) {
      continue;
    }
    DeleteSnapshotsDirCommand cmd=new DeleteSnapshotsDirCommand(primaryStoragePoolNameLabel,secondaryStoragePoolURL,dcId,accountId,volumeId,volume.getPath());
    String basicErrMsg="Failed to destroy snapshotsDir for: " + volume.getId() + " under account: "+ accountId;
    Answer answer=null;
    Long poolId=volume.getPoolId();
    if (poolId != null) {
      answer=_storageMgr.sendToHostsOnStoragePool(poolId,cmd,basicErrMsg,1,_pauseInterval,_shouldBeSnapshotCapable,volume.getInstanceId());
    }
 else {
      s_logger.info("Pool id for volume id: " + volumeId + " belonging to account id: "+ accountId+ " is null. Assuming the snapshotsDir for the account has already been deleted");
    }
    if (success) {
      success=(answer != null) && answer.getResult();
      if (success) {
        s_logger.debug("Deleted snapshotsDir for volume: " + volumeId + " under account: "+ accountId);
      }
 else       if (answer != null) {
        s_logger.error(answer.getDetails());
      }
    }
    List<SnapshotVO> snapshots=listSnapsforVolume(volumeId);
    for (    SnapshotVO snapshot : snapshots) {
      if (_snapshotDao.expunge(snapshot.getId())) {
        _accountMgr.decrementResourceCount(accountId,ResourceType.snapshot);
        EventUtils.saveEvent(User.UID_SYSTEM,snapshot.getAccountId(),EventTypes.EVENT_SNAPSHOT_DELETE,"Successfully deleted snapshot " + snapshot.getId() + " for volumeId: "+ snapshot.getVolumeId());
        UsageEventVO usageEvent=new UsageEventVO(EventTypes.EVENT_SNAPSHOT_DELETE,snapshot.getAccountId(),volume.getDataCenterId(),snapshot.getId(),snapshot.getName(),null,null,volume.getSize());
        _usageEventDao.persist(usageEvent);
      }
    }
  }
  return success;
}
