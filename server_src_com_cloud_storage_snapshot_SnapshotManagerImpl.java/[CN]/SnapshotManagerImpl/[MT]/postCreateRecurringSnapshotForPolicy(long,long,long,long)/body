{
  List<SnapshotVO> snaps=listSnapsforVolumeType(volumeId,Type.RECURRING.name());
  SnapshotPolicyVO policy=_snapshotPolicyDao.findById(policyId);
  while (snaps.size() > policy.getMaxSnaps() && snaps.size() > 1) {
    SnapshotVO oldestSnapshot=snaps.get(0);
    long oldSnapId=oldestSnapshot.getId();
    s_logger.debug("Max snaps: " + policy.getMaxSnaps() + " exceeded for snapshot policy with Id: "+ policyId+ ". Deleting oldest snapshot: "+ oldSnapId);
    long startEventId=EventUtils.saveStartedEvent(userId,oldestSnapshot.getAccountId(),EventTypes.EVENT_SNAPSHOT_DELETE,"Deleting snapshot with Id:" + oldSnapId);
    if (deleteSnapshotInternal(oldSnapId,policyId)) {
      EventUtils.saveEvent(userId,oldestSnapshot.getAccountId(),EventVO.LEVEL_INFO,EventTypes.EVENT_SNAPSHOT_DELETE,"Deleted snapshot with Id:" + oldSnapId,startEventId);
    }
 else {
      EventUtils.saveEvent(userId,oldestSnapshot.getAccountId(),EventVO.LEVEL_ERROR,EventTypes.EVENT_SNAPSHOT_DELETE,"Failed to delete snapshot with Id:" + oldSnapId,startEventId);
    }
    snaps.remove(oldestSnapshot);
  }
}
