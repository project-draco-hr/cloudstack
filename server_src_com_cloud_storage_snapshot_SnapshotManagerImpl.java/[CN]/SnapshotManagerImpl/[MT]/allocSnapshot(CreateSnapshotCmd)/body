{
  Long volumeId=cmd.getVolumeId();
  Long policyId=cmd.getPolicyId();
  VolumeVO volume=_volsDao.findById(volumeId);
  if (volume == null) {
    throw new CloudRuntimeException("Creating snapshot failed due to volume:" + volumeId + " doesn't exist");
  }
  if (volume.getStatus() != AsyncInstanceCreateStatus.Created) {
    throw new InvalidParameterValueException("VolumeId: " + volumeId + " is not in Created state but "+ volume.getStatus()+ ". Cannot take snapshot.");
  }
  StoragePoolVO storagePoolVO=_storagePoolDao.findById(volume.getPoolId());
  if (storagePoolVO == null) {
    throw new InvalidParameterValueException("VolumeId: " + volumeId + " please attach this volume to a VM before create snapshot for it");
  }
  Account owner=_accountMgr.getAccount(volume.getAccountId());
  if (_accountMgr.resourceLimitExceeded(owner,ResourceType.snapshot)) {
    ResourceAllocationException rae=new ResourceAllocationException("Maximum number of snapshots for account: " + owner.getAccountName() + " has been exceeded.");
    rae.setResourceType("snapshot");
    throw rae;
  }
  String timeString=DateUtil.getDateDisplayString(DateUtil.GMT_TIMEZONE,new Date(),DateUtil.YYYYMMDD_FORMAT);
  VMInstanceVO vmInstance=_vmDao.findById(volume.getInstanceId());
  String vmDisplayName="detached";
  if (vmInstance != null) {
    vmDisplayName=vmInstance.getName();
  }
  String snapshotName=vmDisplayName + "_" + volume.getName()+ "_"+ timeString;
  Type snapshotType=getSnapshotType(policyId);
  HypervisorType hypervisorType=this._volsDao.getHypervisorType(volumeId);
  SnapshotVO snapshotVO=new SnapshotVO(volume.getDataCenterId(),volume.getAccountId(),volume.getDomainId(),volume.getId(),volume.getDiskOfferingId(),null,snapshotName,(short)snapshotType.ordinal(),snapshotType.name(),volume.getSize(),hypervisorType);
  SnapshotVO snapshot=_snapshotDao.persist(snapshotVO);
  if (snapshot != null) {
    _accountMgr.incrementResourceCount(volume.getAccountId(),ResourceType.snapshot);
  }
  return snapshot;
}
