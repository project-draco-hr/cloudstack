{
  CreateSnapshotPayload payload=(CreateSnapshotPayload)volume.getpayload();
  Long snapshotId=payload.getSnapshotId();
  Account snapshotOwner=payload.getAccount();
  SnapshotInfo snapshot=snapshotFactory.getSnapshot(snapshotId,volume.getDataStore());
  boolean processed=false;
  StrategyPriority.sortStrategies(snapshotStrategies,snapshot);
  try {
    for (    SnapshotStrategy strategy : snapshotStrategies) {
      if (strategy.canHandle(snapshot) != Priority.CANT_HANDLE) {
        processed=true;
        snapshot=strategy.takeSnapshot(snapshot);
        break;
      }
    }
    if (!processed) {
      throw new CloudRuntimeException("Can't find snapshot strategy to deal with snapshot:" + snapshotId);
    }
    try {
      postCreateSnapshot(volume.getId(),snapshotId,payload.getSnapshotPolicyId());
      UsageEventUtils.publishUsageEvent(EventTypes.EVENT_SNAPSHOT_CREATE,snapshot.getAccountId(),snapshot.getDataCenterId(),snapshotId,snapshot.getName(),null,null,volume.getSize(),snapshot.getClass().getName(),snapshot.getUuid());
      _resourceLimitMgr.incrementResourceCount(snapshotOwner.getId(),ResourceType.snapshot);
    }
 catch (    Exception e) {
      s_logger.debug("post process snapshot failed",e);
    }
  }
 catch (  Exception e) {
    s_logger.debug("Failed to create snapshot",e);
    if (backup) {
      _resourceLimitMgr.decrementResourceCount(snapshotOwner.getId(),ResourceType.secondary_storage,new Long(volume.getSize()));
    }
 else {
      _resourceLimitMgr.decrementResourceCount(snapshotOwner.getId(),ResourceType.primary_storage,new Long(volume.getSize()));
    }
    throw new CloudRuntimeException("Failed to create snapshot",e);
  }
  return snapshot;
}
