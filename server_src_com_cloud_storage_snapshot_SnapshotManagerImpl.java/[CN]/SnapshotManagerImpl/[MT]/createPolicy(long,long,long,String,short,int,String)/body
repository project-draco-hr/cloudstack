{
  SnapshotPolicyVO policy=new SnapshotPolicyVO(volumeId,schedule,timezone,interval,maxSnaps);
  EventVO event=new EventVO();
  try {
    policy=_snapshotPolicyDao.persist(policy);
    event.setType(EventTypes.EVENT_SNAPSHOT_POLICY_CREATE);
    event.setDescription("Successfully created snapshot policy with Id: " + policy.getId());
  }
 catch (  EntityExistsException e) {
    policy=_snapshotPolicyDao.findOneByVolume(volumeId);
    try {
      policy=_snapshotPolicyDao.acquire(policy.getId());
      policy.setSchedule(schedule);
      policy.setTimezone(timezone);
      policy.setInterval(interval);
      policy.setMaxSnaps(maxSnaps);
      policy.setActive(true);
      _snapshotPolicyDao.update(policy.getId(),policy);
    }
  finally {
      if (policy != null) {
        _snapshotPolicyDao.release(policy.getId());
      }
    }
    event.setType(EventTypes.EVENT_SNAPSHOT_POLICY_UPDATE);
    event.setDescription("Successfully updated snapshot policy with Id: " + policy.getId());
  }
  event.setAccountId(accountId);
  event.setUserId(userId);
  event.setLevel(EventVO.LEVEL_INFO);
  _eventDao.persist(event);
  _snapSchedMgr.scheduleNextSnapshotJob(policy);
  return policy;
}
