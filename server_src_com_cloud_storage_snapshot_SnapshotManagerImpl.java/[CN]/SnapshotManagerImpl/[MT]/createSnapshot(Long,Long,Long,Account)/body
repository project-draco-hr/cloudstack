{
  VolumeInfo volume=this.volFactory.getVolume(volumeId);
  if (volume == null) {
    throw new InvalidParameterValueException("No such volume exist");
  }
  if (volume.getState() != Volume.State.Ready) {
    throw new InvalidParameterValueException("Volume is not in ready state");
  }
  SnapshotInfo snapshot=null;
  boolean backedUp=false;
  _accountMgr.checkAccess(UserContext.current().getCaller(),null,true,volume);
  SnapshotInfo snap=this.snapshotFactory.getSnapshot(snapshotId);
  SnapshotStrategy strategy=null;
  for (  SnapshotStrategy st : snapshotStrategies) {
    if (st.canHandle(snap)) {
      strategy=st;
      break;
    }
  }
  try {
    snapshot=strategy.takeSnapshot(volume,snapshotId);
    if (snapshot != null) {
      postCreateSnapshot(volumeId,snapshot.getId(),policyId);
      SnapshotVO freshSnapshot=_snapshotDao.findById(snapshot.getId());
      if ((freshSnapshot != null) && backedUp) {
        UsageEventUtils.publishUsageEvent(EventTypes.EVENT_SNAPSHOT_CREATE,snapshot.getAccountId(),snapshot.getDataCenterId(),snapshotId,snapshot.getName(),null,null,volume.getSize(),snapshot.getClass().getName(),snapshot.getUuid());
      }
      _resourceLimitMgr.incrementResourceCount(snapshotOwner.getId(),ResourceType.snapshot);
    }
    if (backup) {
      this.backupSnapshot(snapshotId);
    }
  }
 catch (  Exception e) {
    s_logger.debug("Failed to create snapshot",e);
    if (backup) {
      _resourceLimitMgr.decrementResourceCount(snapshotOwner.getId(),ResourceType.secondary_storage,new Long(volume.getSize()));
    }
 else {
      _resourceLimitMgr.decrementResourceCount(snapshotOwner.getId(),ResourceType.primary_storage,new Long(volume.getSize()));
    }
    throw new CloudRuntimeException("Failed to create snapshot",e);
  }
  return snapshot;
}
