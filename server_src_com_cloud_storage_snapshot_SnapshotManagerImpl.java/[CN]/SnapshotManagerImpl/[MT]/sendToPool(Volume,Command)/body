{
  StoragePool pool=_storagePoolDao.findById(vol.getPoolId());
  VMInstanceVO vm=_vmDao.findById(vol.getInstanceId());
  long[] hostIdsToTryFirst=null;
  if (vm != null && vm.getHostId() != null) {
    hostIdsToTryFirst=new long[]{vm.getHostId()};
  }
  List<Long> hostIdsToAvoid=new ArrayList<Long>();
  for (int retry=_totalRetries; retry >= 0; retry--) {
    try {
      Pair<Long,Answer> result=_storageMgr.sendToPool(pool,hostIdsToTryFirst,hostIdsToAvoid,cmd);
      if (result.second().getResult()) {
        return result.second();
      }
    }
 catch (    StorageUnavailableException e1) {
      s_logger.warn("Storage unavailable ",e1);
      return null;
    }
    try {
      Thread.sleep(_pauseInterval * 1000);
    }
 catch (    InterruptedException e) {
    }
  }
  return null;
}
