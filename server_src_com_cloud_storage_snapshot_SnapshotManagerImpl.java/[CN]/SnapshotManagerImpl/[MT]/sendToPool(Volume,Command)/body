{
  StoragePool pool=(StoragePool)dataStoreMgr.getPrimaryDataStore(vol.getPoolId());
  long[] hostIdsToTryFirst=null;
  Long vmHostId=getHostIdForSnapshotOperation(vol);
  if (vmHostId != null) {
    hostIdsToTryFirst=new long[]{vmHostId};
  }
  List<Long> hostIdsToAvoid=new ArrayList<Long>();
  for (int retry=_totalRetries; retry >= 0; retry--) {
    try {
      Pair<Long,Answer> result=_storageMgr.sendToPool(pool,hostIdsToTryFirst,hostIdsToAvoid,cmd);
      if (result.second().getResult()) {
        return result.second();
      }
      if (logger.isDebugEnabled()) {
        logger.debug("The result for " + cmd.getClass().getName() + " is "+ result.second().getDetails()+ " through "+ result.first());
      }
      hostIdsToAvoid.add(result.first());
    }
 catch (    StorageUnavailableException e1) {
      logger.warn("Storage unavailable ",e1);
      return null;
    }
    try {
      Thread.sleep(_pauseInterval * 1000);
    }
 catch (    InterruptedException e) {
      logger.debug("[ignored] interupted while retry cmd.");
    }
    logger.debug("Retrying...");
  }
  logger.warn("After " + _totalRetries + " retries, the command "+ cmd.getClass().getName()+ " did not succeed.");
  return null;
}
