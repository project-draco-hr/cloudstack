{
  VolumeVO volume=_volsDao.findById(volumeId);
  boolean runSnap=true;
  if (volume.getInstanceId() == null) {
    long lastSnapId=_snapshotDao.getLastSnapshot(volumeId,0);
    SnapshotVO lastSnap=_snapshotDao.findByIdIncludingRemoved(lastSnapId);
    if (lastSnap != null) {
      Date lastSnapTime=lastSnap.getCreated();
      if (lastSnapTime.after(volume.getUpdated())) {
        runSnap=false;
        s_logger.debug("Volume: " + volumeId + " is detached and last snap time is after Volume detach time. Skip snapshot for recurring policy");
      }
    }
  }
 else   if (_storageMgr.volumeInactive(volume)) {
    long lastSnapId=_snapshotDao.getLastSnapshot(volumeId,0);
    SnapshotVO lastSnap=_snapshotDao.findByIdIncludingRemoved(lastSnapId);
    if (lastSnap != null) {
      Date lastSnapTime=lastSnap.getCreated();
      VMInstanceVO vmInstance=_vmDao.findById(volume.getInstanceId());
      if (vmInstance != null) {
        if (lastSnapTime.after(vmInstance.getUpdateTime())) {
          runSnap=false;
          s_logger.debug("Volume: " + volumeId + " is inactive and last snap time is after VM update time. Skip snapshot for recurring policy");
        }
      }
    }
  }
  if (volume.getState() == Volume.State.Destroy || volume.getRemoved() != null) {
    s_logger.debug("Volume: " + volumeId + " is destroyed/removed. Not taking snapshot");
    runSnap=false;
  }
  return runSnap;
}
