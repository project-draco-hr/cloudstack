{
  _name=name;
  ComponentLocator locator=ComponentLocator.getCurrentLocator();
  ConfigurationDao configDao=locator.getDao(ConfigurationDao.class);
  if (configDao == null) {
    throw new ConfigurationException("Unable to get the configuration dao.");
  }
  DateUtil.IntervalType.HOURLY.setMax(NumbersUtil.parseInt(configDao.getValue("snapshot.max.hourly"),HOURLYMAX));
  DateUtil.IntervalType.DAILY.setMax(NumbersUtil.parseInt(configDao.getValue("snapshot.max.daily"),DAILYMAX));
  DateUtil.IntervalType.WEEKLY.setMax(NumbersUtil.parseInt(configDao.getValue("snapshot.max.weekly"),WEEKLYMAX));
  DateUtil.IntervalType.MONTHLY.setMax(NumbersUtil.parseInt(configDao.getValue("snapshot.max.monthly"),MONTHLYMAX));
  _totalRetries=NumbersUtil.parseInt(configDao.getValue("total.retries"),4);
  _pauseInterval=2 * NumbersUtil.parseInt(configDao.getValue("ping.interval"),60);
  SearchBuilder<SnapshotPolicyRefVO> policySearch=_snapPolicyRefDao.createSearchBuilder();
  policySearch.and("policyId",policySearch.entity().getPolicyId(),SearchCriteria.Op.EQ);
  PolicySnapshotSearch=_snapshotDao.createSearchBuilder();
  PolicySnapshotSearch.join("policy",policySearch,policySearch.entity().getSnapshotId(),PolicySnapshotSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  policySearch.done();
  PolicySnapshotSearch.done();
  PoliciesForSnapSearch=_snapshotPolicyDao.createSearchBuilder();
  SearchBuilder<SnapshotPolicyRefVO> policyRefSearch=_snapPolicyRefDao.createSearchBuilder();
  policyRefSearch.and("snapshotId",policyRefSearch.entity().getSnapshotId(),SearchCriteria.Op.EQ);
  PoliciesForSnapSearch.join("policyRef",policyRefSearch,policyRefSearch.entity().getPolicyId(),PoliciesForSnapSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  policyRefSearch.done();
  PoliciesForSnapSearch.done();
  s_logger.info("Snapshot Manager is configured.");
  return true;
}
