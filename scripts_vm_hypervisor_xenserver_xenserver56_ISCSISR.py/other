import SR, VDI, SRCommand, util
import statvfs, time, LUNperVDI
import os, socket, sys, re, glob
import xml.dom.minidom
import shutil, xmlrpclib
import scsiutil, iscsilib
import xs_errors, errno
CAPABILITIES = ['SR_PROBE', 'VDI_CREATE', 'VDI_DELETE', 'VDI_ATTACH', 'VDI_DETACH', 'VDI_INTRODUCE']
CONFIGURATION = [['target', 'IP address or hostname of the iSCSI target (required)'], ['targetIQN', 'The IQN of the target LUN group to be attached (required)'], ['chapuser', 'The username to be used during CHAP authentication (optional)'], ['chappassword', 'The password to be used during CHAP authentication (optional)'], ['port', 'The network port number on which to query the target (optional)'], ['multihomed', 'Enable multi-homing to this target, true or false (optional, defaults to same value as host.other_config:multipathing)']]
DRIVER_INFO = {'name': 'iSCSI', 'description': 'Base ISCSI SR driver, provides a LUN-per-VDI. Does not support creation of VDIs but accesses existing LUNs on a target.', 'vendor': 'Citrix Systems Inc', 'copyright': '(C) 2008 Citrix Systems Inc', 'driver_version': '1.0', 'required_api_version': '1.0', 'capabilities': CAPABILITIES, 'configuration': CONFIGURATION, }
INITIATORNAME_FILE = '/etc/iscsi/initiatorname.iscsi'
SECTOR_SHIFT = 9
DEFAULT_PORT = 3260
MAXPORT = 65535
MAX_TIMEOUT = 15
MAX_LUNID_TIMEOUT = 60
ISCSI_PROCNAME = 'iscsi_tcp'
if (__name__ == '__main__'):
    SRCommand.run(ISCSISR, DRIVER_INFO)
else:
    SR.registerSR(ISCSISR)
