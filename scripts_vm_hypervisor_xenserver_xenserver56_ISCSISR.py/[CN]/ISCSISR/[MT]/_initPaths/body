def _initPaths(self):
    self._init_adapters()
    self.pathdict = {}
    addrlist = []
    rec = {}
    key = ('%s:%d' % (self.target, self.port))
    rec['ipaddr'] = self.target
    rec['port'] = self.port
    rec['path'] = os.path.join('/dev/iscsi', self.targetIQN, key)
    self.pathdict[key] = rec
    util.SMlog(('PATHDICT: key %s: %s' % (key, rec)))
    self.tgtidx = key
    addrlist.append(key)
    self.path = rec['path']
    self.address = self.tgtidx
    if (not self.attached):
        return
    if self.multihomed:
        map = iscsilib.get_node_records(targetIQN=self.targetIQN)
        for i in range(0, len(map)):
            (portal, tpgt, iqn) = map[i]
            (ipaddr, port) = portal.split(',')[0].split(':')
            if (self.target != ipaddr):
                key = ('%s:%s' % (ipaddr, port))
                rec = {}
                rec['ipaddr'] = ipaddr
                rec['port'] = long(port)
                rec['path'] = os.path.join('/dev/iscsi', self.targetIQN, key)
                self.pathdict[key] = rec
                util.SMlog(('PATHDICT: key %s: %s' % (key, rec)))
                addrlist.append(key)
    for key in self.pathdict:
        if self.adapter.has_key(key):
            self.tgtidx = key
            self.path = self.pathdict[self.tgtidx]['path']
            if os.path.exists(self.path):
                util.SMlog(('Path found: %s' % self.path))
                break
    self.address = self.tgtidx
    self._synchroniseAddrList(addrlist)
