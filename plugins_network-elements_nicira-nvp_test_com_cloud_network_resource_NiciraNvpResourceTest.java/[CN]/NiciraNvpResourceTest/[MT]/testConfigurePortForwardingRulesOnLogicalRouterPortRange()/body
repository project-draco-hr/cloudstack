{
  resource.configure("NiciraNvpResource",parameters);
  final ConfigurePortForwardingRulesOnLogicalRouterCommand cmd=mock(ConfigurePortForwardingRulesOnLogicalRouterCommand.class);
  final PortForwardingRuleTO rule=new PortForwardingRuleTO(1,"11.11.11.11",80,85,"10.10.10.10",80,85,"tcp",false,false);
  final List<PortForwardingRuleTO> rules=new ArrayList<PortForwardingRuleTO>();
  rules.add(rule);
  when(cmd.getRules()).thenReturn(rules);
  when(cmd.getLogicalRouterUuid()).thenReturn("aaaaa");
  @SuppressWarnings("unchecked") final NiciraNvpList<NatRule> storedRules=mock(NiciraNvpList.class);
  when(nvpApi.findNatRulesByLogicalRouterUuid("aaaaa")).thenReturn(storedRules);
  final NatRule[] rulepair=resource.generatePortForwardingRulePair("10.10.10.10",new int[]{80,85},"11.11.11.11",new int[]{80,85},"tcp");
  rulepair[0].setUuid(UUID.randomUUID());
  rulepair[1].setUuid(UUID.randomUUID());
  when(nvpApi.createLogicalRouterNatRule(eq("aaaaa"),(NatRule)any())).thenReturn(rulepair[0]).thenReturn(rulepair[1]);
  final ConfigurePortForwardingRulesOnLogicalRouterAnswer a=(ConfigurePortForwardingRulesOnLogicalRouterAnswer)resource.executeRequest(cmd);
  assertFalse(a.getResult());
}
