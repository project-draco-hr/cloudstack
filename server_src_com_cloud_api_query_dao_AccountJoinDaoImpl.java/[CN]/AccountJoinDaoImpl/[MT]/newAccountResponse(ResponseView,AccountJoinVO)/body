{
  AccountResponse accountResponse=new AccountResponse();
  accountResponse.setId(account.getUuid());
  accountResponse.setName(account.getAccountName());
  accountResponse.setAccountType(account.getType());
  accountResponse.setDomainId(account.getDomainUuid());
  accountResponse.setDomainName(account.getDomainName());
  accountResponse.setState(account.getState().toString());
  accountResponse.setNetworkDomain(account.getNetworkDomain());
  accountResponse.setDefaultZone(account.getDataCenterUuid());
  accountResponse.setIsDefault(account.isDefault());
  accountResponse.setBytesReceived(account.getBytesReceived());
  accountResponse.setBytesSent(account.getBytesSent());
  boolean fullView=(view == ResponseView.Full);
  setResourceLimits(account,fullView,accountResponse);
  long projectLimit=ApiDBUtils.findCorrectResourceLimit(account.getProjectLimit(),account.getId(),ResourceType.project);
  String projectLimitDisplay=(fullView || projectLimit == -1) ? "Unlimited" : String.valueOf(projectLimit);
  long projectTotal=(account.getProjectTotal() == null) ? 0 : account.getProjectTotal();
  String projectAvail=(fullView || projectLimit == -1) ? "Unlimited" : String.valueOf(projectLimit - projectTotal);
  accountResponse.setProjectLimit(projectLimitDisplay);
  accountResponse.setProjectTotal(projectTotal);
  accountResponse.setProjectAvailable(projectAvail);
  if (account.getJobId() != null) {
    accountResponse.setJobId(account.getJobUuid());
    accountResponse.setJobStatus(account.getJobStatus());
  }
  List<UserAccountJoinVO> usersForAccount=ApiDBUtils.findUserViewByAccountId(account.getId());
  List<UserResponse> userResponses=ViewResponseHelper.createUserResponse(usersForAccount.toArray(new UserAccountJoinVO[usersForAccount.size()]));
  accountResponse.setUsers(userResponses);
  accountResponse.setDetails(ApiDBUtils.getAccountDetails(account.getId()));
  accountResponse.setObjectName("account");
  List<AclGroupJoinVO> groupsForAccount=ApiDBUtils.findAclGroupByAccountId(account.getId());
  List<AclGroupResponse> groupResponses=ViewResponseHelper.createAclGroupResponses(groupsForAccount);
  accountResponse.setGroups(groupResponses);
  return accountResponse;
}
