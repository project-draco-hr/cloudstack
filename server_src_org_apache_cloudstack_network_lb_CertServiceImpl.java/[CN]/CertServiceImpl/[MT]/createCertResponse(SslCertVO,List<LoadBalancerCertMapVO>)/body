{
  SslCertResponse response=new SslCertResponse();
  Account account=_accountDao.findByIdIncludingRemoved(cert.getAccountId());
  if (account.getType() == Account.ACCOUNT_TYPE_PROJECT) {
    Project project=_projectMgr.findByProjectAccountIdIncludingRemoved(account.getId());
    if (project != null) {
      response.setProjectId(project.getUuid());
      response.setProjectName(project.getName());
    }
 else {
      response.setAccountName(account.getAccountName());
    }
  }
 else {
    response.setAccountName(account.getAccountName());
  }
  DomainVO domain=_domainDao.findByIdIncludingRemoved(cert.getDomainId());
  response.setDomainId(domain.getUuid());
  response.setDomainName(domain.getName());
  response.setObjectName("sslcert");
  response.setId(cert.getUuid());
  response.setCertificate(cert.getCertificate());
  response.setFingerprint(cert.getFingerPrint());
  if (cert.getChain() != null)   response.setCertchain(cert.getChain());
  if (lbCertMap != null && !lbCertMap.isEmpty()) {
    List<String> lbIds=new ArrayList<String>();
    for (    LoadBalancerCertMapVO mapVO : lbCertMap) {
      LoadBalancer lb=_entityMgr.findById(LoadBalancerVO.class,mapVO.getLbId());
      if (lb != null) {
        lbIds.add(lb.getUuid());
      }
    }
    response.setLbIds(lbIds);
  }
  return response;
}
