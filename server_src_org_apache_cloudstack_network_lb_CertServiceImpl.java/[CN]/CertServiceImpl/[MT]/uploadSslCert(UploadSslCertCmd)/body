{
  try {
    String cert=certCmd.getCert();
    String key=certCmd.getKey();
    String password=certCmd.getPassword();
    String chain=certCmd.getChain();
    validate(cert,key,password,chain);
    s_logger.debug("Certificate Validation succeeded");
    String fingerPrint=generateFingerPrint(parseCertificate(cert));
    CallContext ctx=CallContext.current();
    Account caller=ctx.getCallingAccount();
    Account owner=null;
    if ((certCmd.getAccountName() != null && certCmd.getDomainId() != null) || certCmd.getProjectId() != null) {
      owner=_accountMgr.finalizeOwner(caller,certCmd.getAccountName(),certCmd.getDomainId(),certCmd.getProjectId());
    }
 else {
      owner=caller;
    }
    Long accountId=owner.getId();
    Long domainId=owner.getDomainId();
    SslCertVO certVO=new SslCertVO(cert,key,password,chain,accountId,domainId,fingerPrint);
    _sslCertDao.persist(certVO);
    return createCertResponse(certVO,null);
  }
 catch (  Exception e) {
    throw new CloudRuntimeException("Error parsing certificate data " + e.getMessage());
  }
}
