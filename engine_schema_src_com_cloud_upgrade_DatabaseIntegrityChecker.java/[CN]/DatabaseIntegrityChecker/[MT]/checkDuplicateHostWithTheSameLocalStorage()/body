{
  Transaction txn=Transaction.open("Integrity");
  txn.start();
  try {
    Connection conn;
    try {
      conn=txn.getConnection();
      PreparedStatement pstmt=conn.prepareStatement("SELECT pool_id FROM host INNER JOIN storage_pool_host_ref INNER JOIN storage_pool WHERE storage_pool.id = storage_pool_host_ref.pool_id and storage_pool.pool_type='LVM' AND host.id=storage_pool_host_ref.host_id AND host.removed IS NULL group by pool_id having count(*) > 1");
      ResultSet rs=pstmt.executeQuery();
      boolean noDuplicate=true;
      StringBuffer helpInfo=new StringBuffer();
      String note="DATABASE INTEGRITY ERROR\nManagement server detected there are some hosts connect to the same loacal storage, please contact CloudStack support team for solution. Below are detialed info, please attach all of them to CloudStack support. Thank you\n";
      helpInfo.append(note);
      while (rs.next()) {
        long poolId=rs.getLong(1);
        pstmt=conn.prepareStatement("select id, status, removed, private_ip_address from host where id in (select host_id from storage_pool_host_ref where pool_id=?)");
        pstmt.setLong(1,poolId);
        ResultSet dhrs=pstmt.executeQuery();
        String help=formatDuplicateHostToReadText(poolId,dhrs);
        helpInfo.append(help);
        helpInfo.append("\n");
        noDuplicate=false;
      }
      if (noDuplicate) {
        s_logger.debug("No duplicate hosts with the same local storage found in database");
      }
 else {
        s_logger.error(helpInfo.toString());
      }
      return noDuplicate;
    }
 catch (    SQLException e) {
      s_logger.error("Unable to check duplicate hosts with the same local storage in database",e);
      throw new CloudRuntimeException("Unable to check duplicate hosts with the same local storage in database",e);
    }
  }
  finally {
    txn.commit();
    txn.close();
  }
}
