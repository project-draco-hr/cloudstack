{
  final Network network=mock(Network.class);
  when(network.getBroadcastDomainType()).thenReturn(BroadcastDomainType.Lswitch);
  when(network.getBroadcastUri()).thenReturn(new URI("lswitch:aaaaa"));
  when(network.getId()).thenReturn(NETWORK_ID);
  when(network.getPhysicalNetworkId()).thenReturn(NETWORK_ID);
  when(network.getGuestType()).thenReturn(GuestType.Shared);
  when(networkModel.isProviderForNetwork(Provider.NiciraNvp,NETWORK_ID)).thenReturn(true);
  when(ntwkSrvcDao.canProviderSupportServiceInNetwork(NETWORK_ID,Service.Connectivity,Provider.NiciraNvp)).thenReturn(true);
  final NiciraNvpDeviceVO device=mock(NiciraNvpDeviceVO.class);
  when(niciraNvpDao.listByPhysicalNetwork(NETWORK_ID)).thenReturn(Arrays.asList(new NiciraNvpDeviceVO[]{device}));
  when(device.getId()).thenReturn(1L);
  when(device.getHostId()).thenReturn(NICIRA_NVP_HOST_ID);
  HostVO niciraNvpHost=mock(HostVO.class);
  when(niciraNvpHost.getId()).thenReturn(NICIRA_NVP_HOST_ID);
  when(hostDao.findById(NICIRA_NVP_HOST_ID)).thenReturn(niciraNvpHost);
  final NetworkOffering offering=mock(NetworkOffering.class);
  when(offering.getId()).thenReturn(NETWORK_ID);
  when(offering.getTrafficType()).thenReturn(TrafficType.Guest);
  when(offering.getGuestType()).thenReturn(GuestType.Shared);
  final DeployDestination dest=mock(DeployDestination.class);
  final Domain dom=mock(Domain.class);
  when(dom.getName()).thenReturn("domain");
  final Account acc=mock(Account.class);
  when(acc.getAccountName()).thenReturn("accountname");
  final ReservationContext context=mock(ReservationContext.class);
  when(context.getDomain()).thenReturn(dom);
  when(context.getAccount()).thenReturn(acc);
  when(niciraNvpRouterMappingDao.existsMappingForNetworkId(NETWORK_ID)).thenReturn(false);
  VlanVO vlanVO=mock(VlanVO.class);
  when(vlanVO.getVlanTag()).thenReturn("111");
  when(vlanDao.listVlansByNetworkId(NETWORK_ID)).thenReturn(Arrays.asList(new VlanVO[]{vlanVO}));
  when(niciraNvpHost.getDetail("l2gatewayserviceuuid")).thenReturn("bbbb-bbbb-bbbb");
  final ConfigureSharedNetworkVlanIdAnswer answer=mock(ConfigureSharedNetworkVlanIdAnswer.class);
  when(answer.getResult()).thenReturn(true);
  when(agentManager.easySend(eq(NICIRA_NVP_HOST_ID),(Command)any())).thenReturn(answer);
  assertTrue(element.implement(network,offering,dest,context));
}
