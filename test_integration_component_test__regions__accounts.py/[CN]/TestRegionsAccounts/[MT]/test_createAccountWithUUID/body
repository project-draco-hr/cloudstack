@attr(tags=['simulator', 'basic', 'advanced'], required_hardware='false')
def test_createAccountWithUUID(self):
    'Test for creating account by passing id parameter\n\n            # Validate the following\n            # 1.Create an Account by passing id parameter.Verify the account is created.\n            # 2.List this account by passing id parameter.Verify that list account is able to lis this account.\n            # 3.Delete account should succeed.\n        '
    account = Account.create(self.api_client, self.services['account'], domainid=self.domain.id)
    self.assertIn(self.services['account']['accountUUID'], account.id, 'Account is not created with the accountId passed')
    list_account = Account.list(self.api_client, id=account.id)
    self.assertEqual(isinstance(list_account, list), True, 'Check for list account response by uuid failed')
    account_response = list_account[0]
    self.assertEqual(account_response.id, account.id, 'listAccount response does not match with account Id ')
    self.assertEqual(account_response.user[0].firstname, self.services['account']['firstname'], 'listAccount response does not match with account firstname')
    self.cleanup.append(account)
    return
