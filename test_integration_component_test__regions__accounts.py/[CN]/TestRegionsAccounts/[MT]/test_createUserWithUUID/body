@attr(tags=['simulator', 'basic', 'advanced'], required_hardware='false')
def test_createUserWithUUID(self):
    'Test for creating User by passing id parameter\n\n         # Validate the following\n         # 1.Create a User by passing id parameter.Verify the user is created.\n         # 2.List this user by passing id parameter.Verify that list user is able to list this user.\n         # 3.Delete User should succeed.\n        '
    user = User.create(self.api_client, self.services['user'], account='admin', domainid=self.domain.id)
    self.assertIn(self.services['user']['userUUID'], user.id, 'User is not created successfully with the userId passed')
    list_user = User.list(self.api_client, id=user.id)
    self.assertEqual(isinstance(list_user, list), True, 'Check for list user response by uuid failed')
    user_response = list_user[0]
    self.assertEqual(user_response.id, user.id, 'list User response does not match with user Id ')
    self.assertEqual(user_response.firstname, self.services['user']['firstname'], 'listUser response does not match with user firstname')
    user.delete(self.api_client)
    list_user = User.list(self.api_client, id=user.id)
    self.assertIsNone(list_user, 'Deletion of user failed')
    return
