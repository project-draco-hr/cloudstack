{
  String[] dirs=_fs.listFiles(_vmDataDir);
  for (  String dir : dirs) {
    String[] path=dir.split("/");
    String vm=path[path.length - 1];
    if (vm.startsWith("i-")) {
      String[] dataFiles=_fs.listFiles(dir);
      for (      String dfile : dataFiles) {
        String path2[]=dfile.split("/");
        String ipv4file=path2[path2.length - 1];
        if (ipv4file.equalsIgnoreCase("local-ipv4")) {
          try {
            BufferedReader input=new BufferedReader(new FileReader(dfile));
            String line=null;
            while ((line=input.readLine()) != null) {
              if (NetUtils.isValidIp(line)) {
                _ipVmMap.put(line,vm);
                s_logger.info("Found ip " + line + " for vm "+ vm);
              }
 else {
                s_logger.info("Invalid ip " + line + " for vm "+ vm);
              }
            }
          }
 catch (          FileNotFoundException e) {
            s_logger.warn("Failed to find file " + dfile);
          }
catch (          IOException e) {
            s_logger.warn("Failed to get ip address of " + vm);
          }
        }
      }
    }
  }
  return true;
}
