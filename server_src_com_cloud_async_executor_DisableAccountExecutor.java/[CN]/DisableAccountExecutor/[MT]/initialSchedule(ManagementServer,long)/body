{
  AsyncJobManager asyncMgr=getAsyncJobMgr();
  AccountVO account=asyncMgr.getExecutorContext().getAccountDao().acquireInLockTable(accountId);
  if (account == null) {
    s_logger.warn("Unable to acquire account." + accountId + " to execute disable account command");
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"unabled to acquire account." + accountId + " lock");
    return;
  }
  try {
    List<DomainRouterVO> routers=asyncMgr.getExecutorContext().getRouterDao().listBy(accountId);
    if (routers.size() > 0) {
      scheduleOperationAfterAllRouterOperations(managementServer,accountId,routers);
    }
 else {
      if (s_logger.isInfoEnabled())       s_logger.info("Account " + accountId + " does not have running router, disable the account directly");
      if (managementServer.disableAccount(accountId)) {
        asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_SUCCEEDED,0,"success");
      }
 else {
        asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"failed");
      }
    }
  }
 catch (  Exception e) {
    s_logger.warn("Unable to disable account: " + e.getMessage(),e);
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,e.getMessage());
  }
 finally {
    asyncMgr.getExecutorContext().getAccountDao().releaseFromLockTable(accountId);
  }
}
