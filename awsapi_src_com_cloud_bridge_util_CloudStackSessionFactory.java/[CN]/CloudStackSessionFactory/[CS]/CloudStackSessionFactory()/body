{
  Configuration cfg=new Configuration();
  File file=ConfigurationHelper.findConfigurationFile("CloudStack.cfg.xml");
  File propertiesFile=ConfigurationHelper.findConfigurationFile("db.properties");
  Properties dbProp=null;
  String dbName=null;
  String dbHost=null;
  String dbUser=null;
  String dbPassword=null;
  String dbPort=null;
  if (null != propertiesFile) {
    if (EncryptionSecretKeyCheckerUtil.useEncryption()) {
      StandardPBEStringEncryptor encryptor=EncryptionSecretKeyCheckerUtil.getEncryptor();
      dbProp=new EncryptableProperties(encryptor);
    }
 else {
      dbProp=new Properties();
    }
    try {
      dbProp.load(new FileInputStream(propertiesFile));
    }
 catch (    FileNotFoundException e) {
      logger.warn("Unable to open properties file: " + propertiesFile.getAbsolutePath(),e);
    }
catch (    IOException e) {
      logger.warn("Unable to read properties file: " + propertiesFile.getAbsolutePath(),e);
    }
  }
  if (file != null && dbProp != null) {
    Thread.currentThread().setContextClassLoader(this.getClass().getClassLoader());
    cfg.configure(file);
    dbHost=dbProp.getProperty("db.cloud.host");
    dbName=dbProp.getProperty("db.cloud.name");
    dbUser=dbProp.getProperty("db.cloud.username");
    dbPassword=dbProp.getProperty("db.cloud.password");
    dbPort=dbProp.getProperty("db.cloud.port");
    cfg.setProperty("hibernate.connection.url","jdbc:mysql://" + dbHost + ":"+ dbPort+ "/"+ dbName);
    cfg.setProperty("hibernate.connection.username",dbUser);
    cfg.setProperty("hibernate.connection.password",dbPassword);
    factory=cfg.buildSessionFactory();
  }
 else {
    logger.warn("Unable to open load db configuration");
    throw new RuntimeException("nable to open load db configuration");
  }
}
