{
  Class<?> clas=Class.forName(all_api_commands.get(command));
  ArrayList<Argument> request=new ArrayList<Argument>();
  ArrayList<Argument> response=new ArrayList<Argument>();
  Command apiCommand=new Command();
  apiCommand.setName(command);
  Implementation impl=clas.getAnnotation(Implementation.class);
  if (impl == null) {
    impl=clas.getSuperclass().getAnnotation(Implementation.class);
  }
  if (impl.includeInApiDoc()) {
    String commandDescription=impl.description();
    if (commandDescription != null)     apiCommand.setDescription(commandDescription);
 else     System.out.println("Command " + apiCommand.getName() + " misses description");
    if (!impl.since().isEmpty()) {
      apiCommand.setSinceVersion(impl.since());
    }
    Field[] fields=clas.getDeclaredFields();
    Class<?> superClass=clas.getSuperclass();
    String superName=superClass.getName();
    if (!superName.equals(BaseCmd.class.getName()) && !superName.equals(BaseAsyncCmd.class.getName()) && !superName.equals(BaseAsyncCreateCmd.class.getName())) {
      Field[] superClassFields=superClass.getDeclaredFields();
      if (superClassFields != null) {
        Field[] tmpFields=new Field[fields.length + superClassFields.length];
        System.arraycopy(fields,0,tmpFields,0,fields.length);
        System.arraycopy(superClassFields,0,tmpFields,fields.length,superClassFields.length);
        fields=tmpFields;
      }
      superClass=superClass.getSuperclass();
    }
    request=setRequestFields(fields);
    if (superName.equals(BaseAsyncCmd.class.getName()) || superName.equals(BaseAsyncCreateCmd.class.getName())) {
      apiCommand.setAsync(true);
    }
 else {
      apiCommand.setAsync(false);
    }
    Class<?> responseClas=impl.responseObject();
    Field[] responseFields=responseClas.getDeclaredFields();
    response=setResponseFields(responseFields);
    apiCommand.setRequest(request);
    apiCommand.setResponse(response);
    out.writeObject(apiCommand);
  }
 else {
    s_logger.debug("Command " + command + " is not exposed in api doc");
  }
}
