{
  ArrayList<Argument> request=new ArrayList<Argument>();
  ArrayList<Argument> response=new ArrayList<Argument>();
  Command apiCommand=new Command();
  apiCommand.setName("login");
  apiCommand.setDescription("Logs a user into the CloudStack. A successful login attempt will generate a JSESSIONID cookie value that can be passed in subsequent Query command calls until the \"logout\" command has been issued or the session has expired.");
  request.add(new Argument("username","Username",true));
  request.add(new Argument("password","Hashed password (Default is MD5). If you wish to use any other hashing algorithm, you would need to write a custom authentication adapter See Docs section.",true));
  request.add(new Argument("domain","path of the domain that the user belongs to. Example: domain=/com/cloud/internal.  If no domain is passed in, the ROOT domain is assumed.",false));
  apiCommand.setRequest(request);
  response.add(new Argument("username","Username"));
  response.add(new Argument("userid","User id"));
  response.add(new Argument("password","Password"));
  response.add(new Argument("domainid","domain ID that the user belongs to"));
  response.add(new Argument("timeout","the time period before the session has expired"));
  response.add(new Argument("account","the account name the user belongs to"));
  response.add(new Argument("firstname","first name of the user"));
  response.add(new Argument("lastname","last name of the user"));
  response.add(new Argument("type","the account type (admin, domain-admin, read-only-admin, user)"));
  response.add(new Argument("timezone","user time zone"));
  response.add(new Argument("timezoneoffset","user time zone offset from UTC 00:00"));
  response.add(new Argument("sessionkey","Session key that can be passed in subsequent Query command calls"));
  apiCommand.setResponse(response);
  out.writeObject(apiCommand);
}
