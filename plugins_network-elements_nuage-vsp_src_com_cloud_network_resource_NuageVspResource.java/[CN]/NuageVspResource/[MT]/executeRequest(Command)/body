{
  if (cmd instanceof ReadyCommand) {
    return executeRequest((ReadyCommand)cmd);
  }
 else   if (cmd instanceof MaintainCommand) {
    return executeRequest((MaintainCommand)cmd);
  }
 else   if (cmd instanceof VspResourceCommand) {
    return executeRequest((VspResourceCommand)cmd);
  }
 else   if (cmd instanceof ImplementNetworkVspCommand) {
    return executeRequest((ImplementNetworkVspCommand)cmd);
  }
 else   if (cmd instanceof ReserveVmInterfaceVspCommand) {
    return executeRequest((ReserveVmInterfaceVspCommand)cmd);
  }
 else   if (cmd instanceof ReleaseVmVspCommand) {
    return executeRequest((ReleaseVmVspCommand)cmd);
  }
 else   if (cmd instanceof DeallocateVmVspCommand) {
    return executeRequest((DeallocateVmVspCommand)cmd);
  }
 else   if (cmd instanceof TrashNetworkVspCommand) {
    return executeRequest((TrashNetworkVspCommand)cmd);
  }
 else   if (cmd instanceof ApplyAclRuleVspCommand) {
    return executeRequest((ApplyAclRuleVspCommand)cmd);
  }
 else   if (cmd instanceof ApplyStaticNatVspCommand) {
    return executeRequest((ApplyStaticNatVspCommand)cmd);
  }
 else   if (cmd instanceof ShutDownVpcVspCommand) {
    return executeRequest((ShutDownVpcVspCommand)cmd);
  }
 else   if (cmd instanceof SyncVspCommand) {
    return executeRequest((SyncVspCommand)cmd);
  }
  s_logger.debug("Received unsupported command " + cmd.toString());
  return Answer.createUnsupportedCommandAnswer(cmd);
}
