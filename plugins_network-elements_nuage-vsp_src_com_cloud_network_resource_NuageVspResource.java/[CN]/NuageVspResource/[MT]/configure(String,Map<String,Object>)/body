{
  _name=(String)params.get("name");
  if (_name == null) {
    throw new ConfigurationException("Unable to find name");
  }
  _guid=(String)params.get("guid");
  if (_guid == null) {
    throw new ConfigurationException("Unable to find the guid");
  }
  _zoneId=(String)params.get("zoneId");
  if (_zoneId == null) {
    throw new ConfigurationException("Unable to find zone");
  }
  String hostname=(String)params.get("hostname");
  if (hostname == null) {
    throw new ConfigurationException("Unable to find hostname");
  }
  String cmsUser=(String)params.get("cmsuser");
  if (cmsUser == null) {
    throw new ConfigurationException("Unable to find CMS username");
  }
  String cmsUserPassBase64=(String)params.get("cmsuserpass");
  if (cmsUserPassBase64 == null) {
    throw new ConfigurationException("Unable to find CMS password");
  }
  String port=(String)params.get("port");
  if (port == null) {
    throw new ConfigurationException("Unable to find port");
  }
  String apiRelativePath=(String)params.get("apirelativepath");
  if ((apiRelativePath != null) && (!apiRelativePath.isEmpty())) {
    String apiVersion=apiRelativePath.substring(apiRelativePath.lastIndexOf('/') + 1);
    if (!Pattern.matches("v\\d+_\\d+",apiVersion)) {
      throw new ConfigurationException("Incorrect API version");
    }
  }
 else {
    throw new ConfigurationException("Unable to find API version");
  }
  String retryCount=(String)params.get("retrycount");
  if ((retryCount != null) && (!retryCount.isEmpty())) {
    try {
      _numRetries=Integer.parseInt(retryCount);
    }
 catch (    NumberFormatException ex) {
      throw new ConfigurationException("Number of retries has to be between 1 and 10");
    }
    if ((_numRetries < 1) || (_numRetries > 10)) {
      throw new ConfigurationException("Number of retries has to be between 1 and 10");
    }
  }
 else {
    throw new ConfigurationException("Unable to find number of retries");
  }
  String retryInterval=(String)params.get("retryinterval");
  if ((retryInterval != null) && (!retryInterval.isEmpty())) {
    try {
      _retryInterval=Integer.parseInt(retryInterval);
    }
 catch (    NumberFormatException ex) {
      throw new ConfigurationException("Retry interval has to be between 0 and 10000 ms");
    }
    if ((_retryInterval < 0) || (_retryInterval > 10000)) {
      throw new ConfigurationException("Retry interval has to be between 0 and 10000 ms");
    }
  }
 else {
    throw new ConfigurationException("Unable to find retry interval");
  }
  _relativePath=new StringBuffer().append("https://").append(hostname).append(":").append(port).append(apiRelativePath).toString();
  String cmsUserPass=org.apache.commons.codec.binary.StringUtils.newStringUtf8(Base64.decodeBase64(cmsUserPassBase64));
  _cmsUserInfo=new String[]{CMS_USER_ENTEPRISE_NAME,cmsUser,cmsUserPass};
  try {
    loadNuageClient();
  }
 catch (  Exception e) {
    throw new CloudRuntimeException("Failed to login to Nuage VSD on " + name + " as user "+ cmsUser,e);
  }
  try {
    login();
  }
 catch (  Exception e) {
    s_logger.error("Failed to login to Nuage VSD on " + name + " as user "+ cmsUser+ " Exception "+ e.getMessage());
    throw new CloudRuntimeException("Failed to login to Nuage VSD on " + name + " as user "+ cmsUser,e);
  }
  return true;
}
