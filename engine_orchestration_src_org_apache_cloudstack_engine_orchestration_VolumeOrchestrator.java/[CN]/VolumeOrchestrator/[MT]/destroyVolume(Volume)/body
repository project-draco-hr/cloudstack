{
  try {
    if (volume.getState() == Volume.State.Allocated) {
      _volsDao.remove(volume.getId());
      stateTransitTo(volume,Volume.Event.DestroyRequested);
    }
 else {
      volService.destroyVolume(volume.getId());
    }
    UsageEventUtils.publishUsageEvent(EventTypes.EVENT_VOLUME_DELETE,volume.getAccountId(),volume.getDataCenterId(),volume.getId(),volume.getName(),Volume.class.getName(),volume.getUuid(),volume.isDisplayVolume());
    _resourceLimitMgr.decrementResourceCount(volume.getAccountId(),ResourceType.volume,volume.isDisplay());
    _resourceLimitMgr.recalculateResourceCount(volume.getAccountId(),volume.getDomainId(),ResourceType.primary_storage.getOrdinal());
  }
 catch (  Exception e) {
    logger.debug("Failed to destroy volume" + volume.getId(),e);
    throw new CloudRuntimeException("Failed to destroy volume" + volume.getId(),e);
  }
}
