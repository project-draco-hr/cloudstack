{
  Map<VolumeInfo,DataStore> volumeMap=new HashMap<VolumeInfo,DataStore>();
  for (  Map.Entry<Volume,StoragePool> entry : volumeToPool.entrySet()) {
    Volume volume=entry.getKey();
    StoragePool storagePool=entry.getValue();
    StoragePool destPool=(StoragePool)dataStoreMgr.getDataStore(storagePool.getId(),DataStoreRole.Primary);
    if (volume.getInstanceId() != vm.getId()) {
      throw new CloudRuntimeException("Volume " + volume + " that has to be migrated doesn't belong to the"+ " instance "+ vm);
    }
    if (destPool == null) {
      throw new CloudRuntimeException("Failed to find the destination storage pool " + storagePool.getId());
    }
    volumeMap.put(volFactory.getVolume(volume.getId()),(DataStore)destPool);
  }
  AsyncCallFuture<CommandResult> future=volService.migrateVolumes(volumeMap,vmTo,srcHost,destHost);
  try {
    CommandResult result=future.get();
    if (result.isFailed()) {
      logger.debug("Failed to migrated vm " + vm + " along with its volumes. "+ result.getResult());
      throw new CloudRuntimeException("Failed to migrated vm " + vm + " along with its volumes. ");
    }
  }
 catch (  InterruptedException e) {
    logger.debug("Failed to migrated vm " + vm + " along with its volumes.",e);
  }
catch (  ExecutionException e) {
    logger.debug("Failed to migrated vm " + vm + " along with its volumes.",e);
  }
}
