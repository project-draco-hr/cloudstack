{
  VolumeInfo vol=volFactory.getVolume(volume.getId());
  AsyncCallFuture<VolumeApiResult> future=volService.copyVolume(vol,(DataStore)destPool);
  try {
    VolumeApiResult result=future.get();
    if (result.isFailed()) {
      s_logger.error("Migrate volume failed:" + result.getResult());
      throw new StorageUnavailableException("Migrate volume failed: " + result.getResult(),destPool.getId());
    }
 else {
      if (!_snapshotDao.listByVolumeId(vol.getId()).isEmpty()) {
        _snapshotDao.updateVolumeIds(vol.getId(),result.getVolume().getId());
        _snapshotDataStoreDao.updateVolumeIds(vol.getId(),result.getVolume().getId());
      }
    }
    return result.getVolume();
  }
 catch (  InterruptedException e) {
    s_logger.debug("migrate volume failed",e);
    throw new CloudRuntimeException(e.getMessage());
  }
catch (  ExecutionException e) {
    s_logger.debug("migrate volume failed",e);
    throw new CloudRuntimeException(e.getMessage());
  }
}
