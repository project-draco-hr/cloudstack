{
  Long templateId=cmd.getId();
  Long userId=CallContext.current().getCallingUserId();
  Long sourceZoneId=cmd.getSourceZoneId();
  Long destZoneId=cmd.getDestinationZoneId();
  Account caller=CallContext.current().getCallingAccount();
  VMTemplateVO template=_tmpltDao.findById(templateId);
  if (template == null || template.getRemoved() != null) {
    throw new InvalidParameterValueException("Unable to find template with id");
  }
  DataStore srcSecStore=null;
  if (sourceZoneId != null) {
    srcSecStore=getImageStore(sourceZoneId,templateId);
  }
 else {
    srcSecStore=getImageStore(templateId);
  }
  if (srcSecStore == null) {
    throw new InvalidParameterValueException("There is no template " + templateId + " ready on image store.");
  }
  if (template.isCrossZones()) {
    _tmpltSvr.syncTemplateToRegionStore(templateId,srcSecStore);
    s_logger.debug("Template " + templateId + " is cross-zone, don't need to copy");
    return template;
  }
  if (sourceZoneId != null) {
    if (sourceZoneId.equals(destZoneId)) {
      throw new InvalidParameterValueException("Please specify different source and destination zones.");
    }
    DataCenterVO sourceZone=_dcDao.findById(sourceZoneId);
    if (sourceZone == null) {
      throw new InvalidParameterValueException("Please specify a valid source zone.");
    }
  }
  DataCenterVO dstZone=_dcDao.findById(destZoneId);
  if (dstZone == null) {
    throw new InvalidParameterValueException("Please specify a valid destination zone.");
  }
  DataStore dstSecStore=getImageStore(destZoneId,templateId);
  if (dstSecStore != null) {
    s_logger.debug("There is template " + templateId + " in secondary storage "+ dstSecStore.getName()+ " in zone "+ destZoneId+ " , don't need to copy");
    return template;
  }
  _accountMgr.checkAccess(caller,AccessType.OperateEntry,template);
  boolean success=copy(userId,template,srcSecStore,dstZone);
  if (success) {
    long accountId=template.getAccountId();
    if (template.getSize() != null) {
      _resourceLimitMgr.incrementResourceCount(accountId,ResourceType.secondary_storage,template.getSize());
    }
    return template;
  }
 else {
    throw new CloudRuntimeException("Failed to copy template");
  }
}
