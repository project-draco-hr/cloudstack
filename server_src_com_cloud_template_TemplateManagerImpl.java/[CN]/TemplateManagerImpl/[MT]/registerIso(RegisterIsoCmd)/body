{
  Account ctxAccount=UserContext.current().getCaller();
  Long userId=UserContext.current().getCallerUserId();
  String name=cmd.getIsoName();
  String displayText=cmd.getDisplayText();
  String url=cmd.getUrl();
  Boolean isPublic=cmd.isPublic();
  Boolean featured=cmd.isFeatured();
  Long guestOSId=cmd.getOsTypeId();
  Boolean bootable=cmd.isBootable();
  Long zoneId=cmd.getZoneId();
  String accountName=cmd.getAccountName();
  Long domainId=cmd.getDomainId();
  Account resourceAccount=null;
  Long accountId=null;
  if (isPublic == null) {
    isPublic=Boolean.FALSE;
  }
  if (zoneId.longValue() == -1) {
    zoneId=null;
  }
  if ((accountName == null) ^ (domainId == null)) {
    throw new InvalidParameterValueException("Please specify both account and domainId or dont specify any of them");
  }
  if ((ctxAccount == null) || isAdmin(ctxAccount.getType())) {
    if (domainId != null) {
      if ((ctxAccount != null) && !_domainDao.isChildDomain(ctxAccount.getDomainId(),domainId)) {
        throw new PermissionDeniedException("Failed to register ISO, invalid domain id (" + domainId + ") given.");
      }
      if (accountName != null) {
        resourceAccount=_accountDao.findActiveAccount(accountName,domainId);
        if (resourceAccount == null) {
          throw new InvalidParameterValueException("Unable to find account " + accountName + " in domain "+ domainId);
        }
        accountId=resourceAccount.getId();
      }
    }
 else {
      accountId=((ctxAccount != null) ? ctxAccount.getId() : null);
    }
  }
 else {
    accountId=ctxAccount.getId();
  }
  if (null == accountId && null == accountName && null == domainId && null == ctxAccount) {
    accountId=1L;
  }
  if (accountId == null) {
    throw new InvalidParameterValueException("No valid account specified for registering an ISO.");
  }
  boolean isAdmin=_accountDao.findById(accountId).getType() == Account.ACCOUNT_TYPE_ADMIN;
  if (!isAdmin && zoneId == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Please specify a valid zone Id.");
  }
  if ((!url.toLowerCase().endsWith("iso")) && (!url.toLowerCase().endsWith("iso.zip")) && (!url.toLowerCase().endsWith("iso.bz2"))&& (!url.toLowerCase().endsWith("iso.gz"))) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Please specify a valid iso");
  }
  boolean allowPublicUserTemplates=Boolean.parseBoolean(_configDao.getValue("allow.public.user.templates"));
  if (!isAdmin && !allowPublicUserTemplates && isPublic) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Only private ISOs can be created.");
  }
  if (!isAdmin || featured == null) {
    featured=Boolean.FALSE;
  }
  if (userId == null) {
    userId=Long.valueOf(1);
  }
  if (bootable == null) {
    bootable=Boolean.TRUE;
  }
  if ((guestOSId == null || guestOSId == 138L) && bootable == true) {
    throw new InvalidParameterValueException("Please pass a valid GuestOS Id");
  }
  if (bootable == false) {
    guestOSId=138L;
  }
  if (url.toLowerCase().contains("file://")) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"File:// type urls are currently unsupported");
  }
  return createTemplateOrIso(userId,accountId,zoneId,name,displayText,isPublic.booleanValue(),featured.booleanValue(),true,ImageFormat.ISO.toString(),TemplateType.USER,url,null,true,64,false,guestOSId,bootable,HypervisorType.None);
}
