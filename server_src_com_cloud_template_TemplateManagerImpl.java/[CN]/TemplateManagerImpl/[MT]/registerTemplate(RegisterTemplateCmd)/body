{
  Account ctxAccount=UserContext.current().getCaller();
  Long userId=UserContext.current().getCallerUserId();
  String name=cmd.getTemplateName();
  String displayText=cmd.getDisplayText();
  Integer bits=cmd.getBits();
  Boolean passwordEnabled=cmd.isPasswordEnabled();
  Boolean requiresHVM=cmd.getRequiresHvm();
  String url=cmd.getUrl();
  Boolean isPublic=cmd.isPublic();
  Boolean featured=cmd.isFeatured();
  Boolean isExtractable=cmd.isExtractable();
  String format=cmd.getFormat();
  Long guestOSId=cmd.getOsTypeId();
  Long zoneId=cmd.getZoneId();
  HypervisorType hypervisorType=HypervisorType.getType(cmd.getHypervisor());
  String accountName=cmd.getAccountName();
  Long domainId=cmd.getDomainId();
  Account resourceAccount=null;
  Long accountId=null;
  if (bits == null) {
    bits=Integer.valueOf(64);
  }
  if (passwordEnabled == null) {
    passwordEnabled=false;
  }
  if (requiresHVM == null) {
    requiresHVM=true;
  }
  if (isPublic == null) {
    isPublic=Boolean.FALSE;
  }
  if (isExtractable == null) {
    isExtractable=Boolean.FALSE;
  }
  if (zoneId.longValue() == -1) {
    zoneId=null;
  }
  if ((accountName == null) ^ (domainId == null)) {
    throw new InvalidParameterValueException("Please specify both account and domainId or dont specify any of them");
  }
  if ((ctxAccount == null) || isAdmin(ctxAccount.getType())) {
    if (domainId != null) {
      if ((ctxAccount != null) && !_domainDao.isChildDomain(ctxAccount.getDomainId(),domainId)) {
        throw new PermissionDeniedException("Failed to register template, invalid domain id (" + domainId + ") given.");
      }
      if (accountName != null) {
        resourceAccount=_accountDao.findActiveAccount(accountName,domainId);
        if (resourceAccount == null) {
          throw new InvalidParameterValueException("Unable to find account " + accountName + " in domain "+ domainId);
        }
        accountId=resourceAccount.getId();
      }
    }
 else {
      accountId=((ctxAccount != null) ? ctxAccount.getId() : null);
    }
  }
 else {
    accountId=ctxAccount.getId();
  }
  if (null == accountId && null == accountName && null == domainId && null == ctxAccount) {
    accountId=1L;
  }
  if (null == accountId) {
    throw new InvalidParameterValueException("No valid account specified for registering template.");
  }
  boolean isAdmin=_accountDao.findById(accountId).getType() == Account.ACCOUNT_TYPE_ADMIN;
  if (!isAdmin && zoneId == null) {
    throw new InvalidParameterValueException("Please specify a valid zone Id.");
  }
  if (url.toLowerCase().contains("file://")) {
    throw new InvalidParameterValueException("File:// type urls are currently unsupported");
  }
  if ((!url.toLowerCase().endsWith("vhd")) && (!url.toLowerCase().endsWith("vhd.zip")) && (!url.toLowerCase().endsWith("vhd.bz2"))&& (!url.toLowerCase().endsWith("vhd.gz"))&& (!url.toLowerCase().endsWith("qcow2"))&& (!url.toLowerCase().endsWith("qcow2.zip"))&& (!url.toLowerCase().endsWith("qcow2.bz2"))&& (!url.toLowerCase().endsWith("qcow2.gz"))&& (!url.toLowerCase().endsWith("ova"))&& (!url.toLowerCase().endsWith("ova.zip"))&& (!url.toLowerCase().endsWith("ova.bz2"))&& (!url.toLowerCase().endsWith("ova.gz"))) {
    throw new InvalidParameterValueException("Please specify a valid " + format.toLowerCase());
  }
  boolean allowPublicUserTemplates=Boolean.parseBoolean(_configDao.getValue("allow.public.user.templates"));
  if (!isAdmin && !allowPublicUserTemplates && isPublic) {
    throw new InvalidParameterValueException("Only private templates can be created.");
  }
  if (!isAdmin || featured == null) {
    featured=Boolean.FALSE;
  }
  if (userId == null) {
    userId=Long.valueOf(1);
  }
  return createTemplateOrIso(userId,accountId,zoneId,name,displayText,isPublic,featured,isExtractable,format,TemplateType.USER,url,null,requiresHVM,bits,passwordEnabled,guestOSId,true,hypervisorType);
}
