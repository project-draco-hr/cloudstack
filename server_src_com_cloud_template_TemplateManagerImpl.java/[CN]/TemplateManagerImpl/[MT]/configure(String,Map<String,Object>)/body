{
  _name=name;
  ComponentLocator locator=ComponentLocator.getCurrentLocator();
  ConfigurationDao configDao=locator.getDao(ConfigurationDao.class);
  if (configDao == null) {
    throw new ConfigurationException("Unable to find ConfigurationDao");
  }
  final Map<String,String> configs=configDao.getConfiguration("AgentManager",params);
  _routerTemplateId=NumbersUtil.parseInt(configs.get("router.template.id"),1);
  String value=configDao.getValue(Config.PrimaryStorageDownloadWait.toString());
  _primaryStorageDownloadWait=NumbersUtil.parseInt(value,Integer.parseInt(Config.PrimaryStorageDownloadWait.getDefaultValue()));
  HostTemplateStatesSearch=_tmpltHostDao.createSearchBuilder();
  HostTemplateStatesSearch.and("id",HostTemplateStatesSearch.entity().getTemplateId(),SearchCriteria.Op.EQ);
  HostTemplateStatesSearch.and("state",HostTemplateStatesSearch.entity().getDownloadState(),SearchCriteria.Op.EQ);
  SearchBuilder<HostVO> HostSearch=_hostDao.createSearchBuilder();
  HostSearch.and("dcId",HostSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  HostTemplateStatesSearch.join("host",HostSearch,HostSearch.entity().getId(),HostTemplateStatesSearch.entity().getHostId(),JoinBuilder.JoinType.INNER);
  HostSearch.done();
  HostTemplateStatesSearch.done();
  _storagePoolMaxWaitSeconds=NumbersUtil.parseInt(configDao.getValue(Config.StoragePoolMaxWaitSeconds.key()),3600);
  _preloadExecutor=Executors.newFixedThreadPool(8,new NamedThreadFactory("Template-Preloader"));
  return false;
}
