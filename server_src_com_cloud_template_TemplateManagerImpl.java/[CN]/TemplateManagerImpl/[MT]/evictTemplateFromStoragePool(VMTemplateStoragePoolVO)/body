{
  VMTemplateStoragePoolVO templatePoolRef=_tmpltPoolDao.acquireInLockTable(templatePoolVO.getId());
  if (templatePoolRef == null) {
    s_logger.debug("can't aquire the lock for template pool ref:" + templatePoolVO.getId());
    return;
  }
  try {
    StoragePool pool=(StoragePool)this._dataStoreMgr.getPrimaryDataStore(templatePoolVO.getPoolId());
    VMTemplateVO template=_tmpltDao.findByIdIncludingRemoved(templatePoolVO.getTemplateId());
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Evicting " + templatePoolVO);
    }
    DestroyCommand cmd=new DestroyCommand(pool,templatePoolVO);
    try {
      Answer answer=_storageMgr.sendToPool(pool,cmd);
      if (answer != null && answer.getResult()) {
        if (_tmpltPoolDao.remove(templatePoolVO.getId())) {
          s_logger.debug("Successfully evicted template: " + template.getName() + " from storage pool: "+ pool.getName());
        }
      }
 else {
        s_logger.info("Will retry evicte template: " + template.getName() + " from storage pool: "+ pool.getName());
      }
    }
 catch (    StorageUnavailableException e) {
      s_logger.info("Storage is unavailable currently.  Will retry evicte template: " + template.getName() + " from storage pool: "+ pool.getName());
    }
  }
  finally {
    _tmpltPoolDao.releaseFromLockTable(templatePoolRef.getId());
  }
}
