{
  VMTemplateStoragePoolVO templatePoolRef=_tmpltPoolDao.acquireInLockTable(templatePoolVO.getId());
  if (templatePoolRef == null) {
    s_logger.debug("Can't aquire the lock for template pool ref: " + templatePoolVO.getId());
    return;
  }
  PrimaryDataStore pool=(PrimaryDataStore)_dataStoreMgr.getPrimaryDataStore(templatePoolVO.getPoolId());
  TemplateInfo template=_tmplFactory.getTemplate(templatePoolRef.getTemplateId(),pool);
  try {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Evicting " + templatePoolVO);
    }
    if (pool.isManaged()) {
      AsyncCallFuture<TemplateApiResult> future=_tmpltSvr.deleteTemplateOnPrimary(template,pool);
      TemplateApiResult result=future.get();
      if (result.isFailed()) {
        s_logger.debug("Failed to delete template " + template.getId() + " from storage pool "+ pool.getId());
      }
 else {
        if (_tmpltPoolDao.remove(templatePoolVO.getId())) {
          s_logger.debug("Successfully evicted template " + template.getName() + " from storage pool "+ pool.getName());
        }
      }
    }
 else {
      DestroyCommand cmd=new DestroyCommand(pool,templatePoolVO);
      Answer answer=_storageMgr.sendToPool(pool,cmd);
      if (answer != null && answer.getResult()) {
        if (_tmpltPoolDao.remove(templatePoolVO.getId())) {
          s_logger.debug("Successfully evicted template " + template.getName() + " from storage pool "+ pool.getName());
        }
      }
 else {
        s_logger.info("Will retry evict template " + template.getName() + " from storage pool "+ pool.getName());
      }
    }
  }
 catch (  StorageUnavailableException|InterruptedException|ExecutionException e) {
    s_logger.info("Storage is unavailable currently. Will retry evicte template " + template.getName() + " from storage pool "+ pool.getName());
  }
 finally {
    _tmpltPoolDao.releaseFromLockTable(templatePoolRef.getId());
  }
}
