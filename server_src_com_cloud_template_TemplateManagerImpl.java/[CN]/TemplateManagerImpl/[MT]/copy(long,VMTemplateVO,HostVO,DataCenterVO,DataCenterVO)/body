{
  List<HostVO> dstSecHosts=_ssvmMgr.listSecondaryStorageHostsInOneZone(dstZone.getId());
  long tmpltId=template.getId();
  long dstZoneId=dstZone.getId();
  if (dstSecHosts == null || dstSecHosts.isEmpty()) {
    throw new StorageUnavailableException("Destination zone is not ready",DataCenter.class,dstZone.getId());
  }
  AccountVO account=_accountDao.findById(template.getAccountId());
  VMTemplateHostVO srcTmpltHost=_tmpltHostDao.findByHostTemplate(srcSecHost.getId(),tmpltId);
  _resourceLimitMgr.checkResourceLimit(account,ResourceType.template);
  _resourceLimitMgr.checkResourceLimit(account,ResourceType.secondary_storage,new Long(srcTmpltHost.getSize()));
  String copyEventType;
  String createEventType;
  if (template.getFormat().equals(ImageFormat.ISO)) {
    copyEventType=EventTypes.EVENT_ISO_COPY;
    createEventType=EventTypes.EVENT_ISO_CREATE;
  }
 else {
    copyEventType=EventTypes.EVENT_TEMPLATE_COPY;
    createEventType=EventTypes.EVENT_TEMPLATE_CREATE;
  }
  Transaction txn=Transaction.currentTxn();
  txn.start();
  for (  HostVO dstSecHost : dstSecHosts) {
    VMTemplateHostVO dstTmpltHost=null;
    try {
      dstTmpltHost=_tmpltHostDao.findByHostTemplate(dstSecHost.getId(),tmpltId,true);
      if (dstTmpltHost != null) {
        dstTmpltHost=_tmpltHostDao.lockRow(dstTmpltHost.getId(),true);
        if (dstTmpltHost != null && dstTmpltHost.getDownloadState() == Status.DOWNLOADED) {
          if (dstTmpltHost.getDestroyed() == false) {
            return true;
          }
 else {
            dstTmpltHost.setDestroyed(false);
            _tmpltHostDao.update(dstTmpltHost.getId(),dstTmpltHost);
            return true;
          }
        }
 else         if (dstTmpltHost != null && dstTmpltHost.getDownloadState() == Status.DOWNLOAD_ERROR) {
          if (dstTmpltHost.getDestroyed() == true) {
            dstTmpltHost.setDestroyed(false);
            dstTmpltHost.setDownloadState(Status.NOT_DOWNLOADED);
            dstTmpltHost.setDownloadPercent(0);
            dstTmpltHost.setCopy(true);
            dstTmpltHost.setErrorString("");
            dstTmpltHost.setJobId(null);
            _tmpltHostDao.update(dstTmpltHost.getId(),dstTmpltHost);
          }
        }
      }
    }
  finally {
      txn.commit();
    }
    if (_downloadMonitor.copyTemplate(template,srcSecHost,dstSecHost)) {
      _tmpltDao.addTemplateToZone(template,dstZoneId);
      if (account.getId() != Account.ACCOUNT_ID_SYSTEM) {
        UsageEventUtils.publishUsageEvent(copyEventType,account.getId(),dstZoneId,tmpltId,null,null,null,srcTmpltHost.getSize(),template.getClass().getName(),template.getUuid());
      }
      return true;
    }
  }
  return false;
}
