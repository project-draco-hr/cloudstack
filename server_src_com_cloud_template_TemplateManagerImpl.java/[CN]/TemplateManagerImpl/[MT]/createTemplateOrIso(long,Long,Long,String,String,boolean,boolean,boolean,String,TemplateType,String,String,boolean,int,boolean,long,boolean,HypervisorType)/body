{
  try {
    ImageFormat imgfmt=ImageFormat.valueOf(format.toUpperCase());
    if (imgfmt == null) {
      throw new IllegalArgumentException("Image format is incorrect " + format + ". Supported formats are "+ EnumUtils.listValues(ImageFormat.values()));
    }
    String uriStr;
    if (url.startsWith("baremetal://")) {
      uriStr=url.substring("baremetal://".length());
    }
 else {
      URI uri=new URI(url);
      if ((uri.getScheme() == null) || (!uri.getScheme().equalsIgnoreCase("http") && !uri.getScheme().equalsIgnoreCase("https") && !uri.getScheme().equalsIgnoreCase("file"))) {
        throw new IllegalArgumentException("Unsupported scheme for url: " + url);
      }
      int port=uri.getPort();
      if (!(port == 80 || port == 443 || port == -1)) {
        throw new IllegalArgumentException("Only ports 80 and 443 are allowed");
      }
      String host=uri.getHost();
      try {
        InetAddress hostAddr=InetAddress.getByName(host);
        if (hostAddr.isAnyLocalAddress() || hostAddr.isLinkLocalAddress() || hostAddr.isLoopbackAddress()|| hostAddr.isMulticastAddress()) {
          throw new IllegalArgumentException("Illegal host specified in url");
        }
        if (hostAddr instanceof Inet6Address) {
          throw new IllegalArgumentException("IPV6 addresses not supported (" + hostAddr.getHostAddress() + ")");
        }
      }
 catch (      UnknownHostException uhe) {
        throw new IllegalArgumentException("Unable to resolve " + host);
      }
      uriStr=uri.toString();
    }
    UserVO user=_userDao.findById(userId);
    if (user == null) {
      throw new IllegalArgumentException("Unable to find user with id " + userId);
    }
    AccountVO account=_accountDao.findById(accountId);
    if (_accountMgr.resourceLimitExceeded(account,ResourceType.template)) {
      ResourceAllocationException rae=new ResourceAllocationException("Maximum number of templates and ISOs for account: " + account.getAccountName() + " has been exceeded.");
      rae.setResourceType("template");
      throw rae;
    }
    if (zoneId != null) {
      DataCenterVO zone=_dcDao.findById(zoneId);
      if (zone == null) {
        throw new IllegalArgumentException("Please specify a valid zone.");
      }
      Account caller=UserContext.current().getCaller();
      if (Grouping.AllocationState.Disabled == zone.getAllocationState() && !_accountMgr.isRootAdmin(caller.getType())) {
        throw new PermissionDeniedException("Cannot perform this operation, Zone is currently disabled: " + zoneId);
      }
    }
    List<VMTemplateVO> systemvmTmplts=_tmpltDao.listAllSystemVMTemplates();
    for (    VMTemplateVO template : systemvmTmplts) {
      if (template.getName().equalsIgnoreCase(name) || template.getDisplayText().equalsIgnoreCase(displayText)) {
        throw new IllegalArgumentException("Cannot use reserved names for templates");
      }
    }
    return create(userId,accountId,zoneId,name,displayText,isPublic,featured,isExtractable,imgfmt,diskType,uriStr,chksum,requiresHvm,bits,enablePassword,guestOSId,bootable,hypervisorType);
  }
 catch (  URISyntaxException e) {
    throw new IllegalArgumentException("Invalid URL " + url);
  }
}
