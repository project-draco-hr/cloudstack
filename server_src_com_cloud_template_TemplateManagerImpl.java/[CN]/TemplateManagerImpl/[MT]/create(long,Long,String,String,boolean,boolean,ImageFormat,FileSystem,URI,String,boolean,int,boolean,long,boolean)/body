{
  Account account=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  Long userId=(Long)params.get(BaseCmd.Properties.USER_ID.getName());
  String name=(String)params.get(BaseCmd.Properties.NAME.getName());
  String displayText=(String)params.get(BaseCmd.Properties.DISPLAY_TEXT.getName());
  Integer bits=(Integer)params.get(BaseCmd.Properties.BITS.getName());
  Boolean passwordEnabled=(Boolean)params.get(BaseCmd.Properties.PASSWORD_ENABLED.getName());
  Boolean requiresHVM=(Boolean)params.get(BaseCmd.Properties.REQUIRES_HVM.getName());
  String url=(String)params.get(BaseCmd.Properties.URL.getName());
  Boolean isPublic=(Boolean)params.get(BaseCmd.Properties.IS_PUBLIC.getName());
  Boolean featured=(Boolean)params.get(BaseCmd.Properties.IS_FEATURED.getName());
  String format=(String)params.get(BaseCmd.Properties.FORMAT.getName());
  Long guestOSId=(Long)params.get(BaseCmd.Properties.OS_TYPE_ID.getName());
  Long zoneId=(Long)params.get(BaseCmd.Properties.ZONE_ID.getName());
  if (bits == null) {
    bits=Integer.valueOf(64);
  }
  if (passwordEnabled == null) {
    passwordEnabled=false;
  }
  if (requiresHVM == null) {
    requiresHVM=true;
  }
  if (isPublic == null) {
    isPublic=Boolean.FALSE;
  }
  if (zoneId.longValue() == -1) {
    zoneId=null;
  }
  long accountId=1L;
  if (account != null) {
    accountId=account.getId().longValue();
  }
  Account accountObj;
  if (account == null) {
    accountObj=getManagementServer().findAccountById(accountId);
  }
 else {
    accountObj=account;
  }
  boolean isAdmin=(accountObj.getType() == Account.ACCOUNT_TYPE_ADMIN);
  if (!isAdmin && zoneId == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Please specify a valid zone Id.");
  }
  if (url.toLowerCase().contains("file://")) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"File:// type urls are currently unsupported");
  }
  if ((!url.toLowerCase().endsWith("vhd")) && (!url.toLowerCase().endsWith("vhd.zip")) && (!url.toLowerCase().endsWith("vhd.bz2"))&& (!url.toLowerCase().endsWith("vhd.gz") && (!url.toLowerCase().endsWith("qcow2")) && (!url.toLowerCase().endsWith("qcow2.zip"))&& (!url.toLowerCase().endsWith("qcow2.bz2"))&& (!url.toLowerCase().endsWith("qcow2.gz")))) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Please specify a valid " + format.toLowerCase());
  }
  boolean allowPublicUserTemplates=Boolean.parseBoolean(getManagementServer().getConfigurationValue("allow.public.user.templates"));
  if (!isAdmin && !allowPublicUserTemplates && isPublic) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Only private templates can be created.");
  }
  if (!isAdmin || featured == null) {
    featured=Boolean.FALSE;
  }
  if (userId == null) {
    userId=Long.valueOf(1);
  }
  Long id=_tmpltDao.getNextInSequence(Long.class,"id");
  UserVO user=_userDao.findById(userId);
  long accountId=user.getAccountId();
  AccountVO account=_accountDao.findById(accountId);
  if (account.getType() != Account.ACCOUNT_TYPE_ADMIN && zoneId == null) {
    throw new IllegalArgumentException("Only admins can create templates in all zones");
  }
  VMTemplateVO template=new VMTemplateVO(id,name,format,isPublic,featured,fs,url.toString(),requiresHvm,bits,accountId,chksum,displayText,enablePassword,guestOSId,bootable);
  if (zoneId == null) {
    List<DataCenterVO> dcs=_dcDao.listAll();
    for (    DataCenterVO dc : dcs) {
      _tmpltDao.addTemplateToZone(template,dc.getId());
    }
    template.setCrossZones(true);
  }
 else {
    _tmpltDao.addTemplateToZone(template,zoneId);
  }
  UserAccount userAccount=_userAccountDao.findById(userId);
  _downloadMonitor.downloadTemplateToStorage(id,zoneId);
  _accountMgr.incrementResourceCount(userAccount.getAccountId(),ResourceType.template);
  return id;
}
