{
  VMTemplateVO template=_tmpltDao.findById(templ.getId(),true);
  long poolId=pool.getId();
  long templateId=template.getId();
  VMTemplateStoragePoolVO templateStoragePoolRef=null;
  TemplateDataStoreVO templateStoreRef=null;
  templateStoragePoolRef=_tmpltPoolDao.findByPoolTemplate(poolId,templateId);
  if (templateStoragePoolRef != null) {
    templateStoragePoolRef.setMarkedForGC(false);
    _tmpltPoolDao.update(templateStoragePoolRef.getId(),templateStoragePoolRef);
    if (templateStoragePoolRef.getDownloadState() == Status.DOWNLOADED) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Template " + templateId + " has already been downloaded to pool "+ poolId);
      }
      return templateStoragePoolRef;
    }
  }
  templateStoreRef=this._tmplStoreDao.findByTemplateZoneDownloadStatus(templateId,pool.getDataCenterId(),VMTemplateStorageResourceAssoc.Status.DOWNLOADED);
  if (templateStoreRef == null) {
    s_logger.error("Unable to find a secondary storage host who has completely downloaded the template.");
    return null;
  }
  List<StoragePoolHostVO> vos=_poolHostDao.listByHostStatus(poolId,com.cloud.host.Status.Up);
  if (vos == null || vos.isEmpty()) {
    throw new CloudRuntimeException("Cannot download " + templateId + " to poolId "+ poolId+ " since there is no host in the Up state connected to this pool");
  }
  if (templateStoragePoolRef == null) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Downloading template " + templateId + " to pool "+ poolId);
    }
    DataStore srcSecStore=this._dataStoreMgr.getDataStore(templateStoreRef.getDataStoreId(),DataStoreRole.Image);
    TemplateInfo srcTemplate=this._tmplFactory.getTemplate(templateId,srcSecStore);
    AsyncCallFuture<TemplateApiResult> future=this._tmpltSvr.prepareTemplateOnPrimary(srcTemplate,pool);
    try {
      TemplateApiResult result=future.get();
      if (result.isFailed()) {
        s_logger.debug("prepare template failed:" + result.getResult());
        return null;
      }
      return _tmpltPoolDao.findByPoolTemplate(poolId,templateId);
    }
 catch (    Exception ex) {
      s_logger.debug("failed to copy template from image store:" + srcSecStore.getName() + " to primary storage");
    }
  }
  return null;
}
