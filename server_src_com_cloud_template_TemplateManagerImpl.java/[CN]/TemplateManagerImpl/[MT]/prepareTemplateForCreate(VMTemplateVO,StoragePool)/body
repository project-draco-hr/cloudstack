{
  template=_tmpltDao.findById(template.getId(),true);
  long poolId=pool.getId();
  long templateId=template.getId();
  VMTemplateStoragePoolVO templateStoragePoolRef=null;
  VMTemplateHostVO templateHostRef=null;
  long templateStoragePoolRefId;
  String origUrl=null;
  templateStoragePoolRef=_tmpltPoolDao.findByPoolTemplate(poolId,templateId);
  if (templateStoragePoolRef != null) {
    templateStoragePoolRef.setMarkedForGC(false);
    _tmpltPoolDao.update(templateStoragePoolRef.getId(),templateStoragePoolRef);
    if (templateStoragePoolRef.getDownloadState() == Status.DOWNLOADED) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Template " + templateId + " has already been downloaded to pool "+ poolId);
      }
      return templateStoragePoolRef;
    }
  }
  templateHostRef=_storageMgr.findVmTemplateHost(templateId,pool.getDataCenterId(),pool.getPodId());
  if (templateHostRef == null) {
    s_logger.debug("Unable to find a secondary storage host who has completely downloaded the template.");
    return null;
  }
  HostVO sh=_hostDao.findById(templateHostRef.getHostId());
  origUrl=sh.getStorageUrl();
  if (origUrl == null) {
    throw new CloudRuntimeException("Unable to find the orig.url from host " + sh.toString());
  }
  if (templateStoragePoolRef == null) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Downloading template " + templateId + " to pool "+ poolId);
    }
    templateStoragePoolRef=new VMTemplateStoragePoolVO(poolId,templateId);
    try {
      templateStoragePoolRef=_tmpltPoolDao.persist(templateStoragePoolRef);
      templateStoragePoolRefId=templateStoragePoolRef.getId();
    }
 catch (    Exception e) {
      s_logger.debug("Assuming we're in a race condition: " + e.getMessage());
      templateStoragePoolRef=_tmpltPoolDao.findByPoolTemplate(poolId,templateId);
      if (templateStoragePoolRef == null) {
        throw new CloudRuntimeException("Unable to persist a reference for pool " + poolId + " and template "+ templateId);
      }
      templateStoragePoolRefId=templateStoragePoolRef.getId();
    }
  }
 else {
    templateStoragePoolRefId=templateStoragePoolRef.getId();
  }
  List<StoragePoolHostVO> vos=_poolHostDao.listByPoolId(poolId);
  templateStoragePoolRef=_tmpltPoolDao.acquireInLockTable(templateStoragePoolRefId,1200);
  if (templateStoragePoolRef == null) {
    throw new CloudRuntimeException("Unable to acquire lock on VMTemplateStoragePool: " + templateStoragePoolRefId);
  }
  try {
    if (templateStoragePoolRef.getDownloadState() == Status.DOWNLOADED) {
      return templateStoragePoolRef;
    }
    String url=origUrl + "/" + templateHostRef.getInstallPath();
    PrimaryStorageDownloadCommand dcmd=new PrimaryStorageDownloadCommand(template.getUniqueName(),url,template.getFormat(),template.getAccountId(),pool.getId(),pool.getUuid());
    HostVO secondaryStorageHost=_hostDao.findById(templateHostRef.getHostId());
    assert(secondaryStorageHost != null);
    dcmd.setSecondaryStorageUrl(secondaryStorageHost.getStorageUrl());
    dcmd.setPrimaryStorageUrl("nfs://" + pool.getHostAddress() + pool.getPath());
    for (    StoragePoolHostVO vo : vos) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Downloading " + templateId + " via "+ vo.getHostId());
      }
      dcmd.setLocalPath(vo.getLocalPath());
      PrimaryStorageDownloadAnswer answer=(PrimaryStorageDownloadAnswer)_agentMgr.easySend(_hvGuruMgr.getGuruProcessedCommandTargetHost(vo.getHostId(),dcmd),dcmd,120 * 60 * 1000);
      if (answer != null && answer.getResult()) {
        templateStoragePoolRef.setDownloadPercent(100);
        templateStoragePoolRef.setDownloadState(Status.DOWNLOADED);
        templateStoragePoolRef.setLocalDownloadPath(answer.getInstallPath());
        templateStoragePoolRef.setInstallPath(answer.getInstallPath());
        templateStoragePoolRef.setTemplateSize(answer.getTemplateSize());
        _tmpltPoolDao.update(templateStoragePoolRef.getId(),templateStoragePoolRef);
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Template " + templateId + " is downloaded via "+ vo.getHostId());
        }
        return templateStoragePoolRef;
      }
 else {
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Template " + templateId + " download to pool "+ vo.getPoolId()+ " failed due to "+ (answer != null ? answer.getDetails() : "return null"));
        }
      }
    }
  }
  finally {
    _tmpltPoolDao.releaseFromLockTable(templateStoragePoolRefId);
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Template " + templateId + " is not found on and can not be downloaded to pool "+ poolId);
  }
  return null;
}
