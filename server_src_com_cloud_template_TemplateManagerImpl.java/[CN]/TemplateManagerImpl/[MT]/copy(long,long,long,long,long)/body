{
  HostVO srcSecHost=_storageMgr.getSecondaryStorageHost(sourceZoneId);
  HostVO dstSecHost=_storageMgr.getSecondaryStorageHost(destZoneId);
  DataCenterVO destZone=_dcDao.findById(destZoneId);
  if (srcSecHost == null) {
    throw new StorageUnavailableException("Source zone is not ready");
  }
  if (dstSecHost == null) {
    throw new StorageUnavailableException("Destination zone is not ready");
  }
  VMTemplateVO vmTemplate=_tmpltDao.findById(templateId);
  if (vmTemplate == null) {
    throw new InvalidParameterValueException("Invalid or illegal template id");
  }
  VMTemplateHostVO srcTmpltHost=null;
  srcTmpltHost=_tmpltHostDao.findByHostTemplate(srcSecHost.getId(),templateId);
  if (srcTmpltHost == null) {
    throw new InvalidParameterValueException("Template " + vmTemplate.getName() + " not associated with "+ srcSecHost.getName());
  }
  EventVO event=new EventVO();
  event.setUserId(userId);
  event.setAccountId(vmTemplate.getAccountId());
  event.setType(EventTypes.EVENT_TEMPLATE_COPY);
  event.setState(EventState.Started);
  event.setDescription("Copying template with Id: " + templateId);
  event.setStartId(startEventId);
  event=_eventDao.persist(event);
  String params="id=" + templateId + "\ndcId="+ destZoneId+ "\nsize="+ srcTmpltHost.getSize();
  Account account=_accountDao.findById(vmTemplate.getAccountId());
  String copyEventType;
  String copyEventDescription;
  String createEventType;
  String createEventDescription;
  String templateType;
  if (vmTemplate.getFormat().equals(ImageFormat.ISO)) {
    copyEventType=EventTypes.EVENT_ISO_COPY;
    createEventType=EventTypes.EVENT_ISO_CREATE;
    templateType="ISO ";
  }
 else {
    copyEventType=EventTypes.EVENT_TEMPLATE_COPY;
    createEventType=EventTypes.EVENT_TEMPLATE_CREATE;
    templateType="Template ";
  }
  copyEventDescription=templateType + vmTemplate.getName() + " started copying to zone: "+ destZone.getName()+ ".";
  createEventDescription=templateType + vmTemplate.getName() + " succesfully created in zone: "+ destZone.getName()+ ".";
  Transaction txn=Transaction.currentTxn();
  txn.start();
  VMTemplateHostVO dstTmpltHost=null;
  try {
    dstTmpltHost=_tmpltHostDao.findByHostTemplate(dstSecHost.getId(),templateId,true);
    if (dstTmpltHost != null) {
      dstTmpltHost=_tmpltHostDao.lock(dstTmpltHost.getId(),true);
      if (dstTmpltHost != null && dstTmpltHost.getDownloadState() == Status.DOWNLOADED) {
        if (dstTmpltHost.getDestroyed() == false) {
          return true;
        }
 else {
          dstTmpltHost.setDestroyed(false);
          _tmpltHostDao.update(dstTmpltHost.getId(),dstTmpltHost);
          saveEvent(userId,account.getId(),account.getDomainId(),copyEventType,copyEventDescription,EventVO.LEVEL_INFO,params);
          saveEvent(userId,account.getId(),account.getDomainId(),createEventType,createEventDescription,EventVO.LEVEL_INFO,params);
          return true;
        }
      }
 else       if (dstTmpltHost != null && dstTmpltHost.getDownloadState() == Status.DOWNLOAD_ERROR) {
        if (dstTmpltHost.getDestroyed() == true) {
          dstTmpltHost.setDestroyed(false);
          dstTmpltHost.setDownloadState(Status.NOT_DOWNLOADED);
          dstTmpltHost.setDownloadPercent(0);
          dstTmpltHost.setCopy(true);
          dstTmpltHost.setErrorString("");
          dstTmpltHost.setJobId(null);
          _tmpltHostDao.update(dstTmpltHost.getId(),dstTmpltHost);
        }
      }
    }
  }
  finally {
    txn.commit();
  }
  _tmpltDao.addTemplateToZone(vmTemplate,destZoneId);
  _downloadMonitor.copyTemplate(vmTemplate,srcSecHost,dstSecHost);
  saveEvent(userId,account.getId(),account.getDomainId(),copyEventType,copyEventDescription,EventVO.LEVEL_INFO,params,startEventId);
  return true;
}
