{
  Long templateId=cmd.getId();
  Account caller=UserContext.current().getCaller();
  Long zoneId=cmd.getZoneId();
  VirtualMachineTemplate template=getTemplate(templateId);
  ;
  if (template == null) {
    throw new InvalidParameterValueException("unable to find iso with id " + templateId);
  }
  _accountMgr.checkAccess(caller,AccessType.ModifyEntry,true,template);
  if (template.getFormat() != ImageFormat.ISO) {
    throw new InvalidParameterValueException("Please specify a valid iso.");
  }
  if (cmd.getZoneId() == null && _swiftMgr.isSwiftEnabled()) {
    _swiftMgr.deleteIso(cmd);
  }
  if (cmd.getZoneId() == null && _s3Mgr.isS3Enabled()) {
    _s3Mgr.deleteTemplate(caller.getAccountId(),templateId);
  }
  if (zoneId != null && (_ssvmMgr.findSecondaryStorageHost(zoneId) == null)) {
    throw new InvalidParameterValueException("Failed to find a secondary storage host in the specified zone.");
  }
  TemplateAdapter adapter=getAdapter(template.getHypervisorType());
  TemplateProfile profile=adapter.prepareDelete(cmd);
  boolean result=adapter.delete(profile);
  if (result) {
    if (cmd.getZoneId() == null && (_swiftMgr.isSwiftEnabled() || _s3Mgr.isS3Enabled())) {
      List<VMTemplateZoneVO> templateZones=_tmpltZoneDao.listByZoneTemplate(null,templateId);
      if (templateZones != null) {
        for (        VMTemplateZoneVO templateZone : templateZones) {
          _tmpltZoneDao.remove(templateZone.getId());
        }
      }
    }
    return true;
  }
 else {
    throw new CloudRuntimeException("Failed to delete ISO");
  }
}
