{
  byte[] challenge=new byte[16];
  is.readFully(challenge);
  byte[] response;
  try {
    response=encodePassword(challenge,password);
  }
 catch (  Exception e) {
    s_logger.error("Cannot encrypt client password to send to server: " + e.getMessage());
    throw new RuntimeException("Cannot encrypt client password to send to server: " + e.getMessage());
  }
  os.write(response);
  os.flush();
  int authResult=is.readInt();
switch (authResult) {
case RfbConstants.VNC_AUTH_OK:
{
      break;
    }
case RfbConstants.VNC_AUTH_TOO_MANY:
  s_logger.error("Connection to VNC server failed: too many wrong attempts.");
throw new RuntimeException("Connection to VNC server failed: too many wrong attempts.");
case RfbConstants.VNC_AUTH_FAILED:
s_logger.error("Connection to VNC server failed: wrong password.");
throw new RuntimeException("Connection to VNC server failed: wrong password.");
default :
s_logger.error("Connection to VNC server failed, reason code: " + authResult);
throw new RuntimeException("Connection to VNC server failed, reason code: " + authResult);
}
}
