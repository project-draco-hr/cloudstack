{
  Map<AgentResourceBase,Map<String,String>> resources;
  try {
    if (uri.getScheme().equals("http")) {
      if (!uri.getAuthority().contains("sim")) {
        String msg="uri is not of simulator type so we're not taking care of the discovery for this: " + uri;
        s_logger.debug(msg);
        return null;
      }
    }
 else {
      String msg="uriString is not http so we're not taking care of the discovery for this: " + uri;
      s_logger.debug(msg);
      return null;
    }
    String cluster=null;
    if (clusterId == null) {
      String msg="must specify cluster Id when adding host";
      s_logger.debug(msg);
      throw new RuntimeException(msg);
    }
 else {
      cluster=Long.toString(clusterId);
    }
    String pod;
    if (podId == null) {
      String msg="must specify pod Id when adding host";
      s_logger.debug(msg);
      throw new RuntimeException(msg);
    }
 else {
      pod=Long.toString(podId);
    }
    Map<String,String> details=new HashMap<String,String>();
    Map<String,Object> params=new HashMap<String,Object>();
    details.put("username",username);
    params.put("username",username);
    details.put("password",password);
    params.put("password",password);
    params.put("zone",Long.toString(dcId));
    params.put("pod",pod);
    params.put("cluster",cluster);
    resources=createAgentResources(params);
    return resources;
  }
 catch (  Exception ex) {
    s_logger.error("Exception when discovering simulator hosts: " + ex.getMessage());
  }
  return null;
}
