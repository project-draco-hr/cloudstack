{
  Long userId=(Long)params.get(BaseCmd.Properties.ID.getName());
  String username=(String)params.get(BaseCmd.Properties.USERNAME.getName());
  String password=(String)params.get(BaseCmd.Properties.PASSWORD.getName());
  String firstname=(String)params.get(BaseCmd.Properties.FIRSTNAME.getName());
  String lastname=(String)params.get(BaseCmd.Properties.LASTNAME.getName());
  String email=(String)params.get(BaseCmd.Properties.EMAIL.getName());
  String timezone=(String)params.get(BaseCmd.Properties.TIMEZONE.getName());
  String apiKey=(String)params.get(BaseCmd.Properties.API_KEY.getName());
  String secretKey=(String)params.get(BaseCmd.Properties.SECRET_KEY.getName());
  User user=getManagementServer().getUser(userId.longValue());
  if (user == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find user by id");
  }
  if ((apiKey == null && secretKey != null) || (apiKey != null && secretKey == null)) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Please provide an api key/secret key pair");
  }
  Account account=getManagementServer().findAccountById(user.getAccountId());
  if (account != null && (account.getId() == Account.ACCOUNT_ID_SYSTEM)) {
    throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"user id : " + userId + " is system account, update is not allowed");
  }
  if (firstname == null) {
    firstname=user.getFirstname();
  }
  if (lastname == null) {
    lastname=user.getLastname();
  }
  if (username == null) {
    username=user.getUsername();
  }
  if (password == null) {
    password=user.getPassword();
  }
  if (email == null) {
    email=user.getEmail();
  }
  if (timezone == null) {
    timezone=user.getTimezone();
  }
  if (apiKey == null) {
    apiKey=user.getApiKey();
  }
  if (secretKey == null) {
    secretKey=user.getSecretKey();
  }
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  boolean success=false;
  try {
    success=getManagementServer().updateUser(user.getId(),username,password,firstname,lastname,email,timezone,apiKey,secretKey);
  }
 catch (  InvalidParameterValueException e) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,e.getMessage());
  }
  if (success) {
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.SUCCESS.getName(),Boolean.valueOf(success).toString()));
  }
 else {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"failed to update user");
  }
  return returnValues;
}
