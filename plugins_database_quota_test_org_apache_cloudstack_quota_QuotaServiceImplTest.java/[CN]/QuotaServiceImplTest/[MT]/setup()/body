{
  TransactionLegacy.open("QuotaServiceImplTest");
  Field accountDaoField=QuotaServiceImpl.class.getDeclaredField("_accountDao");
  accountDaoField.setAccessible(true);
  accountDaoField.set(quotaService,accountDao);
  Field quotaAccountDaoField=QuotaServiceImpl.class.getDeclaredField("_quotaAcc");
  quotaAccountDaoField.setAccessible(true);
  quotaAccountDaoField.set(quotaService,quotaAcc);
  Field quotaUsageDaoField=QuotaServiceImpl.class.getDeclaredField("_quotaUsageDao");
  quotaUsageDaoField.setAccessible(true);
  quotaUsageDaoField.set(quotaService,quotaUsageDao);
  Field domainDaoField=QuotaServiceImpl.class.getDeclaredField("_domainDao");
  domainDaoField.setAccessible(true);
  domainDaoField.set(quotaService,domainDao);
  Field configDaoField=QuotaServiceImpl.class.getDeclaredField("_configDao");
  configDaoField.setAccessible(true);
  configDaoField.set(quotaService,configDao);
  Field balanceDaoField=QuotaServiceImpl.class.getDeclaredField("_quotaBalanceDao");
  balanceDaoField.setAccessible(true);
  balanceDaoField.set(quotaService,quotaBalanceDao);
  Field QuotaResponseBuilderField=QuotaServiceImpl.class.getDeclaredField("_respBldr");
  QuotaResponseBuilderField.setAccessible(true);
  QuotaResponseBuilderField.set(quotaService,respBldr);
  Mockito.when(configDao.getValue(Mockito.eq(Config.UsageAggregationTimezone.toString()))).thenReturn("IST");
  Mockito.when(configDao.getValue(Mockito.eq(Config.UsageStatsJobAggregationRange.toString()))).thenReturn("1");
  quotaService.configure("randomName",null);
}
