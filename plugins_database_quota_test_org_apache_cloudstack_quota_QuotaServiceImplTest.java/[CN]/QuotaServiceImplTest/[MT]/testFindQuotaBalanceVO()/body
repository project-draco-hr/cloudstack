{
  final long accountId=2L;
  final String accountName="admin123";
  final long domainId=1L;
  final Date startDate=new DateTime().minusDays(2).toDate();
  final Date endDate=new Date();
  List<QuotaBalanceVO> records=new ArrayList<>();
  QuotaBalanceVO qb=new QuotaBalanceVO();
  qb.setCreditBalance(new BigDecimal(100));
  qb.setAccountId(accountId);
  records.add(qb);
  Mockito.when(respBldr.startOfNextDay()).thenReturn(endDate);
  Mockito.when(respBldr.startOfNextDay(Mockito.any(Date.class))).thenReturn(startDate);
  Mockito.when(quotaBalanceDao.findQuotaBalance(Mockito.eq(accountId),Mockito.eq(domainId),Mockito.any(Date.class),Mockito.any(Date.class))).thenReturn(records);
  Mockito.when(quotaBalanceDao.lastQuotaBalanceVO(Mockito.eq(accountId),Mockito.eq(domainId),Mockito.any(Date.class))).thenReturn(records);
  assertTrue(quotaService.findQuotaBalanceVO(accountId,accountName,domainId,startDate,endDate).get(0).equals(qb));
  assertTrue(quotaService.findQuotaBalanceVO(accountId,accountName,domainId,startDate,null).get(0).equals(qb));
}
