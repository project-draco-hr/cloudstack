{
  DataTO srcData=cmd.getSrcTO();
  DataStoreTO srcStore=srcData.getDataStore();
  DataTO destData=cmd.getDestTO();
  DataStoreTO destStore=destData.getDataStore();
  try {
    if ((srcStore instanceof NfsTO) && (srcData.getObjectType() == DataObjectType.TEMPLATE) && (destData.getObjectType() == DataObjectType.TEMPLATE)) {
      NfsTO srcImageStore=(NfsTO)srcStore;
      TemplateObjectTO srcTemplate=(TemplateObjectTO)srcData;
      String storeUrl=srcImageStore.getUrl();
      URI uri=new URI(storeUrl);
      String secPoolUuid=setupSecondaryStorage(storeUrl);
      String primaryPoolUuid=destData.getDataStore().getUuid();
      String destPath=this._ovmRepo + "/" + _ovmObject.deDash(primaryPoolUuid)+ "/"+ "Templates";
      String sourcePath=this._ovmSec + "/" + secPoolUuid;
      Linux host=new Linux(c);
      String destUuid=srcTemplate.getUuid();
      String srcFile=sourcePath + "/" + srcData.getPath();
      if (srcData.getPath().endsWith("/")) {
        srcFile=sourcePath + "/" + srcData.getPath()+ "/"+ destUuid+ ".raw";
      }
      String destFile=destPath + "/" + destUuid+ ".raw";
      s_logger.debug("CopyFrom: " + srcData.getObjectType() + ","+ srcFile+ " to "+ destData.getObjectType()+ ","+ destFile);
      host.copyFile(srcFile,destFile);
      TemplateObjectTO newVol=new TemplateObjectTO();
      newVol.setUuid(destUuid);
      newVol.setPath(destPath);
      newVol.setFormat(ImageFormat.RAW);
      return new CopyCmdAnswer(newVol);
    }
 else     if ((srcData.getObjectType() == DataObjectType.TEMPLATE) && (destData.getObjectType() == DataObjectType.VOLUME)) {
      if (srcStore.getUrl().equals(destStore.getUrl())) {
        TemplateObjectTO srcTemplate=(TemplateObjectTO)srcData;
        VolumeObjectTO dstVolume=(VolumeObjectTO)destData;
        String srcFile=srcTemplate.getPath() + "/" + srcTemplate.getUuid()+ ".raw";
        String vDisksPath=srcTemplate.getPath().replace("Templates","VirtualDisks");
        String destFile=vDisksPath + "/" + dstVolume.getUuid()+ ".raw";
        Linux host=new Linux(c);
        s_logger.debug("CopyFrom: " + srcData.getObjectType() + ","+ srcFile+ " to "+ destData.getObjectType()+ ","+ destFile);
        host.copyFile(srcFile,destFile);
        VolumeObjectTO newVol=new VolumeObjectTO();
        newVol.setUuid(dstVolume.getUuid());
        newVol.setPath(vDisksPath);
        newVol.setFormat(ImageFormat.RAW);
        return new CopyCmdAnswer(newVol);
      }
 else {
        s_logger.debug("Primary to Primary doesn't match");
      }
    }
 else {
      String msg="Unable to do stuff for " + srcStore.getClass() + ":"+ srcData.getObjectType()+ " to "+ destStore.getClass()+ ":"+ destData.getObjectType();
      s_logger.debug(msg);
    }
  }
 catch (  Exception e) {
    String msg="Catch Exception " + e.getClass().getName() + " for template due to "+ e.toString();
    s_logger.warn(msg,e);
    return new CopyCmdAnswer(msg);
  }
  return new CopyCmdAnswer("not implemented yet");
}
