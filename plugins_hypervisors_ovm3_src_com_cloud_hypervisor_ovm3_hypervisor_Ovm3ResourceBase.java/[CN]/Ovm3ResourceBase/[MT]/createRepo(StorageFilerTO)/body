{
  String basePath=this._ovmRepo;
  Repository repo=new Repository(c);
  String primUuid=repo.deDash(cmd.getUuid());
  String ovsRepo=basePath + "/" + primUuid;
  String mountPoint=String.format("%1$s:%2$s",cmd.getHost(),cmd.getPath());
  String msg;
  if (cmd.getType() == StoragePoolType.NetworkFilesystem) {
    repo.mountRepoFs(mountPoint,ovsRepo);
    s_logger.debug("NFS repository " + mountPoint + " on "+ ovsRepo+ " requested for "+ _host);
    try {
      repo.addRepo(mountPoint,ovsRepo);
    }
 catch (    Exception e) {
      s_logger.debug("NFS repository " + mountPoint + " on "+ ovsRepo+ " not found creating!");
      try {
        repo.createRepo(mountPoint,ovsRepo,primUuid,"OVS Reposutory");
      }
 catch (      Exception es) {
        msg="NFS repository " + mountPoint + " on "+ ovsRepo+ " create failed!";
        s_logger.debug(msg);
        throw new CloudRuntimeException(msg + " " + es.getMessage(),es);
      }
    }
    if (this._ovm3pool) {
      try {
        msg="Configuring host for pool";
        s_logger.debug(msg);
        setupPool(cmd);
        msg="Configured host for pool";
        if (this._ovm3cluster) {
          msg="Configuring host for cluster";
          s_logger.debug(msg);
          msg="Configuring host for cluster";
        }
      }
 catch (      Exception e) {
        msg="Unable to setup pool on " + ovsRepo;
        s_logger.debug(msg);
        throw new CloudRuntimeException(msg + " " + e.getMessage(),e);
      }
    }
 else {
      msg="no way dude I can't stand for this";
      s_logger.debug(msg);
    }
    try {
      URI uri=new URI(cmd.getType() + "://" + cmd.getHost()+ ":"+ +cmd.getPort()+ cmd.getPath()+ "/VirtualMachines");
      this.setupNfsStorage(uri,cmd.getUuid());
    }
 catch (    Exception e) {
      msg="NFS mount " + mountPoint + " on "+ _ovmSec+ "/"+ cmd.getUuid()+ " create failed!";
      s_logger.debug(msg);
      throw new CloudRuntimeException(msg + " " + e.getMessage(),e);
    }
  }
 else {
    msg="NFS repository " + mountPoint + " on "+ ovsRepo+ " create failed, was type "+ cmd.getType();
    s_logger.debug(msg);
    return false;
  }
  try {
    prepareSecondaryStorageStore(ovsRepo);
  }
 catch (  Exception e) {
    msg="systemvm.iso copy failed to " + ovsRepo;
    s_logger.debug(msg);
    return false;
  }
  return true;
}
