{
  StorageFilerTO pool=cmd.getPool();
  s_logger.debug("modifying pool " + pool);
  try {
    if (pool.getType() == StoragePoolType.NetworkFilesystem) {
      createRepo(pool);
    }
 else     if (pool.getType() == StoragePoolType.OCFS2) {
      createOCFS2Sr(pool);
    }
 else {
      return new Answer(cmd,false,"The pool type: " + pool.getType().name() + " is not supported.");
    }
    if (this._ovm3cluster) {
    }
    StoragePlugin store=new StoragePlugin(c);
    String propUuid=store.deDash(pool.getUuid());
    String mntUuid=pool.getUuid();
    String nfsHost=pool.getHost();
    String nfsPath=pool.getPath();
    store.setUuid(propUuid);
    store.setSsUuid(propUuid);
    store.setMntUuid(mntUuid);
    store.setFsHost(nfsHost);
    store.setFsSourcePath(nfsHost + ":" + nfsPath);
    store.storagePluginGetFileSystemInfo();
    Map<String,TemplateProp> tInfo=new HashMap<String,TemplateProp>();
    ModifyStoragePoolAnswer answer=new ModifyStoragePoolAnswer(cmd,Long.parseLong(store.getTotalSize()),Long.parseLong(store.getFreeSize()),tInfo);
    return answer;
  }
 catch (  Exception e) {
    s_logger.debug("ModifyStoragePoolCommand failed",e);
    return new Answer(cmd,false,e.getMessage());
  }
}
