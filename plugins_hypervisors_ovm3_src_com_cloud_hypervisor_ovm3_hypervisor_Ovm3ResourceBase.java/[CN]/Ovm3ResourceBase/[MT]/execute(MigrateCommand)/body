{
  final String vmName=cmd.getVmName();
  String destUuid=cmd.getHostGuid();
  String destIp=cmd.getDestinationIp();
  State state=State.Error;
  String msg="Migrating " + vmName + " to "+ destIp;
  s_logger.info(msg);
  if (!this._ovm3cluster && !this._ovm3pool) {
    try {
      Xen xen=new Xen(c);
      Xen.Vm vm=xen.getRunningVmConfig(vmName);
      HostVO destHost=_resourceMgr.findHostByGuid(destUuid);
      if (destHost == null) {
        msg="Unable to find migration target host in DB " + destUuid + " with ip "+ destIp;
        s_logger.info(msg);
        return new MigrateAnswer(cmd,false,msg,null);
      }
      xen.stopVm(_ovmObject.deDash(vm.getVmRootDiskPoolId()),vm.getVmUuid());
      msg=destHost.toString();
      state=State.Stopping;
      return new MigrateAnswer(cmd,false,msg,null);
    }
 catch (    Exception e) {
      msg="Unpooled VM Migrate of " + vmName + " to "+ destUuid+ " failed due to: "+ e.getMessage();
      s_logger.debug(msg,e);
      return new MigrateAnswer(cmd,false,msg,null);
    }
 finally {
synchronized (_vmstates) {
        _vmstates.put(vmName,state);
      }
    }
  }
 else {
    try {
      Xen xen=new Xen(c);
      Xen.Vm vm=xen.getRunningVmConfig(vmName);
      if (vm == null) {
        state=State.Stopped;
        msg=vmName + " is no running on " + _host;
        return new MigrateAnswer(cmd,false,msg,null);
      }
      xen.migrateVm(_ovmObject.deDash(vm.getVmRootDiskPoolId()),vm.getVmUuid(),destIp);
      state=State.Stopping;
      msg="Migration of " + vmName + " successfull";
      return new MigrateAnswer(cmd,true,msg,null);
    }
 catch (    Exception e) {
      msg="Pooled VM Migrate" + ": Migration of " + vmName + " to "+ destIp+ " failed due to "+ e.getMessage();
      s_logger.debug(msg,e);
      return new MigrateAnswer(cmd,false,msg,null);
    }
 finally {
synchronized (_vmstates) {
        _vmstates.put(vmName,state);
      }
    }
  }
}
