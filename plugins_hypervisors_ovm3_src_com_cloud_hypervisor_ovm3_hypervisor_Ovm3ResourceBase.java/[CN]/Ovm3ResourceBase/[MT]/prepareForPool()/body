{
  try {
    Linux host=new Linux(c);
    Pool pool=new Pool(c);
    if (host.getServerRoles().contentEquals(pool.getValidRoles().toString())) {
      s_logger.debug("Server role for host " + _host + " is ok");
    }
 else {
      try {
        pool.setServerRoles(pool.getValidRoles());
      }
 catch (      Exception e) {
        s_logger.debug("Failed to set server role for host " + _host,e);
        throw new ConfigurationException("Unable to set server role for host");
      }
    }
    if (host.getMembershipState().contentEquals("Unowned")) {
      try {
        s_logger.debug("Take ownership of host " + _host);
        pool.takeOwnership(_masterUuid,"");
      }
 catch (      Exception e) {
        String msg="Failed to take ownership of host " + _host;
        s_logger.debug(msg,e);
        throw new ConfigurationException(msg);
      }
    }
 else {
      if (host.getManagerUuid().equals(_masterUuid)) {
        String msg="Host " + _host + " owned by us";
        s_logger.debug(msg);
        return true;
      }
 else {
        String msg="Host " + _host + " already part of a pool, and not owned by us";
        s_logger.debug(msg);
        throw new ConfigurationException(msg);
      }
    }
  }
 catch (  Exception es) {
    String msg="Failed to prepare " + _host + " for pool";
    s_logger.debug(msg,es);
    throw new ConfigurationException(msg + ": " + es.getMessage());
  }
  return true;
}
