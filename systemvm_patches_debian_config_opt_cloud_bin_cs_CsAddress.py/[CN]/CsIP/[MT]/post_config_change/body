def post_config_change(self, method):
    route = CsRoute()
    if (method == 'add'):
        route.add_table(self.dev)
        route.add_route(self.dev, str(self.address['network']))
    elif (method == 'delete'):
        logging.warn('delete route not implemented')
    self.fw_router()
    self.fw_vpcrouter()
    if (self.get_type() in 'guest'):
        if (self.config.is_vpc() or self.config.is_router()):
            CsDevice(self.dev, self.config).configure_rp()
            logging.error('Not able to setup source-nat for a regular router yet')
        if (self.config.has_dns() or self.config.is_dhcp()):
            dns = CsDnsmasq(self)
            dns.add_firewall_rules()
        if self.config.has_metadata():
            app = CsApache(self)
            app.setup()
    cmdline = self.config.cmdline()
    if ((self.get_type() in ['guest']) and (not cmdline.is_redundant())):
        pwdsvc = CsPasswdSvc(self.address['public_ip']).start()
    if ((self.get_type() == 'public') and self.config.is_vpc()):
        if self.address['source_nat']:
            vpccidr = cmdline.get_vpccidr()
            self.fw.append(['filter', '', ('-A FORWARD -s %s ! -d %s -j ACCEPT' % (vpccidr, vpccidr))])
            self.fw.append(['nat', '', ('-A POSTROUTING -j SNAT -o %s --to-source %s' % (self.dev, self.address['public_ip']))])
