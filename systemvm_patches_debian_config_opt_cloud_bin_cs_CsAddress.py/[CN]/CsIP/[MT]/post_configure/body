def post_configure(self, address):
    ' The steps that must be done after a device is configured '
    route = CsRoute()
    if (not (self.get_type() in ['control'])):
        route.add_table(self.dev)
        CsRule(self.dev).addMark()
        interfaces = [CsInterface(address, self.config)]
        CsHelper.reconfigure_interfaces(self.cl, interfaces)
        self.set_mark()
        if ('gateway' in self.address):
            self.arpPing()
        CsRpsrfs(self.dev).enable()
        self.post_config_change('add')
    'For isolated/redundant and dhcpsrvr routers, call this method after the post_config is complete '
    if (not self.config.is_vpc()):
        self.setup_router_control()
    if (self.config.is_vpc() or self.cl.is_redundant()):
        if ((self.get_type() in ['public']) and (address['device'] == CsHelper.PUBLIC_INTERFACES[self.cl.get_type()])):
            gateway = str(address['gateway'])
            route.add_defaultroute(gateway)
    elif self.cl.get_gateway():
        route.add_defaultroute(self.cl.get_gateway())
