def fw_router(self):
    if self.config.is_vpc():
        return
    self.fw.append(['mangle', 'front', (('-A PREROUTING ' + '-m state --state RELATED,ESTABLISHED ') + '-j CONNMARK --restore-mark --nfmask 0xffffffff --ctmask 0xffffffff')])
    if (self.get_type() in ['public']):
        self.fw.append(['mangle', 'front', ('-A PREROUTING ' + ('-d %s -j VPN_%s' % (self.address['network'], self.address['public_ip'])))])
        self.fw.append(['mangle', 'front', ('-A PREROUTING ' + ('-d %s -j FIREWALL_%s' % (self.address['network'], self.address['public_ip'])))])
        self.fw.append(['mangle', 'front', (('-A FIREWALL_%s ' % self.address['public_ip']) + '-m state --state RELATED,ESTABLISHED -j ACCEPT')])
        self.fw.append(['mangle', '', ('-A FIREWALL_%s DROP' % self.address['public_ip'])])
        self.fw.append(['mangle', '', ('-A VPN_%s -m state --state RELATED,ESTABLISHED -j ACCEPT' % self.address['public_ip'])])
        self.fw.append(['mangle', '', ('-A VPN_%s -j RETURN' % self.address['public_ip'])])
        self.fw.append(['mangle', 'front', ('-A POSTROUTING ' + '-p udp -m udp --dport 68 -j CHECKSUM --checksum-fill')])
        self.fw.append(['nat', '', ('-A POSTROUTING -o eth2 -j SNAT --to-source %s' % self.address['public_ip'])])
        self.fw.append(['mangle', '', (('-A PREROUTING -i %s -m state --state NEW ' % self.dev) + ('-j CONNMARK --set-xmark 0x%s/0xffffffff' % self.dnum))])
        self.fw.append(['mangle', '', ('-A FIREWALL_%s -j DROP' % self.address['public_ip'])])
    self.fw.append(['filter', '', '-A INPUT -d 224.0.0.18/32 -j ACCEPT'])
    self.fw.append(['filter', '', '-A INPUT -d 225.0.0.50/32 -j ACCEPT'])
    self.fw.append(['filter', '', ('-A INPUT -i %s -m state --state RELATED,ESTABLISHED -j ACCEPT' % self.dev)])
    self.fw.append(['filter', '', '-A INPUT -p icmp -j ACCEPT'])
    self.fw.append(['filter', '', '-A INPUT -i lo -j ACCEPT'])
    if (self.get_type() in ['guest']):
        self.fw.append(['filter', '', ('-A INPUT -i %s -p udp -m udp --dport 67 -j ACCEPT' % self.dev)])
        self.fw.append(['filter', '', ('-A INPUT -i %s -p udp -m udp --dport 53 -j ACCEPT' % self.dev)])
        self.fw.append(['filter', '', ('-A INPUT -i %s -p tcp -m tcp --dport 53 -j ACCEPT' % self.dev)])
        self.fw.append(['filter', '', ('-A INPUT -i %s -p tcp -m tcp --dport 80 -m state --state NEW -j ACCEPT' % self.dev)])
        self.fw.append(['filter', '', ('-A INPUT -i %s -p tcp -m tcp --dport 8080 -m state --state NEW -j ACCEPT' % self.dev)])
        self.fw.append(['filter', '', ('-A FORWARD -i %s -o eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT' % self.dev)])
        self.fw.append(['filter', '', ('-A FORWARD -i %s -o %s -m state --state NEW -j ACCEPT' % (self.dev, self.dev))])
        self.fw.append(['filter', '', '-A FORWARD -i eth2 -o eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT'])
        self.fw.append(['filter', '', '-A FORWARD -i eth0 -o eth0 -m state --state RELATED,ESTABLISHED -j ACCEPT'])
        self.fw.append(['filter', '', '-A FORWARD -i eth0 -o eth2 -j FW_OUTBOUND'])
        self.fw.append(['mangle', '', (('-A PREROUTING -i %s -m state --state NEW ' % self.dev) + ('-j CONNMARK --set-xmark 0x%s/0xffffffff' % self.dnum))])
    if (self.get_type() in ['control']):
        self.fw.append(['filter', '', '-A FW_OUTBOUND -m state --state RELATED,ESTABLISHED -j ACCEPT'])
        self.fw.append(['filter', '', ('-A INPUT -i %s -p tcp -m tcp --dport 3922 -m state --state NEW -j ACCEPT' % self.dev)])
