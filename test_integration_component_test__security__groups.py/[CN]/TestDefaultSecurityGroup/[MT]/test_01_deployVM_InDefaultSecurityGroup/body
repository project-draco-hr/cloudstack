def test_01_deployVM_InDefaultSecurityGroup(self):
    'Test deploy VM in default security group\n        '
    self.virtual_machine = VirtualMachine.create(self.apiclient, self.services['virtual_machine'], accountid=self.account.account.name, domainid=self.account.account.domainid, serviceofferingid=self.service_offering.id)
    self.debug(('Deployed VM with ID: %s' % self.virtual_machine.id))
    self.cleanup.append(self.virtual_machine)
    list_vm_response = list_virtual_machines(self.apiclient, id=self.virtual_machine.id)
    self.debug(('Verify listVirtualMachines response for virtual machine: %s' % self.virtual_machine.id))
    self.assertEqual(isinstance(list_vm_response, list), True, 'Check for list VM response')
    vm_response = list_vm_response[0]
    self.assertNotEqual(len(list_vm_response), 0, 'Check VM available in List Virtual Machines')
    self.assertEqual(vm_response.id, self.virtual_machine.id, 'Check virtual machine id in listVirtualMachines')
    self.assertEqual(vm_response.displayname, self.virtual_machine.displayname, 'Check virtual machine displayname in listVirtualMachines')
    self.debug(('Verify list routers response for account: %s' % self.account.account.name))
    routers = list_routers(self.apiclient, zoneid=self.zone.id, listall=True)
    self.assertEqual(isinstance(routers, list), True, 'Check for list Routers response')
    self.debug(('Router Response: %s' % routers))
    self.assertEqual(len(routers), 1, 'Check virtual router is created for account or not')
    return
