@classmethod
def setUpClass(cls):
    cls.testClient = super(TestDhcpOnlyRouter, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.testdata = cls.testClient.getParsedTestDataConfig()
    cls.domain = get_domain(cls.api_client)
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.testdata['mode'] = cls.zone.networktype
    template = get_template(cls.api_client, cls.zone.id, cls.testdata['ostype'])
    cls.testdata['domainid'] = cls.domain.id
    cls.testdata['virtual_machine_userdata']['zoneid'] = cls.zone.id
    cls.testdata['virtual_machine_userdata']['template'] = template.id
    cls.service_offering = ServiceOffering.create(cls.api_client, cls.testdata['service_offering'])
    cls.account = Account.create(cls.api_client, cls.testdata['account'], domainid=cls.domain.id)
    cls.virtual_machine = VirtualMachine.create(cls.api_client, cls.testdata['virtual_machine_userdata'], accountid=cls.account.name, domainid=cls.account.domainid, serviceofferingid=cls.service_offering.id, mode=cls.testdata['mode'])
    cls._cleanup = [cls.account, cls.service_offering]
    return
