{
  s_logger.info("Configure console proxy...");
  for (  Object key : conf.keySet()) {
    s_logger.info("Property " + (String)key + ": "+ conf.getProperty((String)key));
  }
  String s=conf.getProperty("consoleproxy.tcpListenPort");
  if (s != null) {
    tcpListenPort=Integer.parseInt(s);
    s_logger.info("Setting tcpListenPort=" + s);
  }
  s=conf.getProperty("consoleproxy.httpListenPort");
  if (s != null) {
    httpListenPort=Integer.parseInt(s);
    s_logger.info("Setting httpListenPort=" + s);
  }
  s=conf.getProperty("premium");
  if (s != null && s.equalsIgnoreCase("true")) {
    s_logger.info("Premium setting will override settings from consoleproxy.properties, listen at port 443");
    httpListenPort=443;
    factoryClzName="com.cloud.consoleproxy.ConsoleProxySecureServerFactoryImpl";
  }
 else {
    factoryClzName=ConsoleProxyBaseServerFactoryImpl.class.getName();
  }
  s=conf.getProperty("consoleproxy.httpCmdListenPort");
  if (s != null) {
    httpCmdListenPort=Integer.parseInt(s);
    s_logger.info("Setting httpCmdListenPort=" + s);
  }
  s=conf.getProperty("consoleproxy.jarDir");
  if (s != null) {
    jarDir=s;
    s_logger.info("Setting jarDir=" + s);
  }
  s=conf.getProperty("consoleproxy.viewerLinger");
  if (s != null) {
    viewerLinger=Integer.parseInt(s);
    s_logger.info("Setting viewerLinger=" + s);
  }
  s=conf.getProperty("consoleproxy.compressServerMessage");
  if (s != null) {
    compressServerMessage=Boolean.parseBoolean(s);
    s_logger.info("Setting compressServerMessage=" + s);
  }
  s=conf.getProperty("consoleproxy.reconnectMaxRetry");
  if (s != null) {
    reconnectMaxRetry=Integer.parseInt(s);
    s_logger.info("Setting reconnectMaxRetry=" + reconnectMaxRetry);
  }
  s=conf.getProperty("consoleproxy.readTimeoutSeconds");
  if (s != null) {
    readTimeoutSeconds=Integer.parseInt(s);
    s_logger.info("Setting readTimeoutSeconds=" + readTimeoutSeconds);
  }
}
