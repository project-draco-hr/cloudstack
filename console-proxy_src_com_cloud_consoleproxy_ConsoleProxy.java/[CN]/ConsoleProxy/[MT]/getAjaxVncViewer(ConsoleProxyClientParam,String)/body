{
  boolean reportLoadChange=false;
  String clientKey=param.getClientMapKey();
synchronized (connectionMap) {
    ConsoleProxyClient viewer=connectionMap.get(clientKey);
    if (viewer == null) {
      viewer=new ConsoleProxyVncClient();
      viewer.initClient(param);
      connectionMap.put(clientKey,viewer);
      s_logger.info("Added viewer object " + viewer);
      reportLoadChange=true;
    }
 else     if (!viewer.isFrontEndAlive()) {
      s_logger.info("The rfb thread died, reinitializing the viewer " + viewer);
      viewer.initClient(param);
      reportLoadChange=true;
    }
 else     if (!param.getClientHostPassword().equals(viewer.getClientHostPassword())) {
      s_logger.warn("Bad sid detected(VNC port may be reused). sid in session: " + viewer.getClientHostPassword() + ", sid in request: "+ param.getClientHostPassword());
      viewer.initClient(param);
      reportLoadChange=true;
    }
 else {
      if (ajaxSession == null || ajaxSession.isEmpty())       authenticationExternally(param);
    }
    if (reportLoadChange) {
      ConsoleProxyClientStatsCollector statsCollector=getStatsCollector();
      String loadInfo=statsCollector.getStatsReport();
      reportLoadInfo(loadInfo);
      if (s_logger.isDebugEnabled())       s_logger.debug("Report load change : " + loadInfo);
    }
    return viewer;
  }
}
