{
  boolean reportLoadChange=false;
synchronized (connectionMap) {
    ConsoleProxyViewer viewer=connectionMap.get(host + ":" + port);
    if (viewer == null) {
      viewer=createViewer();
      viewer.ajaxViewer=true;
      initViewer(viewer,host,port,tag,sid,ticket);
      connectionMap.put(host + ":" + port,viewer);
      s_logger.info("Added viewer object " + viewer);
      reportLoadChange=true;
    }
 else     if (!viewer.rfbThread.isAlive()) {
      s_logger.info("The rfb thread died, reinitializing the viewer " + viewer);
      initViewer(viewer,host,port,tag,sid,ticket);
      reportLoadChange=true;
    }
 else     if (!sid.equals(viewer.passwordParam)) {
      s_logger.warn("Bad sid detected(VNC port may be reused). sid in session: " + viewer.passwordParam + ", sid in request: "+ sid);
      initViewer(viewer,host,port,tag,sid,ticket);
      reportLoadChange=true;
    }
 else {
      if (ajaxSession == null || ajaxSession.isEmpty())       ConsoleProxyViewer.authenticationExternally(host,String.valueOf(port),tag,sid,ticket);
    }
    if (viewer.status == ConsoleProxyViewer.STATUS_NORMAL_OPERATION) {
      viewer.lastUsedTime=System.currentTimeMillis();
    }
    if (reportLoadChange) {
      ConsoleProxyStatus status=new ConsoleProxyStatus();
      status.setConnections(ConsoleProxy.connectionMap);
      Gson gson=new GsonBuilder().setPrettyPrinting().create();
      String loadInfo=gson.toJson(status);
      ConsoleProxy.reportLoadInfo(loadInfo);
      if (s_logger.isDebugEnabled())       s_logger.debug("Report load change : " + loadInfo);
    }
    return viewer;
  }
}
