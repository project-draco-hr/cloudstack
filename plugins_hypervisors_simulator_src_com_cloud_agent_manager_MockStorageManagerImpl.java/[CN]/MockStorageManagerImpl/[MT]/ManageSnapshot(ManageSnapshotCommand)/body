{
  String volPath=cmd.getVolumePath();
  MockVolumeVO volume=null;
  MockStoragePoolVO storagePool=null;
  Transaction txn=Transaction.open(Transaction.SIMULATOR_DB);
  try {
    txn.start();
    volume=_mockVolumeDao.findByStoragePathAndType(volPath);
    if (volume == null) {
      return new ManageSnapshotAnswer(cmd,false,"Can't find the volume");
    }
    storagePool=_mockStoragePoolDao.findById(volume.getPoolId());
    if (storagePool == null) {
      return new ManageSnapshotAnswer(cmd,false,"Can't find the storage pooll");
    }
    txn.commit();
  }
 catch (  Exception ex) {
    txn.rollback();
    throw new CloudRuntimeException("Unable to perform snapshot",ex);
  }
 finally {
    txn.close();
    txn=Transaction.open(Transaction.CLOUD_DB);
    txn.close();
  }
  String mountPoint=storagePool.getMountPoint();
  MockVolumeVO snapshot=new MockVolumeVO();
  snapshot.setName(cmd.getSnapshotName());
  snapshot.setPath(mountPoint + cmd.getSnapshotName());
  snapshot.setSize(volume.getSize());
  snapshot.setPoolId(storagePool.getId());
  snapshot.setType(MockVolumeType.SNAPSHOT);
  snapshot.setStatus(Status.DOWNLOADED);
  txn=Transaction.open(Transaction.SIMULATOR_DB);
  try {
    txn.start();
    snapshot=_mockVolumeDao.persist(snapshot);
    txn.commit();
  }
 catch (  Exception ex) {
    txn.rollback();
    throw new CloudRuntimeException("Error when saving snapshot " + snapshot,ex);
  }
 finally {
    txn.close();
    txn=Transaction.open(Transaction.CLOUD_DB);
    txn.close();
  }
  return new ManageSnapshotAnswer(cmd,snapshot.getId(),snapshot.getPath(),true,"");
}
