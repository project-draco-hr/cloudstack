{
  TransactionLegacy txn=TransactionLegacy.open(TransactionLegacy.SIMULATOR_DB);
  MockHost host=null;
  MockStoragePoolVO storagePool=null;
  try {
    txn.start();
    host=_mockHostDao.findByGuid(hostGuid);
    storagePool=_mockStoragePoolDao.findByHost(hostGuid);
    txn.commit();
  }
 catch (  Exception ex) {
    txn.rollback();
    throw new CloudRuntimeException("Unable to find host " + hostGuid,ex);
  }
 finally {
    txn.close();
    txn=TransactionLegacy.open(TransactionLegacy.CLOUD_DB);
    txn.close();
  }
  if (storagePool == null) {
    String uuid=UUID.randomUUID().toString();
    storagePool=new MockStoragePoolVO();
    storagePool.setUuid(uuid);
    storagePool.setMountPoint("/mnt/" + uuid);
    storagePool.setCapacity(DEFAULT_HOST_STORAGE_SIZE);
    storagePool.setHostGuid(hostGuid);
    storagePool.setStorageType(StoragePoolType.Filesystem);
    txn=TransactionLegacy.open(TransactionLegacy.SIMULATOR_DB);
    try {
      txn.start();
      storagePool=_mockStoragePoolDao.persist(storagePool);
      txn.commit();
    }
 catch (    Exception ex) {
      txn.rollback();
      throw new CloudRuntimeException("Error when saving storagePool " + storagePool,ex);
    }
 finally {
      txn.close();
      txn=TransactionLegacy.open(TransactionLegacy.CLOUD_DB);
      txn.close();
    }
  }
  return new StoragePoolInfo(storagePool.getUuid(),host.getPrivateIpAddress(),storagePool.getMountPoint(),storagePool.getMountPoint(),storagePool.getPoolType(),storagePool.getCapacity(),storagePool.getCapacity());
}
