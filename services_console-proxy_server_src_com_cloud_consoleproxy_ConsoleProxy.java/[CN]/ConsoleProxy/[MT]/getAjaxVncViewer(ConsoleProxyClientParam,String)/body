{
  boolean reportLoadChange=false;
  String clientKey=param.getClientMapKey();
synchronized (connectionMap) {
    ConsoleProxyClient viewer=connectionMap.get(clientKey);
    if (viewer == null) {
      authenticationExternally(param);
      viewer=new ConsoleProxyVncClient();
      viewer.initClient(param);
      connectionMap.put(clientKey,viewer);
      s_logger.info("Added viewer object " + viewer);
      reportLoadChange=true;
    }
 else {
      if (ajaxSession != null) {
        long ajaxSessionIdFromUrl=Long.parseLong(ajaxSession);
        if (ajaxSessionIdFromUrl != viewer.getAjaxSessionId())         throw new AuthenticationException("Cannot use the existing viewer " + viewer + ": modified AJAX session id");
      }
      if (param.getClientHostPassword() == null || param.getClientHostPassword().isEmpty() || !param.getClientHostPassword().equals(viewer.getClientHostPassword()))       throw new AuthenticationException("Cannot use the existing viewer " + viewer + ": bad sid");
      if (!viewer.isFrontEndAlive()) {
        authenticationExternally(param);
        viewer.initClient(param);
        reportLoadChange=true;
      }
    }
    if (reportLoadChange) {
      ConsoleProxyClientStatsCollector statsCollector=getStatsCollector();
      String loadInfo=statsCollector.getStatsReport();
      reportLoadInfo(loadInfo);
      if (s_logger.isDebugEnabled())       s_logger.debug("Report load change : " + loadInfo);
    }
    return viewer;
  }
}
