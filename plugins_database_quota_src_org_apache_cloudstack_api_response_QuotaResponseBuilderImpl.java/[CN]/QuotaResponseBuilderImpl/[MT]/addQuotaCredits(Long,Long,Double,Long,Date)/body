{
  QuotaCreditsVO credits=new QuotaCreditsVO(accountId,domainId,new BigDecimal(amount),updatedBy);
  s_logger.debug("AddQuotaCredits: Depositing " + amount + " on adjusted date "+ despositedOn);
  credits.setUpdatedOn(despositedOn);
  QuotaCreditsVO result=_quotaCreditsDao.saveCredits(credits);
  final AccountVO account=_accountDao.findById(accountId);
  final boolean lockAccountEnforcement="true".equalsIgnoreCase(QuotaConfig.QuotaEnableEnforcement.value());
  final BigDecimal currentAccountBalance=_quotaBalanceDao.lastQuotaBalance(accountId,domainId,startOfNextDay(despositedOn));
  if (lockAccountEnforcement && (currentAccountBalance.compareTo(new BigDecimal(0)) >= 0)) {
    if (account.getState() == Account.State.locked) {
      _regionMgr.enableAccount(account.getAccountName(),domainId,accountId);
    }
  }
  String creditor=String.valueOf(Account.ACCOUNT_ID_SYSTEM);
  User creditorUser=_userDao.getUser(updatedBy);
  if (creditorUser != null) {
    creditor=creditorUser.getUsername();
  }
  QuotaCreditsResponse response=new QuotaCreditsResponse(result,creditor);
  response.setCurrency(QuotaConfig.QuotaCurrencySymbol.value());
  return response;
}
