{
  setupParameters(cmd,params);
  Implementation impl=cmd.getClass().getAnnotation(Implementation.class);
  if (impl == null) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to execute command " + cmd.getClass().getName() + ", no implementation specified.");
  }
  String methodName=impl.method();
  Object mgr=_mgmtServer;
switch (impl.manager()) {
case AccountManager:
    mgr=_accountMgr;
  break;
case AgentManager:
mgr=_agentMgr;
break;
case ConfigManager:
mgr=_configMgr;
break;
case ConsoleProxyManager:
mgr=_consoleProxyMgr;
break;
case NetworkGroupManager:
mgr=_networkGroupMgr;
break;
case NetworkManager:
mgr=_networkMgr;
break;
case SnapshotManager:
mgr=_snapshotMgr;
break;
case StorageManager:
mgr=_storageMgr;
break;
case TemplateManager:
mgr=_templateMgr;
break;
case UserVmManager:
mgr=_userVmMgr;
break;
}
try {
Method method=mgr.getClass().getMethod(methodName,cmd.getClass());
Object result=method.invoke(mgr,cmd);
cmd.setResponseObject(result);
}
 catch (NoSuchMethodException nsme) {
s_logger.warn("Exception executing method " + methodName + " for command "+ cmd.getClass().getSimpleName(),nsme);
throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to execute method " + methodName + " for command "+ cmd.getClass().getSimpleName()+ ", unable to find implementation.");
}
catch (InvocationTargetException ite) {
s_logger.warn("Exception executing method " + methodName + " for command "+ cmd.getClass().getSimpleName(),ite);
Throwable cause=ite.getCause();
if (cause instanceof InvalidParameterValueException) {
throw new ServerApiException(BaseCmd.PARAM_ERROR,cause.getMessage());
}
 else if (cause instanceof PermissionDeniedException) {
throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,cause.getMessage());
}
throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to execute method " + methodName + " for command "+ cmd.getClass().getSimpleName()+ ", internal error in the implementation.");
}
catch (IllegalAccessException iae) {
s_logger.warn("Exception executing method " + methodName + " for command "+ cmd.getClass().getSimpleName(),iae);
throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to execute method " + methodName + " for command "+ cmd.getClass().getSimpleName()+ ", internal error in the implementation.");
}
catch (IllegalArgumentException iArgEx) {
s_logger.warn("Exception executing method " + methodName + " for command "+ cmd.getClass().getSimpleName(),iArgEx);
throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to execute method " + methodName + " for command "+ cmd.getClass().getSimpleName()+ ", internal error in the implementation.");
}
catch (Exception ex) {
s_logger.error("Unhandled exception invoking method " + methodName + " for command "+ cmd.getClass().getSimpleName(),ex);
throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to execute method " + methodName + " for command "+ cmd.getClass().getSimpleName()+ ", internal error in the implementation.");
}
}
