{
  if (uuid.equals("-1")) {
    return -1L;
  }
  Long internalId=null;
  boolean isPre3x=annotation.since().isEmpty();
  boolean isUuid=uuid.matches("^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$");
  if (!isPre3x && !isUuid)   return null;
  if (isPre3x && !isUuid) {
    try {
      internalId=Long.parseLong(uuid);
    }
 catch (    NumberFormatException e) {
      internalId=null;
    }
    if (internalId != null)     return internalId;
  }
  Class<?>[] entities=annotation.entityType()[0].getAnnotation(EntityReference.class).value();
  for (  Class<?> entity : entities) {
    Object objVO=s_instance._entityMgr.findByUuid(entity,uuid);
    if (objVO == null) {
      continue;
    }
    try {
      internalId=((InternalIdentity)objVO).getId();
    }
 catch (    IllegalArgumentException e) {
    }
catch (    NullPointerException e) {
    }
    if (internalId != null)     break;
  }
  if (internalId == null) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Object entity with uuid=" + uuid + " does not exist in the database.");
    }
    if (annotation.required()) {
      throw new InvalidParameterValueException("Invalid parameter with uuid=" + uuid + ". Entity not found, or an annotation bug.");
    }
  }
  return internalId;
}
