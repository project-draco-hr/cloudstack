{
  setupParameters(cmd,params);
  try {
    cmd.callCreate();
  }
 catch (  InvalidParameterValueException e1) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,e1.getMessage());
  }
catch (  IllegalArgumentException e2) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,e2.getMessage());
  }
catch (  PermissionDeniedException e3) {
    throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,e3.getMessage());
  }
catch (  InsufficientAddressCapacityException e4) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,e4.getMessage());
  }
catch (  InsufficientCapacityException e5) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,e5.getMessage());
  }
catch (  ConcurrentOperationException e6) {
    s_logger.error("Exception while executing " + cmd.getName() + ":",e6);
    if (UserContext.current().getAccount() == null || UserContext.current().getAccount().getType() == Account.ACCOUNT_TYPE_ADMIN)     throw new ServerApiException(BaseCmd.INTERNAL_ERROR,e6.getMessage());
 else     throw new ServerApiException(BaseCmd.INTERNAL_ERROR,BaseCmd.USER_ERROR_MESSAGE);
  }
catch (  ResourceUnavailableException e7) {
    s_logger.error("Exception while executing " + cmd.getName() + ":",e7);
    if (UserContext.current().getAccount() == null || UserContext.current().getAccount().getType() == Account.ACCOUNT_TYPE_ADMIN)     throw new ServerApiException(BaseCmd.INTERNAL_ERROR,e7.getMessage());
 else     throw new ServerApiException(BaseCmd.INTERNAL_ERROR,BaseCmd.USER_ERROR_MESSAGE);
  }
catch (  ResourceAllocationException e8) {
    s_logger.error("Exception while executing " + cmd.getName() + ":",e8);
    if (UserContext.current().getAccount() == null || UserContext.current().getAccount().getType() == Account.ACCOUNT_TYPE_ADMIN)     throw new ServerApiException(BaseCmd.INTERNAL_ERROR,e8.getMessage());
 else     throw new ServerApiException(BaseCmd.INTERNAL_ERROR,BaseCmd.USER_ERROR_MESSAGE);
  }
catch (  CloudRuntimeException e9) {
    s_logger.error("Exception while executing " + cmd.getName() + ":",e9);
    if (UserContext.current().getAccount() == null || UserContext.current().getAccount().getType() == Account.ACCOUNT_TYPE_ADMIN)     throw new ServerApiException(BaseCmd.INTERNAL_ERROR,e9.getMessage());
 else     throw new ServerApiException(BaseCmd.INTERNAL_ERROR,BaseCmd.USER_ERROR_MESSAGE);
  }
}
