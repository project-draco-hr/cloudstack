{
  long csSnapshotId=snapshotInfo.getId();
  try {
    SolidFireUtil.SolidFireConnection sfConnection=SolidFireUtil.getSolidFireConnection(storagePoolId,storagePoolDetailsDao);
    SnapshotDetailsVO snapshotDetails=snapshotDetailsDao.findDetail(csSnapshotId,SolidFireUtil.SNAPSHOT_ID);
    if (snapshotDetails != null && snapshotDetails.getValue() != null) {
      long sfSnapshotId=Long.parseLong(snapshotDetails.getValue());
      deleteSolidFireSnapshot(sfConnection,csSnapshotId,sfSnapshotId);
    }
 else {
      snapshotDetails=snapshotDetailsDao.findDetail(csSnapshotId,SolidFireUtil.VOLUME_ID);
      long sfVolumeId=Long.parseLong(snapshotDetails.getValue());
      SolidFireUtil.deleteSolidFireVolume(sfConnection,sfVolumeId);
    }
    snapshotDetailsDao.removeDetails(csSnapshotId);
    StoragePoolVO storagePool=storagePoolDao.findById(storagePoolId);
    long usedBytes=getUsedBytes(storagePool);
    storagePool.setUsedBytes(usedBytes < 0 ? 0 : usedBytes);
    storagePoolDao.update(storagePoolId,storagePool);
  }
 catch (  Exception ex) {
    LOGGER.debug(SolidFireUtil.LOG_PREFIX + "Issue in 'deleteSnapshot(SnapshotInfo, long)'. CloudStack snapshot ID: " + csSnapshotId,ex);
    throw ex;
  }
}
