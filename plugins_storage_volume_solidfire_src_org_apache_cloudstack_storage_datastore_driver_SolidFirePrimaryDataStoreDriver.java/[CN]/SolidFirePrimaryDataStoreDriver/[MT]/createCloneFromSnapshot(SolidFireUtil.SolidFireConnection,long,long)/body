{
  SnapshotDetailsVO snapshotDetails=snapshotDetailsDao.findDetail(csSnapshotId,SolidFireUtil.VOLUME_ID);
  long sfVolumeId=Long.parseLong(snapshotDetails.getValue());
  snapshotDetails=snapshotDetailsDao.findDetail(csSnapshotId,SolidFireUtil.SNAPSHOT_ID);
  long sfSnapshotId=Long.parseLong(snapshotDetails.getValue());
  SolidFireUtil.SolidFireSnapshot sfSnapshot=SolidFireUtil.getSolidFireSnapshot(sfConnection,sfVolumeId,sfSnapshotId);
  long newSfVolumeId=SolidFireUtil.createSolidFireClone(sfConnection,sfVolumeId,sfSnapshotId,sfAccountId,sfSnapshot.getName(),null);
  snapshotDetails=snapshotDetailsDao.findDetail(csSnapshotId,SolidFireUtil.STORAGE_POOL_ID);
  long storagePoolId=Long.parseLong(snapshotDetails.getValue());
  final Iops iops=getIops(MIN_IOPS_FOR_TEMP_VOLUME,MAX_IOPS_FOR_TEMP_VOLUME,storagePoolId);
  SolidFireUtil.modifySolidFireVolume(sfConnection,newSfVolumeId,null,null,iops.getMinIops(),iops.getMaxIops(),iops.getBurstIops());
  return SolidFireUtil.getSolidFireVolume(sfConnection,newSfVolumeId);
}
