{
  VolumeInfo volumeInfo=(VolumeInfo)dataObject;
  if (volumeInfo == null || host == null || dataStore == null) {
    return false;
  }
  long sfVolumeId=Long.parseLong(volumeInfo.getFolder());
  long clusterId=host.getClusterId();
  long storagePoolId=dataStore.getId();
  ClusterDetailsVO clusterDetail=_clusterDetailsDao.findDetail(clusterId,SolidFireUtil.getVagKey(storagePoolId));
  String vagId=clusterDetail != null ? clusterDetail.getValue() : null;
  List<HostVO> hosts=_hostDao.findByClusterId(clusterId);
  if (!SolidFireUtil.hostsSupport_iScsi(hosts)) {
    return false;
  }
  SolidFireUtil.SolidFireConnection sfConnection=SolidFireUtil.getSolidFireConnection(storagePoolId,_storagePoolDetailsDao);
  if (vagId != null) {
    SolidFireUtil.SolidFireVag sfVag=SolidFireUtil.getSolidFireVag(sfConnection,Long.parseLong(vagId));
    String[] hostIqns=SolidFireUtil.getNewHostIqns(sfVag.getInitiators(),SolidFireUtil.getIqnsFromHosts(hosts));
    long[] volumeIds=SolidFireUtil.getNewVolumeIds(sfVag.getVolumeIds(),sfVolumeId,true);
    SolidFireUtil.modifySolidFireVag(sfConnection,sfVag.getId(),hostIqns,volumeIds);
  }
 else {
    ClusterVO cluster=_clusterDao.findById(clusterId);
    SolidFireUtil.placeVolumeInVolumeAccessGroup(sfConnection,sfVolumeId,storagePoolId,cluster.getUuid(),hosts,_clusterDetailsDao);
  }
  return true;
}
