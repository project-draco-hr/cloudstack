{
  if (dataObject == null || host == null || dataStore == null) {
    return false;
  }
  long sfVolumeId=getSolidFireVolumeId(dataObject);
  long clusterId=host.getClusterId();
  long storagePoolId=dataStore.getId();
  ClusterVO cluster=_clusterDao.findById(clusterId);
  GlobalLock lock=GlobalLock.getInternLock(cluster.getUuid());
  if (!lock.lock(SolidFireUtil.s_lockTimeInSeconds)) {
    String errMsg="Couldn't lock the DB (in grantAccess) on the following string: " + cluster.getUuid();
    s_logger.debug(errMsg);
    throw new CloudRuntimeException(errMsg);
  }
  try {
    ClusterDetailsVO clusterDetail=_clusterDetailsDao.findDetail(clusterId,SolidFireUtil.getVagKey(storagePoolId));
    String vagId=clusterDetail != null ? clusterDetail.getValue() : null;
    List<HostVO> hosts=_hostDao.findByClusterId(clusterId);
    if (!SolidFireUtil.hostsSupport_iScsi(hosts)) {
      return false;
    }
    SolidFireUtil.SolidFireConnection sfConnection=SolidFireUtil.getSolidFireConnection(storagePoolId,_storagePoolDetailsDao);
    if (vagId != null) {
      SolidFireUtil.SolidFireVag sfVag=SolidFireUtil.getSolidFireVag(sfConnection,Long.parseLong(vagId));
      long[] volumeIds=SolidFireUtil.getNewVolumeIds(sfVag.getVolumeIds(),sfVolumeId,true);
      SolidFireUtil.modifySolidFireVag(sfConnection,sfVag.getId(),sfVag.getInitiators(),volumeIds);
    }
 else {
      SolidFireUtil.placeVolumeInVolumeAccessGroup(sfConnection,sfVolumeId,storagePoolId,cluster.getUuid(),hosts,_clusterDetailsDao);
    }
    return true;
  }
  finally {
    lock.unlock();
    lock.releaseRef();
  }
}
