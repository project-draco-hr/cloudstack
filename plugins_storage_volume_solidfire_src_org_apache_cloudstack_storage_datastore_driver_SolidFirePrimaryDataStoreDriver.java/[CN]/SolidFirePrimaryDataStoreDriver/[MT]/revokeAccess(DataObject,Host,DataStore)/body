{
  if (dataObject == null || host == null || dataStore == null) {
    return;
  }
  long sfVolumeId=getSolidFireVolumeId(dataObject,false);
  long clusterId=host.getClusterId();
  long storagePoolId=dataStore.getId();
  ClusterVO cluster=clusterDao.findById(clusterId);
  GlobalLock lock=GlobalLock.getInternLock(cluster.getUuid());
  if (!lock.lock(LOCK_TIME_IN_SECONDS)) {
    String errMsg="Couldn't lock the DB (in revokeAccess) on the following string: " + cluster.getUuid();
    LOGGER.debug(errMsg);
    throw new CloudRuntimeException(errMsg);
  }
  try {
    ClusterDetailsVO clusterDetail=clusterDetailsDao.findDetail(clusterId,SolidFireUtil.getVagKey(storagePoolId));
    String vagId=clusterDetail != null ? clusterDetail.getValue() : null;
    if (vagId != null) {
      SolidFireUtil.SolidFireConnection sfConnection=SolidFireUtil.getSolidFireConnection(storagePoolId,storagePoolDetailsDao);
      SolidFireUtil.SolidFireVag sfVag=SolidFireUtil.getSolidFireVag(sfConnection,Long.parseLong(vagId));
      long[] volumeIds=SolidFireUtil.getNewVolumeIds(sfVag.getVolumeIds(),sfVolumeId,false);
      SolidFireUtil.modifySolidFireVag(sfConnection,sfVag.getId(),sfVag.getInitiators(),volumeIds);
    }
  }
  finally {
    lock.unlock();
    lock.releaseRef();
  }
}
