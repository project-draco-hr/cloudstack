{
  if (dataObject.getType() == DataObjectType.VOLUME) {
    final VolumeInfo volumeInfo=(VolumeInfo)dataObject;
    final long volumeId=volumeInfo.getId();
    if (grantAccess && isBasicGrantAccess(volumeId)) {
      volumeDetailsDao.removeDetail(volumeInfo.getId(),BASIC_GRANT_ACCESS);
      final Long sfVolumeId=getBasicSfVolumeId(volumeId);
      Preconditions.checkNotNull(sfVolumeId,"'sfVolumeId' should not be 'null' (basic grant access).");
      return sfVolumeId;
    }
 else     if (!grantAccess && isBasicRevokeAccess(volumeId)) {
      volumeDetailsDao.removeDetail(volumeInfo.getId(),BASIC_REVOKE_ACCESS);
      final Long sfVolumeId=getBasicSfVolumeId(volumeId);
      Preconditions.checkNotNull(sfVolumeId,"'sfVolumeId' should not be 'null' (basic revoke access).");
      return sfVolumeId;
    }
    return Long.parseLong(volumeInfo.getFolder());
  }
  if (dataObject.getType() == DataObjectType.SNAPSHOT) {
    SnapshotDetailsVO snapshotDetails=snapshotDetailsDao.findDetail(dataObject.getId(),SolidFireUtil.VOLUME_ID);
    if (snapshotDetails == null || snapshotDetails.getValue() == null) {
      throw new CloudRuntimeException("Unable to locate the volume ID associated with the following snapshot ID: " + dataObject.getId());
    }
    return Long.parseLong(snapshotDetails.getValue());
  }
  if (dataObject.getType() == DataObjectType.TEMPLATE) {
    return getVolumeIdFrom_iScsiPath(((TemplateInfo)dataObject).getInstallPath());
  }
  throw new CloudRuntimeException("Invalid DataObjectType (" + dataObject.getType() + ") passed to getSolidFireVolumeId(DataObject, boolean)");
}
