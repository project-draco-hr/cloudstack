{
  String url=(String)params.get(BaseCmd.Properties.URL.getName());
  Long volumeId=(Long)params.get(BaseCmd.Properties.ID.getName());
  Long zoneId=(Long)params.get(BaseCmd.Properties.ZONE_ID.getName());
  Account account=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  ManagementServer managementServer=getManagementServer();
  VolumeVO volume=managementServer.findVolumeById(volumeId);
  if (volume == null) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to find volume with id " + volumeId);
  }
  if (url.toLowerCase().contains("file://")) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"file:// type urls are currently unsupported");
  }
  if (account != null) {
    if (!isAdmin(account.getType())) {
      if (volume.getAccountId() != account.getId()) {
        throw new ServerApiException(BaseCmd.PARAM_ERROR,"Unable to find volume with ID: " + volumeId + " for account: "+ account.getAccountName());
      }
    }
 else     if (!managementServer.isChildDomain(account.getDomainId(),volume.getDomainId())) {
      throw new ServerApiException(BaseCmd.PARAM_ERROR,"Unable to extract volume " + volumeId + " to "+ url+ ", permission denied.");
    }
  }
  long jobId;
  try {
    jobId=managementServer.extractVolumeAsync(url,volumeId,zoneId);
  }
 catch (  Exception e) {
    s_logger.error(e.getMessage(),e);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Internal Error Extracting the volume " + e.getMessage());
  }
  DataCenterVO zone=managementServer.getDataCenterBy(zoneId);
  List<Pair<String,Object>> response=new ArrayList<Pair<String,Object>>();
  response.add(new Pair<String,Object>(BaseCmd.Properties.VOLUME_ID.getName(),volumeId));
  response.add(new Pair<String,Object>(BaseCmd.Properties.VOLUME_NAME.getName(),volume.getName()));
  response.add(new Pair<String,Object>(BaseCmd.Properties.URL.getName(),url));
  response.add(new Pair<String,Object>(BaseCmd.Properties.ZONE_ID.getName(),zoneId));
  response.add(new Pair<String,Object>(BaseCmd.Properties.ZONE_NAME.getName(),zone.getName()));
  response.add(new Pair<String,Object>(BaseCmd.Properties.JOB_ID.getName(),jobId));
  return response;
}
