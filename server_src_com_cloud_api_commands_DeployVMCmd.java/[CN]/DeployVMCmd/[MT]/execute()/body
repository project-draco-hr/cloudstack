{
  try {
    String password=null;
    if (templateId != null) {
      VMTemplateVO template=ApiDBUtils.findTemplateById(templateId);
      if (template.getEnablePassword()) {
        password=_mgr.generateRandomPassword();
      }
    }
    UserVm result=_mgr.deployVirtualMachine(this,password);
    if (result != null) {
      UserVmResponse response=ApiResponseHelper.createUserVmResponse(result);
      response.setPassword(password);
      response.setResponseName(getName());
      this.setResponseObject(response);
    }
 else {
      throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to deploy vm");
    }
  }
 catch (  ResourceAllocationException ex) {
    throw new ServerApiException(BaseCmd.RESOURCE_ALLOCATION_ERROR,ex.getMessage());
  }
catch (  InsufficientStorageCapacityException ex) {
    throw new ServerApiException(BaseCmd.INSUFFICIENT_CAPACITY_ERROR,ex.getMessage());
  }
catch (  StorageUnavailableException ex) {
    throw new ServerApiException(BaseCmd.RESOURCE_UNAVAILABLE_ERROR,ex.getMessage());
  }
catch (  Exception ex) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,ex.getMessage());
  }
}
