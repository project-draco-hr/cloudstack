{
  if (!_isEnabled) {
    return null;
  }
  VirtualMachine.Type vmType=instance.getType();
  if (vmType != VirtualMachine.Type.User && vmType != VirtualMachine.Type.DomainRouter) {
    return null;
  }
  try {
    long hostId=instance.getHostId();
    long accountId=instance.getAccountId();
    String tag=Long.toString(askVlanId(accountId,hostId));
    CheckAndUpdateDhcpFlow(instance);
    String vlans=getVlanInPortMapping(accountId,hostId);
    VmFlowLogVO log=_flowLogDao.findOrNewByVmId(instance.getId(),instance.getHostName());
    StringBuffer command=new StringBuffer();
    command.append("vlan");
    command.append("/");
    command.append(cmdPair("vmName",instance.getHostName()));
    command.append("/");
    command.append(cmdPair("tag",tag));
    command.append("/");
    vlans=vlans.replace("[","@");
    vlans=vlans.replace("]","#");
    command.append(cmdPair("vlans",vlans));
    command.append("/");
    command.append(cmdPair("seqno",Long.toString(log.getLogsequence())));
    command.append("/");
    command.append(cmdPair("vmId",Long.toString(instance.getId())));
    return command.toString();
  }
 catch (  OvsVlanExhaustedException e) {
    s_logger.warn("vlan exhaused on host " + instance.getHostId(),e);
    return null;
  }
}
