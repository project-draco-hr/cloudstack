def wait_for_response(self, event):
    while True:
        event.wait(0.1)
        if (not self.transport.is_active()):
            e = self.transport.get_exception()
            if ((e is None) or issubclass(e.__class__, EOFError)):
                e = AuthenticationException('Authentication failed.')
            raise e
        if event.isSet():
            break
    if (not self.is_authenticated()):
        e = self.transport.get_exception()
        if (e is None):
            e = AuthenticationException('Authentication failed.')
        if issubclass(e.__class__, PartialAuthentication):
            return e.allowed_types
        raise e
    return []
