{
  if (guestConfig.getTrafficType() != TrafficType.Guest) {
    s_logger.trace("External load balancer can only be user for add/remove guest networks.");
    return false;
  }
  long zoneId=guestConfig.getDataCenterId();
  DataCenterVO zone=_dcDao.findById(zoneId);
  HostVO externalLoadBalancer=getExternalNetworkAppliance(zoneId,Host.Type.ExternalLoadBalancer);
  if (externalLoadBalancer == null) {
    return false;
  }
  long guestVlanTag=Long.parseLong(guestConfig.getBroadcastUri().getHost());
  String selfIp=NetUtils.long2Ip(NetUtils.ip2Long(guestConfig.getGateway()) + 1);
  String guestVlanNetmask=NetUtils.cidr2Netmask(guestConfig.getCidr());
  Integer networkRate=_networkMgr.getNetworkRate(guestConfig.getId(),null);
  IpAddressTO ip=new IpAddressTO(guestConfig.getAccountId(),null,add,false,true,String.valueOf(guestVlanTag),selfIp,guestVlanNetmask,null,null,networkRate,false);
  IpAddressTO[] ips=new IpAddressTO[1];
  ips[0]=ip;
  IpAssocCommand cmd=new IpAssocCommand(ips);
  Answer answer=_agentMgr.easySend(externalLoadBalancer.getId(),cmd);
  if (answer == null || !answer.getResult()) {
    String action=add ? "implement" : "shutdown";
    String answerDetails=(answer != null) ? answer.getDetails() : "answer was null";
    String msg="External load balancer was unable to " + action + " the guest network on the external load balancer in zone "+ zone.getName()+ " due to "+ answerDetails;
    s_logger.error(msg);
    throw new ResourceUnavailableException(msg,DataCenter.class,zoneId);
  }
  List<String> reservedIpAddressesForGuestNetwork=_nicDao.listIpAddressInNetwork(guestConfig.getId());
  if (add && (!reservedIpAddressesForGuestNetwork.contains(selfIp))) {
    savePlaceholderNic(guestConfig,selfIp);
  }
  Account account=_accountDao.findByIdIncludingRemoved(guestConfig.getAccountId());
  String action=add ? "implemented" : "shut down";
  s_logger.debug("External load balancer has " + action + " the guest network for account "+ account.getAccountName()+ "(id = "+ account.getAccountId()+ ") with VLAN tag "+ guestVlanTag);
  return true;
}
