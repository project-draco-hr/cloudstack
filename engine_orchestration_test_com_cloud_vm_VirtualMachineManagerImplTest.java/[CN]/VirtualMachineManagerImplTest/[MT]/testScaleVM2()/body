{
  DeployDestination dest=new DeployDestination(null,null,null,_host);
  long l=1L;
  doReturn(3L).when(_vmInstance).getId();
  when(_vmInstanceDao.findById(anyLong())).thenReturn(_vmInstance);
  ServiceOfferingVO newServiceOffering=getSvcoffering(512);
  doReturn(1L).when(_vmInstance).getHostId();
  doReturn(hostVO).when(_hostDao).findById(1L);
  doReturn(1L).when(_vmInstance).getDataCenterId();
  doReturn(1L).when(hostVO).getClusterId();
  when(_configMgr.getConfigValue(Config.EnableDynamicallyScaleVm.key(),Config.Scope.zone.toString(),1L)).thenReturn("true");
  when(_configMgr.getConfigValue(Config.MemOverprovisioningFactor.key(),Config.Scope.cluster.toString(),1L)).thenReturn("1.0");
  when(_configMgr.getConfigValue(Config.CPUOverprovisioningFactor.key(),Config.Scope.cluster.toString(),1L)).thenReturn("1.0");
  ScaleVmCommand reconfigureCmd=new ScaleVmCommand("myVmName",newServiceOffering.getCpu(),newServiceOffering.getSpeed(),newServiceOffering.getSpeed(),newServiceOffering.getRamSize(),newServiceOffering.getRamSize(),newServiceOffering.getLimitCpuUse());
  Answer answer=new ScaleVmAnswer(reconfigureCmd,true,"details");
  when(_agentMgr.send(2l,reconfigureCmd)).thenReturn(null);
  _vmMgr.reConfigureVm(_vmInstance.getUuid(),getSvcoffering(256),false);
}
