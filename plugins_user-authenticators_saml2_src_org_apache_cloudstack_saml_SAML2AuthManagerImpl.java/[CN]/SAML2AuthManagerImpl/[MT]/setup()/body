{
  if (!initSP()) {
    logger.error("SAML Plugin failed to initialize, please fix the configuration and restart management server");
    return false;
  }
  _timer=new Timer();
  final HttpClient client=new HttpClient();
  final String idpMetaDataUrl=getSAMLIdentityProviderMetadataURL();
  if (SAMLTimeout.value() != null && SAMLTimeout.value() > SAMLPluginConstants.SAML_REFRESH_INTERVAL) {
    _refreshInterval=SAMLTimeout.value();
  }
  try {
    DefaultBootstrap.bootstrap();
    if (idpMetaDataUrl.startsWith("http")) {
      _idpMetaDataProvider=new HTTPMetadataProvider(_timer,client,idpMetaDataUrl);
    }
 else {
      File metadataFile=PropertiesUtil.findConfigFile(idpMetaDataUrl);
      if (metadataFile == null) {
        logger.error("Provided Metadata is not a URL, Unable to locate metadata file from local path: " + idpMetaDataUrl);
        return false;
      }
 else {
        logger.debug("Provided Metadata is not a URL, trying to read metadata file from local path: " + metadataFile.getAbsolutePath());
        _idpMetaDataProvider=new FilesystemMetadataProvider(_timer,metadataFile);
      }
    }
    _idpMetaDataProvider.setRequireValidMetadata(true);
    _idpMetaDataProvider.setParserPool(new BasicParserPool());
    _idpMetaDataProvider.initialize();
    _timer.scheduleAtFixedRate(new MetadataRefreshTask(),0,_refreshInterval * 1000);
  }
 catch (  MetadataProviderException e) {
    logger.error("Unable to read SAML2 IDP MetaData URL, error:" + e.getMessage());
    logger.error("SAML2 Authentication may be unavailable");
    return false;
  }
catch (  ConfigurationException|FactoryConfigurationError e) {
    logger.error("OpenSAML bootstrapping failed: error: " + e.getMessage());
    return false;
  }
catch (  NullPointerException e) {
    logger.error("Unable to setup SAML Auth Plugin due to NullPointerException" + " please check the SAML global settings: " + e.getMessage());
    return false;
  }
  return true;
}
