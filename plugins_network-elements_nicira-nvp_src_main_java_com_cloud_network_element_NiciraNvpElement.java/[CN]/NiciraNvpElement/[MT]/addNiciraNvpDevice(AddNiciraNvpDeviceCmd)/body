{
  ServerResource resource=new NiciraNvpResource();
  final String deviceName=Network.Provider.NiciraNvp.getName();
  NetworkDevice networkDevice=NetworkDevice.getNetworkDevice(deviceName);
  if (networkDevice == null) {
    throw new CloudRuntimeException("No network device found for " + deviceName);
  }
  final Long physicalNetworkId=cmd.getPhysicalNetworkId();
  PhysicalNetworkVO physicalNetwork=physicalNetworkDao.findById(physicalNetworkId);
  if (physicalNetwork == null) {
    throw new InvalidParameterValueException("Could not find phyical network with ID: " + physicalNetworkId);
  }
  long zoneId=physicalNetwork.getDataCenterId();
  final PhysicalNetworkServiceProviderVO ntwkSvcProvider=physicalNetworkServiceProviderDao.findByServiceProvider(physicalNetwork.getId(),networkDevice.getNetworkServiceProvder());
  if (ntwkSvcProvider == null) {
    throw new CloudRuntimeException("Network Service Provider: " + networkDevice.getNetworkServiceProvder() + " is not enabled in the physical network: "+ physicalNetworkId+ "to add this device");
  }
 else   if (ntwkSvcProvider.getState() == PhysicalNetworkServiceProvider.State.Shutdown) {
    throw new CloudRuntimeException("Network Service Provider: " + ntwkSvcProvider.getProviderName() + " is in shutdown state in the physical network: "+ physicalNetworkId+ "to add this device");
  }
  if (niciraNvpDao.listByPhysicalNetwork(physicalNetworkId).size() != 0) {
    throw new CloudRuntimeException("A NiciraNvp device is already configured on this physical network");
  }
  Map<String,String> params=new HashMap<String,String>();
  params.put("guid",UUID.randomUUID().toString());
  params.put("zoneId",String.valueOf(physicalNetwork.getDataCenterId()));
  params.put("physicalNetworkId",String.valueOf(physicalNetwork.getId()));
  params.put("name","Nicira Controller - " + cmd.getHost());
  params.put("ip",cmd.getHost());
  params.put("adminuser",cmd.getUsername());
  params.put("adminpass",cmd.getPassword());
  params.put("transportzoneuuid",cmd.getTransportzoneUuid());
  params.put("transportzoneisotype",physicalNetwork.getIsolationMethods().get(0).toLowerCase());
  if (cmd.getL3GatewayServiceUuid() != null) {
    params.put("l3gatewayserviceuuid",cmd.getL3GatewayServiceUuid());
  }
  if (cmd.getL2GatewayServiceUuid() != null) {
    params.put("l2gatewayserviceuuid",cmd.getL2GatewayServiceUuid());
  }
  Map<String,Object> hostdetails=new HashMap<String,Object>();
  hostdetails.putAll(params);
  try {
    resource.configure(cmd.getHost(),hostdetails);
    final Host host=resourceMgr.addHost(zoneId,resource,Host.Type.L2Networking,params);
    if (host != null) {
      return Transaction.execute(new TransactionCallback<NiciraNvpDeviceVO>(){
        @Override public NiciraNvpDeviceVO doInTransaction(        TransactionStatus status){
          NiciraNvpDeviceVO niciraNvpDevice=new NiciraNvpDeviceVO(host.getId(),physicalNetworkId,ntwkSvcProvider.getProviderName(),deviceName);
          niciraNvpDao.persist(niciraNvpDevice);
          DetailVO detail=new DetailVO(host.getId(),"niciranvpdeviceid",String.valueOf(niciraNvpDevice.getId()));
          hostDetailsDao.persist(detail);
          return niciraNvpDevice;
        }
      }
);
    }
 else {
      throw new CloudRuntimeException("Failed to add Nicira Nvp Device due to internal error.");
    }
  }
 catch (  ConfigurationException e) {
    throw new CloudRuntimeException(e.getMessage());
  }
}
