def waitForComplete(self, workers=10):
    self.inqueue.join()
    lock = threading.Lock()
    resultQueue = Queue.Queue()
    'intermediate result is stored in self.outqueue'
    for i in range(workers):
        worker = workThread(self.outqueue, resultQueue, self.apiClient, self.db, lock)
        worker.start()
    self.outqueue.join()
    asyncJobResult = []
    while (resultQueue.qsize() > 0):
        jobstatus = resultQueue.get()
        self.updateTimeStamp(jobstatus)
        asyncJobResult.append(jobstatus)
    return asyncJobResult
