{
  int numberCapabilities=buf.readSignedShortLE();
  buf.skipBytes(2);
  for (int i=0; i < numberCapabilities; i++) {
    int capabilitySetType=buf.readUnsignedShortLE();
    int lengthCapability=buf.readUnsignedShortLE();
    ByteBuffer capabilityData=buf.readBytes(lengthCapability - 4);
switch (capabilitySetType) {
case CAPSTYPE_GENERAL:
      break;
case CAPSTYPE_BITMAP:
    handleBitmapCapabilities(capabilityData);
  break;
case CAPSTYPE_ORDER:
break;
case CAPSTYPE_BITMAPCACHE:
break;
case CAPSTYPE_CONTROL:
break;
case CAPSTYPE_ACTIVATION:
break;
case CAPSTYPE_POINTER:
break;
case CAPSTYPE_SHARE:
break;
case CAPSTYPE_COLORCACHE:
break;
case CAPSTYPE_SOUND:
break;
case CAPSTYPE_INPUT:
break;
case CAPSTYPE_FONT:
break;
case CAPSTYPE_BRUSH:
break;
case CAPSTYPE_GLYPHCACHE:
break;
case CAPSTYPE_OFFSCREENCACHE:
break;
case CAPSTYPE_BITMAPCACHE_HOSTSUPPORT:
break;
case CAPSTYPE_BITMAPCACHE_REV2:
break;
case CAPSTYPE_VIRTUALCHANNEL:
break;
case CAPSTYPE_DRAWNINEGRIDCACHE:
break;
case CAPSTYPE_DRAWGDIPLUS:
break;
case CAPSTYPE_RAIL:
break;
case CAPSTYPE_WINDOW:
break;
case CAPSETTYPE_COMPDESK:
break;
case CAPSETTYPE_MULTIFRAGMENTUPDATE:
break;
case CAPSETTYPE_LARGE_POINTER:
break;
case CAPSETTYPE_SURFACE_COMMANDS:
break;
case CAPSETTYPE_BITMAP_CODECS:
break;
case CAPSSETTYPE_FRAME_ACKNOWLEDGE:
break;
default :
break;
}
capabilityData.unref();
}
buf.unref();
}
