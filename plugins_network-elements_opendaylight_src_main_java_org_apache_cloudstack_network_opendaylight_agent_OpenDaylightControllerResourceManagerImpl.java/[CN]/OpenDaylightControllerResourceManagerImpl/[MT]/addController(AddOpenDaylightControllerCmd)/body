{
  ServerResource odlController=new OpenDaylightControllerResource();
  final String deviceName=NetworkDevice.OpenDaylightController.getName();
  NetworkDevice networkDevice=NetworkDevice.getNetworkDevice(deviceName);
  final Long physicalNetworkId=cmd.getPhysicalNetworkId();
  PhysicalNetworkVO physicalNetwork=physicalNetworkDao.findById(physicalNetworkId);
  if (physicalNetwork == null) {
    throw new InvalidParameterValueException("Could not find phyical network with ID: " + physicalNetworkId);
  }
  long zoneId=physicalNetwork.getDataCenterId();
  final PhysicalNetworkServiceProviderVO ntwkSvcProvider=physicalNetworkServiceProviderDao.findByServiceProvider(physicalNetwork.getId(),networkDevice.getNetworkServiceProvder());
  if (ntwkSvcProvider == null) {
    throw new CloudRuntimeException("Network Service Provider: " + networkDevice.getNetworkServiceProvder() + " is not enabled in the physical network: "+ physicalNetworkId+ "to add this device");
  }
 else   if (ntwkSvcProvider.getState() == PhysicalNetworkServiceProvider.State.Shutdown) {
    throw new CloudRuntimeException("Network Service Provider: " + ntwkSvcProvider.getProviderName() + " is in shutdown state in the physical network: "+ physicalNetworkId+ "to add this device");
  }
  final Map<String,String> hostParams=new HashMap<String,String>();
  hostParams.put("guid",UUID.randomUUID().toString());
  hostParams.put("zoneId",String.valueOf(physicalNetwork.getDataCenterId()));
  hostParams.put("physicalNetworkId",String.valueOf(physicalNetwork.getId()));
  hostParams.put("name","ODL Controller - " + hostParams.get("guid"));
  hostParams.put("url",cmd.getUrl());
  hostParams.put("username",cmd.getUsername());
  hostParams.put("password",cmd.getPassword());
  Map<String,Object> hostdetails=new HashMap<String,Object>();
  hostdetails.putAll(hostParams);
  try {
    odlController.configure(hostParams.get("name"),hostdetails);
    final Host host=resourceManager.addHost(zoneId,odlController,Host.Type.L2Networking,hostParams);
    if (host != null) {
      return Transaction.execute(new TransactionCallback<OpenDaylightControllerVO>(){
        @Override public OpenDaylightControllerVO doInTransaction(        TransactionStatus status){
          OpenDaylightControllerVO controller=new OpenDaylightControllerVO(host.getId(),physicalNetworkId,ntwkSvcProvider.getProviderName(),hostParams.get("name"));
          openDaylightControllerMappingDao.persist(controller);
          return controller;
        }
      }
);
    }
 else {
      throw new CloudRuntimeException("Failed to create host object for ODL Controller");
    }
  }
 catch (  ConfigurationException e) {
    throw new CloudRuntimeException("Failed to add ODL Controller as a resource",e);
  }
}
