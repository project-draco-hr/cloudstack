import cloudstackException
import json
import inspect
from cloudstackAPI import *
if (__name__ == '__main__'):
    result = '{ "listnetworkserviceprovidersresponse" : { "count" : 1,\n      "networkserviceprovider" : [ { "destinationphysicalnetworkid" : "0",\n            "id" : "d827cae4-4998-4037-95a2-55b92b6318b1",\n            "name" : "VirtualRouter",\n            "physicalnetworkid" : "ad2948fc-1054-46c7-b1c7-61d990b86710",\n            "servicelist" : [ "Vpn",\n                "Dhcp",\n                "Dns",\n                "Gateway",\n                "Firewall",\n                "Lb",\n                "SourceNat",\n                "StaticNat",\n                "PortForwarding",\n                "UserData"\n              ],\n            "state" : "Disabled"\n          } ]\n    } }'
    nsp = getResultObj(result)
    print nsp[0].id
    result = '{ "listzonesresponse" : {\n    "count" : 1,\n    "zone" : [ { "allocationstate" : "Enabled",\n            "dhcpprovider" : "DhcpServer",\n            "dns1" : "8.8.8.8",\n            "dns2" : "8.8.4.4",\n            "id" : 1,\n            "internaldns1" : "192.168.110.254",\n            "internaldns2" : "192.168.110.253",\n            "name" : "test0",\n            "networktype" : "Basic",\n            "securitygroupsenabled" : true,\n            "zonetoken" : "5e818a11-6b00-3429-9a07-e27511d3169a"\n        } ]\n    }\n}'
    zones = getResultObj(result)
    print zones[0].id
    res = authorizeSecurityGroupIngress.authorizeSecurityGroupIngressResponse()
    result = '{\n    "queryasyncjobresultresponse" : {\n        "jobid" : 10,\n        "jobprocstatus" : 0,\n        "jobresult" : {\n            "securitygroup" : {\n                "account" : "admin",\n                "description" : "Default Security Group",\n                "domain" : "ROOT",\n                "domainid" : 1,\n                "id" : 1,\n                "ingressrule" : [ { "account" : "a",\n                    "endport" : 22,\n                    "protocol" : "tcp",\n                    "ruleid" : 1,\n                    "securitygroupname" : "default",\n                    "startport" : 22\n                  },\n                  { "account" : "b",\n                    "endport" : 22,\n                    "protocol" : "tcp",\n                    "ruleid" : 2,\n                    "securitygroupname" : "default",\n                    "startport" : 22\n                  }\n                ],\n              "name" : "default"\n            }\n        },\n        "jobresultcode" : 0,\n        "jobresulttype" : "object",\n        "jobstatus" : 1\n    }\n}'
    asynJob = getResultObj(result, res)
    print asynJob.jobid, repr(asynJob.jobresult)
    print asynJob.jobresult.ingressrule[0].account
    result = '{\n    "queryasyncjobresultresponse" : {\n        "errorcode" : 431,\n        "errortext" :\n"Unable to execute API command queryasyncjobresultresponse due to missing parameter jobid"\n    }\n}'
    try:
        asynJob = getResultObj(result)
    except cloudstackException.CloudstackAPIException as e:
        print e
    result = '{ "queryasyncjobresultresponse" : {}  }'
    asynJob = getResultObj(result)
    print asynJob
    result = '{}'
    asynJob = getResultObj(result)
    print asynJob
    result = '{\n    "createzoneresponse" : {\n        "zone" : {\n            "id":1,"name":"test0","dns1":"8.8.8.8","dns2":"8.8.4.4",\n            "internaldns1":"192.168.110.254","internaldns2":"192.168.110.253",\n            "networktype":"Basic","securitygroupsenabled":true,\n            "allocationstate":"Enabled",\n            "zonetoken":"3442f287-e932-3111-960b-514d1f9c4610",\n            "dhcpprovider":"DhcpServer"\n        }\n    }\n}'
    res = createZone.createZoneResponse()
    zone = getResultObj(result, res)
    print zone.id
    result = '{ "attachvolumeresponse" : {"jobid":24} }'
    res = attachVolume.attachVolumeResponse()
    res = getResultObj(result, res)
    print res
    result = '{ "listtemplatesresponse" : { } }'
    print getResultObj(result, listTemplates.listTemplatesResponse())
    result = '{\n    "queryasyncjobresultresponse" : {\n        "jobid":34,"jobstatus":2,"jobprocstatus":0,"jobresultcode":530,\n        "jobresulttype":"object","jobresult":{\n            "errorcode":431,\n            "errortext":\n"Please provide either a volume id, or a tuple(device id, instance id)"\n        }\n    }\n}'
    print getResultObj(result, listTemplates.listTemplatesResponse())
    result = '{\n    "queryasyncjobresultresponse" : {\n        "jobid":41,"jobstatus":1,"jobprocstatus":0,\n        "jobresultcode":0,"jobresulttype":"object","jobresult":{\n            "virtualmachine":{\n                "id":37,"name":"i-2-37-TEST",\n                "displayname":"i-2-37-TEST","account":"admin",\n                "domainid":1,"domain":"ROOT",\n                "created":"2011-08-25T11:13:42-0700",\n                "state":"Running","haenable":false,"zoneid":1,\n                "zonename":"test0","hostid":5,\n                "hostname":\n                    "SimulatedAgent.1e629060-f547-40dd-b792-57cdc4b7d611",\n                "templateid":10,\n                "templatename":"CentOS 5.3(64-bit) no GUI (Simulator)",\n                "templatedisplaytext":\n                    "CentOS 5.3(64-bit) no GUI (Simulator)",\n                "passwordenabled":false,"serviceofferingid":7,\n                "serviceofferingname":"Small Instance","cpunumber":1,\n                "cpuspeed":500,"memory":512,"guestosid":11,\n                "rootdeviceid":0,"rootdevicetype":"NetworkFilesystem",\n                "securitygroup":[{"id":1,"name":"default",\n                    "description":"Default Security Group"}],\n                "nic":[{"id":43,"networkid":204,\n                    "netmask":"255.255.255.0","gateway":"192.168.1.1",\n                    "ipaddress":"192.168.1.27",\n                    "isolationuri":"ec2://untagged",\n                    "broadcasturi":"vlan://untagged",\n                    "traffictype":"Guest","type":"Direct",\n                    "isdefault":true,"macaddress":"06:56:b8:00:00:53"}],\n                "hypervisor":"Simulator"\n            }\n        }\n    }\n}'
    result = '{\n    "queryasyncjobresultresponse" : {\n        "accountid":"30910093-22e4-4d3c-a464-8b36b60c8001",\n        "userid":"cb0aeca3-42ee-47c4-838a-2cd9053441f2",\n        "cmd":"com.cloud.api.commands.DeployVMCmd","jobstatus":1,\n        "jobprocstatus":0,"jobresultcode":0,"jobresulttype":"object",\n        "jobresult":{\n            "virtualmachine":{\n                "id":"d2e4d724-e089-4e59-be8e-647674059016",\n                "name":"i-2-14-TEST","displayname":"i-2-14-TEST",\n                "account":"admin",\n                "domainid":"8cfafe79-81eb-445e-8608-c5b7c31fc3a5",\n                "domain":"ROOT","created":"2012-01-15T18:30:11+0530",\n                "state":"Running","haenable":false,\n                "zoneid":"30a397e2-1c85-40c0-8463-70278952b046",\n                "zonename":"Sandbox-simulator",\n                "hostid":"cc0105aa-a2a9-427a-8ad7-4d835483b8a9",\n                "hostname":\n                    "SimulatedAgent.9fee20cc-95ca-48b1-8268-5513d6e83a1b",\n                "templateid":"d92570fa-bf40-44db-9dff-45cc7042604d",\n                "templatename":"CentOS 5.3(64-bit) no GUI (Simulator)",\n                "templatedisplaytext":"CentOS 5.3(64-bit) no GUI (Simulator)",\n                "passwordenabled":false,\n                "serviceofferingid":"3734d632-797b-4f1d-ac62-33f9cf70d005",\n                "serviceofferingname":"Sample SO","cpunumber":1,"cpuspeed":100,\n                "memory":128,\n                "guestosid":"1e36f523-23e5-4e90-869b-a1b5e9ba674d",\n                "rootdeviceid":0,"rootdevicetype":"NetworkFilesystem",\n                "nic":[{"id":"4d3ab903-f511-4dab-8a6d-c2a3b51de7e0",\n                    "networkid":"faeb7f24-a4b9-447d-bec6-c4956c4ab0f6",\n                    "netmask":"255.255.240.0","gateway":"10.6.240.1",\'\n                    "ipaddress":"10.6.253.89","isolationuri":"vlan://211",\n                    "broadcasturi":"vlan://211","traffictype":"Guest",\n                    "type":"Isolated","isdefault":true,\n                    "macaddress":"02:00:04:74:00:09"}],\n                "hypervisor":"Simulator"\n            }\n        },\n        "created":"2012-01-15T18:30:11+0530",\n        "jobid":"f4a13f28-fcd6-4d7f-b9cd-ba7eb5a5701f"\n    }\n}'
    vm = getResultObj(result, deployVirtualMachine.deployVirtualMachineResponse())
    print vm.jobresult.id
    cmd = deployVirtualMachine.deployVirtualMachineCmd()
    responsename = cmd.__class__.__name__.replace('Cmd', 'Response')
    response = getclassFromName(cmd, responsename)
    print response.id
