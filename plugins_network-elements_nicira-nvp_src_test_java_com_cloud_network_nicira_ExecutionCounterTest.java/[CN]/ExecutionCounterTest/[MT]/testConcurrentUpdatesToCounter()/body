{
  final ExecutionCounter executionCounter=new ExecutionCounter(0);
  final ExecutorService executorService=Executors.newFixedThreadPool(3);
  final AtomicInteger counterTask1=new AtomicInteger(-1);
  final AtomicInteger counterTask2=new AtomicInteger(-1);
  final AtomicInteger counterTask3=new AtomicInteger(-1);
  final Runnable task1=new Runnable(){
    @Override public void run(){
      executionCounter.incrementExecutionCounter().incrementExecutionCounter();
      executionCounter.incrementExecutionCounter().incrementExecutionCounter();
      counterTask1.set(executionCounter.getValue());
    }
  }
;
  final Runnable task2=new Runnable(){
    @Override public void run(){
      executionCounter.incrementExecutionCounter().incrementExecutionCounter();
      counterTask2.set(executionCounter.getValue());
    }
  }
;
  final Runnable task3=new Runnable(){
    @Override public void run(){
      counterTask3.set(executionCounter.getValue());
    }
  }
;
  executorService.execute(task1);
  executorService.execute(task2);
  executorService.execute(task3);
  executorService.shutdown();
  executorService.awaitTermination(5L,TimeUnit.SECONDS);
  assertThat(counterTask1.get(),equalTo(4));
  assertThat(counterTask2.get(),equalTo(2));
  assertThat(counterTask3.get(),equalTo(0));
}
