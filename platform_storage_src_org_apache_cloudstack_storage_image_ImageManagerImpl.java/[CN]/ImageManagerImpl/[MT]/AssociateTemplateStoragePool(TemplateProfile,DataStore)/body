{
  long templateId=tp.getTemplateId();
  long poolId=ds.getId();
  VMTemplateStoragePoolVO templateStoragePoolRef=null;
  long templateStoragePoolRefId;
  templateStoragePoolRef=_templatePoolDao.findByPoolTemplate(poolId,templateId);
  if (templateStoragePoolRef != null) {
    templateStoragePoolRef.setMarkedForGC(false);
    _templatePoolDao.update(templateStoragePoolRef.getId(),templateStoragePoolRef);
    if (templateStoragePoolRef.getDownloadState() == Status.DOWNLOADED) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Template " + templateId + " has already been downloaded to pool "+ poolId);
      }
      tp.setLocalPath(templateStoragePoolRef.getInstallPath());
      tp.setTemplatePoolRefId(templateStoragePoolRef.getId());
      return tp;
    }
  }
  if (templateStoragePoolRef == null) {
    templateStoragePoolRef=new VMTemplateStoragePoolVO(poolId,templateId);
    try {
      templateStoragePoolRef=_templatePoolDao.persist(templateStoragePoolRef);
      templateStoragePoolRefId=templateStoragePoolRef.getId();
    }
 catch (    Exception e) {
      s_logger.debug("Assuming we're in a race condition: " + e.getMessage());
      templateStoragePoolRef=_templatePoolDao.findByPoolTemplate(poolId,templateId);
      if (templateStoragePoolRef == null) {
        throw new CloudRuntimeException("Unable to persist a reference for pool " + poolId + " and template "+ templateId);
      }
      templateStoragePoolRefId=templateStoragePoolRef.getId();
    }
  }
 else {
    templateStoragePoolRefId=templateStoragePoolRef.getId();
  }
  tp.setTemplatePoolRefId(templateStoragePoolRefId);
  return tp;
}
