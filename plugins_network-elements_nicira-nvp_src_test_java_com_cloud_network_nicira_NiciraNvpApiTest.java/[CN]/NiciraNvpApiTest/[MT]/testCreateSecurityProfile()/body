{
  final CloseableHttpResponse response=mock(CloseableHttpResponse.class);
  when(response.getStatusLine()).thenReturn(HTTP_201_REPSONSE);
  when(response.getEntity()).thenReturn(new StringEntity(SEC_PROFILE_JSON_RESPONSE));
  final CloseableHttpClient httpClient=spy(HttpClientHelper.createHttpClient(2));
  doReturn(response).when(httpClient).execute(any(HttpHost.class),any(HttpRequest.class),any(HttpClientContext.class));
  final NiciraNvpApi api=buildApi(httpClient);
  final SecurityProfile actualSecProfile=api.createSecurityProfile(new SecurityProfile());
  assertThat("Wrong Uuid in the newly created SecurityProfile",actualSecProfile,hasProperty("uuid",equalTo(UUID)));
  assertThat("Wrong Href in the newly created SecurityProfile",actualSecProfile,hasProperty("href",equalTo(HREF)));
  assertThat("Wrong Schema in the newly created SecurityProfile",actualSecProfile,hasProperty("schema",equalTo(SCHEMA)));
  verify(response,times(1)).close();
  verify(httpClient).execute(any(HttpHost.class),HttpUriRequestMethodMatcher.aMethod("POST"),any(HttpClientContext.class));
  verify(httpClient).execute(any(HttpHost.class),HttpUriRequestPathMatcher.aPath(NiciraConstants.SEC_PROFILE_URI_PREFIX),any(HttpClientContext.class));
}
