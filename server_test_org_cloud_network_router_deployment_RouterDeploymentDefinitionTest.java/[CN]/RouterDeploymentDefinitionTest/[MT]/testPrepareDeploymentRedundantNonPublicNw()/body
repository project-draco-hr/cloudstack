{
  this.deployment.isRedundant=false;
  when(this.mockNetworkModel.isNetworkSystem(this.mockNw)).thenReturn(true);
  Account newAccountOwner=mock(Account.class);
  when(this.mockAccountMgr.getAccount(Account.ACCOUNT_ID_SYSTEM)).thenReturn(newAccountOwner);
  when(this.mockNetworkModel.isProviderSupportServiceInNetwork(NW_ID,Service.SourceNat,Provider.VirtualRouter)).thenReturn(false);
  boolean canProceedDeployment=this.deployment.prepareDeployment();
  assertEquals("New account owner not properly set",newAccountOwner,this.deployment.owner);
  assertEquals("Since is redundant deployment in non public nw there should be 0 routers to start",0,this.deployment.routers.size());
  verify(this.mockNetworkModel,times(1)).isNetworkSystem(this.mockNw);
}
