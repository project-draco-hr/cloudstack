{
  deployment.routers=new ArrayList<>();
  when(mockNw.isRedundant()).thenReturn(true);
  final RouterDeploymentDefinition deploymentUT=spy(deployment);
  doReturn(2).when(deploymentUT).getNumberOfRoutersToDeploy();
  final DomainRouterVO routerVO1=mock(DomainRouterVO.class);
  final DomainRouterVO routerVO2=mock(DomainRouterVO.class);
  when(mockNetworkHelper.deployRouter(deploymentUT,false)).thenReturn(routerVO1).thenReturn(routerVO2);
  when(networkDetailsDao.findById(anyLong())).thenReturn(null);
  deploymentUT.deployAllVirtualRouters();
  verify(mockRouterDao,times(1)).addRouterToGuestNetwork(routerVO1,mockNw);
  verify(mockRouterDao,times(1)).addRouterToGuestNetwork(routerVO2,mockNw);
  assertEquals("First router to deploy was not added to list of available routers",routerVO1,deployment.routers.get(0));
  assertEquals("Second router to deploy was not added to list of available routers",routerVO2,deployment.routers.get(1));
}
