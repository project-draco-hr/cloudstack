{
  if (_configured.contains(configurable))   return;
  s_logger.debug("Retrieving keys from " + configurable.getClass().getSimpleName());
  for (  ConfigKey<?> key : configurable.getConfigKeys()) {
    Pair<String,ConfigKey<?>> previous=_allKeys.get(key.key());
    if (previous != null && !previous.first().equals(configurable.getConfigComponentName())) {
      throw new CloudRuntimeException("Configurable " + configurable.getConfigComponentName() + " is adding a key that has been added before by "+ previous.first()+ ": "+ key.toString());
    }
    _allKeys.put(key.key(),new Pair<String,ConfigKey<?>>(configurable.getConfigComponentName(),key));
    ConfigurationVO vo=_configDao.findById(key.key());
    if (vo == null) {
      vo=new ConfigurationVO(configurable.getConfigComponentName(),key);
      vo.setUpdated(date);
      _configDao.persist(vo);
    }
 else {
      if (vo.isDynamic() != key.isDynamic() || !ObjectUtils.equals(vo.getDescription(),key.description()) || !ObjectUtils.equals(vo.getDefaultValue(),key.defaultValue()) || !ObjectUtils.equals(vo.getScope(),key.scope().toString())) {
        vo.setDynamic(key.isDynamic());
        vo.setDescription(key.description());
        vo.setDefaultValue(key.defaultValue());
        vo.setScope(key.scope().toString());
        vo.setUpdated(date);
        _configDao.persist(vo);
      }
    }
    if ((key.scope() != null) && (key.scope() != ConfigKey.Scope.Global)) {
      Set<ConfigKey<?>> currentConfigs=_scopeLevelConfigsMap.get(key.scope());
      currentConfigs.add(key);
    }
  }
  _configured.add(configurable);
}
