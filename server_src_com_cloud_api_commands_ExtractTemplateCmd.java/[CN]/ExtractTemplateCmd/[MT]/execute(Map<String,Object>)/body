{
  String url=(String)params.get(BaseCmd.Properties.URL.getName());
  Long templateId=(Long)params.get(BaseCmd.Properties.ID.getName());
  Long zoneId=(Long)params.get(BaseCmd.Properties.ZONE_ID.getName());
  Account account=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  VMTemplateVO template=getManagementServer().findTemplateById(templateId.longValue());
  if (template == null) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to find template with id " + templateId);
  }
  if (url.toLowerCase().contains("file://")) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"file:// type urls are currently unsupported");
  }
  boolean isAdmin;
  if (account == null) {
    isAdmin=true;
  }
 else {
    isAdmin=isAdmin(account.getType());
  }
  if (!isAdmin) {
    if (template.getAccountId() != account.getId()) {
      throw new ServerApiException(BaseCmd.PARAM_ERROR,"Unable to find template with ID: " + templateId + " for account: "+ account.getAccountName());
    }
  }
  try {
    getManagementServer().extractTemplate(url,templateId,zoneId);
  }
 catch (  Exception e) {
    s_logger.error(e.getMessage(),e);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Internal Error Extracting the template " + e.getMessage());
  }
  List<Pair<String,Object>> response=new ArrayList<Pair<String,Object>>();
  response.add(new Pair<String,Object>("template",templateId));
  response.add(new Pair<String,Object>("url",url));
  response.add(new Pair<String,Object>("zoneid",zoneId));
  return response;
}
