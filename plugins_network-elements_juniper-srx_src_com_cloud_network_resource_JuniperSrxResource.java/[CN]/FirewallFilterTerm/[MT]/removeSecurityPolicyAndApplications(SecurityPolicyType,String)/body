{
  if (!manageSecurityPolicy(type,SrxCommand.CHECK_IF_EXISTS,null,null,privateIp,null,null,null)) {
    return true;
  }
  if (manageSecurityPolicy(type,SrxCommand.CHECK_IF_IN_USE,null,null,privateIp,null,null,null)) {
    return true;
  }
  List<String> applications=getApplicationsForSecurityPolicy(type,privateIp,_publicZone,_privateZone);
  manageSecurityPolicy(type,SrxCommand.DELETE,null,null,privateIp,null,null,null);
  List<String> unusedApplications=getUnusedApplications(applications,_publicZone,_privateZone);
  for (  String application : unusedApplications) {
    Object[] applicationComponents;
    try {
      applicationComponents=parseApplicationName(type,application);
    }
 catch (    ExecutionException e) {
      s_logger.error("Found an invalid application: " + application + ". Not attempting to clean up.");
      continue;
    }
    Protocol protocol=(Protocol)applicationComponents[0];
    Integer startPort=(Integer)applicationComponents[1];
    Integer endPort=(Integer)applicationComponents[2];
    manageApplication(type,SrxCommand.DELETE,protocol,startPort,endPort);
  }
  return true;
}
