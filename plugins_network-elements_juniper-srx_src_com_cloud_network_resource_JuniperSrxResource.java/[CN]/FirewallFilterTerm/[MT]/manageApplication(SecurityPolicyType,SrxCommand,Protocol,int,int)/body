{
  if (protocol.equals(Protocol.any)) {
    return true;
  }
  String applicationName=genApplicationName(type,protocol,startPort,endPort);
  String xml;
switch (command) {
case CHECK_IF_EXISTS:
    xml=SrxXml.APPLICATION_GETONE.getXml();
  xml=setDelete(xml,false);
xml=replaceXmlValue(xml,"name",applicationName);
return sendRequestAndCheckResponse(command,xml,"name",applicationName);
case ADD:
if (manageApplication(type,SrxCommand.CHECK_IF_EXISTS,protocol,startPort,endPort)) {
return true;
}
String icmpOrDestPort;
xml=SrxXml.APPLICATION_ADD.getXml();
xml=replaceXmlValue(xml,"name",applicationName);
xml=replaceXmlValue(xml,"protocol",protocol.toString());
if (protocol.toString().equals(Protocol.icmp.toString())) {
icmpOrDestPort="<icmp-type>" + startPort + "</icmp-type>";
icmpOrDestPort+="<icmp-code>" + endPort + "</icmp-code>";
}
 else {
String destPort;
if (startPort == endPort) {
destPort=String.valueOf(startPort);
}
 else {
destPort=startPort + "-" + endPort;
}
icmpOrDestPort="<destination-port>" + destPort + "</destination-port>";
}
xml=replaceXmlValue(xml,"dest-port-icmp",icmpOrDestPort);
if (!sendRequestAndCheckResponse(command,xml)) {
throw new ExecutionException("Failed to add application " + applicationName);
}
 else {
return true;
}
case DELETE:
if (!manageApplication(type,SrxCommand.CHECK_IF_EXISTS,protocol,startPort,endPort)) {
return true;
}
xml=SrxXml.APPLICATION_GETONE.getXml();
xml=setDelete(xml,true);
xml=replaceXmlValue(xml,"name",applicationName);
if (!sendRequestAndCheckResponse(command,xml)) {
throw new ExecutionException("Failed to delete application " + applicationName);
}
 else {
return true;
}
default :
s_logger.debug("Unrecognized command.");
return false;
}
}
