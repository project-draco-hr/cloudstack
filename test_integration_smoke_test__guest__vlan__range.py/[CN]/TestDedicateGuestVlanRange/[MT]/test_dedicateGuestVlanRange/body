@attr(tags=['advanced', 'guestvlanrange', 'dedicate', 'release'], BugId='CLOUDSTACK-6738', required_hardware='false')
def test_dedicateGuestVlanRange(self):
    'Test guest vlan range dedication\n        '
    'Assume a physical network is available\n        '
    '\n        # Validate the following:\n        # 1. List the available physical network using ListPhysicalNetwork\n        # 2. Add a Guest Vlan range to the available physical network using UpdatePhysicalNetwork\n        # 3. Dedicate the created guest vlan range to user account using DedicateGuestVlanRange\n        # 4. Verify vlan range is dedicated with listDedicatedGuestVlanRanges\n        # 5. Release the dedicated guest vlan range back to the system\n        # 6. Verify guest vlan range has been released, verify with listDedicatedGuestVlanRanges\n        # 7. Remove the added guest vlan range using UpdatePhysicalNetwork\n        '
    self.debug('Adding guest vlan range')
    new_vlan = ((self.physical_network.vlan + ',') + self.free_vlan['partial_range'][0])
    addGuestVlanRangeResponse = self.physical_network.update(self.apiclient, id=self.physical_network.id, vlan=new_vlan)
    self.debug('Dedicating guest vlan range')
    dedicate_guest_vlan_range_response = PhysicalNetwork.dedicate(self.apiclient, self.free_vlan['partial_range'][0], physicalnetworkid=self.physical_network.id, account=self.account.name, domainid=self.account.domainid)
    list_dedicated_guest_vlan_range_response = PhysicalNetwork.listDedicated(self.apiclient, id=dedicate_guest_vlan_range_response.id)
    dedicated_guest_vlan_response = list_dedicated_guest_vlan_range_response[0]
    self.assertEqual(dedicated_guest_vlan_response.account, self.account.name, 'Check account name is in listDedicatedGuestVlanRanges as the account the range is dedicated to')
    self.debug('Releasing guest vlan range')
    dedicate_guest_vlan_range_response.release(self.apiclient)
    list_dedicated_guest_vlan_range_response = PhysicalNetwork.listDedicated(self.apiclient)
    self.assertEqual(list_dedicated_guest_vlan_range_response, None, 'Check vlan range is not available in listDedicatedGuestVlanRanges')
