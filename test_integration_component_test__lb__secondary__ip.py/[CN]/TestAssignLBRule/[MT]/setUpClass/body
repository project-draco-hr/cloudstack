@classmethod
def setUpClass(cls):
    cloudstackTestClient = super(TestAssignLBRule, cls).getClsTestClient()
    cls.api_client = cloudstackTestClient.getApiClient()
    cls.testdata = cloudstackTestClient.getParsedTestDataConfig()
    cls.domain = get_domain(cls.api_client)
    cls.zone = get_zone(cls.api_client, cloudstackTestClient.getZoneForTests())
    template = get_template(cls.api_client, cls.zone.id, cls.testdata['ostype'])
    cls.testdata['virtual_machine']['zoneid'] = cls.zone.id
    cls.testdata['virtual_machine']['template'] = template.id
    cls._cleanup = []
    try:
        cls.hypervisor = cloudstackTestClient.getHypervisorInfo()
        if (cls.hypervisor.lower() == 'hyperv'):
            cls.testdata['service_offering']['name'] = 'Medium Instance'
            cls.testdata['service_offering']['memory'] = '1024'
            cls.testdata['service_offering']['cpuspeed'] = '1024'
        cls.service_offering = ServiceOffering.create(cls.api_client, cls.testdata['service_offering'])
        cls._cleanup.append(cls.service_offering)
    except Exception as e:
        cls.tearDownClass()
        raise unittest.SkipTest(e)
    return
