{
  Transaction txn=Transaction.currentTxn();
  PreparedStatement pstmt=null;
  List<UserVmResponse> result=new ArrayList<UserVmResponse>();
  try {
    String sql=VM_DETAILS;
    pstmt=txn.prepareAutoCloseStatement(sql);
    pstmt.setLong(1,userVm.getId());
    ResultSet rs=pstmt.executeQuery();
    boolean is_data_center_security_group_enabled=false;
    Set<SecurityGroupResponse> securityGroupResponse=new HashSet<SecurityGroupResponse>();
    Set<NicResponse> nicResponses=new HashSet<NicResponse>();
    UserVmResponse userVmResponse=null;
    while (rs.next()) {
      if (userVmResponse == null) {
        userVmResponse=new UserVmResponse();
        userVmResponse.setId(userVm.getId());
        userVmResponse.setName(userVm.getDisplayName());
        userVmResponse.setCreated(userVm.getCreated());
        userVmResponse.setGuestOsId(userVm.getGuestOSId());
        userVmResponse.setHaEnable(userVm.isHaEnabled());
        if (userVm.getDisplayName() != null) {
          userVmResponse.setDisplayName(userVm.getDisplayName());
        }
 else {
          userVmResponse.setDisplayName(userVm.getHostName());
        }
        userVmResponse.setAccountName(rs.getString("account.account_name"));
        userVmResponse.setDomainId(userVm.getDomainId());
        userVmResponse.setDomainName(rs.getString("domain.name"));
        userVmResponse.setGroup(rs.getString("instance_group_vm_map.group_id"));
        userVmResponse.setGroupId(rs.getLong("instance_group_vm_map.id"));
        userVmResponse.setZoneId(rs.getLong("data_center.id"));
        userVmResponse.setZoneName(rs.getString("data_center.name"));
        if (show_host) {
          userVmResponse.setHostId(rs.getLong("host.id"));
          userVmResponse.setHostName(rs.getString("host.name"));
        }
        userVmResponse.setTemplateId(rs.getLong("vm_template.id"));
        userVmResponse.setTemplateName(rs.getString("vm_template.name"));
        userVmResponse.setTemplateDisplayText(rs.getString("vm_template.display_text"));
        userVmResponse.setPasswordEnabled(rs.getBoolean("vm_template.enable_password"));
        userVmResponse.setServiceOfferingId(rs.getLong("service_offering.id"));
        userVmResponse.setServiceOfferingName(rs.getString("disk_offering.name"));
        userVmResponse.setCpuNumber(rs.getInt("service_offering.cpu"));
        userVmResponse.setCpuSpeed(rs.getInt("service_offering.speed"));
        userVmResponse.setMemory(rs.getInt("service_offering.ram_size"));
        userVmResponse.setRootDeviceId(rs.getLong("volumes.device_id"));
        userVmResponse.setRootDeviceType(rs.getString("volumes.volume_type"));
        is_data_center_security_group_enabled=rs.getBoolean("data_center.is_security_group_enabled");
        result.add(userVmResponse);
      }
      if (is_data_center_security_group_enabled) {
        SecurityGroupResponse resp=new SecurityGroupResponse();
        resp.setId(rs.getLong("security_group.id"));
        resp.setName("security_group.name");
        resp.setDescription("security_group.description");
        resp.setObjectName("securitygroup");
        securityGroupResponse.add(resp);
      }
      NicResponse nicResponse=new NicResponse();
      nicResponse.setId(rs.getLong("nics.id"));
      nicResponse.setIpaddress(rs.getString("nics.ip4_address"));
      nicResponse.setGateway(rs.getString("nics.gateway"));
      nicResponse.setNetmask(rs.getString("nics.netmask"));
      nicResponse.setNetworkid(rs.getLong("nics.network_id"));
      nicResponse.setMacAddress(rs.getString("nics.mac_address"));
      int account_type=rs.getInt("account.type");
      if (account_type == Account.ACCOUNT_TYPE_ADMIN) {
        nicResponse.setBroadcastUri(rs.getString("nics.broadcast_uri"));
        nicResponse.setIsolationUri(rs.getString("nics.isolation_uri"));
      }
      nicResponse.setTrafficType(rs.getString("networks.traffic_type"));
      nicResponse.setType(rs.getString("networks.guest_type"));
      nicResponse.setIsDefault(rs.getBoolean("networks.is_default"));
      nicResponse.setObjectName("nic");
      nicResponses.add(nicResponse);
    }
    userVmResponse.setSecurityGroupList(new ArrayList(securityGroupResponse));
    userVmResponse.setNics(new ArrayList(nicResponses));
    return result;
  }
 catch (  SQLException e) {
    throw new CloudRuntimeException("DB Exception on: " + VM_DETAILS,e);
  }
catch (  Throwable e) {
    throw new CloudRuntimeException("Caught: " + VM_DETAILS,e);
  }
}
