{
  VpcVirtualNetworkApplianceManagerImpl vpcVirtNetAppMgr=new VpcVirtualNetworkApplianceManagerImpl();
  vpcVirtNetAppMgr._vpcDao=_vpcDao;
  vpcVirtNetAppMgr._dcDao=_dcDao;
  vpcVirtNetAppMgr._nicDao=_nicDao;
  vpcVirtNetAppMgr._routerDao=_routerDao;
  when(router.getId()).thenReturn(1L);
  when(router.getVpcId()).thenReturn(1L);
  when(router.getDataCenterId()).thenReturn(1L);
  VpcVO vpc=new VpcVO(1L,"bla","bla",1L,1L,1L,"10.0.0.0/8","blieb.net");
  when(_vpcDao.findById(1L)).thenReturn(vpc);
  DataCenterVO dcVo=new DataCenterVO(1L,"dc","dc","8.8.8.8",null,null,null,"10.0.0.0/8","bla.net",new Long(1L),NetworkType.Advanced,null,".net");
  Map<String,String> map=new HashMap<String,String>();
  dcVo.setDetails(map);
  dcVo.setDetail(ZoneConfig.DnsSearchOrder.getName(),"dummy");
  when(_dcDao.findById(1L)).thenReturn(dcVo);
  DomainRouterVO routerVo=new DomainRouterVO(1L,1L,1L,"brr",1L,HypervisorType.Any,1L,1L,1L,false,0,false,RedundantState.MASTER,false,false,1L);
  when(_routerDao.findById(1L)).thenReturn(routerVo);
  when(router.getInstanceName()).thenReturn("r-vm-1");
  when(router.getPublicIpAddress()).thenReturn("11.11.11.11");
  NicVO nicvo=new NicVO("server",1l,1l,VirtualMachine.Type.DomainRouter);
  nicvo.setNetworkId(1l);
  when(_nicDao.findByIp4AddressAndVmId(anyString(),anyLong())).thenReturn(nicvo);
  NetworkManager netMgr=mock(NetworkManager.class);
  vpcVirtNetAppMgr._networkMgr=netMgr;
  vpcVirtNetAppMgr._networkModel=_networkmodel;
  when(nicVO.getNetworkId()).thenReturn(1l);
  when(_networkmodel.isProviderSupportServiceInNetwork(1l,Network.Service.Dhcp,Network.Provider.VirtualRouter)).thenReturn(true);
  when(dcVO.getDetail(anyString())).thenReturn(null);
  Commands cmds=new Commands(OnError.Stop);
  vpcVirtNetAppMgr.configDnsMasq(router,cmds);
  Assert.assertEquals("expected one command",1,cmds.size());
  DnsMasqConfigCommand cmd=cmds.getCommand(DnsMasqConfigCommand.class);
}
