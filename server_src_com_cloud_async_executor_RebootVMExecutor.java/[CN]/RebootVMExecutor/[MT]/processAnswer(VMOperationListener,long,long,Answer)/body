{
  UserVmVO vm=listener.getVm();
  AsyncJobManager asyncMgr=getAsyncJobMgr();
  boolean jobStatusUpdated=false;
  try {
    if (s_logger.isDebugEnabled())     s_logger.debug("Execute asynchronize Reboot VM command: received answer, " + vm.getHostId() + "-"+ seq);
    if (answer != null) {
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_SUCCEEDED,0,VMExecutorHelper.composeResultObject(asyncMgr.getExecutorContext().getManagementServer(),vm,null));
      jobStatusUpdated=true;
    }
 else {
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"Agent is unable to execute the command");
      jobStatusUpdated=true;
    }
  }
 catch (  Exception e) {
    s_logger.error("Unexpected exception " + e.getMessage(),e);
    if (!jobStatusUpdated) {
      if (answer != null) {
        asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_SUCCEEDED,0,VMExecutorHelper.composeResultObject(asyncMgr.getExecutorContext().getManagementServer(),vm,null));
      }
 else {
        asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"Agent is unable to execute the command");
      }
    }
  }
 finally {
    asyncMgr.releaseSyncSource(this);
  }
}
