{
  UserVmVO vm=listener.getVm();
  VMOperationParam param=listener.getParam();
  AsyncJobManager asyncMgr=getAsyncJobMgr();
  EventVO event=new EventVO();
  event.setUserId(param.getUserId());
  event.setAccountId(vm.getAccountId());
  event.setType(EventTypes.EVENT_VM_REBOOT);
  event.setParameters("id=" + vm.getId() + "\nvmName="+ vm.getName()+ "\nsoId="+ vm.getServiceOfferingId()+ "\ntId="+ vm.getTemplateId()+ "\ndcId="+ vm.getDataCenterId());
  event.setDescription("failed to reboot VM instance : " + vm.getName() + " due to "+ resultMessage);
  event.setLevel(EventVO.LEVEL_ERROR);
  boolean jobStatusUpdated=false;
  try {
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,0,resultMessage);
    jobStatusUpdated=true;
    asyncMgr.getExecutorContext().getEventDao().persist(event);
  }
 catch (  Exception e) {
    s_logger.error("Unexpected exception " + e.getMessage(),e);
    if (!jobStatusUpdated)     asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,0,resultMessage);
  }
 finally {
    asyncMgr.releaseSyncSource(this);
  }
}
