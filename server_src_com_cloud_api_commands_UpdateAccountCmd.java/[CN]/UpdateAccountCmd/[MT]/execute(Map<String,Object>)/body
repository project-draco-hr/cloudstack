{
  Long domainId=(Long)params.get(BaseCmd.Properties.DOMAIN_ID.getName());
  String accountName=(String)params.get(BaseCmd.Properties.ACCOUNT.getName());
  String newAccountName=(String)params.get(BaseCmd.Properties.NEW_NAME.getName());
  Account adminAccount=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  ;
  Boolean updateAccountResult=false;
  Account account=null;
  account=getManagementServer().findAccountByName(accountName,domainId);
  if (account == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find account " + accountName + " in domain "+ domainId);
  }
  if ((adminAccount != null) && !getManagementServer().isChildDomain(adminAccount.getDomainId(),account.getDomainId())) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Invalid account " + accountName + " in domain "+ domainId+ " given, unable to update account.");
  }
  if (account.getId().longValue() == Account.ACCOUNT_ID_SYSTEM) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"can not modify system account");
  }
  try {
    getManagementServer().updateAccount(account.getId(),newAccountName);
    account=getManagementServer().findAccountById(account.getId());
    if (account.getAccountName().equals(newAccountName)) {
      updateAccountResult=true;
    }
  }
 catch (  Exception ex) {
    s_logger.error("Exception updating account",ex);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to update account " + accountName + " in domain "+ domainId+ ":  internal error.");
  }
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  if (updateAccountResult == true) {
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.SUCCESS.getName(),new Boolean(true)));
  }
 else {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to update account " + accountName + " in domain "+ domainId);
  }
  return returnValues;
}
