def report(self, stream):
    'Writes an Xunit-formatted XML file\n\n        The file includes a report of test errors and failures.\n\n        '
    stats = {'errors': self.xunitstats[0], 'failures': self.xunitstats[1], 'passes': self.xunitstats[2], 'skipped': self.xunitstats[3], }
    stats['encoding'] = self.encoding
    stats['total'] = (((stats['errors'] + stats['failures']) + stats['passes']) + stats['skipped'])
    stats['header'] = self.xunit_header
    if UNICODE_STRINGS:
        error_report_file = open(self.xunit_file, 'w', encoding=self.encoding)
    else:
        error_report_file = open(self.xunit_file, 'w')
    error_report_file.write(('<?xml version="1.0" encoding="%(encoding)s"?><testsuite %(header)s tests="%(total)d" errors="%(errors)d" failures="%(failures)d" skip="%(skipped)d">' % stats))
    while (len(self.xunitstream) > 0):
        error_report_file.write(self.xunitstream.pop(0))
    error_report_file.write('</testsuite>')
    error_report_file.close()
    if (self.config.verbosity > 1):
        stream.writeln(('-' * 70))
        stream.writeln(('XML: %s' % error_report_file.name))
