{
  final CloseableHttpResponse response=mock(CloseableHttpResponse.class);
  when(response.getStatusLine()).thenReturn(HTTP_200_STATUS_LINE);
  when(response.getEntity()).thenReturn(new StringEntity("{results: [{field : \"SomeValue\"}], results_count: 1}"));
  final CloseableHttpClient httpClient=mock(CloseableHttpClient.class);
  when(httpClient.execute(any(HttpHost.class),any(HttpRequest.class),any(HttpClientContext.class))).thenReturn(response);
  final RestClient restClient=new BasicRestClient(httpClient,HttpClientContext.create(),"localhost");
  final Class<? extends CollectionType> clazzListOfTestPojo=new ObjectMapper().getTypeFactory().constructCollectionType(List.class,TestPojo.class).getClass();
  final RESTServiceConnector connector=new RESTServiceConnector.Builder().client(restClient).classToDeserializerEntry(clazzListOfTestPojo,new CustomListDeserializer<TestPojoDeserializer>()).build();
  connector.executeRetrieveObject(TestPojo.class,"/somepath");
}
