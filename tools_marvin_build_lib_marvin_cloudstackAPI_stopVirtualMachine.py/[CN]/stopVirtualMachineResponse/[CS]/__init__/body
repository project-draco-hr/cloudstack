def __init__(self):
    'the ID of the virtual machine'
    self.id = None
    'the account associated with the virtual machine'
    self.account = None
    'the number of cpu this virtual machine is running with'
    self.cpunumber = None
    'the speed of each cpu'
    self.cpuspeed = None
    "the amount of the vm's CPU currently used"
    self.cpuused = None
    'the date when this virtual machine was created'
    self.created = None
    'the read (io) of disk on the vm'
    self.diskioread = None
    'the write (io) of disk on the vm'
    self.diskiowrite = None
    'the read (bytes) of disk on the vm'
    self.diskkbsread = None
    'the write (bytes) of disk on the vm'
    self.diskkbswrite = None
    'user generated name. The name of the virtual machine is returned if no displayname exists.'
    self.displayname = None
    'an optional field whether to the display the vm to the end user or not.'
    self.displayvm = None
    'the name of the domain in which the virtual machine exists'
    self.domain = None
    'the ID of the domain in which the virtual machine exists'
    self.domainid = None
    'the virtual network for the service offering'
    self.forvirtualnetwork = None
    'the group name of the virtual machine'
    self.group = None
    'the group ID of the virtual machine'
    self.groupid = None
    'Os type ID of the virtual machine'
    self.guestosid = None
    'true if high-availability is enabled, false otherwise'
    self.haenable = None
    'the ID of the host for the virtual machine'
    self.hostid = None
    'the name of the host for the virtual machine'
    self.hostname = None
    'the hypervisor on which the template runs'
    self.hypervisor = None
    'instance name of the user vm; this parameter is returned to the ROOT admin only'
    self.instancename = None
    'true if vm contains XS/VMWare tools inorder to support dynamic scaling of VM cpu/memory.'
    self.isdynamicallyscalable = None
    'an alternate display text of the ISO attached to the virtual machine'
    self.isodisplaytext = None
    'the ID of the ISO attached to the virtual machine'
    self.isoid = None
    'the name of the ISO attached to the virtual machine'
    self.isoname = None
    'ssh key-pair'
    self.keypair = None
    'the memory allocated for the virtual machine'
    self.memory = None
    'the name of the virtual machine'
    self.name = None
    'the incoming network traffic on the vm'
    self.networkkbsread = None
    'the outgoing network traffic on the host'
    self.networkkbswrite = None
    'the password (if exists) of the virtual machine'
    self.password = None
    'true if the password rest feature is enabled, false otherwise'
    self.passwordenabled = None
    'the project name of the vm'
    self.project = None
    'the project id of the vm'
    self.projectid = None
    'public IP address id associated with vm via Static nat rule'
    self.publicip = None
    'public IP address id associated with vm via Static nat rule'
    self.publicipid = None
    'device ID of the root volume'
    self.rootdeviceid = None
    'device type of the root volume'
    self.rootdevicetype = None
    'the ID of the service offering of the virtual machine'
    self.serviceofferingid = None
    'the name of the service offering of the virtual machine'
    self.serviceofferingname = None
    'State of the Service from LB rule'
    self.servicestate = None
    'the state of the virtual machine'
    self.state = None
    'an alternate display text of the template for the virtual machine'
    self.templatedisplaytext = None
    'the ID of the template for the virtual machine. A -1 is returned if the virtual machine was created from an ISO file.'
    self.templateid = None
    'the name of the template for the virtual machine'
    self.templatename = None
    'the ID of the availablility zone for the virtual machine'
    self.zoneid = None
    'the name of the availability zone for the virtual machine'
    self.zonename = None
    'list of affinity groups associated with the virtual machine'
    self.affinitygroup = []
    'the list of nics associated with vm'
    self.nic = []
    'list of security groups associated with the virtual machine'
    self.securitygroup = []
    'the list of resource tags associated with vm'
    self.tags = []
    'the ID of the latest async job acting on this object'
    self.jobid = None
    'the current status of the latest async job acting on this object'
    self.jobstatus = None
