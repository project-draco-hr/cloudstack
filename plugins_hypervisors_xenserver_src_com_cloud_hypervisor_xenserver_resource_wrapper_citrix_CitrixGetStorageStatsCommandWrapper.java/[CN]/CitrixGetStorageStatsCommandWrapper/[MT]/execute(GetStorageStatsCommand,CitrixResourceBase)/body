{
  final Connection conn=citrixResourceBase.getConnection();
  try {
    final Set<SR> srs=SR.getByNameLabel(conn,command.getStorageId());
    if (srs.size() != 1) {
      final String msg="There are " + srs.size() + " storageid: "+ command.getStorageId();
      s_logger.warn(msg);
      return new GetStorageStatsAnswer(command,msg);
    }
    final SR sr=srs.iterator().next();
    sr.scan(conn);
    final long capacity=sr.getPhysicalSize(conn);
    final long used=sr.getPhysicalUtilisation(conn);
    return new GetStorageStatsAnswer(command,capacity,used);
  }
 catch (  final XenAPIException e) {
    final String msg="GetStorageStats Exception:" + e.toString() + "host:"+ citrixResourceBase.getHost().getUuid()+ "storageid: "+ command.getStorageId();
    s_logger.warn(msg);
    return new GetStorageStatsAnswer(command,msg);
  }
catch (  final XmlRpcException e) {
    final String msg="GetStorageStats Exception:" + e.getMessage() + "host:"+ citrixResourceBase.getHost().getUuid()+ "storageid: "+ command.getStorageId();
    s_logger.warn(msg);
    return new GetStorageStatsAnswer(command,msg);
  }
catch (  final Exception e) {
    final String msg="GetStorageStats Exception:" + e.getMessage() + "host:"+ citrixResourceBase.getHost().getUuid()+ "storageid: "+ command.getStorageId();
    s_logger.warn(msg);
    return new GetStorageStatsAnswer(command,msg);
  }
}
