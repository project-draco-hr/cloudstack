{
  if (plannedDestination.getHost() == null) {
    return true;
  }
  long plannedHostId=plannedDestination.getHost().getId();
  VirtualMachine vm=vmProfile.getVirtualMachine();
  List<AffinityGroupVMMapVO> vmGroupMappings=_affinityGroupVMMapDao.findByVmIdType(vm.getId(),getType());
  for (  AffinityGroupVMMapVO vmGroupMapping : vmGroupMappings) {
    List<Long> groupVMIds=_affinityGroupVMMapDao.listVmIdsByAffinityGroup(vmGroupMapping.getAffinityGroupId());
    groupVMIds.remove(vm.getId());
    for (    Long groupVMId : groupVMIds) {
      VMReservationVO vmReservation=_reservationDao.findByVmId(groupVMId);
      if (vmReservation != null && vmReservation.getHostId() != null && vmReservation.getHostId().equals(plannedHostId)) {
        if (logger.isDebugEnabled()) {
          logger.debug("Planned destination for VM " + vm.getId() + " conflicts with an existing VM "+ vmReservation.getVmId()+ " reserved on the same host "+ plannedHostId);
        }
        return false;
      }
    }
  }
  return true;
}
