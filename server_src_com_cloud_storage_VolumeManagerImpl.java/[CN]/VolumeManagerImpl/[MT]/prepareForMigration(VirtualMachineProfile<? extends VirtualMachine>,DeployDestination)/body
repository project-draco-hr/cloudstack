{
  List<VolumeVO> vols=_volsDao.findUsableVolumesForInstance(vm.getId());
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Preparing " + vols.size() + " volumes for "+ vm);
  }
  for (  VolumeVO vol : vols) {
    PrimaryDataStoreInfo pool=(PrimaryDataStoreInfo)this.dataStoreMgr.getDataStore(vol.getPoolId(),DataStoreRole.Primary);
    ServiceOfferingVO offering=_offeringDao.findById(vm.getServiceOfferingId());
    DiskOfferingVO diskOffering=_diskOfferingDao.findById(vol.getDiskOfferingId());
    VolumeTO newVolume=new VolumeTO(vol,pool);
    newVolume.setBytesRate(storageMgr.getDiskBytesRate(offering,diskOffering));
    newVolume.setIopsRate(storageMgr.getDiskIORate(offering,diskOffering));
    vm.addDisk(newVolume);
  }
  if (vm.getType() == VirtualMachine.Type.User) {
    UserVmVO userVM=(UserVmVO)vm.getVirtualMachine();
    if (userVM.getIsoId() != null) {
      Pair<String,String> isoPathPair=this._tmpltMgr.getAbsoluteIsoPath(userVM.getIsoId(),userVM.getDataCenterId());
      if (isoPathPair != null) {
        String isoPath=isoPathPair.first();
        VolumeTO iso=new VolumeTO(vm.getId(),Volume.Type.ISO,StoragePoolType.ISO,null,null,null,isoPath,0,null,null);
        vm.addDisk(iso);
      }
    }
  }
}
