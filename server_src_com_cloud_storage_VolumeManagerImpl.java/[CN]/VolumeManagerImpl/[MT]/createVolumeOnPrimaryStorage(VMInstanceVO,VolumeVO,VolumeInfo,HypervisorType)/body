{
  VMTemplateVO rootDiskTmplt=_templateDao.findById(vm.getTemplateId());
  DataCenterVO dcVO=_dcDao.findById(vm.getDataCenterId());
  HostPodVO pod=_podDao.findById(vm.getPodIdToDeployIn());
  StoragePoolVO rootDiskPool=_storagePoolDao.findById(rootVolumeOfVm.getPoolId());
  ServiceOfferingVO svo=_serviceOfferingDao.findById(vm.getServiceOfferingId());
  DiskOfferingVO diskVO=_diskOfferingDao.findById(volume.getDiskOfferingId());
  Long clusterId=(rootDiskPool == null ? null : rootDiskPool.getClusterId());
  VolumeInfo vol=null;
  if (volume.getState() == Volume.State.Allocated) {
    vol=createVolume(volume,vm,rootDiskTmplt,dcVO,pod,clusterId,svo,diskVO,new ArrayList<StoragePool>(),volume.getSize(),rootDiskHyperType);
  }
 else   if (volume.getState() == Volume.State.Uploaded) {
    vol=copyVolume(rootDiskPool,volume,vm,rootDiskTmplt,dcVO,pod,diskVO,svo,rootDiskHyperType);
    if (vol != null) {
      _resourceLimitMgr.decrementResourceCount(volume.getAccountId(),ResourceType.secondary_storage,new Long(volume.getSize()));
      _resourceLimitMgr.incrementResourceCount(volume.getAccountId(),ResourceType.primary_storage,new Long(volume.getSize()));
    }
  }
  VolumeVO volVO=_volsDao.findById(vol.getId());
  volVO.setFormat(getSupportedImageFormatForCluster(rootDiskHyperType));
  _volsDao.update(volVO.getId(),volVO);
  return volFactory.getVolume(volVO.getId());
}
