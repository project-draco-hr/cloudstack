{
  Long volumeId=cmd.getVolumeId();
  Long storagePoolId=cmd.getStoragePoolId();
  VolumeVO vol=_volsDao.findById(volumeId);
  if (vol == null) {
    throw new InvalidParameterValueException("Failed to find the volume id: " + volumeId);
  }
  if (vol.getState() != Volume.State.Ready) {
    throw new InvalidParameterValueException("Volume must be in ready state");
  }
  boolean liveMigrateVolume=false;
  Long instanceId=vol.getInstanceId();
  VMInstanceVO vm=null;
  if (instanceId != null) {
    vm=_vmInstanceDao.findById(instanceId);
  }
  if (vm != null && vm.getState() == State.Running) {
    Long hostId=vm.getHostId();
    if (hostId != null) {
      HostVO host=_hostDao.findById(hostId);
      HypervisorCapabilitiesVO capabilities=null;
      if (host != null) {
        capabilities=_hypervisorCapabilitiesDao.findByHypervisorTypeAndVersion(host.getHypervisorType(),host.getHypervisorVersion());
      }
      if (capabilities != null) {
        liveMigrateVolume=capabilities.isStorageMotionSupported();
      }
    }
  }
  if (liveMigrateVolume && !cmd.isLiveMigrate()) {
    throw new InvalidParameterValueException("The volume " + vol + "is attached to a vm and for migrating it "+ "the parameter livemigrate should be specified");
  }
  StoragePool destPool=(StoragePool)dataStoreMgr.getDataStore(storagePoolId,DataStoreRole.Primary);
  if (destPool == null) {
    throw new InvalidParameterValueException("Failed to find the destination storage pool: " + storagePoolId);
  }
  if (!volumeOnSharedStoragePool(vol)) {
    throw new InvalidParameterValueException("Migration of volume from local storage pool is not supported");
  }
  Volume newVol=null;
  if (liveMigrateVolume) {
    newVol=liveMigrateVolume(vol,destPool);
  }
 else {
    newVol=migrateVolume(vol,destPool);
  }
  return newVol;
}
