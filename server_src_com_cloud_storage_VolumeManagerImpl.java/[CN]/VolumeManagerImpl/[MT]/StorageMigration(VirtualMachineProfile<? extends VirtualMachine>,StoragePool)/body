{
  List<VolumeVO> vols=_volsDao.findUsableVolumesForInstance(vm.getId());
  List<Volume> volumesNeedToMigrate=new ArrayList<Volume>();
  for (  VolumeVO volume : vols) {
    if (volume.getState() != Volume.State.Ready) {
      s_logger.debug("volume: " + volume.getId() + " is in "+ volume.getState()+ " state");
      throw new CloudRuntimeException("volume: " + volume.getId() + " is in "+ volume.getState()+ " state");
    }
    if (volume.getPoolId() == destPool.getId()) {
      s_logger.debug("volume: " + volume.getId() + " is on the same storage pool: "+ destPool.getId());
      continue;
    }
    volumesNeedToMigrate.add(volume);
  }
  if (volumesNeedToMigrate.isEmpty()) {
    s_logger.debug("No volume need to be migrated");
    return true;
  }
  return migrateVolumes(volumesNeedToMigrate,destPool);
}
