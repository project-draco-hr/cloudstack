{
  return Transaction.execute(new TransactionCallback<Boolean>(){
    @Override public Boolean doInTransaction(    TransactionStatus status){
      for (      String key : details.keySet()) {
        String value=details.get(key);
        if (value == null || value.isEmpty()) {
          throw new InvalidParameterValueException("Value for the key " + key + " is either null or empty");
        }
        if (!resourceType.resourceMetadataSupport()) {
          throw new InvalidParameterValueException("The resource type " + resourceType + " doesn't support metadata (resource details)");
        }
        long id=_taggedResourceMgr.getResourceId(resourceId,resourceType);
        if (resourceType == ResourceObjectType.Volume) {
          VolumeDetailVO detail=new VolumeDetailVO(id,key,value);
          _volumeDetailDao.addDetail(detail);
        }
 else         if (resourceType == ResourceObjectType.Nic) {
          NicDetailVO detail=new NicDetailVO(id,key,value);
          _nicDetailDao.addDetail(detail);
        }
 else         if (resourceType == ResourceObjectType.Zone) {
          DataCenterDetailVO dataCenterDetail=new DataCenterDetailVO(id,key,value);
          _dcDetailsDao.addDetail(dataCenterDetail);
        }
 else         if (resourceType == ResourceObjectType.Network) {
          NetworkDetailVO detail=new NetworkDetailVO(id,key,value);
          _networkDetailsDao.addDetail(detail);
        }
 else         if (resourceType == ResourceObjectType.UserVm) {
          UserVmDetailVO detail=new UserVmDetailVO(id,key,value);
          _userVmDetailsDao.addDetail(detail);
        }
 else         if (resourceType == ResourceObjectType.Template) {
          VMTemplateDetailVO detail=new VMTemplateDetailVO(id,key,value);
          _templateDetailsDao.addDetail(detail);
        }
 else         if (resourceType == ResourceObjectType.ServiceOffering) {
          ServiceOfferingDetailsVO detail=new ServiceOfferingDetailsVO(id,key,value);
          _serviceOfferingDetailsDao.addDetail(detail);
        }
      }
      return true;
    }
  }
);
}
