{
  AllFieldsSearch=createSearchBuilder();
  AllFieldsSearch.and("state",AllFieldsSearch.entity().getState(),Op.EQ);
  AllFieldsSearch.and("accountId",AllFieldsSearch.entity().getAccountId(),Op.EQ);
  AllFieldsSearch.and("dcId",AllFieldsSearch.entity().getDataCenterId(),Op.EQ);
  AllFieldsSearch.and("pod",AllFieldsSearch.entity().getPodId(),Op.EQ);
  AllFieldsSearch.and("instanceId",AllFieldsSearch.entity().getInstanceId(),Op.EQ);
  AllFieldsSearch.and("deviceId",AllFieldsSearch.entity().getDeviceId(),Op.EQ);
  AllFieldsSearch.and("poolId",AllFieldsSearch.entity().getPoolId(),Op.EQ);
  AllFieldsSearch.and("vType",AllFieldsSearch.entity().getVolumeType(),Op.EQ);
  AllFieldsSearch.and("id",AllFieldsSearch.entity().getId(),Op.EQ);
  AllFieldsSearch.and("destroyed",AllFieldsSearch.entity().getState(),Op.EQ);
  AllFieldsSearch.and("notDestroyed",AllFieldsSearch.entity().getState(),Op.NEQ);
  AllFieldsSearch.and("updateTime",AllFieldsSearch.entity().getUpdated(),SearchCriteria.Op.LT);
  AllFieldsSearch.and("updatedCount",AllFieldsSearch.entity().getUpdatedCount(),Op.EQ);
  AllFieldsSearch.and("name",AllFieldsSearch.entity().getName(),Op.EQ);
  AllFieldsSearch.done();
  DetachedAccountIdSearch=createSearchBuilder();
  DetachedAccountIdSearch.and("accountId",DetachedAccountIdSearch.entity().getAccountId(),Op.EQ);
  DetachedAccountIdSearch.and("destroyed",DetachedAccountIdSearch.entity().getState(),Op.NEQ);
  DetachedAccountIdSearch.and("instanceId",DetachedAccountIdSearch.entity().getInstanceId(),Op.NULL);
  DetachedAccountIdSearch.done();
  TemplateZoneSearch=createSearchBuilder();
  TemplateZoneSearch.and("template",TemplateZoneSearch.entity().getTemplateId(),Op.EQ);
  TemplateZoneSearch.and("zone",TemplateZoneSearch.entity().getDataCenterId(),Op.EQ);
  TemplateZoneSearch.done();
  TotalSizeByPoolSearch=createSearchBuilder(SumCount.class);
  TotalSizeByPoolSearch.select("sum",Func.SUM,TotalSizeByPoolSearch.entity().getSize());
  TotalSizeByPoolSearch.select("count",Func.COUNT,(Object[])null);
  TotalSizeByPoolSearch.and("poolId",TotalSizeByPoolSearch.entity().getPoolId(),Op.EQ);
  TotalSizeByPoolSearch.and("removed",TotalSizeByPoolSearch.entity().getRemoved(),Op.NULL);
  TotalSizeByPoolSearch.and("state",TotalSizeByPoolSearch.entity().getState(),Op.NEQ);
  TotalSizeByPoolSearch.done();
  TotalVMSnapshotSizeByPoolSearch=createSearchBuilder(SumCount.class);
  TotalVMSnapshotSizeByPoolSearch.select("sum",Func.SUM,TotalVMSnapshotSizeByPoolSearch.entity().getVmSnapshotChainSize());
  TotalVMSnapshotSizeByPoolSearch.and("poolId",TotalVMSnapshotSizeByPoolSearch.entity().getPoolId(),Op.EQ);
  TotalVMSnapshotSizeByPoolSearch.and("removed",TotalVMSnapshotSizeByPoolSearch.entity().getRemoved(),Op.NULL);
  TotalVMSnapshotSizeByPoolSearch.and("state",TotalVMSnapshotSizeByPoolSearch.entity().getState(),Op.NEQ);
  TotalVMSnapshotSizeByPoolSearch.and("vType",TotalVMSnapshotSizeByPoolSearch.entity().getVolumeType(),Op.EQ);
  TotalVMSnapshotSizeByPoolSearch.and("instanceId",TotalVMSnapshotSizeByPoolSearch.entity().getInstanceId(),Op.NNULL);
  TotalVMSnapshotSizeByPoolSearch.done();
  ActiveTemplateSearch=createSearchBuilder(Long.class);
  ActiveTemplateSearch.and("pool",ActiveTemplateSearch.entity().getPoolId(),Op.EQ);
  ActiveTemplateSearch.and("template",ActiveTemplateSearch.entity().getTemplateId(),Op.EQ);
  ActiveTemplateSearch.and("removed",ActiveTemplateSearch.entity().getRemoved(),Op.NULL);
  ActiveTemplateSearch.select(null,Func.COUNT,null);
  ActiveTemplateSearch.done();
  InstanceStatesSearch=createSearchBuilder();
  InstanceStatesSearch.and("instance",InstanceStatesSearch.entity().getInstanceId(),Op.EQ);
  InstanceStatesSearch.and("states",InstanceStatesSearch.entity().getState(),Op.IN);
  InstanceStatesSearch.done();
  CountByAccount=createSearchBuilder(Long.class);
  CountByAccount.select(null,Func.COUNT,null);
  CountByAccount.and("account",CountByAccount.entity().getAccountId(),SearchCriteria.Op.EQ);
  CountByAccount.and("state",CountByAccount.entity().getState(),SearchCriteria.Op.NIN);
  CountByAccount.and("displayVolume",CountByAccount.entity().isDisplayVolume(),Op.EQ);
  CountByAccount.done();
  primaryStorageSearch=createSearchBuilder(SumCount.class);
  primaryStorageSearch.select("sum",Func.SUM,primaryStorageSearch.entity().getSize());
  primaryStorageSearch.and("accountId",primaryStorageSearch.entity().getAccountId(),Op.EQ);
  primaryStorageSearch.and().op("path",primaryStorageSearch.entity().getPath(),Op.NNULL);
  primaryStorageSearch.or("states",primaryStorageSearch.entity().getState(),Op.IN);
  primaryStorageSearch.cp();
  primaryStorageSearch.and("displayVolume",primaryStorageSearch.entity().isDisplayVolume(),Op.EQ);
  primaryStorageSearch.and("isRemoved",primaryStorageSearch.entity().getRemoved(),Op.NULL);
  primaryStorageSearch.done();
  primaryStorageSearch2=createSearchBuilder(SumCount.class);
  primaryStorageSearch2.select("sum",Func.SUM,primaryStorageSearch2.entity().getSize());
  primaryStorageSearch2.and("accountId",primaryStorageSearch2.entity().getAccountId(),Op.EQ);
  primaryStorageSearch2.and().op("instanceId",primaryStorageSearch2.entity().getInstanceId(),Op.NULL);
  primaryStorageSearch2.or("virtualRouterVmIds",primaryStorageSearch2.entity().getInstanceId(),Op.NIN);
  primaryStorageSearch2.cp();
  primaryStorageSearch2.and().op("path",primaryStorageSearch2.entity().getPath(),Op.NNULL);
  primaryStorageSearch2.or("states",primaryStorageSearch2.entity().getState(),Op.IN);
  primaryStorageSearch2.cp();
  primaryStorageSearch2.and("displayVolume",primaryStorageSearch2.entity().isDisplayVolume(),Op.EQ);
  primaryStorageSearch2.and("isRemoved",primaryStorageSearch2.entity().getRemoved(),Op.NULL);
  primaryStorageSearch2.done();
  secondaryStorageSearch=createSearchBuilder(SumCount.class);
  secondaryStorageSearch.select("sum",Func.SUM,secondaryStorageSearch.entity().getSize());
  secondaryStorageSearch.and("accountId",secondaryStorageSearch.entity().getAccountId(),Op.EQ);
  secondaryStorageSearch.and("path",secondaryStorageSearch.entity().getPath(),Op.NULL);
  secondaryStorageSearch.and("states",secondaryStorageSearch.entity().getState(),Op.NIN);
  secondaryStorageSearch.and("isRemoved",secondaryStorageSearch.entity().getRemoved(),Op.NULL);
  secondaryStorageSearch.done();
}
