@attr(tags=['advanced', 'basic'])
@data('consoleproxy', 'secondarystoragevm', 'domainrouter', 'internalloadbalancervm')
def test_01_list_system_offerngs(self, value):
    'List service offerings for systemvms and verify there should be two\n        (local and shared) SO  for each system vm'
    list_custom_so = ServiceOffering.list(self.apiclient, issystem='true', listall='true', systemvmtype=value)
    self.assertEqual(validateList(list_custom_so)[0], PASS, ('Check List service offerings response for  %s' % value))
    local_custom_so = []
    for item in list_custom_so:
        if (str(item.defaultuse) == 'True'):
            local_custom_so.append(item.storagetype)
    self.assertEqual(len(local_custom_so), 2, ('Check default system offering for system vm type %s' % value))
    if (('local' in local_custom_so) and ('shared' in local_custom_so)):
        self.debug(('there are exactly to Service offerings{share,local} are there for system vm %s' % value))
    else:
        raise Exception(('check local and shared service offerings for %s' % value))
