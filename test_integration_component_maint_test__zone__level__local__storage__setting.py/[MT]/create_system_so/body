def create_system_so(self, offering_type, storage_type):
    'Create system offerings '
    self.testdata['service_offerings']['issystem'] = 'true'
    self.testdata['service_offerings']['systemvmtype'] = offering_type
    self.testdata['service_offerings']['storagetype'] = storage_type
    service_offering = ServiceOffering.create(self.apiclient, self.testdata['service_offerings'])
    if (service_offering is None):
        raise Exception('service offering not created')
    list_service_response = list_service_offering(self.apiclient, id=service_offering.id, issystem='true')
    self.assertEqual(validateList(list_service_response)[0], PASS, ('Check List srvice offering response for  %s' % type))
    self.debug(('Created service offering with ID: %s' % service_offering.id))
    self.assertEqual(list_service_response[0].cpunumber, self.testdata['service_offerings']['cpunumber'], 'Check server id in createServiceOffering')
    self.assertEqual(list_service_response[0].cpuspeed, self.testdata['service_offerings']['cpuspeed'], 'Check cpuspeed in createServiceOffering')
    self.assertEqual(list_service_response[0].displaytext, self.testdata['service_offerings']['displaytext'], 'Check server displaytext in createServiceOfferings')
    self.assertEqual(list_service_response[0].memory, self.testdata['service_offerings']['memory'], 'Check memory in createServiceOffering')
    self.assertEqual(list_service_response[0].name, self.testdata['service_offerings']['name'], 'Check name in createServiceOffering')
    self.assertEqual(list_service_response[0].storagetype, self.testdata['service_offerings']['storagetype'], 'Check storagetype in createServiceOffering')
    self._cleanup.append(service_offering)
    return service_offering.id
