{
  String podName=(String)params.get(BaseCmd.Properties.NAME.getName());
  Long zoneId=(Long)params.get(BaseCmd.Properties.ZONE_ID.getName());
  String gateway=(String)params.get(BaseCmd.Properties.GATEWAY.getName());
  String cidr=(String)params.get(BaseCmd.Properties.CIDR.getName());
  String startIp=(String)params.get(BaseCmd.Properties.START_IP.getName());
  String endIp=(String)params.get(BaseCmd.Properties.END_IP.getName());
  Long userId=(Long)params.get(BaseCmd.Properties.USER_ID.getName());
  if (userId == null) {
    userId=Long.valueOf(User.UID_SYSTEM);
  }
  DataCenterVO zone=getManagementServer().findDataCenterById(zoneId);
  if (zone == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find zone by id " + zoneId);
  }
  if (endIp != null && startIp == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"If an end IP is specified, a start IP must be specified.");
  }
  HostPodVO pod=null;
  try {
    pod=getManagementServer().createPod(userId,podName,zoneId,gateway,cidr,startIp,endIp);
  }
 catch (  Exception ex) {
    s_logger.error("Exception creating pod",ex);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,ex.getMessage());
  }
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  if (pod == null) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to create pod; internal error.");
  }
 else {
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.ID.getName(),pod.getId()));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.NAME.getName(),podName));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.ZONE_ID.getName(),zoneId));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.ZONE_NAME.getName(),zone.getName()));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.GATEWAY.getName(),pod.getGateway()));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.CIDR.getName(),cidr));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.START_IP.getName(),startIp));
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.END_IP.getName(),endIp != null ? endIp : ""));
  }
  return returnValues;
}
