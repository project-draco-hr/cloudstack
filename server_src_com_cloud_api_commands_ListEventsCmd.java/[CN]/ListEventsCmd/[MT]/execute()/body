{
  List<EventVO> result=_mgr.searchForEvents(this);
  ListResponse<EventResponse> response=new ListResponse<EventResponse>();
  List<EventResponse> eventResponses=new ArrayList<EventResponse>();
  for (  EventVO event : result) {
    EventResponse responseEvent=new EventResponse();
    responseEvent.setAccountName(event.getAccountName());
    responseEvent.setCreated(event.getCreateDate());
    responseEvent.setDescription(event.getDescription());
    responseEvent.setDomainId(event.getDomainId());
    responseEvent.setEventType(event.getType());
    responseEvent.setId(event.getId());
    responseEvent.setLevel(event.getLevel());
    responseEvent.setParentId(event.getStartId());
    responseEvent.setState(event.getState());
    responseEvent.setDomainName(ApiDBUtils.findDomainById(event.getDomainId()).getName());
    User user=ApiDBUtils.findUserById(event.getUserId());
    if (user != null) {
      responseEvent.setUsername(user.getUsername());
    }
    responseEvent.setObjectName("event");
    eventResponses.add(responseEvent);
  }
  response.setResponses(eventResponses);
  response.setResponseName(getName());
  this.setResponseObject(response);
}
