{
  return Transaction.execute(TransactionLegacy.USAGE_DB,new TransactionCallback<QuotaUsageVO>(){
    @Override public QuotaUsageVO doInTransaction(    final TransactionStatus status){
      List<QuotaUsageVO> quotaUsageEntries=new ArrayList<>();
      Filter filter=new Filter(QuotaUsageVO.class,"startDate",false,0L,1L);
      QueryBuilder<QuotaUsageVO> qb=QueryBuilder.create(QuotaUsageVO.class);
      qb.and(qb.entity().getAccountId(),SearchCriteria.Op.EQ,accountId);
      qb.and(qb.entity().getDomainId(),SearchCriteria.Op.EQ,domainId);
      qb.and(qb.entity().getStartDate(),SearchCriteria.Op.LT,beforeThis);
      quotaUsageEntries=search(qb.create(),filter);
      return !quotaUsageEntries.isEmpty() ? quotaUsageEntries.get(0) : null;
    }
  }
);
}
