{
  try {
    NiciraNvpList<NatRule> existingRules=_niciraNvpApi.findNatRulesByLogicalRouterUuid(cmd.getLogicalRouterUuid());
    for (    StaticNatRuleTO rule : cmd.getRules()) {
      NatRule[] rulepair=generateStaticNatRulePair(rule.getDstIp(),rule.getSrcIp());
      NatRule incoming=null;
      NatRule outgoing=null;
      for (      NatRule storedRule : existingRules.getResults()) {
        if (storedRule.equalsIgnoreUuid(rulepair[1])) {
          outgoing=storedRule;
          s_logger.debug("Found matching outgoing rule " + outgoing.getUuid());
          if (incoming != null) {
            break;
          }
        }
 else         if (storedRule.equalsIgnoreUuid(rulepair[0])) {
          incoming=storedRule;
          s_logger.debug("Found matching incoming rule " + incoming.getUuid());
          if (outgoing != null) {
            break;
          }
        }
      }
      if (incoming != null && outgoing != null) {
        if (rule.revoked()) {
          s_logger.debug("Deleting incoming rule " + incoming.getUuid());
          _niciraNvpApi.deleteLogicalRouterNatRule(cmd.getLogicalRouterUuid(),incoming.getUuid());
          s_logger.debug("Deleting outgoing rule " + outgoing.getUuid());
          _niciraNvpApi.deleteLogicalRouterNatRule(cmd.getLogicalRouterUuid(),outgoing.getUuid());
        }
      }
 else {
        if (rule.revoked()) {
          s_logger.warn("Tried deleting a rule that does not exist, " + rule.getSrcIp() + " -> "+ rule.getDstIp());
          break;
        }
        rulepair[0]=_niciraNvpApi.createLogicalRouterNatRule(cmd.getLogicalRouterUuid(),rulepair[0]);
        s_logger.debug("Created " + natRuleToString(rulepair[0]));
        try {
          rulepair[1]=_niciraNvpApi.createLogicalRouterNatRule(cmd.getLogicalRouterUuid(),rulepair[1]);
          s_logger.debug("Created " + natRuleToString(rulepair[1]));
        }
 catch (        NiciraNvpApiException ex) {
          s_logger.debug("Failed to create SourceNatRule, rolling back DestinationNatRule");
          _niciraNvpApi.deleteLogicalRouterNatRule(cmd.getLogicalRouterUuid(),rulepair[0].getUuid());
          throw ex;
        }
      }
    }
    return new ConfigureStaticNatRulesOnLogicalRouterAnswer(cmd,true,cmd.getRules().size() + " StaticNat rules applied");
  }
 catch (  NiciraNvpApiException e) {
    if (numRetries > 0) {
      return retry(cmd,--numRetries);
    }
 else {
      return new ConfigureStaticNatRulesOnLogicalRouterAnswer(cmd,e);
    }
  }
}
