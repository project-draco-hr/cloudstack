{
  ClusterVO cluster=_clusterDao.findById(clusterId);
  if (cluster == null) {
    throw new InvalidParameterValueException("Cluster with specified ID not found!");
  }
  if (cluster.getHypervisorType() != HypervisorType.VMware) {
    InvalidParameterValueException ex=new InvalidParameterValueException("Cluster with specified id is not a VMWare hypervisor cluster");
    throw ex;
  }
  if (_clusterVSMDao.findByClusterId(clusterId) != null) {
    throw new InvalidParameterValueException("Cluster with specified id already has a VSM tied to it. Please remove that first and retry the operation.");
  }
  NetconfHelper netconfClient;
  try {
    netconfClient=new NetconfHelper(ipaddress,username,password);
  }
 catch (  CloudRuntimeException e) {
    String msg="Failed to connect to Nexus VSM " + ipaddress + " with credentials of user "+ username;
    s_logger.error(msg);
    throw new CloudRuntimeException(msg);
  }
  netconfClient.disconnect();
  CiscoNexusVSMDeviceVO VSMObj;
  try {
    VSMObj=_ciscoNexusVSMDeviceDao.getVSMbyIpaddress(ipaddress);
  }
 catch (  Exception e) {
    throw new CloudRuntimeException(e.getMessage());
  }
  if (VSMObj == null) {
    VSMObj=new CiscoNexusVSMDeviceVO(ipaddress,username,password);
    Transaction txn=Transaction.currentTxn();
    try {
      txn.start();
      _ciscoNexusVSMDeviceDao.persist(VSMObj);
      txn.commit();
    }
 catch (    Exception e) {
      txn.rollback();
      throw new CloudRuntimeException(e.getMessage());
    }
  }
  long vsmId=_ciscoNexusVSMDeviceDao.getVSMbyIpaddress(ipaddress).getId();
  ClusterVSMMapVO connectorObj=new ClusterVSMMapVO(clusterId,vsmId);
  Transaction txn=Transaction.currentTxn();
  try {
    txn.start();
    _clusterVSMDao.persist(connectorObj);
    txn.commit();
  }
 catch (  Exception e) {
    txn.rollback();
    throw new CloudRuntimeException(e.getMessage());
  }
  return VSMObj;
}
