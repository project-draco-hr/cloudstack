{
  if (Boolean.parseBoolean(_configDao.getValue(Config.VmwareUseNexusVSwitch.toString()))) {
    if (vsmIp != null && vsmUser != null && vsmPassword != null) {
      NetconfHelper netconfClient;
      try {
        netconfClient=new NetconfHelper(vsmIp,vsmUser,vsmPassword);
        netconfClient.disconnect();
      }
 catch (      CloudRuntimeException e) {
        String msg="Invalid credentials supplied for user " + vsmUser + " for Cisco Nexus 1000v VSM at "+ vsmIp;
        s_logger.error(msg);
        _clusterDao.remove(clusterId);
        throw new CloudRuntimeException(msg);
      }
      Transaction txn;
      CiscoNexusVSMDeviceVO vsm=_ciscoNexusVSMDeviceDao.getVSMbyIpaddress(vsmIp);
      if (vsm != null) {
        List<ClusterVSMMapVO> clusterList=_clusterVSMDao.listByVSMId(vsm.getId());
        if (clusterList != null && !clusterList.isEmpty()) {
          s_logger.error("Failed to add cluster: specified Nexus VSM is already associated with another cluster");
          _clusterDao.remove(clusterId);
          ResourceInUseException ex=new ResourceInUseException("Failed to add cluster: specified Nexus VSM is already associated with another cluster with specified Id");
          ex.addProxyObject("cluster",clusterList.get(0).getClusterId(),"clusterId");
          throw ex;
        }
      }
      if (_ciscoNexusVSMDeviceDao.getVSMbyIpaddress(vsmIp) == null) {
        vsm=new CiscoNexusVSMDeviceVO(vsmIp,vsmUser,vsmPassword);
        txn=Transaction.currentTxn();
        try {
          txn.start();
          vsm=_ciscoNexusVSMDeviceDao.persist(vsm);
          txn.commit();
        }
 catch (        Exception e) {
          txn.rollback();
          s_logger.error("Failed to persist Cisco Nexus 1000v VSM details to database. Exception: " + e.getMessage());
          _clusterDao.remove(clusterId);
          throw new CloudRuntimeException(e.getMessage());
        }
      }
      vsm=_ciscoNexusVSMDeviceDao.getVSMbyIpaddress(vsmIp);
      if (vsm != null) {
        ClusterVSMMapVO connectorObj=new ClusterVSMMapVO(clusterId,vsm.getId());
        txn=Transaction.currentTxn();
        try {
          txn.start();
          _clusterVSMDao.persist(connectorObj);
          txn.commit();
        }
 catch (        Exception e) {
          txn.rollback();
          s_logger.error("Failed to associate Cisco Nexus 1000v VSM with cluster: " + clusterName + ". Exception: "+ e.getMessage());
          _clusterDao.remove(clusterId);
          throw new CloudRuntimeException(e.getMessage());
        }
      }
    }
 else {
      String msg;
      msg="The global parameter " + Config.VmwareUseNexusVSwitch.toString() + " is set to \"true\". Following mandatory parameters are not specified. ";
      if (vsmIp == null) {
        msg+="vsmipaddress: Management IP address of Cisco Nexus 1000v dvSwitch. ";
      }
      if (vsmUser == null) {
        msg+="vsmusername: Name of a user account with admin privileges over Cisco Nexus 1000v dvSwitch. ";
      }
      if (vsmPassword == null) {
        if (vsmUser != null) {
          msg+="vsmpassword: Password of user account " + vsmUser + ". ";
        }
 else {
          msg+="vsmpassword: Password of user account with admin privileges over Cisco Nexus 1000v dvSwitch. ";
        }
      }
      s_logger.error(msg);
      _clusterDao.remove(clusterId);
      throw new CloudRuntimeException(msg);
    }
    return true;
  }
  return false;
}
