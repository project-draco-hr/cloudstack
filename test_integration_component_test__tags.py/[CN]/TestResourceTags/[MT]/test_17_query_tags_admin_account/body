@attr(tags=['advanced', 'basic'], required_hardware='false')
def test_17_query_tags_admin_account(self):
    ' Test Query the tags from admin account\n        '
    self.debug('Creating user accounts..')
    user_account = Account.create(self.apiclient, self.services['user'], domainid=self.domain.id)
    self.cleanup.append(user_account)
    iso = Iso.create(self.apiclient, self.services['iso'], account=user_account.name, domainid=user_account.domainid)
    list_iso_response = Iso.list(self.apiclient, id=iso.id)
    self.assertEqual(isinstance(list_iso_response, list), True, 'Check list response returns a valid list')
    Tag.create(self.apiclient, resourceIds=iso.id, resourceType='ISO', tags={'region': 'India', })
    tags = Tag.list(self.apiclient, listall=True, resourceType='ISO', account=user_account.name, domainid=user_account.domainid, key='region')
    self.assertEqual(isinstance(tags, list), True, 'List tags should not return empty response')
    self.assertEqual(tags[0].value, 'India', 'The tag value should match with the original value')
    self.debug('Verify listTag API using admin account')
    tags = Tag.list(self.apiclient, listall=True, resourceType='ISO', key='region')
    self.assertEqual(isinstance(tags, list), True, 'List tags should not return empty response')
    self.assertEqual(tags[0].value, 'India', 'The tag should have original value')
    return
