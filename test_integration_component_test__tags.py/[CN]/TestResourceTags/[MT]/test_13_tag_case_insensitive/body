@attr(tags=['advanced', 'basic'])
def test_13_tag_case_insensitive(self):
    ' Test to verify that tags are not case sensitive\n        '
    self.debug('Creating a tag for user VM')
    tag_1 = Tag.create(self.apiclient, resourceIds=self.vm_1.id, resourceType='userVM', tags={'region': 'India', })
    self.debug(('Tag created: %s' % tag_1.__dict__))
    tags = Tag.list(self.apiclient, listall=True, resourceType='userVM', account=self.account.name, domainid=self.account.account.domainid, key='region', value='India')
    self.assertEqual(isinstance(tags, list), True, 'List tags should not return empty response')
    self.assertEqual(tags[0].value, 'India', 'The tag should have original value')
    self.debug('Creating the same tag with caps for user VM')
    try:
        tag_2 = Tag.create(self.apiclient, resourceIds=self.vm_1.id, resourceType='userVM', tags={'REGION': 'INDIA', })
    except Exception as e:
        pass
    else:
        assert 'Creating same tag in upper case succeeded'
    self.debug('Deleting the created tag..')
    try:
        tag_1.delete(self.apiclient, resourceIds=self.vm_1.id, resourceType='userVM', tags={'region': 'India', })
    except Exception as e:
        self.fail(('Failed to delete the tag - %s' % e))
    self.debug('Verifying if tag is actually deleted!')
    tags = Tag.list(self.apiclient, listall=True, resourceType='userVM', account=self.account.name, domainid=self.account.account.domainid, key='region', value='India')
    self.assertEqual(tags, None, 'List tags should return empty response')
    return
