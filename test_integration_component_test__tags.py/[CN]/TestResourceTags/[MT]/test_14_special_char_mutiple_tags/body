@attr(tags=['advanced', 'basic'])
def test_14_special_char_mutiple_tags(self):
    ' Test multiple tags and with special characters on same machine\n        '
    self.debug('Creating a tag for user VM')
    tag = Tag.create(self.apiclient, resourceIds=self.vm_1.id, resourceType='userVM', tags={'region': 'India', 'offering': 'high', 'type': 'webserver', 'priority': 'critical', 'networking': 'advanced', 'os': 'centos', 'backup': 'no$required', 'rootvolume': 'NFS', 'iso': 'na', 'ha': 'yes', 'test': 'test', })
    self.debug(('Tags created: %s' % tag.__dict__))
    tags = Tag.list(self.apiclient, listall=True, resourceType='userVM', account=self.account.name, domainid=self.account.account.domainid, key='region', value='India')
    self.assertEqual(isinstance(tags, list), True, 'List tags should not return empty response')
    self.assertEqual(tags[0].value, 'India', 'The tag should have original value')
    tag.delete(self.apiclient, resourceIds=self.vm_1.id, resourceType='userVM', tags={'region': 'India', 'offering': 'high', 'type': 'webserver', 'priority': 'critical', 'networking': 'advanced', 'os': 'centos', 'backup': 'no$required', 'rootvolume': 'NFS', 'iso': 'na', 'ha': 'yes', 'test': 'test', })
    return
