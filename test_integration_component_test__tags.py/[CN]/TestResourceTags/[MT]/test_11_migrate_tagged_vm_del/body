@attr(tags=['basic', 'sg'])
@unittest.skip('skip')
def test_11_migrate_tagged_vm_del(self):
    ' Test migration of a tagged vm and delete the tag\n        '
    vms = VirtualMachine.list(self.apiclient, id=self.vm_1.id, listall=True)
    self.assertEqual(isinstance(vms, list), True, 'List vms should not return empty response')
    source_host = vms[0].hostid
    hosts = Host.list(self.apiclient, zoneid=self.zone.id, resourcestate='Enabled', type='Routing')
    self.assertEqual(isinstance(hosts, list), True, 'List hosts should return valid host response')
    self.debug('Available hosts: ')
    for host in hosts:
        self.debug('Host: %s', host.id)
        temp_hosts = [host for host in hosts if (host.id != source_host)]
        dest_host = temp_hosts[0]
        self.debug(('Destination host is: %s' % dest_host.id))
        self.debug(('Source host is: %s' % source_host.id))
    self.debug('Creating a tag for user VM')
    tag = Tag.create(self.apiclient, resourceIds=self.vm_1.id, resourceType='userVM', tags={'region': 'India', })
    self.debug(('Tag created: %s' % tag.__dict__))
    tags = Tag.list(self.apiclient, listall=True, resourceType='userVM', account=self.account.name, domainid=self.account.domainid, key='region', value='India')
    self.assertEqual(isinstance(tags, list), True, 'List tags should not return empty response')
    self.assertEqual(tags[0].value, 'India', 'The tag should have original value')
    self.debug(('Migrating the instance from: %s to %s' % (source_host, dest_host.id)))
    self.vm_1.migrate(self.apiclient, hostid=dest_host.id)
    self.debug('Deleting the created tag..')
    try:
        tag.delete(self.apiclient, resourceIds=self.vm_1.id, resourceType='userVM', tags={'region': 'India', })
    except Exception as e:
        self.fail(('Failed to delete the tag - %s' % e))
    self.debug('Verifying if tag is actually deleted!')
    tags = Tag.list(self.apiclient, listall=True, resourceType='userVM', account=self.account.name, domainid=self.account.domainid, key='region', value='India')
    self.assertEqual(tags, None, 'List tags should return empty response')
    return
