@attr(tags=['advanced', 'basic'], required_hardware='false')
def test_09_snapshot_tag(self):
    ' Test creation, listing and deletion tag son snapshot\n        '
    self.debug(('Creating snapshot on ROOT volume for VM: %s ' % self.vm_1.name))
    volumes = Volume.list(self.apiclient, virtualmachineid=self.vm_1.id, type='ROOT', listall=True)
    volume = volumes[0]
    snapshot = Snapshot.create(self.apiclient, volume.id)
    self.debug(('Snapshot created: ID - %s' % snapshot.id))
    self.cleanup.append(snapshot)
    snapshots = Snapshot.list(self.apiclient, id=snapshot.id)
    self.assertEqual(isinstance(snapshots, list), True, 'Tag based snapshot listing failed')
    self.debug('Creating a tag for the snapshot')
    tag = Tag.create(self.apiclient, resourceIds=snapshot.id, resourceType='snapshot', tags={'type': 'manual', })
    self.debug(('Tag created: %s' % tag.__dict__))
    tags = Tag.list(self.apiclient, listall=True, resourceType='snapshot', account=self.account.name, domainid=self.account.domainid, key='type', value='manual')
    self.assertEqual(isinstance(tags, list), True, 'List tags should not return empty response')
    self.assertEqual(tags[0].value, 'manual', 'The tag should have original value')
    snapshots = Snapshot.list(self.apiclient, listall=True, key='type', value='manual')
    self.assertEqual(isinstance(snapshots, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(snapshots, None, 'Check if result exists in list snapshots call')
    self.debug('Listing snapshots by tag was successful')
    self.debug('Deleting the created tag..')
    try:
        tag.delete(self.apiclient, resourceIds=snapshot.id, resourceType='snapshot', tags={'type': 'manual', })
    except Exception as e:
        self.fail(('Failed to delete the tag - %s' % e))
    self.debug('Verifying if tag is actually deleted!')
    tags = Tag.list(self.apiclient, listall=True, resourceType='snapshot', account=self.account.name, domainid=self.account.domainid, key='type', value='manual')
    self.assertEqual(tags, None, 'List tags should return empty response')
    return
