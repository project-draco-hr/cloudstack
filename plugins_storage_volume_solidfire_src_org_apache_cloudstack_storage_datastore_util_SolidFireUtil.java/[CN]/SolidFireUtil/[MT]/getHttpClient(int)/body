{
  try {
    SSLContext sslContext=SSLContext.getInstance("SSL");
    X509TrustManager tm=new X509TrustManager(){
      @Override public void checkClientTrusted(      X509Certificate[] xcs,      String string) throws CertificateException {
      }
      @Override public void checkServerTrusted(      X509Certificate[] xcs,      String string) throws CertificateException {
      }
      @Override public X509Certificate[] getAcceptedIssuers(){
        return null;
      }
    }
;
    sslContext.init(null,new TrustManager[]{tm},new SecureRandom());
    SSLSocketFactory socketFactory=new SSLSocketFactory(sslContext,SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
    SchemeRegistry registry=new SchemeRegistry();
    registry.register(new Scheme("https",iPort,socketFactory));
    BasicClientConnectionManager mgr=new BasicClientConnectionManager(registry);
    DefaultHttpClient client=new DefaultHttpClient();
    return new DefaultHttpClient(mgr,client.getParams());
  }
 catch (  NoSuchAlgorithmException ex) {
    throw new CloudRuntimeException(ex.getMessage());
  }
catch (  KeyManagementException ex) {
    throw new CloudRuntimeException(ex.getMessage());
  }
}
