{
  if (hosts == null || hosts.isEmpty()) {
    throw new CloudRuntimeException("There must be at least one host in the cluster.");
  }
  long lVagId;
  try {
    lVagId=SolidFireUtil.createSolidFireVag(sfConnection,"CloudStack-" + UUID.randomUUID().toString(),SolidFireUtil.getIqnsFromHosts(hosts),new long[]{sfVolumeId});
  }
 catch (  Exception ex) {
    String iqnInVagAlready="Exceeded maximum number of Volume Access Groups per initiator";
    if (!ex.getMessage().contains(iqnInVagAlready)) {
      throw new CloudRuntimeException(ex.getMessage());
    }
    SolidFireUtil.SolidFireVag sfVag=getCompatibleVag(sfConnection,hosts);
    lVagId=sfVag.getId();
    long[] volumeIds=getNewVolumeIds(sfVag.getVolumeIds(),sfVolumeId,true);
    SolidFireUtil.modifySolidFireVag(sfConnection,lVagId,sfVag.getInitiators(),volumeIds);
  }
  ClusterDetailsVO clusterDetail=new ClusterDetailsVO(hosts.get(0).getClusterId(),getVagKey(storagePoolId),String.valueOf(lVagId));
  clusterDetailsDao.persist(clusterDetail);
  return lVagId;
}
