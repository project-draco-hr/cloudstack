{
  DefaultHttpClient httpClient=null;
  StringBuilder sb=new StringBuilder();
  try {
    StringEntity input=new StringEntity(strJsonToExecute);
    input.setContentType("application/json");
    httpClient=getHttpClient(iPort);
    URI uri=new URI("https://" + strMvip + ":"+ iPort+ "/json-rpc/5.0");
    AuthScope authScope=new AuthScope(uri.getHost(),uri.getPort(),AuthScope.ANY_SCHEME);
    UsernamePasswordCredentials credentials=new UsernamePasswordCredentials(strAdmin,strPassword);
    httpClient.getCredentialsProvider().setCredentials(authScope,credentials);
    HttpPost postRequest=new HttpPost(uri);
    postRequest.setEntity(input);
    HttpResponse response=httpClient.execute(postRequest);
    if (!isSuccess(response.getStatusLine().getStatusCode())) {
      throw new CloudRuntimeException("Failed on JSON-RPC API call. HTTP error code = " + response.getStatusLine().getStatusCode());
    }
    BufferedReader br=new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
    String strOutput;
    while ((strOutput=br.readLine()) != null) {
      sb.append(strOutput);
    }
  }
 catch (  UnsupportedEncodingException ex) {
    throw new CloudRuntimeException(ex.getMessage());
  }
catch (  ClientProtocolException ex) {
    throw new CloudRuntimeException(ex.getMessage());
  }
catch (  IOException ex) {
    throw new CloudRuntimeException(ex.getMessage());
  }
catch (  URISyntaxException ex) {
    throw new CloudRuntimeException(ex.getMessage());
  }
 finally {
    if (httpClient != null) {
      try {
        httpClient.getConnectionManager().shutdown();
      }
 catch (      Exception t) {
      }
    }
  }
  return sb.toString();
}
