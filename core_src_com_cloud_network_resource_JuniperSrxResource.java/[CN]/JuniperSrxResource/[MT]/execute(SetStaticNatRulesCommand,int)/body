{
  StaticNatRuleTO[] allRules=cmd.getRules();
  Map<String,ArrayList<FirewallRuleTO>> activeRules=getActiveRules(allRules);
  Map<String,String> vlanTagMap=getVlanTagMap(allRules);
  try {
    openConfiguration();
    Set<String> ipPairs=activeRules.keySet();
    for (    String ipPair : ipPairs) {
      String[] ipPairComponents=ipPair.split("-");
      String publicIp=ipPairComponents[0];
      String privateIp=ipPairComponents[1];
      List<FirewallRuleTO> activeRulesForIpPair=activeRules.get(ipPair);
      Long publicVlanTag=getVlanTag(vlanTagMap.get(publicIp));
      removeStaticNatRule(publicVlanTag,publicIp,privateIp);
      if (activeRulesForIpPair.size() > 0) {
        addStaticNatRule(publicVlanTag,publicIp,privateIp,activeRulesForIpPair);
      }
    }
    commitConfiguration();
    return new Answer(cmd);
  }
 catch (  ExecutionException e) {
    s_logger.error(e);
    closeConfiguration();
    if (numRetries > 0 && refreshSrxConnection()) {
      int numRetriesRemaining=numRetries - 1;
      s_logger.debug("Retrying SetPortForwardingRulesCommand. Number of retries remaining: " + numRetriesRemaining);
      return execute(cmd,numRetriesRemaining);
    }
 else {
      return new Answer(cmd,e);
    }
  }
}
