{
  removeStaticAndDestNatRulesInPrivateVlan(privateVlanTag,privateGateway,privateCidrSize);
  privateGateway=privateGateway + "/" + privateCidrSize;
  privateSubnet=privateSubnet + "/" + privateCidrSize;
  managePrivateInterface(SrxCommand.DELETE,false,privateVlanTag,privateGateway);
  manageZoneInterface(SrxCommand.DELETE,privateVlanTag);
  deleteVpnObjectsForAccount(accountId);
  if (type.equals(GuestNetworkType.SOURCE_NAT)) {
    manageSourceNatRule(SrxCommand.DELETE,sourceNatIpAddress,privateSubnet);
    manageSourceNatPool(SrxCommand.DELETE,sourceNatIpAddress);
    manageProxyArp(SrxCommand.DELETE,publicVlanTag,sourceNatIpAddress);
    manageUsageFilter(SrxCommand.DELETE,UsageFilter.IP_OUTPUT,privateSubnet,null,genIpFilterTermName(sourceNatIpAddress));
    manageUsageFilter(SrxCommand.DELETE,UsageFilter.IP_INPUT,sourceNatIpAddress,null,genIpFilterTermName(sourceNatIpAddress));
  }
 else   if (type.equals(GuestNetworkType.INTERFACE_NAT)) {
    manageUsageFilter(SrxCommand.DELETE,UsageFilter.VLAN_OUTPUT,null,privateVlanTag,null);
    manageUsageFilter(SrxCommand.DELETE,UsageFilter.VLAN_INPUT,null,privateVlanTag,null);
  }
  String msg="Shut down guest network with type " + type + ". Guest VLAN tag: "+ privateVlanTag+ ", guest gateway: "+ privateGateway;
  msg+=type.equals(GuestNetworkType.SOURCE_NAT) ? ", source NAT IP: " + sourceNatIpAddress : "";
  s_logger.debug(msg);
}
