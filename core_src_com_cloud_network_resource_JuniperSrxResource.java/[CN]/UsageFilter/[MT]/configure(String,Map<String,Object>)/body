{
  try {
    _name=(String)params.get("name");
    if (_name == null) {
      throw new ConfigurationException("Unable to find name");
    }
    _zoneId=(String)params.get("zoneId");
    if (_zoneId == null) {
      throw new ConfigurationException("Unable to find zone");
    }
    _physicalNetworkId=(String)params.get("physicalNetworkId");
    if (_physicalNetworkId == null) {
      throw new ConfigurationException("Unable to find physical network id in the configuration parameters");
    }
    _ip=(String)params.get("ip");
    if (_ip == null) {
      throw new ConfigurationException("Unable to find IP");
    }
    _username=(String)params.get("username");
    if (_username == null) {
      throw new ConfigurationException("Unable to find username");
    }
    _password=(String)params.get("password");
    if (_password == null) {
      throw new ConfigurationException("Unable to find password");
    }
    _publicInterface=(String)params.get("publicinterface");
    if (_publicInterface == null) {
      throw new ConfigurationException("Unable to find public interface.");
    }
    _usageInterface=(String)params.get("usageinterface");
    _privateInterface=(String)params.get("privateinterface");
    if (_privateInterface == null) {
      throw new ConfigurationException("Unable to find private interface.");
    }
    _publicZone=(String)params.get("publiczone");
    if (_publicZone == null) {
      _publicZone="untrust";
    }
    _privateZone=(String)params.get("privatezone");
    if (_privateZone == null) {
      _privateZone="trust";
    }
    _guid=(String)params.get("guid");
    if (_guid == null) {
      throw new ConfigurationException("Unable to find the guid");
    }
    _numRetries=NumbersUtil.parseInt((String)params.get("numretries"),1);
    _timeoutInSeconds=NumbersUtil.parseInt((String)params.get("timeout"),300);
    _objectNameWordSep="-";
    _ikeProposalName="cloud-ike-proposal";
    _ipsecPolicyName="cloud-ipsec-policy";
    _ikeGatewayHostname="cloud";
    _vpnObjectPrefix="vpn-a";
    _primaryDnsAddress="4.2.2.2";
    if (!refreshSrxConnection()) {
      throw new ConfigurationException("Unable to open a connection to the SRX.");
    }
    _usageFilterVlanInput=new UsageFilter("vlan-input",null,"vlan-input");
    _usageFilterVlanOutput=new UsageFilter("vlan-output",null,"vlan-output");
    _usageFilterIPInput=new UsageFilter(_publicZone,"destination-address","-i");
    _usageFilterIPOutput=new UsageFilter(_privateZone,"source-address","-o");
    return true;
  }
 catch (  Exception e) {
    throw new ConfigurationException(e.getMessage());
  }
}
