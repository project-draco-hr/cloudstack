@attr(tags=['smoke', 'advanced'], required_hardware='false')
def test_07_quota(self):
    if (not is_config_suitable(apiclient=self.apiclient, name='quota.enable.service', value='true')):
        self.skipTest('quota.enable.service should be true. skipping')
    cmd = quotaBalance.quotaBalanceCmd()
    today = datetime.date.today()
    cmd.domainid = self.account.domainid
    cmd.account = self.account.name
    cmd.startdate = (today - datetime.timedelta(days=2))
    cmd.enddate = today
    response = self.apiclient.quotaBalance(cmd)
    self.debug(('Quota Balance on: %s' % response.startdate))
    self.debug(('is: %s' % response.startquota))
    self.assertEqual(response.startquota, 0)
    self.assertEqual(response.endquota, 10)
    return
