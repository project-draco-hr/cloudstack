{
  if (format != null) {
    s_logger.debug("We currently don't handle conversion from " + format + " to VHD.");
    return null;
  }
  String vhdPath=templatePath + File.separator + templateName+ "."+ ImageFormat.VHD.getFileExtension();
  if (!_storage.exists(vhdPath)) {
    s_logger.debug("Unable to find the vhd file: " + vhdPath);
    return null;
  }
  FormatInfo info=new FormatInfo();
  info.format=ImageFormat.VHD;
  info.filename=templateName + "." + ImageFormat.VHD.getFileExtension();
  File vhdFile=_storage.getFile(vhdPath);
  info.size=_storage.getSize(vhdPath);
  FileInputStream strm=null;
  byte[] currentSize=new byte[8];
  byte[] creatorApp=new byte[4];
  try {
    strm=new FileInputStream(vhdFile);
    strm.skip(info.size - vhd_footer_size + vhd_footer_creator_app_offset);
    strm.read(creatorApp);
    strm.skip(vhd_footer_current_size_offset - vhd_footer_creator_ver_offset);
    strm.read(currentSize);
  }
 catch (  Exception e) {
    s_logger.warn("Unable to read vhd file " + vhdPath,e);
    throw new InternalErrorException("Unable to read vhd file " + vhdPath + ": "+ e);
  }
 finally {
    if (strm != null) {
      try {
        strm.close();
      }
 catch (      IOException e) {
      }
    }
  }
  if (!Arrays.equals(creatorApp,citrix_creator_app)) {
    throw new InternalErrorException("Image creator is:" + creatorApp.toString() + ", is not supported");
  }
  long templateSize=NumbersUtil.bytesToLong(currentSize);
  info.virtualSize=templateSize;
  return info;
}
