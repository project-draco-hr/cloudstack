{
  byte[] currentSize=new byte[8];
  byte[] cookie=new byte[8];
  byte[] creatorApp=new byte[4];
  BufferedInputStream fileStream=new BufferedInputStream(new FileInputStream(file));
  InputStream strm=fileStream;
  boolean isCompressed=checkCompressed(file.getAbsolutePath());
  if (isCompressed) {
    try {
      strm=new CompressorStreamFactory().createCompressorInputStream(fileStream);
    }
 catch (    CompressorException e) {
      s_logger.info("error opening compressed VHD file " + file.getName());
      return file.length();
    }
  }
  try {
    strm.read(cookie);
    if (!new String(cookie).equals(vhdIdentifierCookie)) {
      strm.close();
      return file.length();
    }
    long skipped=strm.skip(vhdFooterCreatorAppOffset - vhdCookieOffset);
    if (skipped == -1) {
      throw new IOException("Unexpected end-of-file");
    }
    long read=strm.read(creatorApp);
    if (read == -1) {
      throw new IOException("Unexpected end-of-file");
    }
    skipped=strm.skip(vhdFooterCurrentSizeOffset - vhdFooterCreatorVerOffset - vhdCookieOffset);
    if (skipped == -1) {
      throw new IOException("Unexpected end-of-file");
    }
    read=strm.read(currentSize);
    if (read == -1) {
      throw new IOException("Unexpected end-of-file");
    }
  }
 catch (  IOException e) {
    s_logger.warn("Error reading virtual size from VHD file " + e.getMessage() + " VHD: "+ file.getName());
    return file.length();
  }
 finally {
    if (strm != null) {
      strm.close();
    }
  }
  return NumbersUtil.bytesToLong(currentSize);
}
