{
  Network srcNetwork=_networksDao.findById(currentNetworkId);
  if (srcNetwork == null) {
    throw new InvalidParameterValueException("Invalid source network id " + currentNetworkId + " is given");
  }
  final Network dstNetwork=_networksDao.findById(newNetworkId);
  if (dstNetwork == null) {
    throw new InvalidParameterValueException("Invalid source network id " + newNetworkId + " is given");
  }
  final IPAddressVO ip=_ipAddressDao.findById(ipAddrId);
  if (ip == null) {
    throw new InvalidParameterValueException("Invalid portable ip address id is given");
  }
  assert(isPortableIpTransferableFromNetwork(ipAddrId,currentNetworkId));
  if (srcNetwork.getVpcId() != null) {
    _vpcMgr.unassignIPFromVpcNetwork(ipAddrId,currentNetworkId);
  }
 else {
    disassociatePortableIPToGuestNetwork(ipAddrId,currentNetworkId);
  }
  if (srcNetwork.getDataCenterId() != dstNetwork.getDataCenterId()) {
    Transaction.execute(new TransactionCallbackNoReturn(){
      @Override public void doInTransactionWithoutResult(      TransactionStatus status){
        long physicalNetworkId=_networkModel.getDefaultPhysicalNetworkByZoneAndTrafficType(dstNetwork.getDataCenterId(),TrafficType.Public).getId();
        long publicNetworkId=_networkModel.getSystemNetworkByZoneAndTrafficType(dstNetwork.getDataCenterId(),TrafficType.Public).getId();
        ip.setDataCenterId(dstNetwork.getDataCenterId());
        ip.setPhysicalNetworkId(physicalNetworkId);
        ip.setSourceNetworkId(publicNetworkId);
        _ipAddressDao.update(ipAddrId,ip);
        VlanVO vlan=_vlanDao.findById(ip.getVlanId());
        vlan.setPhysicalNetworkId(physicalNetworkId);
        vlan.setNetworkId(publicNetworkId);
        vlan.setDataCenterId(dstNetwork.getDataCenterId());
        _vlanDao.update(ip.getVlanId(),vlan);
      }
    }
);
  }
  associatePortableIPToGuestNetwork(ipAddrId,newNetworkId,false);
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      if (dstNetwork.getVpcId() != null) {
        ip.setVpcId(dstNetwork.getVpcId());
      }
 else {
        ip.setVpcId(null);
      }
      _ipAddressDao.update(ipAddrId,ip);
    }
  }
);
  ActionEventUtils.onActionEvent(User.UID_SYSTEM,Account.ACCOUNT_ID_SYSTEM,Domain.ROOT_DOMAIN,EventTypes.EVENT_PORTABLE_IP_TRANSFER,"Portable IP associated is transferred from network " + currentNetworkId + " to "+ newNetworkId);
}
