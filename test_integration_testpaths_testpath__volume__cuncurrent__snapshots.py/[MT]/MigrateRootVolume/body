def MigrateRootVolume(self, vm, destinationHost, expectexception=False):
    ' Migrate given volume to type of storage pool mentioned in migrateto:\n\n        Inputs:\n            1. vm:               VM to be migrated\n                                 is to be migrated\n            2. expectexception:  If exception is expected while migration\n            3. destinationHost:  Destination host where the VM                                 should get migrated\n    '
    if expectexception:
        with self.assertRaises(Exception):
            VirtualMachine.migrate(vm, self.apiclient, hostid=destinationHost.id)
    else:
        VirtualMachine.migrate(vm, self.apiclient, hostid=destinationHost.id)
        migrated_vm_response = list_virtual_machines(self.apiclient, id=vm.id)
        self.assertEqual(isinstance(migrated_vm_response, list), True, 'Check list virtual machines response for valid list')
        self.assertNotEqual(migrated_vm_response, None, 'Check if virtual machine exists in ListVirtualMachines')
        migrated_vm = migrated_vm_response[0]
        vm_list = VirtualMachine.list(self.apiclient, id=migrated_vm.id)
        self.assertEqual(vm_list[0].hostid, destinationHost.id, 'Check volume is on migrated pool')
    return
