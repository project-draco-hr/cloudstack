{
  try {
    final DataTO srcData=cmd.getSrcTO();
    final SnapshotObjectTO snapshot=(SnapshotObjectTO)srcData;
    final DataTO destData=cmd.getDestTO();
    final PrimaryDataStoreTO pool=(PrimaryDataStoreTO)destData.getDataStore();
    final DataStoreTO imageStore=srcData.getDataStore();
    final VolumeObjectTO volume=snapshot.getVolume();
    if (!(imageStore instanceof NfsTO)) {
      return new CopyCmdAnswer("unsupported protocol");
    }
    final NfsTO nfsImageStore=(NfsTO)imageStore;
    final String snapshotFullPath=snapshot.getPath();
    final int index=snapshotFullPath.lastIndexOf("/");
    final String snapshotPath=snapshotFullPath.substring(0,index);
    final String snapshotName=snapshotFullPath.substring(index + 1);
    final KVMStoragePool secondaryPool=storagePoolMgr.getStoragePoolByURI(nfsImageStore.getUrl() + File.separator + snapshotPath);
    final KVMPhysicalDisk snapshotDisk=secondaryPool.getPhysicalDisk(snapshotName);
    if (volume.getFormat() == ImageFormat.RAW) {
      snapshotDisk.setFormat(PhysicalDiskFormat.RAW);
    }
 else     if (volume.getFormat() == ImageFormat.QCOW2) {
      snapshotDisk.setFormat(PhysicalDiskFormat.QCOW2);
    }
    final String primaryUuid=pool.getUuid();
    final KVMStoragePool primaryPool=storagePoolMgr.getStoragePool(pool.getPoolType(),primaryUuid);
    final String volUuid=UUID.randomUUID().toString();
    final KVMPhysicalDisk disk=storagePoolMgr.copyPhysicalDisk(snapshotDisk,volUuid,primaryPool,cmd.getWaitInMillSeconds());
    final VolumeObjectTO newVol=new VolumeObjectTO();
    newVol.setPath(disk.getName());
    newVol.setSize(disk.getVirtualSize());
    newVol.setFormat(ImageFormat.valueOf(disk.getFormat().toString().toUpperCase()));
    return new CopyCmdAnswer(newVol);
  }
 catch (  final CloudRuntimeException e) {
    s_logger.debug("Failed to createVolumeFromSnapshot: ",e);
    return new CopyCmdAnswer(e.toString());
  }
}
