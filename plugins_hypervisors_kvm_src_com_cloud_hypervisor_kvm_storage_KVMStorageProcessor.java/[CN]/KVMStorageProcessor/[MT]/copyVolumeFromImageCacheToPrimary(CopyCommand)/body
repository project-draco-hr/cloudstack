{
  final DataTO srcData=cmd.getSrcTO();
  final DataTO destData=cmd.getDestTO();
  final DataStoreTO srcStore=srcData.getDataStore();
  final DataStoreTO destStore=destData.getDataStore();
  final VolumeObjectTO srcVol=(VolumeObjectTO)srcData;
  final ImageFormat srcFormat=srcVol.getFormat();
  final PrimaryDataStoreTO primaryStore=(PrimaryDataStoreTO)destStore;
  if (!(srcStore instanceof NfsTO)) {
    return new CopyCmdAnswer("can only handle nfs storage");
  }
  final NfsTO nfsStore=(NfsTO)srcStore;
  final String srcVolumePath=srcData.getPath();
  final String secondaryStorageUrl=nfsStore.getUrl();
  KVMStoragePool secondaryStoragePool=null;
  KVMStoragePool primaryPool=null;
  try {
    try {
      primaryPool=storagePoolMgr.getStoragePool(primaryStore.getPoolType(),primaryStore.getUuid());
    }
 catch (    final CloudRuntimeException e) {
      if (e.getMessage().contains("not found")) {
        primaryPool=storagePoolMgr.createStoragePool(primaryStore.getUuid(),primaryStore.getHost(),primaryStore.getPort(),primaryStore.getPath(),null,primaryStore.getPoolType());
      }
 else {
        return new CopyCmdAnswer(e.getMessage());
      }
    }
    final String volumeName=UUID.randomUUID().toString();
    final int index=srcVolumePath.lastIndexOf(File.separator);
    final String volumeDir=srcVolumePath.substring(0,index);
    String srcVolumeName=srcVolumePath.substring(index + 1);
    secondaryStoragePool=storagePoolMgr.getStoragePoolByURI(secondaryStorageUrl + File.separator + volumeDir);
    if (!srcVolumeName.endsWith(".qcow2") && srcFormat == ImageFormat.QCOW2) {
      srcVolumeName=srcVolumeName + ".qcow2";
    }
    final KVMPhysicalDisk volume=secondaryStoragePool.getPhysicalDisk(srcVolumeName);
    volume.setFormat(PhysicalDiskFormat.valueOf(srcFormat.toString()));
    final KVMPhysicalDisk newDisk=storagePoolMgr.copyPhysicalDisk(volume,volumeName,primaryPool,cmd.getWaitInMillSeconds());
    final VolumeObjectTO newVol=new VolumeObjectTO();
    newVol.setFormat(ImageFormat.valueOf(newDisk.getFormat().toString().toUpperCase()));
    newVol.setPath(volumeName);
    return new CopyCmdAnswer(newVol);
  }
 catch (  final CloudRuntimeException e) {
    s_logger.debug("Failed to ccopyVolumeFromImageCacheToPrimary: ",e);
    return new CopyCmdAnswer(e.toString());
  }
 finally {
    if (secondaryStoragePool != null) {
      storagePoolMgr.deleteStoragePool(secondaryStoragePool.getType(),secondaryStoragePool.getUuid());
    }
  }
}
