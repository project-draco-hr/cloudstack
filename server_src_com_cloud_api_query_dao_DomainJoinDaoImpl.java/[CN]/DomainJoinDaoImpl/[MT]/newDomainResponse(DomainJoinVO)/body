{
  DomainResponse domainResponse=new DomainResponse();
  domainResponse.setDomainName(domain.getName());
  domainResponse.setId(domain.getUuid());
  domainResponse.setLevel(domain.getLevel());
  domainResponse.setNetworkDomain(domain.getNetworkDomain());
  Domain parentDomain=ApiDBUtils.findDomainById(domain.getParent());
  if (parentDomain != null) {
    domainResponse.setParentDomainId(parentDomain.getUuid());
  }
  StringBuilder domainPath=new StringBuilder("ROOT");
  (domainPath.append(domain.getPath())).deleteCharAt(domainPath.length() - 1);
  domainResponse.setPath(domainPath.toString());
  if (domain.getParent() != null) {
    domainResponse.setParentDomainName(ApiDBUtils.findDomainById(domain.getParent()).getName());
  }
  if (domain.getChildCount() > 0) {
    domainResponse.setHasChild(true);
  }
  domainResponse.setState(domain.getState().toString());
  domainResponse.setNetworkDomain(domain.getNetworkDomain());
  boolean isRootDomain=(domain.getId() == Domain.ROOT_DOMAIN);
  setResourceLimits(domain,isRootDomain,domainResponse);
  long projectLimit=ApiDBUtils.findCorrectResourceLimitForDomain(domain.getProjectLimit(),isRootDomain,ResourceType.project,domain.getId());
  String projectLimitDisplay=(isRootDomain || projectLimit == -1) ? "Unlimited" : String.valueOf(projectLimit);
  long projectTotal=(domain.getProjectTotal() == null) ? 0 : domain.getProjectTotal();
  String projectAvail=(isRootDomain || projectLimit == -1) ? "Unlimited" : String.valueOf(projectLimit - projectTotal);
  domainResponse.setProjectLimit(projectLimitDisplay);
  domainResponse.setProjectTotal(projectTotal);
  domainResponse.setProjectAvailable(projectAvail);
  domainResponse.setObjectName("domain");
  return domainResponse;
}
