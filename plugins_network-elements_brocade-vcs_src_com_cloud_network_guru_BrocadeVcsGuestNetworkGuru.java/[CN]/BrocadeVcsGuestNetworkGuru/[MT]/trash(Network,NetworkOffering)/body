{
  int vlanTag=0;
  BrocadeVcsNetworkVlanMappingVO brocadeVcsNetworkVlanMapping=_brocadeVcsNetworkVlanDao.findByNetworkId(network.getId());
  if (brocadeVcsNetworkVlanMapping != null) {
    vlanTag=brocadeVcsNetworkVlanMapping.getVlanId();
  }
 else {
    s_logger.error("Not able to find vlanId for network " + network.getId());
    return false;
  }
  List<BrocadeVcsDeviceVO> devices=_brocadeVcsDao.listByPhysicalNetwork(network.getPhysicalNetworkId());
  if (devices.isEmpty()) {
    s_logger.error("No Brocade VCS Switch on physical network " + network.getPhysicalNetworkId());
    return false;
  }
  for (  BrocadeVcsDeviceVO brocadeVcsDevice : devices) {
    HostVO brocadeVcsHost=_hostDao.findById(brocadeVcsDevice.getHostId());
    DeleteNetworkCommand cmd=new DeleteNetworkCommand(vlanTag,network.getId());
    DeleteNetworkAnswer answer=(DeleteNetworkAnswer)_agentMgr.easySend(brocadeVcsHost.getId(),cmd);
    if (answer == null || !answer.getResult()) {
      s_logger.error("DeleteNetworkCommand failed");
      s_logger.error("Unable to delete network " + network.getId());
      return false;
    }
  }
  _brocadeVcsNetworkVlanDao.remove(brocadeVcsNetworkVlanMapping.getId());
  return super.trash(network,offering);
}
