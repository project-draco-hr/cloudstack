{
  String interfaceMac=nic.getMacAddress();
  List<BrocadeVcsDeviceVO> devices=_brocadeVcsDao.listByPhysicalNetwork(network.getPhysicalNetworkId());
  if (devices.isEmpty()) {
    logger.error("No Brocade VCS Switch on physical network " + network.getPhysicalNetworkId());
    return;
  }
  for (  BrocadeVcsDeviceVO brocadeVcsDevice : devices) {
    HostVO brocadeVcsHost=_hostDao.findById(brocadeVcsDevice.getHostId());
    DisassociateMacFromNetworkCommand cmd=new DisassociateMacFromNetworkCommand(network.getId(),interfaceMac);
    DisassociateMacFromNetworkAnswer answer=(DisassociateMacFromNetworkAnswer)_agentMgr.easySend(brocadeVcsHost.getId(),cmd);
    if (answer == null || !answer.getResult()) {
      logger.error("DisassociateMacFromNetworkCommand failed");
      logger.error("Unable to disassociate mac " + interfaceMac + " from network "+ network.getId());
      return;
    }
  }
  super.deallocate(network,nic,vm);
}
