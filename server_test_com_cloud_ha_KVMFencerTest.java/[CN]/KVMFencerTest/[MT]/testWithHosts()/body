{
  HostVO host=Mockito.mock(HostVO.class);
  Mockito.when(host.getClusterId()).thenReturn(1l);
  Mockito.when(host.getHypervisorType()).thenReturn(HypervisorType.KVM);
  Mockito.when(host.getStatus()).thenReturn(Status.Up);
  Mockito.when(host.getId()).thenReturn(1l);
  HostVO secondHost=Mockito.mock(HostVO.class);
  Mockito.when(secondHost.getClusterId()).thenReturn(1l);
  Mockito.when(secondHost.getHypervisorType()).thenReturn(HypervisorType.KVM);
  Mockito.when(secondHost.getStatus()).thenReturn(Status.Up);
  Mockito.when(host.getId()).thenReturn(2l);
  VirtualMachine virtualMachine=Mockito.mock(VirtualMachine.class);
  Mockito.when(resourceManager.listAllHostsInCluster(1l)).thenReturn(Arrays.asList(host,secondHost));
  FenceAnswer answer=new FenceAnswer(null,true,"ok");
  Mockito.when(agentManager.send(Mockito.anyLong(),Mockito.any(FenceCommand.class))).thenReturn(answer);
  Assert.assertTrue(fencer.fenceOff(virtualMachine,host));
}
