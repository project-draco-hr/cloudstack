{
  return new Runnable(){
    @Override public void run(){
      try {
        if (s_logger.isTraceEnabled()) {
          s_logger.trace("Cluster manager heartbeat update, id:" + _mshostId);
        }
        Connection conn=getHeartbeatConnection();
        _mshostDao.update(conn,_mshostId,getCurrentRunId(),DateUtil.currentGMTTime());
        if (_state == State.Starting) {
synchronized (stateLock) {
            if (isClusterReadyToStart()) {
              _mshostDao.update(conn,_mshostId,getCurrentRunId(),State.Up,DateUtil.currentGMTTime());
              _state=State.Up;
              stateLock.notifyAll();
            }
          }
        }
        if (s_logger.isTraceEnabled()) {
          s_logger.trace("Cluster manager peer-scan, id:" + _mshostId);
        }
        if (!_peerScanInited) {
          _peerScanInited=true;
          initPeerScan(conn);
        }
        peerScan(conn);
      }
 catch (      CloudRuntimeException e) {
        s_logger.error("Runtime DB exception ",e.getCause());
        if (e.getCause() instanceof ClusterInvalidSessionException) {
          s_logger.error("Invalid cluster session found");
          queueNotification(new ClusterManagerMessage(ClusterManagerMessage.MessageType.nodeIsolated));
        }
        if (isRootCauseConnectionRelated(e.getCause())) {
          s_logger.error("DB communication problem detected");
          queueNotification(new ClusterManagerMessage(ClusterManagerMessage.MessageType.nodeIsolated));
        }
        invalidHeartbeatConnection();
      }
catch (      Throwable e) {
        if (isRootCauseConnectionRelated(e.getCause())) {
          s_logger.error("DB communication problem detected");
          queueNotification(new ClusterManagerMessage(ClusterManagerMessage.MessageType.nodeIsolated));
        }
        s_logger.error("Problem with the cluster heartbeat!",e);
      }
    }
    private boolean isClusterReadyToStart(){
      if (!_agentLBEnabled) {
        return true;
      }
      boolean isReady=false;
      int transferCount=_hostTransferDao.listHostsJoiningCluster(_msId).size();
      if (transferCount == 0) {
        List<HostTransferMapVO> rebalancedHosts=_hostTransferDao.listBy(_msId,HostTransferState.TransferCompleted);
        s_logger.debug(rebalancedHosts.size() + " hosts joined the cluster " + _msId+ " as a result of rebalance process");
        for (        HostTransferMapVO host : rebalancedHosts) {
          _hostTransferDao.remove(host.getId());
        }
        List<HostTransferMapVO> failedToRebalanceHosts=_hostTransferDao.listBy(_msId,HostTransferState.TransferFailed);
        s_logger.debug(failedToRebalanceHosts.size() + " hosts failed to join the cluster " + _msId+ " as a result of rebalance process");
        for (        HostTransferMapVO host : failedToRebalanceHosts) {
          _hostTransferDao.remove(host.getId());
        }
        s_logger.debug("There are no hosts currently joining cluser msid=" + _msId + ", so management server is ready to start");
        isReady=true;
      }
 else       if (s_logger.isDebugEnabled()) {
        s_logger.debug("There are " + transferCount + " agents currently joinging the cluster "+ _msId);
      }
      return isReady;
    }
  }
;
}
