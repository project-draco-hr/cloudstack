{
  return new Runnable(){
    @Override public void run(){
      while (true) {
synchronized (_notificationMsgs) {
          try {
            _notificationMsgs.wait(1000);
          }
 catch (          InterruptedException e) {
          }
        }
        Pair<List<ManagementServerHostVO>,List<ManagementServerHostVO>> msgPair=null;
        while ((msgPair=getNextNotificationMessage()) != null) {
          try {
            if (msgPair.first() != null && msgPair.first().size() > 0) {
              Profiler profiler=new Profiler();
              profiler.start();
              notifyNodeJoined(msgPair.first());
              profiler.stop();
              if (profiler.getDuration() > 1000) {
                if (s_logger.isDebugEnabled()) {
                  s_logger.debug("Notifying management server join event took " + profiler.getDuration() + " ms");
                }
              }
 else {
                s_logger.warn("Notifying management server join event took " + profiler.getDuration() + " ms");
              }
            }
            if (msgPair.second() != null && msgPair.second().size() > 0) {
              Profiler profiler=new Profiler();
              profiler.start();
              notifyNodeLeft(msgPair.second());
              profiler.stop();
              if (profiler.getDuration() > 1000) {
                if (s_logger.isDebugEnabled()) {
                  s_logger.debug("Notifying management server leave event took " + profiler.getDuration() + " ms");
                }
              }
 else {
                s_logger.warn("Notifying management server leave event took " + profiler.getDuration() + " ms");
              }
            }
          }
 catch (          Throwable e) {
            s_logger.warn("Unexpected exception during cluster notification. ",e);
          }
        }
        try {
          Thread.currentThread().sleep(1000);
        }
 catch (        InterruptedException e) {
        }
      }
    }
  }
;
}
