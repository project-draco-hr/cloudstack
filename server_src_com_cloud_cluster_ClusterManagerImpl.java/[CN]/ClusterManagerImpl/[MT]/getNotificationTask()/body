{
  return new Runnable(){
    @Override public void run(){
      while (true) {
synchronized (_notificationMsgs) {
          try {
            _notificationMsgs.wait(1000);
          }
 catch (          InterruptedException e) {
          }
        }
        ClusterManagerMessage msg=null;
        while ((msg=getNextNotificationMessage()) != null) {
          try {
switch (msg.getMessageType()) {
case nodeAdded:
              if (msg.getNodes() != null && msg.getNodes().size() > 0) {
                Profiler profiler=new Profiler();
                profiler.start();
                notifyNodeJoined(msg.getNodes());
                profiler.stop();
                if (profiler.getDuration() > 1000) {
                  if (s_logger.isDebugEnabled()) {
                    s_logger.debug("Notifying management server join event took " + profiler.getDuration() + " ms");
                  }
                }
 else {
                  s_logger.warn("Notifying management server join event took " + profiler.getDuration() + " ms");
                }
              }
            break;
case nodeRemoved:
          if (msg.getNodes() != null && msg.getNodes().size() > 0) {
            Profiler profiler=new Profiler();
            profiler.start();
            notifyNodeLeft(msg.getNodes());
            profiler.stop();
            if (profiler.getDuration() > 1000) {
              if (s_logger.isDebugEnabled()) {
                s_logger.debug("Notifying management server leave event took " + profiler.getDuration() + " ms");
              }
            }
 else {
              s_logger.warn("Notifying management server leave event took " + profiler.getDuration() + " ms");
            }
          }
        break;
case nodeIsolated:
      notifyNodeIsolated();
    break;
default :
  assert(false);
break;
}
}
 catch (Throwable e) {
s_logger.warn("Unexpected exception during cluster notification. ",e);
}
}
try {
Thread.sleep(1000);
}
 catch (InterruptedException e) {
}
}
}
}
;
}
