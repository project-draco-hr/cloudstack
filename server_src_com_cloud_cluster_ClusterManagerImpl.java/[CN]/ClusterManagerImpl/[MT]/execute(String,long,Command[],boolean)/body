{
  ClusterService peerService=null;
  if (s_logger.isDebugEnabled()) {
    s_logger.debug(getSelfPeerName() + " -> " + strPeer+ "."+ agentId+ " "+ gson.toJson(cmds,Command[].class));
  }
  for (int i=0; i < 2; i++) {
    try {
      peerService=getPeerService(strPeer);
    }
 catch (    RemoteException e) {
      s_logger.error("Unable to get cluster service on peer : " + strPeer);
    }
    if (peerService != null) {
      try {
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Send " + getSelfPeerName() + " -> "+ strPeer+ "."+ agentId+ " to remote");
        }
        long startTick=System.currentTimeMillis();
        String strResult=peerService.execute(getSelfPeerName(),agentId,gson.toJson(cmds,Command[].class),stopOnError);
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Completed " + getSelfPeerName() + " -> "+ strPeer+ "."+ agentId+ "in "+ (System.currentTimeMillis() - startTick)+ " ms, result: "+ strResult);
        }
        if (strResult != null) {
          try {
            return gson.fromJson(strResult,Answer[].class);
          }
 catch (          Throwable e) {
            s_logger.error("Exception on parsing gson package from remote call to " + strPeer);
          }
        }
        return null;
      }
 catch (      RemoteException e) {
        invalidatePeerService(strPeer);
        if (s_logger.isInfoEnabled()) {
          s_logger.info("Exception on remote execution, peer: " + strPeer + ", iteration: "+ i+ ", exception message :"+ e.getMessage());
        }
      }
    }
  }
  return null;
}
