{
  if (s_logger.isInfoEnabled())   s_logger.info("Start configuring cluster manager : " + name);
  ComponentLocator locator=ComponentLocator.getCurrentLocator();
  _agentMgr=locator.getManager(AgentManager.class);
  if (_agentMgr == null)   throw new ConfigurationException("Unable to get " + AgentManager.class.getName());
  _mshostDao=locator.getDao(ManagementServerHostDao.class);
  if (_mshostDao == null)   throw new ConfigurationException("Unable to get " + ManagementServerHostDao.class.getName());
  _hostDao=locator.getDao(HostDao.class);
  if (_hostDao == null)   throw new ConfigurationException("Unable to get " + HostDao.class.getName());
  ConfigurationDao configDao=locator.getDao(ConfigurationDao.class);
  if (configDao == null) {
    throw new ConfigurationException("Unable to get the configuration dao.");
  }
  Map<String,String> configs=configDao.getConfiguration("management-server",params);
  String value=configs.get("cluster.heartbeat.interval");
  if (value != null)   heartbeatInterval=NumbersUtil.parseInt(value,ClusterManager.DEFAULT_HEARTBEAT_INTERVAL);
  value=configs.get("cluster.heartbeat.threshold");
  if (value != null)   heartbeatThreshold=NumbersUtil.parseInt(value,ClusterManager.DEFAULT_HEARTBEAT_THRESHOLD);
  _name=name;
  File dbPropsFile=PropertiesUtil.findConfigFile("db.properties");
  Properties dbProps=new Properties();
  try {
    dbProps.load(new FileInputStream(dbPropsFile));
  }
 catch (  FileNotFoundException e) {
    throw new ConfigurationException("Unable to find db.properties");
  }
catch (  IOException e) {
    throw new ConfigurationException("Unable to load db.properties content");
  }
  _clusterNodeIP=dbProps.getProperty("cluster.node.IP");
  if (_clusterNodeIP == null)   _clusterNodeIP="127.0.0.1";
  if (s_logger.isInfoEnabled())   s_logger.info("Cluster node IP : " + _clusterNodeIP);
  if (!NetUtils.isLocalAddress(_clusterNodeIP))   throw new ConfigurationException("cluster node IP should be valid local address where the server is running, please check your configuration");
  Adapters<ClusterServiceAdapter> adapters=locator.getAdapters(ClusterServiceAdapter.class);
  if (adapters == null || !adapters.isSet()) {
    throw new ConfigurationException("Unable to get cluster service adapters");
  }
  Enumeration<ClusterServiceAdapter> it=adapters.enumeration();
  if (it.hasMoreElements())   _currentServiceAdapter=it.nextElement();
  if (_currentServiceAdapter == null)   throw new ConfigurationException("Unable to set current cluster service adapter");
  if (s_logger.isInfoEnabled())   s_logger.info("Cluster manager is configured.");
  return true;
}
