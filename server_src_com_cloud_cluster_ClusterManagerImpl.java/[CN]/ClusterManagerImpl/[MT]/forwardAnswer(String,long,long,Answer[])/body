{
  if (s_logger.isDebugEnabled())   s_logger.debug("Forward -> " + targetPeer + " Async-call answer {"+ agentId+ "-"+ seq+ "} "+ (answers != null ? gson.toJson(answers,Answer[].class) : ""));
  final String targetPeerF=targetPeer;
  final Answer[] answersF=answers;
  final long agentIdF=agentId;
  final long seqF=seq;
  ClusterService peerService=null;
  for (int i=0; i < 2; i++) {
    try {
      peerService=getPeerService(targetPeerF);
    }
 catch (    RemoteException e) {
      s_logger.error("cluster service for peer " + targetPeerF + " no longer exists");
    }
    if (peerService != null) {
      try {
        boolean result=false;
        long startTick=System.currentTimeMillis();
        if (s_logger.isDebugEnabled())         s_logger.debug("Start forwarding Async-call answer {" + agentId + "-"+ seq+ "} to remote");
        result=peerService.onAsyncResult(getSelfPeerName(),agentIdF,seqF,gson.toJson(answersF,Answer[].class));
        if (s_logger.isDebugEnabled())         s_logger.debug("Completed forwarding Async-call answer {" + agentId + "-"+ seq+ "} in "+ (System.currentTimeMillis() - startTick)+ " ms, return result: "+ result);
        return result;
      }
 catch (      RemoteException e) {
        s_logger.warn("Exception in performing remote call, ",e);
        invalidatePeerService(targetPeerF);
      }
    }
 else {
      s_logger.warn("Remote peer " + targetPeer + " no longer exists to process answer {"+ agentId+ "-"+ seq+ "}");
    }
  }
  return false;
}
