{
  List<ClusterServiceRequestPdu> candidates=new ArrayList<ClusterServiceRequestPdu>();
synchronized (_outgoingPdusWaitingForAck) {
    for (    Map.Entry<Long,ClusterServiceRequestPdu> entry : _outgoingPdusWaitingForAck.entrySet()) {
      if (entry.getValue().getDestPeer().equalsIgnoreCase(strPeer))       candidates.add(entry.getValue());
    }
    for (    ClusterServiceRequestPdu pdu : candidates) {
      _outgoingPdusWaitingForAck.remove(pdu.getSequenceId());
    }
  }
  for (  ClusterServiceRequestPdu pdu : candidates) {
    s_logger.warn("Cancel cluster request PDU to peer: " + strPeer + ", pdu: "+ _gson.toJson(pdu));
synchronized (pdu) {
      pdu.notifyAll();
    }
  }
}
