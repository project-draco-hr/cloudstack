{
  List<NetworkElementCommand> cmds=new LinkedList<>();
  StartAggregationCommand startCmd=new StartAggregationCommand(ROUTERNAME,ROUTERIP,ROUTERGUESTIP);
  cmds.add(startCmd);
  cmds.add(generateIpAssocCommand());
  cmds.add(generateIpAssocVpcCommand());
  cmds.add(generateSetFirewallRulesCommand());
  cmds.add(generateSetPortForwardingRulesCommand());
  cmds.add(generateSetPortForwardingRulesVpcCommand());
  cmds.add(generateCreateIpAliasCommand());
  cmds.add(generateDeleteIpAliasCommand());
  cmds.add(generateDnsMasqConfigCommand());
  cmds.add(generateRemoteAccessVpnCfgCommand1());
  cmds.add(generateRemoteAccessVpnCfgCommand2());
  cmds.add(generateRemoteAccessVpnCfgCommand3());
  cmds.add(generateSetPortForwardingRulesCommand());
  cmds.add(generateSetPortForwardingRulesVpcCommand());
  cmds.add(generateDhcpEntryCommand1());
  cmds.add(generateDhcpEntryCommand2());
  cmds.add(generateDhcpEntryCommand3());
  cmds.add(generateSavePasswordCommand());
  cmds.add(generateVmDataCommand());
  FinishAggregationCommand finishCmd=new FinishAggregationCommand(ROUTERNAME,ROUTERIP,ROUTERGUESTIP);
  cmds.add(finishCmd);
  for (  NetworkElementCommand cmd : cmds) {
    Answer answer=_resource.executeRequest(cmd);
    if (!(cmd instanceof FinishAggregationCommand)) {
      assertTrue(answer.getResult());
    }
 else {
    }
  }
}
