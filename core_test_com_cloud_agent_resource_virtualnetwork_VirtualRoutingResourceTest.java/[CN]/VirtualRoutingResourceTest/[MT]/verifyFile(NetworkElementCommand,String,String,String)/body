{
  if (!(cmd instanceof LoadBalancerConfigCommand)) {
    fail("Only LB command would call this!");
  }
  _count++;
switch (_count) {
case 1:
case 3:
    _file=path + filename;
  assertEquals(path,"/etc/haproxy/");
assertTrue(filename.startsWith("haproxy.cfg.new"));
assertEquals(content,"global\n" + "\tlog 127.0.0.1:3914   local0 warning\n" + "\tmaxconn 1000\n"+ "\tmaxpipes 250\n"+ "\tchroot /var/lib/haproxy\n"+ "\tuser haproxy\n"+ "\tgroup haproxy\n"+ "\tdaemon\n"+ "\t \n"+ "defaults\n"+ "\tlog     global\n"+ "\tmode    tcp\n"+ "\toption  dontlognull\n"+ "\tretries 3\n"+ "\toption redispatch\n"+ "\toption forwardfor\n"+ "\toption forceclose\n"+ "\ttimeout connect    5000\n"+ "\ttimeout client     50000\n"+ "\ttimeout server     50000\n"+ "\n"+ "listen stats_on_guest 10.1.10.2:8081\n"+ "\tmode http\n"+ "\toption httpclose\n"+ "\tstats enable\n"+ "\tstats uri     /admin?stats\n"+ "\tstats realm   Haproxy\\ Statistics\n"+ "\tstats auth    admin1:AdMiN123\n"+ "\n"+ "\t \n"+ "listen 64_10_1_10-80 64.10.1.10:80\n"+ "\tbalance algo\n"+ "\tserver 64_10_1_10-80_0 10.1.10.2:80 check\n"+ "\tmode http\n"+ "\toption httpclose\n"+ "\t \n"+ "\t \n");
break;
default :
fail();
}
}
