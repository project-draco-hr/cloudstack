def _check_banner(self):
    for i in range(100):
        if (i == 0):
            timeout = self.banner_timeout
        else:
            timeout = 2
        try:
            buf = self.packetizer.readline(timeout)
        except Exception as x:
            raise SSHException(('Error reading SSH protocol banner' + str(x)))
        if (buf[:4] == 'SSH-'):
            break
        self._log(DEBUG, ('Banner: ' + buf))
    if (buf[:4] != 'SSH-'):
        raise SSHException((('Indecipherable protocol version "' + buf) + '"'))
    self.remote_version = buf
    comment = ''
    i = string.find(buf, ' ')
    if (i >= 0):
        comment = buf[(i + 1):]
        buf = buf[:i]
    segs = buf.split('-', 2)
    if (len(segs) < 3):
        raise SSHException('Invalid SSH banner')
    version = segs[1]
    client = segs[2]
    if ((version != '1.99') and (version != '2.0')):
        raise SSHException(('Incompatible version (%s instead of 2.0)' % (version,)))
    self._log(INFO, ('Connected (version %s, client %s)' % (version, client)))
