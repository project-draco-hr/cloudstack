def auth_none(self, username):
    '\n        Try to authenticate to the server using no authentication at all.\n        This will almost always fail.  It may be useful for determining the\n        list of authentication types supported by the server, by catching the\n        L{BadAuthenticationType} exception raised.\n\n        @param username: the username to authenticate as\n        @type username: string\n        @return: list of auth types permissible for the next stage of\n            authentication (normally empty)\n        @rtype: list\n\n        @raise BadAuthenticationType: if "none" authentication isn\'t allowed\n            by the server for this user\n        @raise SSHException: if the authentication failed due to a network\n            error\n\n        @since: 1.5\n        '
    if ((not self.active) or (not self.initial_kex_done)):
        raise SSHException('No existing session')
    my_event = threading.Event()
    self.auth_handler = AuthHandler(self)
    self.auth_handler.auth_none(username, my_event)
    return self.auth_handler.wait_for_response(my_event)
