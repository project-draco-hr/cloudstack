{
  String uuid=UUID.randomUUID().toString();
  List<StoragePoolVO> pools=primaryDataStoreDao.findPoolByName(uuid);
  if (pools.size() > 0) {
    return dataStoreManager.getPrimaryDataStore(pools.get(0).getId());
  }
  StoragePoolVO pool=new StoragePoolVO();
  if (scope != ScopeType.ZONE) {
    pool.setClusterId(clusterId);
  }
  pool.setDataCenterId(dcId);
  pool.setHostAddress(uuid);
  pool.setPath(uuid);
  pool.setPort(0);
  pool.setName(uuid);
  pool.setUuid(uuid);
  pool.setStatus(StoragePoolStatus.Up);
  pool.setPoolType(Storage.StoragePoolType.NetworkFilesystem);
  pool.setPodId(podId);
  pool.setScope(scope);
  pool.setStorageProviderName(DataStoreProvider.DEFAULT_PRIMARY);
  pool=primaryDataStoreDao.persist(pool);
  DataStore store=dataStoreManager.getPrimaryDataStore(pool.getId());
  return store;
}
