def recover_destroyed_vm(self, vmdetails):
    list_vm_response1 = VirtualMachine.list(self.apiclient, id=vmdetails.id)
    if (list_vm_response1 is None):
        self.debug('VM already expunged')
        return
    cmd = recoverVirtualMachine.recoverVirtualMachineCmd()
    cmd.id = vmdetails.id
    self.apiclient.recoverVirtualMachine(cmd)
    list_vm_response1 = VirtualMachine.list(self.apiclient, id=vmdetails.id)
    if (list_vm_response1 is None):
        self.debug('VM already expunged')
        return
    list_vm_response1 = VirtualMachine.list(self.apiclient, id=vmdetails.id)
    if (list_vm_response1[0].state == 'Expunging'):
        self.debug('VM already getting expunged')
        return
    list_vm_response = VirtualMachine.list(self.apiclient, id=vmdetails.id)
    self.assertEqual(isinstance(list_vm_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_vm_response), 0, 'Check VM available in List Virtual Machines')
    self.assertEqual(list_vm_response[0].state, 'Stopped', 'Check virtual machine is in Stopped state')
    return
