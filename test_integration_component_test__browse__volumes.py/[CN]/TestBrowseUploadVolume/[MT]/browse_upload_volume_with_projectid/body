def browse_upload_volume_with_projectid(self, projectid):
    cmd = getUploadParamsForVolume.getUploadParamsForVolumeCmd()
    cmd.zoneid = self.zone.id
    cmd.format = self.uploadvolumeformat
    cmd.name = ((self.volname + self.account.name) + random.choice(string.ascii_uppercase))
    cmd.projectid = projectid
    getuploadparamsresponce = self.apiclient.getUploadParamsForVolume(cmd)
    signt = getuploadparamsresponce.signature
    posturl = getuploadparamsresponce.postURL
    metadata = getuploadparamsresponce.metadata
    expiredata = getuploadparamsresponce.expires
    url = self.uploadurl
    uploadfile = url.split('/')[(-1)]
    r = requests.get(url, stream=True)
    with open(uploadfile, 'wb') as f:
        for chunk in r.iter_content(chunk_size=1024):
            if chunk:
                f.write(chunk)
                f.flush()
    files = {'file': (uploadfile, open(uploadfile, 'rb'), 'application/octet-stream'), }
    headers = {'X-signature': signt, 'X-metadata': metadata, 'X-expires': expiredata, }
    results = requests.post(posturl, files=files, headers=headers, verify=False)
    print results.status_code
    if (results.status_code != 200):
        self.fail('Upload is not fine')
    self.validate_uploaded_volume(getuploadparamsresponce.id, 'Uploaded')
    list_volume_response = Volume.list(self.apiclient, projectid=projectid)
    if (list_volume_response[0].id == getuploadparamsresponce.id):
        return getuploadparamsresponce
    else:
        self.fail('Volume is not listed with projectid')
