def volume_snapshot_volume(self, snapshot_created):
    cmd = createVolume.createVolumeCmd()
    cmd.name = '-'.join([self.testdata['volume']['diskname'], random_gen()])
    cmd.snapshotid = snapshot_created.id
    volume_from_snapshot = Volume(self.apiclient.createVolume(cmd).__dict__)
    self.assertIsNotNone(volume_from_snapshot, 'Volume creation failed from snapshot')
    expected_dict = {'snapshotid': snapshot_created.id, 'volumetype': snapshot_created.volumetype, 'size': self.disk_offering.disksize, 'accounr': self.account.name, 'domain': self.domain.id, 'storagetype': self.storagetype, 'zone': self.zone.id, }
    actual_dict = {'snapshotid': volume_from_snapshot.snapshotid, 'volumetype': volume_from_snapshot.type, 'size': (volume_from_snapshot.size / ((1024 * 1024) * 1024)), 'accounr': volume_from_snapshot.account, 'domain': volume_from_snapshot.domainid, 'storagetype': volume_from_snapshot.storagetype, 'zone': volume_from_snapshot.zoneid, }
    status = self.__verify_values(expected_dict, actual_dict)
    self.assertEqual(True, status, 'Volume created from Snapshot details are not as expected')
    return
