def destroy_vm(self, vmdetails):
    success = False
    vmdetails.delete(self.apiclient, expunge=False)
    try:
        list_vm_response1 = VirtualMachine.list(self.apiclient, id=vmdetails.id)
    except Exception as ex:
        if ('Unable to find a virtual machine with specified vmId' in str(ex)):
            success = True
    if (success == 'True'):
        self.debug('VM is already expunged')
        return
    list_vm_response1 = VirtualMachine.list(self.apiclient, id=vmdetails.id)
    if (list_vm_response1 is None):
        self.debug('VM already expunged')
        return
    if (list_vm_response1[0].state == 'Expunging'):
        self.debug('VM already getting expunged')
        return
    list_vm_response = VirtualMachine.list(self.apiclient, id=vmdetails.id)
    if (list_vm_response is None):
        self.debug('VM already expunged')
        return
    self.assertEqual(isinstance(list_vm_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_vm_response), 0, 'Check VM available in List Virtual Machines')
    self.assertEqual(list_vm_response[0].state, 'Destroyed', 'Check virtual machine is in destroyed state')
    return
