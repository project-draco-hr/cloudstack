@attr(tags=['advanced', 'advancedns', 'smoke', 'basic'], required_hardware='true')
def test_07_Browser_Upload_Volume_Storage_Cleanup_Config_Validation(self):
    '\n        Test Browser_Upload_Volume_Storage_Cleanup_Config_Validation\n        '
    self.debug('========================= Test 37 Validate storage.cleanup.enabled and storage.cleanup.interval ========================= ')
    config1 = Configurations.list(self.apiclient, name='storage.cleanup.enabled')
    config2 = Configurations.list(self.apiclient, name='storage.cleanup.interval')
    cleanup_enabled = config1[0].value
    cleanup_interval = int(config2[0].value)
    if (cleanup_enabled == 'false'):
        raise unittest.SkipTest('storage.cleanup.enabled is not set to true')
    if (cleanup_interval > 600):
        raise unittest.SkipTest('storage.cleanup.interval is set to wait for more than 10 mins before cleanup. Please reduce the interval to less than 10 mins')
    invaliduploadvolume = self.invalidposturl()
    self.validate_storage_cleanup(invaliduploadvolume, cleanup_interval)
    return
