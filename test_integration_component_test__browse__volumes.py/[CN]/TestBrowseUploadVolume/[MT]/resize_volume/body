def resize_volume(self, volumeid):
    'Test resize a volume'
    self.testdata['browser_upload_volume']['browser_resized_disk_offering']['disksize'] = 20
    disk_offering_20_GB = DiskOffering.create(self.apiclient, self.testdata['browser_upload_volume']['browser_resized_disk_offering'])
    self.cleanup.append(disk_offering_20_GB)
    cmd = resizeVolume.resizeVolumeCmd()
    cmd.id = volumeid
    cmd.diskofferingid = disk_offering_20_GB.id
    self.apiclient.resizeVolume(cmd)
    count = 0
    success = False
    while (count < 3):
        list_volume_response = Volume.list(self.apiclient, id=volumeid, type='DATADISK')
        for vol in list_volume_response:
            if ((vol.id == volumeid) and (int(vol.size) == (int(disk_offering_20_GB.disksize) * (1024 ** 3))) and (vol.state == 'Ready')):
                success = True
        if success:
            break
        else:
            time.sleep(10)
            count += 1
    self.assertEqual(success, True, 'Check if the data volume resized appropriately')
    return
