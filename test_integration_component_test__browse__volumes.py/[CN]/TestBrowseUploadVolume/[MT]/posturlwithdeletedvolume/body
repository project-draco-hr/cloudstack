def posturlwithdeletedvolume(self, getuploadparamsresponce):
    signt = getuploadparamsresponce.signature
    posturl = getuploadparamsresponce.postURL
    metadata = getuploadparamsresponce.metadata
    expiredata = getuploadparamsresponce.expires
    self.validate_uploaded_volume(getuploadparamsresponce.id, 'UploadAbandoned')
    cmd = deleteVolume.deleteVolumeCmd()
    cmd.id = getuploadparamsresponce.id
    self.apiclient.deleteVolume(cmd)
    success = False
    url = self.extuploadurl
    uploadfile = url.split('/')[(-1)]
    r = requests.get(url, stream=True)
    with open(uploadfile, 'wb') as f:
        for chunk in r.iter_content(chunk_size=1024):
            if chunk:
                f.write(chunk)
                f.flush()
    files = {'file': (uploadfile, open(uploadfile, 'rb'), 'application/octet-stream'), }
    headers = {'X-signature': signt, 'X-metadata': metadata, 'X-expires': expiredata, }
    results = requests.post(posturl, files=files, headers=headers, verify=False)
    print results.status_code
    if (results.status_code == 200):
        return 'FAIL'
    return 'PASS'
