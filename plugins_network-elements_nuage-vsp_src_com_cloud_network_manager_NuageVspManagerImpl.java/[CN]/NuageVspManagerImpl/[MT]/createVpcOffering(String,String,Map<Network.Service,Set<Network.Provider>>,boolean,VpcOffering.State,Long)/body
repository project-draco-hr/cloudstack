{
  return Transaction.execute(new TransactionCallback<VpcOffering>(){
    @Override public VpcOffering doInTransaction(    TransactionStatus status){
      VpcOfferingVO offering=new VpcOfferingVO(name,displayText,isDefault,serviceOfferingId,false,false);
      if (state != null) {
        offering.setState(state);
      }
      if (s_logger.isDebugEnabled()) {
        s_logger.debug(String.format("Adding vpc offering %s",offering));
      }
      offering=_vpcOffDao.persist(offering);
      if (svcProviderMap != null) {
        for (        Network.Service service : svcProviderMap.keySet()) {
          Set<Network.Provider> providers=svcProviderMap.get(service);
          if (providers != null && !providers.isEmpty()) {
            for (            Network.Provider provider : providers) {
              VpcOfferingServiceMapVO offService=new VpcOfferingServiceMapVO(offering.getId(),service,provider);
              _vpcOffSvcMapDao.persist(offService);
              if (s_logger.isTraceEnabled()) {
                s_logger.trace(String.format("Added service for the vpc offering: %s with provider %s",offService,provider.getName()));
              }
            }
          }
 else {
            throw new InvalidParameterValueException(String.format("Provider is missing for the VPC offering service %s",service.getName()));
          }
        }
      }
      return offering;
    }
  }
);
}
