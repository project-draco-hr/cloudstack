{
  if (attr.is(Attribute.Flag.DaoGenerated) && value == null) {
    value=generateValue(attr);
    if (attr.field == null) {
      pstmt.setObject(j,value);
      return;
    }
  }
  if (attr.field.getType() == String.class) {
    final String str=(String)value;
    if (str == null) {
      pstmt.setString(j,null);
      return;
    }
    final Column column=attr.field.getAnnotation(Column.class);
    final int length=column != null ? column.length() : 255;
    if (length < str.length()) {
      try {
        pstmt.setBytes(j,str.substring(0,column.length()).getBytes("UTF-8"));
      }
 catch (      UnsupportedEncodingException e) {
        assert(false);
        throw new CloudRuntimeException("UnsupportedEncodingException when saving string as UTF-8 data");
      }
    }
 else {
      try {
        pstmt.setBytes(j,str.getBytes("UTF-8"));
      }
 catch (      UnsupportedEncodingException e) {
        assert(false);
        throw new CloudRuntimeException("UnsupportedEncodingException when saving string as UTF-8 data");
      }
    }
  }
 else   if (attr.field.getType() == Date.class) {
    final Date date=(Date)value;
    if (date == null) {
      pstmt.setObject(j,null);
      return;
    }
    if (attr.is(Attribute.Flag.Date)) {
      pstmt.setString(j,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),date));
    }
 else     if (attr.is(Attribute.Flag.TimeStamp)) {
      pstmt.setString(j,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),date));
    }
 else     if (attr.is(Attribute.Flag.Time)) {
      pstmt.setString(j,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),date));
    }
  }
 else   if (attr.field.getType() == Calendar.class) {
    final Calendar cal=(Calendar)value;
    if (cal == null) {
      pstmt.setObject(j,null);
      return;
    }
    if (attr.is(Attribute.Flag.Date)) {
      pstmt.setString(j,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),cal.getTime()));
    }
 else     if (attr.is(Attribute.Flag.TimeStamp)) {
      pstmt.setString(j,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),cal.getTime()));
    }
 else     if (attr.is(Attribute.Flag.Time)) {
      pstmt.setString(j,DateUtil.getDateDisplayString(TimeZone.getTimeZone("GMT"),cal.getTime()));
    }
  }
 else   if (attr.field.getType().isEnum()) {
    final Enumerated enumerated=attr.field.getType().getAnnotation(Enumerated.class);
    final EnumType type=(enumerated == null) ? EnumType.STRING : enumerated.value();
    if (type == EnumType.STRING) {
      pstmt.setString(j,value == null ? null : value.toString());
    }
 else     if (type == EnumType.ORDINAL) {
      pstmt.setInt(j,value == null ? null : ((Enum<?>)value).ordinal());
    }
  }
 else   if (attr.field.getType() == URI.class) {
    pstmt.setString(j,value == null ? null : value.toString());
  }
 else   if (attr.field.getType() == URL.class) {
    pstmt.setURL(j,(URL)value);
  }
 else   if (attr.field.getType() == byte[].class) {
    pstmt.setBytes(j,(byte[])value);
  }
 else {
    pstmt.setObject(j,value);
  }
}
