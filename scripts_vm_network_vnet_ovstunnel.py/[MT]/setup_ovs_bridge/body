def setup_ovs_bridge(bridge, key, cs_host_id):
    res = lib.check_switch()
    if (res != 'SUCCESS'):
        return 'false'
    logging.debug(('About to manually create the bridge:%s' % bridge))
    res = lib.do_cmd([lib.VSCTL_PATH, 'set', 'bridge', bridge, ('other_config:gre_key=%s' % key)])
    lib.do_cmd([lib.VSCTL_PATH, 'set', 'Bridge', bridge, 'stp_enable=true'])
    logging.debug(('Bridge has been manually created:%s' % res))
    if res:
        result = 'false'
    else:
        res = lib.do_cmd([lib.VSCTL_PATH, 'get', 'bridge', bridge, 'other_config:gre_key'])
        if (key in res):
            result = 'true'
        else:
            result = 'false'
        lib.do_cmd([lib.VSCTL_PATH, 'set', 'bridge', bridge, 'other_config:is-ovs-tun-network=True'])
        conf_hosts = lib.do_cmd([lib.VSCTL_PATH, 'get', 'bridge', bridge, 'other_config:ovs-host-setup'])
        conf_hosts = (cs_host_id + ((conf_hosts and (',%s' % conf_hosts)) or ''))
        lib.do_cmd([lib.VSCTL_PATH, 'set', 'bridge', bridge, ('other_config:ovs-host-setup=%s' % conf_hosts)])
    logging.debug(('Setup_ovs_bridge completed with result:%s' % result))
    return result
