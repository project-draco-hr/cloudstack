def _create_natrule(self, vpc, vm, public_port, private_port, public_ip, network, services=None):
    self.logger.debug('Creating NAT rule in network for vm with public IP')
    if (not services):
        self.services['natrule']['privateport'] = private_port
        self.services['natrule']['publicport'] = public_port
        self.services['natrule']['startport'] = public_port
        self.services['natrule']['endport'] = public_port
        services = self.services['natrule']
    nat_rule = NATRule.create(apiclient=self.apiclient, services=services, ipaddressid=public_ip.ipaddress.id, virtual_machine=vm, networkid=network.id)
    self.assertIsNotNone(nat_rule, ('Failed to create NAT Rule for %s' % public_ip.ipaddress.ipaddress))
    self.logger.debug('Adding NetworkACL rules to make NAT rule accessible')
    vm.ssh_ip = nat_rule.ipaddress
    vm.public_ip = nat_rule.ipaddress
    vm.public_port = int(public_port)
    return nat_rule
