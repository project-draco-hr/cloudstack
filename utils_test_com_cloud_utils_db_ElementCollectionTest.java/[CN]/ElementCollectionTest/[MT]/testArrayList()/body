{
  Field[] fields=this.getClass().getDeclaredFields();
  for (  Field field : fields) {
    if (Modifier.isStatic(field.getModifiers())) {
      continue;
    }
    Class<?> type1=field.getType();
    Object collection=null;
    if (!type1.isArray()) {
      ParameterizedType type=(ParameterizedType)field.getGenericType();
      Type rawType=type.getRawType();
      Class<?> rawClazz=(Class<?>)rawType;
      if (!Modifier.isAbstract(rawClazz.getModifiers()) && !rawClazz.isInterface() && rawClazz.getConstructors().length != 0 && rawClazz.getConstructor() != null) {
        collection=rawClazz.newInstance();
      }
      if (collection == null) {
        if (Collection.class.isAssignableFrom(rawClazz)) {
          collection=new ArrayList();
        }
 else         if (Set.class.isAssignableFrom(rawClazz)) {
          collection=new HashSet();
        }
      }
    }
 else {
      collection=Array.newInstance(String.class,1);
    }
    field.set(this,collection);
    assert(field.get(this) != null);
  }
}
