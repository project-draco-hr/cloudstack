def describeKumquatResources(dbnode='localhost', mshost='localhost'):
    zs = cloudstackConfiguration()
    numberofpods = 15
    clustersPerPod = 2
    hostsPerCluster = 8
    curpod = 0
    curhost = 0
    z = zone()
    z.dns1 = '4.2.2.2'
    z.dns2 = '192.168.110.254'
    z.internaldns1 = '10.91.28.6'
    z.internaldns2 = '192.168.110.254'
    z.name = 'Kumquat'
    z.networktype = 'Advanced'
    z.guestcidraddress = '10.1.1.0/24'
    z.vlan = '100-3000'
    for (podRange, vlanRange) in zip(podIpRangeGenerator(), vlanIpRangeGenerator()):
        p = pod()
        curpod = (curpod + 1)
        p.name = ('POD' + str(curpod))
        p.gateway = podRange[0]
        p.startip = podRange[1]
        p.endip = podRange[2]
        p.netmask = '255.255.255.128'
        for i in range(1, (clustersPerPod + 1)):
            c = cluster()
            c.clustername = ((('POD' + str(curpod)) + '-CLUSTER') + str(i))
            c.hypervisor = 'Simulator'
            c.clustertype = 'CloudManaged'
            ps = primaryStorage()
            ps.name = ('spool' + str(i))
            ps.url = ((('nfs://172.16.24.32/export/path/' + str(curpod)) + '/') + str(i))
            c.primaryStorages.append(ps)
            for i in range(1, (hostsPerCluster + 1)):
                h = host()
                h.username = 'root'
                h.password = 'password'
                h.url = ('http://sim/test-%d' % curhost)
                c.hosts.append(h)
                curhost = (curhost + 1)
            p.clusters.append(c)
        z.pods.append(p)
        if (curpod == numberofpods):
            break
    v = iprange()
    v.vlan = 'untagged'
    v.gateway = '172.2.1.1'
    v.startip = '172.2.1.2'
    v.endip = '172.2.255.252'
    v.netmask = '255.255.0.0'
    z.ipranges.append(v)
    secondary = secondaryStorage()
    secondary.url = 'nfs://172.16.25.32/secondary/path'
    z.secondaryStorages.append(secondary)
    zs.zones.append(z)
    'Add mgt server'
    mgt = managementServer()
    mgt.mgtSvrIp = mshost
    zs.mgtSvr.append(mgt)
    'Add a database'
    db = dbServer()
    db.dbSvr = opts.dbnode
    zs.dbSvr = db
    'Add some configuration'
    [zs.globalConfig.append(cfg) for cfg in getGlobalSettings()]
    "'add loggers"
    testClientLogger = logger()
    testClientLogger.name = 'TestClient'
    testClientLogger.file = '/var/log/testclient.log'
    testCaseLogger = logger()
    testCaseLogger.name = 'TestCase'
    testCaseLogger.file = '/var/log/testcase.log'
    zs.logger.append(testClientLogger)
    zs.logger.append(testCaseLogger)
    return zs
