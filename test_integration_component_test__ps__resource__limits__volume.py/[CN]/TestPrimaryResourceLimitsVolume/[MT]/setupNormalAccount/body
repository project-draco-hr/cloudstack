def setupNormalAccount(self):
    'Setup the account required for the test'
    try:
        self.domain = Domain.create(self.apiclient, services=self.services['domain'], parentdomainid=self.domain.id)
        self.account = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id, admin=False)
        self.cleanup.append(self.account)
        self.cleanup.append(self.domain)
        self.virtualMachine = VirtualMachine.create(self.api_client, self.services['virtual_machine'], accountid=self.account.name, domainid=self.account.domainid, diskofferingid=self.disk_offering.id, serviceofferingid=self.service_offering.id)
        accounts = Account.list(self.apiclient, id=self.account.id)
        self.assertEqual(validateList(accounts)[0], PASS, 'accounts list validation failed')
        self.initialResourceCount = int(accounts[0].primarystoragetotal)
        primarystoragelimit = self.initialResourceCount
        update_resource_limit(self.api_client, RESOURCE_PRIMARY_STORAGE, account=self.account.name, domainid=self.account.domainid, max=primarystoragelimit)
    except Exception as e:
        return [FAIL, e]
    return [PASS, None]
