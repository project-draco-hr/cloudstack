{
  closePreviousStatement();
  if (_conn == null) {
    if (s_logger.isTraceEnabled()) {
      s_logger.trace("conn: Creating a DB connection with " + (_txn ? " txn: " : " no txn: ") + buildName());
    }
switch (_dbId) {
case CLOUD_DB:
      if (s_ds != null) {
        _conn=s_ds.getConnection();
      }
 else {
        s_logger.warn("A static-initialized variable becomes null, process is dying?");
        throw new CloudRuntimeException("Database is not initialized, process is dying?");
      }
    break;
case USAGE_DB:
  if (s_usageDS != null) {
    _conn=s_usageDS.getConnection();
  }
 else {
    s_logger.warn("A static-initialized variable becomes null, process is dying?");
    throw new CloudRuntimeException("Database is not initialized, process is dying?");
  }
break;
default :
throw new CloudRuntimeException("No database selected for the transaction");
}
_conn.setAutoCommit(!_txn);
_conn.setTransactionIsolation(Connection.TRANSACTION_READ_COMMITTED);
_stack.push(new StackElement(CREATE_CONN,null));
}
 else {
s_logger.trace("conn: Using existing DB connection");
}
return _conn;
}
