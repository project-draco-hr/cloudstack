{
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      TransactionLegacy txn=TransactionLegacy.currentTxn();
      String searchQuery="Select id from `cloud`.`iam_group_account_map` where account_id = ? and removed is null";
      ResultSet rs=null;
      PreparedStatement acctQuery=null;
      PreparedStatement acctInsert=null;
      try {
        acctQuery=txn.prepareAutoCloseStatement(searchQuery);
        acctQuery.setLong(1,Account.ACCOUNT_ID_SYSTEM);
        rs=acctQuery.executeQuery();
        if (!rs.next()) {
          acctInsert=txn.prepareAutoCloseStatement("INSERT INTO `cloud`.`iam_group_account_map` (group_id, account_id, created) values(?, ?, Now())");
          acctInsert.setLong(1,Account.ACCOUNT_TYPE_ADMIN + 1);
          acctInsert.setLong(2,Account.ACCOUNT_ID_SYSTEM);
          acctInsert.executeUpdate();
        }
      }
 catch (      SQLException ex) {
        String msg="Unable to populate iam_group_account_map for SYSTEM account." + ex.getMessage();
        s_logger.error(msg);
        throw new CloudRuntimeException(msg,ex);
      }
 finally {
        try {
          if (acctInsert != null) {
            acctInsert.close();
          }
          if (rs != null) {
            rs.close();
          }
          if (acctQuery != null) {
            acctQuery.close();
          }
        }
 catch (        SQLException e) {
        }
      }
      try {
        acctQuery=txn.prepareAutoCloseStatement(searchQuery);
        acctQuery.setLong(1,Account.ACCOUNT_ID_SYSTEM + 1);
        rs=acctQuery.executeQuery();
        if (!rs.next()) {
          acctInsert=txn.prepareAutoCloseStatement("INSERT INTO `cloud`.`iam_group_account_map` (group_id, account_id, created) values(?, ?, Now())");
          acctInsert.setLong(1,Account.ACCOUNT_TYPE_ADMIN + 1);
          acctInsert.setLong(2,Account.ACCOUNT_ID_SYSTEM + 1);
          acctInsert.executeUpdate();
        }
      }
 catch (      SQLException ex) {
        String msg="Unable to populate iam_group_account_map for Admin account." + ex.getMessage();
        s_logger.error(msg);
        throw new CloudRuntimeException(msg,ex);
      }
 finally {
        try {
          if (acctInsert != null) {
            acctInsert.close();
          }
          if (rs != null) {
            rs.close();
          }
          if (acctQuery != null) {
            acctQuery.close();
          }
        }
 catch (        SQLException e) {
        }
      }
    }
  }
);
}
