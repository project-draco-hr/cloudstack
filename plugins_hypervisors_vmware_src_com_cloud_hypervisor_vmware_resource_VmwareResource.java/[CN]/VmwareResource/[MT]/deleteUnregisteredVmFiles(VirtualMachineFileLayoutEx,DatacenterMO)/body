{
  s_logger.debug("Deleting files associated with an existing VM that was unregistered");
  DatastoreFile vmFolder=null;
  try {
    List<VirtualMachineFileLayoutExFileInfo> fileInfo=vmFileLayout.getFile();
    for (    VirtualMachineFileLayoutExFileInfo file : fileInfo) {
      DatastoreFile fileInDatastore=new DatastoreFile(file.getName());
      if (file.getType().startsWith("disk") || file.getType().startsWith("digest"))       continue;
 else       if (file.getType().equals("config"))       vmFolder=new DatastoreFile(fileInDatastore.getDatastoreName(),fileInDatastore.getDir());
      DatastoreMO dsMo=new DatastoreMO(dcMo.getContext(),dcMo.findDatastore(fileInDatastore.getDatastoreName()));
      s_logger.debug("Deleting file: " + file.getName());
      dsMo.deleteFile(file.getName(),dcMo.getMor(),true);
    }
    DatastoreMO vmFolderDsMo=new DatastoreMO(dcMo.getContext(),dcMo.findDatastore(vmFolder.getDatastoreName()));
    String[] files=vmFolderDsMo.listDirContent(vmFolder.getPath());
    if (files.length != 0) {
      for (      String file : files) {
        String vmDiskFileFullPath=String.format("%s/%s",vmFolder.getPath(),file);
        s_logger.debug("Deleting file: " + vmDiskFileFullPath);
        vmFolderDsMo.deleteFile(vmDiskFileFullPath,dcMo.getMor(),true);
      }
    }
    s_logger.debug("Deleting folder: " + vmFolder.getPath());
    vmFolderDsMo.deleteFolder(vmFolder.getPath(),dcMo.getMor());
  }
 catch (  Exception e) {
    String message="Failed to delete files associated with an existing VM that was unregistered due to " + VmwareHelper.getExceptionMessage(e);
    s_logger.warn(message,e);
  }
}
