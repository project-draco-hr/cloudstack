{
  String paramVRamSize="svga.vramSize";
  if (vmSpec.getDetails().containsKey(paramVRamSize)) {
    String value=vmSpec.getDetails().get(paramVRamSize);
    try {
      long svgaVmramSize=Long.parseLong(value);
      for (      VirtualDevice device : vmMo.getAllDeviceList()) {
        if (device instanceof VirtualMachineVideoCard) {
          VirtualMachineVideoCard videoCard=(VirtualMachineVideoCard)device;
          if (videoCard.getVideoRamSizeInKB().longValue() != svgaVmramSize) {
            s_logger.info("Video card memory was set " + videoCard.getVideoRamSizeInKB().longValue() + "kb instead of "+ svgaVmramSize+ "kb");
            videoCard.setVideoRamSizeInKB(svgaVmramSize);
            videoCard.setUseAutoDetect(false);
            VirtualDeviceConfigSpec arrayVideoCardConfigSpecs=new VirtualDeviceConfigSpec();
            arrayVideoCardConfigSpecs.setDevice(videoCard);
            arrayVideoCardConfigSpecs.setOperation(VirtualDeviceConfigSpecOperation.EDIT);
            VirtualMachineConfigSpec changeVideoCardSpecs=new VirtualMachineConfigSpec();
            changeVideoCardSpecs.getDeviceChange().add(arrayVideoCardConfigSpecs);
            boolean res=vmMo.configureVm(changeVideoCardSpecs);
            if (res) {
              s_logger.info("Video card memory successfully updated to " + svgaVmramSize + "kb");
            }
          }
        }
      }
    }
 catch (    NumberFormatException e) {
      s_logger.error("Unexpected value, cannot parse " + value + " to long due to: "+ e.getMessage());
    }
catch (    Exception e) {
      s_logger.error("Error while reconfiguring vm due to: " + e.getMessage());
    }
  }
}
