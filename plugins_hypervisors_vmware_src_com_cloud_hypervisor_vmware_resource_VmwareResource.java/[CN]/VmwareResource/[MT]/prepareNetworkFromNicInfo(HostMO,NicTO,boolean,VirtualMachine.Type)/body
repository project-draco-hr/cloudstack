{
  Pair<String,String> switchName;
  TrafficType trafficType;
  VirtualSwitchType switchType;
  switchName=getTargetSwitch(nicTo);
  trafficType=nicTo.getType();
  switchType=VirtualSwitchType.StandardVirtualSwitch;
  if (trafficType == TrafficType.Guest && _guestTrafficInfo != null) {
    switchType=_guestTrafficInfo.getVirtualSwitchType();
  }
 else   if (trafficType == TrafficType.Public && _publicTrafficInfo != null) {
    switchType=_publicTrafficInfo.getVirtualSwitchType();
  }
  String namePrefix=getNetworkNamePrefix(nicTo);
  Pair<ManagedObjectReference,String> networkInfo=null;
  s_logger.info("Prepare network on " + switchType + " "+ switchName+ " with name prefix: "+ namePrefix);
  if (VirtualSwitchType.StandardVirtualSwitch == switchType) {
    networkInfo=HypervisorHostHelper.prepareNetwork(switchName.first(),namePrefix,hostMo,getVlanInfo(nicTo,switchName.second()),nicTo.getNetworkRateMbps(),nicTo.getNetworkRateMulticastMbps(),_ops_timeout,!namePrefix.startsWith("cloud.private"));
  }
 else {
    String vlanId=getVlanInfo(nicTo,switchName.second());
    String svlanId=null;
    boolean pvlannetwork=(getPvlanInfo(nicTo) == null) ? false : true;
    if (vmType != null && vmType.equals(VirtualMachine.Type.DomainRouter) && pvlannetwork) {
      svlanId=vlanId;
    }
 else {
      svlanId=getPvlanInfo(nicTo);
    }
    networkInfo=HypervisorHostHelper.prepareNetwork(switchName.first(),namePrefix,hostMo,vlanId,svlanId,nicTo.getNetworkRateMbps(),nicTo.getNetworkRateMulticastMbps(),_ops_timeout,switchType,_portsPerDvPortGroup,nicTo.getGateway(),configureVServiceInNexus);
  }
  return networkInfo;
}
