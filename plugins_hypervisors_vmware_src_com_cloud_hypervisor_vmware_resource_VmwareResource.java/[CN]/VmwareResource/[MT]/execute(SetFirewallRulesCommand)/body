{
  String controlIp=getRouterSshControlIp(cmd);
  String[] results=new String[cmd.getRules().length];
  String[][] rules=cmd.generateFwRules();
  String args="";
  args+=" -F ";
  StringBuilder sb=new StringBuilder();
  String[] fwRules=rules[0];
  if (fwRules.length > 0) {
    for (int i=0; i < fwRules.length; i++) {
      sb.append(fwRules[i]).append(',');
    }
    args+=" -a " + sb.toString();
  }
  try {
    VmwareManager mgr=getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);
    Pair<Boolean,String> result=SshHelper.sshExecute(controlIp,DEFAULT_DOMR_SSHPORT,"root",mgr.getSystemVMKeyFile(),null,"/root/firewall_rule.sh " + args);
    if (s_logger.isDebugEnabled())     s_logger.debug("Executing script on domain router " + controlIp + ": /root/firewall_rule.sh "+ args);
    if (!result.first()) {
      s_logger.error("SetFirewallRulesCommand failure on setting one rule. args: " + args);
      for (int i=0; i < results.length; i++) {
        results[i]="Failed";
      }
      return new SetFirewallRulesAnswer(cmd,false,results);
    }
  }
 catch (  Throwable e) {
    s_logger.error("SetFirewallRulesCommand(args: " + args + ") failed on setting one rule due to "+ VmwareHelper.getExceptionMessage(e),e);
    for (int i=0; i < results.length; i++) {
      results[i]="Failed";
    }
    return new SetFirewallRulesAnswer(cmd,false,results);
  }
  return new SetFirewallRulesAnswer(cmd,true,results);
}
