{
  if (s_logger.isInfoEnabled()) {
    s_logger.info("Executing resource SetPortForwardingRulesVpcCommand " + _gson.toJson(cmd));
  }
  VmwareManager mgr=getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);
  String routerIp=getRouterSshControlIp(cmd);
  String[] results=new String[cmd.getRules().length];
  int i=0;
  boolean endResult=true;
  for (  PortForwardingRuleTO rule : cmd.getRules()) {
    String args="";
    args+=rule.revoked() ? " -D" : " -A";
    args+=" -P " + rule.getProtocol().toLowerCase();
    args+=" -l " + rule.getSrcIp();
    args+=" -p " + rule.getStringSrcPortRange().replace(":","-");
    args+=" -r " + rule.getDstIp();
    args+=" -d " + rule.getStringDstPortRange().replace(":","-");
    try {
      Pair<Boolean,String> sshResult=SshHelper.sshExecute(routerIp,DEFAULT_DOMR_SSHPORT,"root",mgr.getSystemVMKeyFile(),null,"/opt/cloud/bin/vpc_portforwarding " + args);
      if (!sshResult.first()) {
        results[i++]="Failed";
        endResult=false;
      }
 else {
        results[i++]=null;
      }
    }
 catch (    Exception e) {
      results[i++]="Failed";
      endResult=false;
    }
  }
  return new SetPortForwardingRulesAnswer(cmd,results,endResult);
}
