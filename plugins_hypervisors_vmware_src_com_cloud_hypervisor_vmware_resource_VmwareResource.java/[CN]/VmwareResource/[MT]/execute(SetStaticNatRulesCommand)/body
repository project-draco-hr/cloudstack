{
  if (cmd.getVpcId() != null) {
    return SetVPCStaticNatRules(cmd);
  }
  if (s_logger.isInfoEnabled()) {
    s_logger.info("Executing resource SetFirewallRuleCommand: " + _gson.toJson(cmd));
  }
  String args=null;
  String[] results=new String[cmd.getRules().length];
  int i=0;
  boolean endResult=true;
  for (  StaticNatRuleTO rule : cmd.getRules()) {
    args=rule.revoked() ? " -D " : " -A ";
    args+=" -l " + rule.getSrcIp();
    args+=" -r " + rule.getDstIp();
    if (rule.getProtocol() != null) {
      args+=" -P " + rule.getProtocol().toLowerCase();
    }
    args+=" -d " + rule.getStringSrcPortRange();
    args+=" -G ";
    String controlIp=getRouterSshControlIp(cmd);
    ExecutionResult result=executeInVR(controlIp,"firewall_nat.sh",args);
    if (!result.isSuccess()) {
      s_logger.error("SetStaticNatRulesCommand failure on setting one rule. args: " + args);
      results[i++]="Failed";
      endResult=false;
    }
 else {
      results[i++]=null;
    }
  }
  return new SetStaticNatRulesAnswer(cmd,results,endResult);
}
