{
  TrafficType[] supportedTrafficTypes=new TrafficType[]{TrafficType.Guest,TrafficType.Public,TrafficType.Control,TrafficType.Management,TrafficType.Storage};
  TrafficType trafficType=nicTo.getType();
  if (!Arrays.asList(supportedTrafficTypes).contains(trafficType)) {
    throw new CloudException("Traffic type " + trafficType.toString() + " for nic "+ nicTo.toString()+ " is not supported.");
  }
  String switchName=null;
  VirtualSwitchType switchType=VirtualSwitchType.StandardVirtualSwitch;
  String vlanId=Vlan.UNTAGGED;
  if (nicTo.getName() != null && !nicTo.getName().isEmpty()) {
    String networkName=nicTo.getName();
    VmwareTrafficLabel mgmtTrafficLabelObj=new VmwareTrafficLabel(networkName,trafficType);
    switchName=mgmtTrafficLabelObj.getVirtualSwitchName();
    vlanId=mgmtTrafficLabelObj.getVlanId();
    switchType=mgmtTrafficLabelObj.getVirtualSwitchType();
  }
 else {
    if (trafficType == TrafficType.Guest && _guestTrafficInfo != null) {
      switchType=_guestTrafficInfo.getVirtualSwitchType();
      switchName=_guestTrafficInfo.getVirtualSwitchName();
    }
 else     if (trafficType == TrafficType.Public && _publicTrafficInfo != null) {
      switchType=_publicTrafficInfo.getVirtualSwitchType();
      switchName=_publicTrafficInfo.getVirtualSwitchName();
    }
  }
  if (switchName == null && (nicTo.getType() == Networks.TrafficType.Control || nicTo.getType() == Networks.TrafficType.Management || nicTo.getType() == Networks.TrafficType.Storage)) {
    switchName=_privateNetworkVSwitchName;
  }
  if (switchType == VirtualSwitchType.NexusDistributedVirtualSwitch) {
    if (trafficType == TrafficType.Management || trafficType == TrafficType.Storage) {
      throw new CloudException("Unable to configure NIC " + nicTo.toString() + " as traffic type "+ trafficType.toString()+ " is not supported over virtual switch type "+ switchType+ ". Please specify only supported type of virtual switches i.e. {vmwaresvs, vmwaredvs} in physical network traffic label.");
    }
  }
  return new Ternary<String,String,String>(switchName,switchType.toString(),vlanId);
}
