{
  if (nicTo.getName() != null && !nicTo.getName().isEmpty()) {
    String[] tokens=nicTo.getName().split(",");
    if (tokens.length == 2) {
      return new Pair<String,String>(tokens[0],tokens[1]);
    }
 else {
      return new Pair<String,String>(nicTo.getName(),Vlan.UNTAGGED);
    }
  }
  if (nicTo.getType() == Networks.TrafficType.Guest) {
    return new Pair<String,String>(this._guestNetworkVSwitchName,Vlan.UNTAGGED);
  }
 else   if (nicTo.getType() == Networks.TrafficType.Control || nicTo.getType() == Networks.TrafficType.Management) {
    return new Pair<String,String>(this._privateNetworkVSwitchName,Vlan.UNTAGGED);
  }
 else   if (nicTo.getType() == Networks.TrafficType.Public) {
    return new Pair<String,String>(this._publicNetworkVSwitchName,Vlan.UNTAGGED);
  }
 else   if (nicTo.getType() == Networks.TrafficType.Storage) {
    return new Pair<String,String>(this._privateNetworkVSwitchName,Vlan.UNTAGGED);
  }
 else   if (nicTo.getType() == Networks.TrafficType.Vpn) {
    throw new Exception("Unsupported traffic type: " + nicTo.getType().toString());
  }
 else {
    throw new Exception("Unsupported traffic type: " + nicTo.getType().toString());
  }
}
