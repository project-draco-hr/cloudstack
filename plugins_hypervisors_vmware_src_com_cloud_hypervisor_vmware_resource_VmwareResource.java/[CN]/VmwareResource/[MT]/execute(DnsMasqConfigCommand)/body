{
  if (s_logger.isInfoEnabled()) {
    s_logger.info("Executing dnsmasqConfig command: " + _gson.toJson(cmd));
  }
  String routerIp=cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);
  String controlIp=getRouterSshControlIp(cmd);
  assert(controlIp != null);
  List<DhcpTO> dhcpTos=cmd.getIps();
  String args="";
  for (  DhcpTO dhcpTo : dhcpTos) {
    args=args + dhcpTo.getRouterIp() + ":"+ dhcpTo.getGateway()+ ":"+ dhcpTo.getNetmask()+ ":"+ dhcpTo.getStartIpOfSubnet()+ "-";
  }
  VmwareManager mgr=getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);
  File keyFile=mgr.getSystemVMKeyFile();
  try {
    Pair<Boolean,String> result=SshHelper.sshExecute(controlIp,DEFAULT_DOMR_SSHPORT,"root",mgr.getSystemVMKeyFile(),null,"/root/dnsmasq.sh " + args);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Run command on domain router " + routerIp + ",  /root/dnsmasq.sh");
    }
    if (!result.first()) {
      s_logger.error("Unable update dnsmasq config file");
      return new Answer(cmd,false,"dnsmasq config update failed due to: " + result.second());
    }
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("dnsmasq config command on domain router " + routerIp + " completed");
    }
  }
 catch (  Throwable e) {
    String msg="Dnsmasqconfig command failed due to " + VmwareHelper.getExceptionMessage(e);
    s_logger.error(msg,e);
    return new Answer(cmd,false,msg);
  }
  return new Answer(cmd);
}
