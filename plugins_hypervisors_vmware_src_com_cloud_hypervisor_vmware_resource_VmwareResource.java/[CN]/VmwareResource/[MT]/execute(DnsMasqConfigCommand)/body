{
  if (s_logger.isInfoEnabled()) {
    s_logger.info("Executing deleteipAlias command: " + _gson.toJson(cmd));
  }
  String routerIp=cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);
  String controlIp=getRouterSshControlIp(cmd);
  assert(controlIp != null);
  DnsMasqConfigurator configurator=new DnsMasqConfigurator();
  String[] config=configurator.generateConfiguration(cmd);
  String tmpConfigFilePath="/tmp/" + routerIp.replace(".","-") + ".cfg";
  String tmpConfigFileContents="";
  for (int i=0; i < config.length; i++) {
    tmpConfigFileContents+=config[i];
    tmpConfigFileContents+="\n";
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Run command on domR " + cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP) + ", /root/dnsmasq.sh "+ "config file at"+ tmpConfigFilePath);
  }
  VmwareManager mgr=getServiceContext().getStockObject(VmwareManager.CONTEXT_STOCK_NAME);
  File keyFile=mgr.getSystemVMKeyFile();
  try {
    SshHelper.scpTo(controlIp,DEFAULT_DOMR_SSHPORT,"root",keyFile,null,"/tmp/",tmpConfigFileContents.getBytes(),routerIp.replace('.','_') + ".cfg",null);
    try {
      Pair<Boolean,String> result=SshHelper.sshExecute(controlIp,DEFAULT_DOMR_SSHPORT,"root",mgr.getSystemVMKeyFile(),null,"scp" + tmpConfigFilePath + "/root/dnsmasq.sh");
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Run command on domain router " + routerIp + ",  /root/dnsmasq.sh");
      }
      if (!result.first()) {
        s_logger.error("Unable to copy dnsmasq configuration file");
        return new Answer(cmd,false,"dnsmasq config failed due to uanble to copy dnsmasq configuration file");
      }
      if (s_logger.isInfoEnabled()) {
        s_logger.info("dnsmasq config command on domain router " + routerIp + " completed");
      }
    }
  finally {
      SshHelper.sshExecute(controlIp,DEFAULT_DOMR_SSHPORT,"root",mgr.getSystemVMKeyFile(),null,"rm " + tmpConfigFilePath);
    }
    return new Answer(cmd);
  }
 catch (  Throwable e) {
    s_logger.error("Unexpected exception: " + e.toString(),e);
    return new Answer(cmd,false,"LoadBalancerConfigCommand failed due to " + VmwareHelper.getExceptionMessage(e));
  }
}
