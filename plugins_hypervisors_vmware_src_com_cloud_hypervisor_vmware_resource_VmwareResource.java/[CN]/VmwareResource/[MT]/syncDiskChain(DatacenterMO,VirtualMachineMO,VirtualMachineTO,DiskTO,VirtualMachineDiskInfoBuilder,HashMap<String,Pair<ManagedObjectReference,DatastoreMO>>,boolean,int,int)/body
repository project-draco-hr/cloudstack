{
  VolumeObjectTO volumeTO=(VolumeObjectTO)vol.getData();
  PrimaryDataStoreTO primaryStore=(PrimaryDataStoreTO)volumeTO.getDataStore();
  String deviceBusName;
  if (ideController)   deviceBusName=String.format("ide%d:%d",deviceBusNumber,deviceUnitNumber);
 else   deviceBusName=String.format("scsi%d:%d",deviceBusNumber,deviceUnitNumber);
  Pair<ManagedObjectReference,DatastoreMO> volumeDsDetails=dataStoresDetails.get(primaryStore.getUuid());
  if (volumeDsDetails == null)   throw new Exception("Primary datastore " + primaryStore.getUuid() + " is not mounted on host.");
  DatastoreMO dsMo=volumeDsDetails.second();
  if (diskInfoBuilder != null && diskInfoBuilder.getDiskCount() > 0) {
    VirtualMachineDiskInfo diskInfo=diskInfoBuilder.getDiskInfoByDeviceBusName(deviceBusName);
    if (diskInfo != null) {
      if (s_logger.isInfoEnabled())       s_logger.info("Volume " + volumeTO.getId() + " does not seem to exist on datastore. use on-disk chain: "+ _gson.toJson(diskInfo));
      return diskInfo.getDiskChain();
    }
 else {
      s_logger.warn("Volume " + volumeTO.getId() + " does not seem to exist on datastore. on-disk may be out of sync as well. disk device info: "+ deviceBusName);
    }
  }
  String datastoreDiskPath=VmwareStorageLayoutHelper.syncVolumeToVmDefaultFolder(dcMo,vmMo.getName(),dsMo,volumeTO.getPath());
  if (!dsMo.fileExists(datastoreDiskPath)) {
    if (s_logger.isInfoEnabled())     s_logger.info("Volume " + volumeTO.getId() + " does not seem to exist on datastore, out of sync? path: "+ datastoreDiskPath);
    if (volumeTO.getChainInfo() != null) {
      VirtualMachineDiskInfo diskInfo=_gson.fromJson(volumeTO.getChainInfo(),VirtualMachineDiskInfo.class);
      if (diskInfo != null) {
        s_logger.info("Use chain info from DB: " + volumeTO.getChainInfo());
        return diskInfo.getDiskChain();
      }
      throw new Exception("Volume " + volumeTO.getId() + " does not seem to exist on datastore. Broken disk chain");
    }
  }
  return new String[]{datastoreDiskPath};
}
