{
  VolumeObjectTO volumeTO=(VolumeObjectTO)vol.getData();
  DataStoreTO primaryStore=volumeTO.getDataStore();
  Map<String,String> details=vol.getDetails();
  boolean isManaged=false;
  String iScsiName=null;
  if (details != null) {
    isManaged=Boolean.parseBoolean(details.get(DiskTO.MANAGED));
    iScsiName=details.get(DiskTO.IQN);
  }
  String datastoreName=isManaged ? VmwareResource.getDatastoreName(iScsiName) : primaryStore.getUuid();
  Pair<ManagedObjectReference,DatastoreMO> volumeDsDetails=dataStoresDetails.get(datastoreName);
  if (volumeDsDetails == null) {
    throw new Exception("Primary datastore " + primaryStore.getUuid() + " is not mounted on host.");
  }
  DatastoreMO dsMo=volumeDsDetails.second();
  if (diskInfo != null) {
    String disks[]=diskInfo.getDiskChain();
    for (int i=0; i < disks.length; i++) {
      DatastoreFile file=new DatastoreFile(disks[i]);
      if (!isManaged && file.getDir() != null && file.getDir().isEmpty()) {
        s_logger.info("Perform run-time datastore folder upgrade. sync " + disks[i] + " to VM folder");
        disks[i]=VmwareStorageLayoutHelper.syncVolumeToVmDefaultFolder(dcMo,vmMo.getName(),dsMo,file.getFileBaseName());
      }
    }
    return disks;
  }
  final String datastoreDiskPath;
  if (isManaged) {
    if (volumeTO.getVolumeType() == Volume.Type.ROOT) {
      datastoreDiskPath=VmwareStorageLayoutHelper.syncVolumeToVmDefaultFolder(dcMo,vmMo.getName(),dsMo,volumeTO.getName());
    }
 else {
      datastoreDiskPath=dsMo.getDatastorePath(dsMo.getName() + ".vmdk");
    }
  }
 else {
    datastoreDiskPath=VmwareStorageLayoutHelper.syncVolumeToVmDefaultFolder(dcMo,vmMo.getName(),dsMo,volumeTO.getPath());
  }
  if (!dsMo.fileExists(datastoreDiskPath)) {
    s_logger.warn("Volume " + volumeTO.getId() + " does not seem to exist on datastore, out of sync? path: "+ datastoreDiskPath);
  }
  return new String[]{datastoreDiskPath};
}
