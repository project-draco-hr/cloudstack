{
  Map<String,Object> lowercaseParams=new HashMap<String,Object>();
  for (  String key : params.keySet()) {
    int arrayStartIndex=key.indexOf('[');
    int arrayStartLastIndex=key.lastIndexOf('[');
    if (arrayStartIndex != arrayStartLastIndex) {
      throw new ServerApiException(MALFORMED_PARAMETER_ERROR,"Unable to decode parameter " + key + "; if specifying an object array, please use parameter[index].field=XXX, e.g. userGroupList[0].group=httpGroup");
    }
    if (arrayStartIndex > 0) {
      int arrayEndIndex=key.indexOf(']');
      int arrayEndLastIndex=key.lastIndexOf(']');
      if ((arrayEndIndex < arrayStartIndex) || (arrayEndIndex != arrayEndLastIndex)) {
        throw new ServerApiException(MALFORMED_PARAMETER_ERROR,"Unable to decode parameter " + key + "; if specifying an object array, please use parameter[index].field=XXX, e.g. userGroupList[0].group=httpGroup");
      }
      int fieldIndex=key.indexOf('.');
      String fieldName=null;
      if (fieldIndex < arrayEndIndex) {
        throw new ServerApiException(MALFORMED_PARAMETER_ERROR,"Unable to decode parameter " + key + "; if specifying an object array, please use parameter[index].field=XXX, e.g. userGroupList[0].group=httpGroup");
      }
 else {
        fieldName=key.substring(fieldIndex + 1);
      }
      String paramName=key.substring(0,arrayStartIndex);
      paramName=paramName.toLowerCase();
      Map<Integer,Map> mapArray=null;
      Map<String,Object> mapValue=null;
      String indexStr=key.substring(arrayStartIndex + 1,arrayEndIndex);
      int index=0;
      boolean parsedIndex=false;
      try {
        if (indexStr != null) {
          index=Integer.parseInt(indexStr);
          parsedIndex=true;
        }
      }
 catch (      NumberFormatException nfe) {
        s_logger.warn("Invalid parameter " + key + " received, unable to parse object array, returning an error.");
      }
      if (!parsedIndex) {
        throw new ServerApiException(MALFORMED_PARAMETER_ERROR,"Unable to decode parameter " + key + "; if specifying an object array, please use parameter[index].field=XXX, e.g. userGroupList[0].group=httpGroup");
      }
      Object value=lowercaseParams.get(paramName);
      if (value == null) {
        mapArray=new HashMap<Integer,Map>();
        mapValue=new HashMap<String,Object>();
        mapArray.put(Integer.valueOf(index),mapValue);
      }
 else       if (value instanceof Map) {
        mapArray=(HashMap)value;
        mapValue=mapArray.get(Integer.valueOf(index));
        if (mapValue == null) {
          mapValue=new HashMap<String,Object>();
          mapArray.put(Integer.valueOf(index),mapValue);
        }
      }
      mapValue.put(fieldName,(String)params.get(key));
      lowercaseParams.put(paramName,mapArray);
    }
 else {
      lowercaseParams.put(key.toLowerCase(),params.get(key));
    }
  }
  return lowercaseParams;
}
