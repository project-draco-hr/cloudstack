{
  List<GuestOSCategoryVO> guestOSCategoryList=null;
  try {
    Long id=(Long)params.get(BaseCmd.Properties.ID.getName());
    Integer pageSize=(Integer)params.get(BaseCmd.Properties.PAGESIZE.getName());
    Integer page=(Integer)params.get(BaseCmd.Properties.PAGE.getName());
    Long startIndex=Long.valueOf(0);
    int pageSizeNum=50;
    if (pageSize != null) {
      pageSizeNum=pageSize.intValue();
    }
    if (page != null) {
      int pageNum=page.intValue();
      if (pageNum > 0) {
        startIndex=Long.valueOf(pageSizeNum * (pageNum - 1));
      }
    }
    Criteria c=new Criteria("id",Boolean.TRUE,startIndex,Long.valueOf(pageSizeNum));
    if (id != null) {
      c.addCriteria(Criteria.ID,id);
    }
    guestOSCategoryList=getManagementServer().listGuestOSCategoriesByCriteria(c);
  }
 catch (  Exception ex) {
    s_logger.error("Exception listing guest OS categories",ex);
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Failed to list guest OS categories due to exception: " + ex.getMessage());
  }
  Object[] tag=null;
  List<Pair<String,Object>> guestOSCategoryTags=new ArrayList<Pair<String,Object>>();
  if (guestOSCategoryList != null) {
    tag=new Object[guestOSCategoryList.size()];
    int i=0;
    for (    GuestOSCategoryVO guestOSCategory : guestOSCategoryList) {
      List<Pair<String,Object>> guestOSCategoryData=new ArrayList<Pair<String,Object>>();
      guestOSCategoryData.add(new Pair<String,Object>(BaseCmd.Properties.ID.getName(),guestOSCategory.getId().toString()));
      guestOSCategoryData.add(new Pair<String,Object>(BaseCmd.Properties.NAME.getName(),guestOSCategory.getName()));
      tag[i++]=guestOSCategoryData;
    }
  }
 else {
    tag=new Object[0];
  }
  Pair<String,Object> guestOSCategoryTag=new Pair<String,Object>("oscategory",tag);
  guestOSCategoryTags.add(guestOSCategoryTag);
  return guestOSCategoryTags;
}
