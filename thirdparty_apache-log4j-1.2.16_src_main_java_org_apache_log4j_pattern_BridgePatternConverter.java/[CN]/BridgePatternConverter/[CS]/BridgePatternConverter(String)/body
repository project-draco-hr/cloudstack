{
  next=null;
  handlesExceptions=false;
  List converters=new ArrayList();
  List fields=new ArrayList();
  Map converterRegistry=null;
  PatternParser.parse(pattern,converters,fields,converterRegistry,PatternParser.getPatternLayoutRules());
  patternConverters=new LoggingEventPatternConverter[converters.size()];
  patternFields=new FormattingInfo[converters.size()];
  int i=0;
  Iterator converterIter=converters.iterator();
  Iterator fieldIter=fields.iterator();
  while (converterIter.hasNext()) {
    Object converter=converterIter.next();
    if (converter instanceof LoggingEventPatternConverter) {
      patternConverters[i]=(LoggingEventPatternConverter)converter;
      handlesExceptions|=patternConverters[i].handlesThrowable();
    }
 else {
      patternConverters[i]=new org.apache.log4j.pattern.LiteralPatternConverter("");
    }
    if (fieldIter.hasNext()) {
      patternFields[i]=(FormattingInfo)fieldIter.next();
    }
 else {
      patternFields[i]=FormattingInfo.getDefault();
    }
    i++;
  }
}
