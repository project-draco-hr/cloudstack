{
  updateRectX=is.readUnsignedShort();
  updateRectY=is.readUnsignedShort();
  updateRectW=is.readUnsignedShort();
  updateRectH=is.readUnsignedShort();
  updateRectEncoding=is.readInt();
  if (updateRectEncoding == EncodingZlib || updateRectEncoding == EncodingZRLE || updateRectEncoding == EncodingTight)   wereZlibUpdates=true;
  if (rec != null) {
    if (numUpdatesInSession > 1)     rec.flush();
    rec.writeShortBE(updateRectX);
    rec.writeShortBE(updateRectY);
    rec.writeShortBE(updateRectW);
    rec.writeShortBE(updateRectH);
    if (updateRectEncoding == EncodingZlib && !recordFromBeginning) {
      if (!zlibWarningShown) {
        Logger.log(Logger.INFO,"Warning: Raw encoding will be used " + "instead of Zlib in recorded session.");
        zlibWarningShown=true;
      }
      rec.writeIntBE(EncodingRaw);
    }
 else {
      rec.writeIntBE(updateRectEncoding);
      if (updateRectEncoding == EncodingTight && !recordFromBeginning && !tightWarningShown) {
        Logger.log(Logger.INFO,"Warning: Re-compressing Tight-encoded " + "updates for session recording.");
        tightWarningShown=true;
      }
    }
  }
  if (updateRectEncoding < 0 || updateRectEncoding > MaxNormalEncoding)   return;
  if (updateRectX + updateRectW > framebufferWidth || updateRectY + updateRectH > framebufferHeight) {
    throw new Exception("Framebuffer update rectangle too large: " + updateRectW + "x"+ updateRectH+ " at ("+ updateRectX+ ","+ updateRectY+ ")");
  }
}
