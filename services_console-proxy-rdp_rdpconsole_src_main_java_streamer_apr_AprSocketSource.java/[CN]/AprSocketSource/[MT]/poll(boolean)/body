{
  if (socketWrapper.shutdown) {
    socketWrapper.destroyPull();
    return;
  }
  try {
    ByteBuffer buf=new ByteBuffer(incommingBufLength);
    if (verbose)     System.out.println("[" + this + "] INFO: Reading data from stream.");
    long startTime=System.currentTimeMillis();
    int actualLength=(block) ? Socket.recv(socket,buf.data,buf.offset,buf.data.length - buf.offset) : Socket.recvt(socket,buf.data,buf.offset,buf.data.length - buf.offset,5000000);
    if (socketWrapper.shutdown) {
      socketWrapper.destroyPull();
      return;
    }
    long elapsedTime=System.currentTimeMillis() - startTime;
    if (actualLength < 0 || elapsedTime > 5000) {
      if (verbose)       System.out.println("[" + this + "] INFO: End of stream or timeout");
      buf.unref();
      closeStream();
      sendEventToAllPads(Event.STREAM_CLOSE,Direction.OUT);
      return;
    }
    if (actualLength == 0) {
      if (verbose)       System.out.println("[" + this + "] INFO: Empty buffer is read from stream.");
      buf.unref();
      return;
    }
    buf.length=actualLength;
    if (verbose)     System.out.println("[" + this + "] INFO: Data read from stream: "+ buf+ ".");
    pushDataToAllOuts(buf);
  }
 catch (  Exception e) {
    System.err.println("[" + this + "] ERROR: "+ e.getMessage());
    closeStream();
  }
}
