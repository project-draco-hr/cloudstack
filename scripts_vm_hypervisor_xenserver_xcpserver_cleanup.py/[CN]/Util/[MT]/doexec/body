def doexec(args, expectedRC, inputtext=None, ret=None, log=True):
    'Execute a subprocess, then return its return code, stdout, stderr'
    proc = subprocess.Popen(args, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True, close_fds=True)
    (stdout, stderr) = proc.communicate(inputtext)
    stdout = str(stdout)
    stderr = str(stderr)
    rc = proc.returncode
    if log:
        Util.log(('`%s`: %s' % (args, rc)))
    if (type(expectedRC) != type([])):
        expectedRC = [expectedRC]
    if (not (rc in expectedRC)):
        reason = stderr.strip()
        if stdout.strip():
            reason = ('%s (stdout: %s)' % (reason, stdout.strip()))
        Util.log(('Failed: %s' % reason))
        raise util.CommandException(rc, args, reason)
    if (ret == Util.RET_RC):
        return rc
    if (ret == Util.RET_STDERR):
        return stderr
    return stdout
