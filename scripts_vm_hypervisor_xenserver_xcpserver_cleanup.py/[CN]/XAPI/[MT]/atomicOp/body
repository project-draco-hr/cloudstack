def atomicOp(self, vdiList, op, args, mustExist=False):
    vdiRefs = []
    for vdi in vdiList:
        Util.log(('atomicOp: will pause %s' % vdi.toString()))
        try:
            vdiRefs.append(vdi.getRef())
        except XenAPI.Failure:
            Util.log(("atomicOp: can't find %s" % vdi.toString()))
            if mustExist:
                raise
    if (len(vdiRefs) == 0):
        Util.log('atomicOp: no VDIs found in DB, not pausing anything')
        fn = getattr(atomicop, op)
        ret = fn(self.session, args)
    else:
        ret = self.session.xenapi.SR.lvhd_stop_using_these_vdis_and_call_script(vdiRefs, self.PLUGIN_PAUSE_VDIS, op, args)
    Util.log(('Plugin returned: %s' % ret))
    if (ret == atomicop.RET_EXCEPTION):
        raise util.SMException(('Exception in atomic %s' % op))
    if (ret == atomicop.RET_SUCCESS):
        return True
    return False
