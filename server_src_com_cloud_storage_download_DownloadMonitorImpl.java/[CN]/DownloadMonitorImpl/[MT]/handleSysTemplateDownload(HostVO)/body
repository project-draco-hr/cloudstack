{
  List<HypervisorType> hypers=_resourceMgr.listAvailHypervisorInZone(host.getId(),host.getDataCenterId());
  HypervisorType hostHyper=host.getHypervisorType();
  if (hypers.contains(hostHyper)) {
    return;
  }
  Set<VMTemplateVO> toBeDownloaded=new HashSet<VMTemplateVO>();
  List<DataStore> ssHosts=this.storeMgr.getImageStoresByScope(new ZoneScope(host.getDataCenterId()));
  if (ssHosts == null || ssHosts.isEmpty()) {
    return;
  }
  for (  DataStore ssHost : ssHosts) {
    List<VMTemplateVO> rtngTmplts=_templateDao.listAllSystemVMTemplates();
    List<VMTemplateVO> defaultBuiltin=_templateDao.listDefaultBuiltinTemplates();
    for (    VMTemplateVO rtngTmplt : rtngTmplts) {
      if (rtngTmplt.getHypervisorType() == hostHyper) {
        toBeDownloaded.add(rtngTmplt);
      }
    }
    for (    VMTemplateVO builtinTmplt : defaultBuiltin) {
      if (builtinTmplt.getHypervisorType() == hostHyper) {
        toBeDownloaded.add(builtinTmplt);
      }
    }
    for (    VMTemplateVO template : toBeDownloaded) {
      VMTemplateHostVO tmpltHost=_vmTemplateHostDao.findByHostTemplate(ssHost.getId(),template.getId());
      if (tmpltHost == null || tmpltHost.getDownloadState() != Status.DOWNLOADED) {
        initiateTemplateDownload(template,ssHost,null);
      }
    }
  }
}
