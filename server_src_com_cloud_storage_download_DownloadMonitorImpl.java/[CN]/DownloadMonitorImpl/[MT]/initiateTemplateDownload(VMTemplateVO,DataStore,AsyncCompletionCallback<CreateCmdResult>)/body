{
  boolean downloadJobExists=false;
  TemplateDataStoreVO vmTemplateStore=null;
  vmTemplateStore=_vmTemplateStoreDao.findByStoreTemplate(store.getId(),template.getId());
  if ((vmTemplateStore.getJobId() != null) && (vmTemplateStore.getJobId().length() > 2)) {
    downloadJobExists=true;
  }
  Long maxTemplateSizeInBytes=getMaxTemplateSizeInBytes();
  String secUrl=store.getUri();
  if (vmTemplateStore != null) {
    start();
    DownloadCommand dcmd=new DownloadCommand(secUrl,template,maxTemplateSizeInBytes);
    dcmd.setProxy(getHttpProxy());
    if (downloadJobExists) {
      dcmd=new DownloadProgressCommand(dcmd,vmTemplateStore.getJobId(),RequestType.GET_OR_RESTART);
    }
    if (vmTemplateStore.isCopy()) {
      dcmd.setCreds(TemplateConstants.DEFAULT_HTTP_AUTH_USER,_copyAuthPasswd);
    }
    HostVO ssAhost=_ssvmMgr.pickSsvmHost(store);
    if (ssAhost == null) {
      s_logger.warn("There is no secondary storage VM for downloading template to image store " + store.getName());
      return;
    }
    DownloadListener dl=new DownloadListener(ssAhost,store,template,_timer,_vmTemplateStoreDao,vmTemplateStore.getId(),this,dcmd,_templateDao,_resourceLimitMgr,_alertMgr,_accountMgr,callback);
    if (downloadJobExists) {
      dl.setCurrState(vmTemplateStore.getDownloadState());
    }
    DownloadListener old=null;
synchronized (_listenerTemplateMap) {
      old=_listenerTemplateMap.put(vmTemplateStore,dl);
    }
    if (old != null) {
      old.abandon();
    }
    try {
      send(ssAhost.getId(),dcmd,dl);
    }
 catch (    AgentUnavailableException e) {
      s_logger.warn("Unable to start /resume download of template " + template.getUniqueName() + " to "+ store.getName(),e);
      dl.setDisconnected();
      dl.scheduleStatusCheck(RequestType.GET_OR_RESTART);
    }
  }
}
