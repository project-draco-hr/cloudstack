{
  boolean downloadJobExists=false;
  VMTemplateHostVO vmTemplateHost=null;
  vmTemplateHost=_vmTemplateHostDao.findByHostTemplate(sserver.getId(),template.getId());
  if (vmTemplateHost == null) {
    vmTemplateHost=new VMTemplateHostVO(sserver.getId(),template.getId(),new Date(),0,VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED,null,null,"jobid0000",null,template.getUrl());
    _vmTemplateHostDao.persist(vmTemplateHost);
  }
 else   if ((vmTemplateHost.getJobId() != null) && (vmTemplateHost.getJobId().length() > 2)) {
    downloadJobExists=true;
  }
  Long maxTemplateSizeInBytes=getMaxTemplateSizeInBytes();
  if (vmTemplateHost != null) {
    start();
    DownloadCommand dcmd=new DownloadCommand(template,maxTemplateSizeInBytes);
    dcmd.setUrl(vmTemplateHost.getDownloadUrl());
    if (vmTemplateHost.isCopy()) {
      dcmd.setCreds(TemplateConstants.DEFAULT_HTTP_AUTH_USER,_copyAuthPasswd);
    }
    DownloadListener dl=new DownloadListener(sserver,template,_timer,_vmTemplateHostDao,vmTemplateHost.getId(),this,dcmd);
    if (downloadJobExists) {
      dcmd=new DownloadProgressCommand(dcmd,vmTemplateHost.getJobId(),RequestType.GET_OR_RESTART);
      dl.setCurrState(vmTemplateHost.getDownloadState());
    }
    _listenerMap.put(vmTemplateHost,dl);
    long result=send(sserver.getId(),dcmd,dl);
    if (result == -1) {
      s_logger.warn("Unable to start /resume download of template " + template.getUniqueName() + " to "+ sserver.getName());
      dl.setDisconnected();
      dl.scheduleStatusCheck(RequestType.GET_OR_RESTART);
    }
  }
}
