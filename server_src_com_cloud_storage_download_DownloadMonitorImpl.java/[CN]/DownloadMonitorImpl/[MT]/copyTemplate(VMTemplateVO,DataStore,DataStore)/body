{
  boolean downloadJobExists=false;
  TemplateDataStoreVO destTmpltStore=null;
  TemplateDataStoreVO srcTmpltStore=null;
  srcTmpltStore=this._vmTemplateStoreDao.findByStoreTemplate(sourceStore.getId(),template.getId());
  if (srcTmpltStore == null) {
    throw new InvalidParameterValueException("Template " + template.getName() + " not associated with "+ sourceStore.getName());
  }
  String url=generateCopyUrl(sourceStore,srcTmpltStore);
  if (url == null) {
    s_logger.warn("Unable to start/resume copy of template " + template.getUniqueName() + " to "+ destStore.getName()+ ", no secondary storage vm in running state in source zone");
    throw new CloudRuntimeException("No secondary VM in running state in zone " + sourceStore.getScope().getScopeId());
  }
  destTmpltStore=_vmTemplateStoreDao.findByStoreTemplate(destStore.getId(),template.getId());
  if (destTmpltStore == null) {
    destTmpltStore=new TemplateDataStoreVO(destStore.getId(),template.getId(),new Date(),0,VMTemplateStorageResourceAssoc.Status.NOT_DOWNLOADED,null,null,"jobid0000",null,url);
    destTmpltStore.setCopy(true);
    destTmpltStore.setPhysicalSize(srcTmpltStore.getPhysicalSize());
    _vmTemplateStoreDao.persist(destTmpltStore);
  }
 else   if ((destTmpltStore.getJobId() != null) && (destTmpltStore.getJobId().length() > 2)) {
    downloadJobExists=true;
  }
  Long maxTemplateSizeInBytes=getMaxTemplateSizeInBytes();
  if (srcTmpltStore.getSize() > maxTemplateSizeInBytes) {
    throw new CloudRuntimeException("Cant copy the template as the template's size " + srcTmpltStore.getSize() + " is greater than max.template.iso.size "+ maxTemplateSizeInBytes);
  }
  if (destTmpltStore != null) {
    start();
    String sourceChecksum=this.templateMgr.getChecksum(sourceStore,srcTmpltStore.getInstallPath());
    DownloadCommand dcmd=new DownloadCommand(destStore.getTO(),destStore.getUri(),url,template,TemplateConstants.DEFAULT_HTTP_AUTH_USER,_copyAuthPasswd,maxTemplateSizeInBytes);
    dcmd.setProxy(getHttpProxy());
    if (downloadJobExists) {
      dcmd=new DownloadProgressCommand(dcmd,destTmpltStore.getJobId(),RequestType.GET_OR_RESTART);
    }
    dcmd.setChecksum(sourceChecksum);
    HostVO ssAhost=_ssvmMgr.pickSsvmHost(destStore);
    if (ssAhost == null) {
      s_logger.warn("There is no secondary storage VM for secondary storage host " + destStore.getName());
      return false;
    }
    DownloadListener dl=new DownloadListener(ssAhost,destStore,template,_timer,_vmTemplateStoreDao,destTmpltStore.getId(),this,dcmd,_templateDao,_resourceLimitMgr,_alertMgr,_accountMgr,null);
    if (downloadJobExists) {
      dl.setCurrState(destTmpltStore.getDownloadState());
    }
    DownloadListener old=null;
synchronized (_listenerTemplateMap) {
      old=_listenerTemplateMap.put(destTmpltStore,dl);
    }
    if (old != null) {
      old.abandon();
    }
    try {
      send(ssAhost.getId(),dcmd,dl);
      return true;
    }
 catch (    AgentUnavailableException e) {
      s_logger.warn("Unable to start /resume COPY of template " + template.getUniqueName() + " to "+ destStore.getName(),e);
      dl.setDisconnected();
      dl.scheduleStatusCheck(RequestType.GET_OR_RESTART);
      e.printStackTrace();
    }
  }
  return false;
}
