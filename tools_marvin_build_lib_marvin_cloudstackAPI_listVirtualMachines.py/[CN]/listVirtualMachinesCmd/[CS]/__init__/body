def __init__(self):
    self.isAsync = 'false'
    'list resources by account. Must be used with the domainId parameter.'
    self.account = None
    'list vms by affinity group'
    self.affinitygroupid = None
    'comma separated list of host details requested, value can be a list of [all, group, nics, stats, secgrp, tmpl, servoff, iso, volume, min, affgrp]. If no parameter is passed in, the details will be defaulted to all'
    self.details = []
    'list only resources belonging to the domain specified'
    self.domainid = None
    'list by network type; true if need to list vms using Virtual Network, false otherwise'
    self.forvirtualnetwork = None
    'the group ID'
    self.groupid = None
    'the host ID'
    self.hostid = None
    'the target hypervisor for the template'
    self.hypervisor = None
    'the ID of the virtual machine'
    self.id = None
    'list vms by iso'
    self.isoid = None
    'defaults to false, but if true, lists all resources from the parent specified by the domainId till leaves.'
    self.isrecursive = None
    'List by keyword'
    self.keyword = None
    "If set to false, list only resources belonging to the command's caller; if set to true - list resources that the caller is authorized to see. Default value is false"
    self.listall = None
    'name of the virtual machine'
    self.name = None
    'list by network id'
    self.networkid = None
    ''
    self.page = None
    ''
    self.pagesize = None
    'the pod ID'
    self.podid = None
    'list objects by project'
    self.projectid = None
    'state of the virtual machine'
    self.state = None
    "the storage ID where vm's volumes belong to"
    self.storageid = None
    'List resources by tags (key/value pairs)'
    self.tags = []
    'list vms by template'
    self.templateid = None
    'list vms by vpc'
    self.vpcid = None
    'the availability zone ID'
    self.zoneid = None
    self.required = []
