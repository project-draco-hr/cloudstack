{
  if (connectedRouters.isEmpty() || disconnectedRouters.isEmpty()) {
    return;
  }
  for (  final VirtualRouter virtualRouter : connectedRouters) {
    if (!virtualRouter.getIsRedundantRouter()) {
      throw new ResourceUnavailableException("Who is calling this with non-redundant router or non-domain router?",DataCenter.class,virtualRouter.getDataCenterId());
    }
  }
  for (  final VirtualRouter virtualRouter : disconnectedRouters) {
    if (!virtualRouter.getIsRedundantRouter()) {
      throw new ResourceUnavailableException("Who is calling this with non-redundant router or non-domain router?",DataCenter.class,virtualRouter.getDataCenterId());
    }
  }
  final DomainRouterVO connectedRouter=(DomainRouterVO)connectedRouters.get(0);
  DomainRouterVO disconnectedRouter=(DomainRouterVO)disconnectedRouters.get(0);
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("About to stop the router " + disconnectedRouter.getInstanceName() + " due to: "+ reason);
  }
  final String title="Virtual router " + disconnectedRouter.getInstanceName() + " would be stopped after connecting back, due to "+ reason;
  final String context="Virtual router (name: " + disconnectedRouter.getInstanceName() + ", id: "+ disconnectedRouter.getId()+ ") would be stopped after connecting back, due to: "+ reason;
  _alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_DOMAIN_ROUTER,disconnectedRouter.getDataCenterId(),disconnectedRouter.getPodIdToDeployIn(),title,context);
  disconnectedRouter.setStopPending(true);
  disconnectedRouter=_routerDao.persist(disconnectedRouter);
}
