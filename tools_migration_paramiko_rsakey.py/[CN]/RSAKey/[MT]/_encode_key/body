def _encode_key(self):
    if ((self.p is None) or (self.q is None)):
        raise SSHException('Not enough key info to write private key file')
    keylist = [0, self.n, self.e, self.d, self.p, self.q, (self.d % (self.p - 1)), (self.d % (self.q - 1)), util.mod_inverse(self.q, self.p)]
    try:
        b = BER()
        b.encode(keylist)
    except BERException:
        raise SSHException('Unable to create ber encoding of key')
    return str(b)
