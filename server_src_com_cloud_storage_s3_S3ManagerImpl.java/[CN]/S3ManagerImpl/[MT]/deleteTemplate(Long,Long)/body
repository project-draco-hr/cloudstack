{
  final S3TO s3=getS3TO();
  if (s3 == null) {
    final String errorMessage="Delete Template Failed: No S3 configuration defined.";
    LOGGER.error(errorMessage);
    throw new CloudRuntimeException(errorMessage);
  }
  final VMTemplateS3VO vmTemplateS3VO=vmTemplateS3Dao.findOneByS3Template(s3.getId(),templateId);
  if (vmTemplateS3VO == null) {
    final String errorMessage=format("Delete Template Failed: Unable to find Template %1$s in S3.",templateId);
    LOGGER.error(errorMessage);
    throw new CloudRuntimeException(errorMessage);
  }
  try {
    executeWithNoWaitLock(determineLockId(accountId,templateId),new Callable<Void>(){
      @Override public Void call() throws Exception {
        final Answer answer=agentManager.sendToSSVM(null,new DeleteTemplateFromS3Command(s3,accountId,templateId));
        if (answer == null || !answer.getResult()) {
          final String errorMessage=format("Delete Template Failed: Unable to delete template id %1$s from S3 due to following error: %2$s",templateId,((answer == null) ? "answer is null" : answer.getDetails()));
          LOGGER.error(errorMessage);
          throw new CloudRuntimeException(errorMessage);
        }
        vmTemplateS3Dao.remove(vmTemplateS3VO.getId());
        LOGGER.debug(format("Deleted template %1$s from S3.",templateId));
        return null;
      }
    }
);
  }
 catch (  Exception e) {
    final String errorMessage=format("Delete Template Failed: Unable to delete template id %1$s from S3 due to the following error: %2$s.",templateId,e.getMessage());
    LOGGER.error(errorMessage);
    throw new CloudRuntimeException(errorMessage,e);
  }
}
