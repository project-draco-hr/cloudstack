{
  s_logger.debug("Creating missing resource_count records as a part of 2.2.11-2.2.12 upgrade");
  try {
    List<Long> accounts=new ArrayList<Long>();
    PreparedStatement pstmt=conn.prepareStatement("SELECT id FROM account");
    ResultSet rs=pstmt.executeQuery();
    while (rs.next()) {
      accounts.add(rs.getLong(1));
    }
    rs.close();
    List<Long> domains=new ArrayList<Long>();
    pstmt=conn.prepareStatement("SELECT id FROM domain");
    rs=pstmt.executeQuery();
    while (rs.next()) {
      domains.add(rs.getLong(1));
    }
    rs.close();
    String[] resourceTypes={"user_vm","public_ip","volume","snapshot","template"};
    for (    Long accountId : accounts) {
      for (      String resourceType : resourceTypes) {
        pstmt=conn.prepareStatement("SELECT * FROM resource_count WHERE type=? and account_id=?");
        pstmt.setString(1,resourceType);
        pstmt.setLong(2,accountId);
        rs=pstmt.executeQuery();
        if (!rs.next()) {
          s_logger.debug("Inserting resource_count record of type " + resourceType + " for account id="+ accountId);
          pstmt=conn.prepareStatement("INSERT INTO resource_count (account_id, domain_id, type, count) VALUES (?, null, ?, 0)");
          pstmt.setLong(1,accountId);
          pstmt.setString(2,resourceType);
          pstmt.executeUpdate();
        }
        rs.close();
      }
      pstmt.close();
    }
    for (    Long domainId : domains) {
      for (      String resourceType : resourceTypes) {
        pstmt=conn.prepareStatement("SELECT * FROM resource_count WHERE type=? and domain_id=?");
        pstmt.setString(1,resourceType);
        pstmt.setLong(2,domainId);
        rs=pstmt.executeQuery();
        if (!rs.next()) {
          s_logger.debug("Inserting resource_count record of type " + resourceType + " for domain id="+ domainId);
          pstmt=conn.prepareStatement("INSERT INTO resource_count (account_id, domain_id, type, count) VALUES (null, ?, ?, 0)");
          pstmt.setLong(1,domainId);
          pstmt.setString(2,resourceType);
          pstmt.executeUpdate();
        }
        rs.close();
      }
      pstmt.close();
    }
  }
 catch (  SQLException e) {
    throw new CloudRuntimeException("Unable to create default security groups for existing accounts due to",e);
  }
}
