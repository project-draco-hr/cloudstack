{
  Account caller=UserContext.current().getCaller();
  List<Long> permittedAccounts=new ArrayList<Long>();
  Long id=cmd.getId();
  String type=cmd.getType();
  String level=cmd.getLevel();
  Date startDate=cmd.getStartDate();
  Date endDate=cmd.getEndDate();
  String keyword=cmd.getKeyword();
  Integer entryTime=cmd.getEntryTime();
  Integer duration=cmd.getDuration();
  Ternary<Long,Boolean,ListProjectResourcesCriteria> domainIdRecursiveListProject=new Ternary<Long,Boolean,ListProjectResourcesCriteria>(cmd.getDomainId(),cmd.isRecursive(),null);
  _accountMgr.buildACLSearchParameters(caller,id,cmd.getAccountName(),cmd.getProjectId(),permittedAccounts,domainIdRecursiveListProject,cmd.listAll(),false);
  Long domainId=domainIdRecursiveListProject.first();
  Boolean isRecursive=domainIdRecursiveListProject.second();
  ListProjectResourcesCriteria listProjectResourcesCriteria=domainIdRecursiveListProject.third();
  Filter searchFilter=new Filter(EventJoinVO.class,"createDate",false,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchBuilder<EventJoinVO> sb=_eventJoinDao.createSearchBuilder();
  _accountMgr.buildACLViewSearchBuilder(sb,domainId,isRecursive,permittedAccounts,listProjectResourcesCriteria);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("levelL",sb.entity().getLevel(),SearchCriteria.Op.LIKE);
  sb.and("levelEQ",sb.entity().getLevel(),SearchCriteria.Op.EQ);
  sb.and("type",sb.entity().getType(),SearchCriteria.Op.EQ);
  sb.and("createDateB",sb.entity().getCreateDate(),SearchCriteria.Op.BETWEEN);
  sb.and("createDateG",sb.entity().getCreateDate(),SearchCriteria.Op.GTEQ);
  sb.and("createDateL",sb.entity().getCreateDate(),SearchCriteria.Op.LTEQ);
  sb.and("state",sb.entity().getState(),SearchCriteria.Op.NEQ);
  sb.and("startId",sb.entity().getStartId(),SearchCriteria.Op.EQ);
  sb.and("createDate",sb.entity().getCreateDate(),SearchCriteria.Op.BETWEEN);
  sb.and("archived",sb.entity().getArchived(),SearchCriteria.Op.EQ);
  SearchCriteria<EventJoinVO> sc=sb.create();
  _accountMgr.buildACLViewSearchCriteria(sc,domainId,isRecursive,permittedAccounts,listProjectResourcesCriteria);
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (keyword != null) {
    SearchCriteria<EventJoinVO> ssc=_eventJoinDao.createSearchCriteria();
    ssc.addOr("type",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("description",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("level",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("level",SearchCriteria.Op.SC,ssc);
  }
  if (level != null) {
    sc.setParameters("levelEQ",level);
  }
  if (type != null) {
    sc.setParameters("type",type);
  }
  if (startDate != null && endDate != null) {
    sc.setParameters("createDateB",startDate,endDate);
  }
 else   if (startDate != null) {
    sc.setParameters("createDateG",startDate);
  }
 else   if (endDate != null) {
    sc.setParameters("createDateL",endDate);
  }
  sc.setParameters("archived",false);
  Pair<List<EventJoinVO>,Integer> eventPair=null;
  if ((entryTime != null) && (duration != null)) {
  }
 else {
    eventPair=_eventJoinDao.searchAndCount(sc,searchFilter);
  }
  return eventPair;
}
