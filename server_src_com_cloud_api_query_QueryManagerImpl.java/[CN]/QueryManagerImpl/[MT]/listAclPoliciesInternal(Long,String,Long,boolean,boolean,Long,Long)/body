{
  Account caller=CallContext.current().getCallingAccount();
  Boolean listForDomain=false;
  if (aclPolicyId != null) {
    AclPolicy policy=_aclPolicyDao.findById(aclPolicyId);
    if (policy == null) {
      throw new InvalidParameterValueException("Unable to find acl policy by id " + aclPolicyId);
    }
    _accountMgr.checkAccess(caller,null,true,policy);
  }
  if (domainId != null) {
    Domain domain=_domainDao.findById(domainId);
    if (domain == null) {
      throw new InvalidParameterValueException("Domain id=" + domainId + " doesn't exist");
    }
    _accountMgr.checkAccess(caller,domain);
    if (aclPolicyName != null) {
      AclPolicy policy=_aclPolicyDao.findByName(domainId,aclPolicyName);
      if (policy == null) {
        throw new InvalidParameterValueException("Unable to find acl policy by name " + aclPolicyName + " in domain "+ domainId);
      }
      _accountMgr.checkAccess(caller,null,true,policy);
    }
  }
  if (aclPolicyId == null) {
    if (_accountMgr.isAdmin(caller.getType()) && listAll && domainId == null) {
      listForDomain=true;
      isRecursive=true;
      if (domainId == null) {
        domainId=caller.getDomainId();
      }
    }
 else     if (_accountMgr.isAdmin(caller.getType()) && domainId != null) {
      listForDomain=true;
    }
  }
  Filter searchFilter=new Filter(AclRoleJoinVO.class,"id",true,startIndex,pageSize);
  SearchBuilder<AclPolicyJoinVO> sb=_aclPolicyJoinDao.createSearchBuilder();
  sb.select(null,Func.DISTINCT,sb.entity().getId());
  sb.and("name",sb.entity().getName(),SearchCriteria.Op.EQ);
  sb.and("domainId",sb.entity().getDomainId(),SearchCriteria.Op.EQ);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  if (listForDomain && isRecursive) {
    sb.and("path",sb.entity().getDomainPath(),SearchCriteria.Op.LIKE);
  }
  SearchCriteria<AclPolicyJoinVO> sc=sb.create();
  if (aclPolicyName != null) {
    sc.setParameters("name",aclPolicyName);
  }
  if (aclPolicyId != null) {
    sc.setParameters("id",aclPolicyId);
  }
  if (listForDomain) {
    if (isRecursive) {
      Domain domain=_domainDao.findById(domainId);
      sc.setParameters("path",domain.getPath() + "%");
    }
 else {
      sc.setParameters("domainId",domainId);
    }
  }
  Pair<List<AclPolicyJoinVO>,Integer> uniqueRolePair=_aclPolicyJoinDao.searchAndCount(sc,searchFilter);
  Integer count=uniqueRolePair.second();
  if (count.intValue() == 0) {
    return uniqueRolePair;
  }
  List<AclPolicyJoinVO> uniqueRoles=uniqueRolePair.first();
  Long[] vrIds=new Long[uniqueRoles.size()];
  int i=0;
  for (  AclPolicyJoinVO v : uniqueRoles) {
    vrIds[i++]=v.getId();
  }
  List<AclPolicyJoinVO> vrs=_aclPolicyJoinDao.searchByIds(vrIds);
  return new Pair<List<AclPolicyJoinVO>,Integer>(vrs,count);
}
