{
  TemplateFilter isoFilter=TemplateFilter.valueOf(cmd.getIsoFilter());
  Long id=cmd.getId();
  Map<String,String> tags=cmd.getTags();
  boolean showRemovedISO=cmd.getShowRemoved();
  Account caller=CallContext.current().getCallingAccount();
  boolean listAll=false;
  if (isoFilter != null && isoFilter == TemplateFilter.all) {
    if (_accountMgr.isNormalUser(caller.getId())) {
      throw new InvalidParameterValueException("Filter " + TemplateFilter.all + " can be specified by admin only");
    }
    listAll=true;
  }
  List<Long> permittedDomains=new ArrayList<Long>();
  List<Long> permittedAccounts=new ArrayList<Long>();
  List<Long> permittedResources=new ArrayList<Long>();
  Ternary<Long,Boolean,ListProjectResourcesCriteria> domainIdRecursiveListProject=new Ternary<Long,Boolean,ListProjectResourcesCriteria>(cmd.getDomainId(),cmd.isRecursive(),null);
  _accountMgr.buildACLSearchParameters(caller,id,cmd.getAccountName(),cmd.getProjectId(),permittedDomains,permittedAccounts,permittedResources,domainIdRecursiveListProject,cmd.listAll(),false,"listIsos");
  Boolean isRecursive=domainIdRecursiveListProject.second();
  ListProjectResourcesCriteria listProjectResourcesCriteria=domainIdRecursiveListProject.third();
  HypervisorType hypervisorType=HypervisorType.getType(cmd.getHypervisor());
  return searchForTemplatesInternal(cmd.getId(),cmd.getIsoName(),cmd.getKeyword(),isoFilter,true,cmd.isBootable(),cmd.getPageSizeVal(),cmd.getStartIndex(),cmd.getZoneId(),hypervisorType,true,cmd.listInReadyState(),permittedDomains,permittedAccounts,permittedResources,isRecursive,caller,listProjectResourcesCriteria,tags,showRemovedISO);
}
