{
  Account caller=CallContext.current().getCallingAccount();
  Boolean listForDomain=false;
  if (aclRoleId != null) {
    AclRole role=_aclRoleDao.findById(aclRoleId);
    if (role == null) {
      throw new InvalidParameterValueException("Unable to find acl role by id " + aclRoleId);
    }
    _accountMgr.checkAccess(caller,null,true,role);
  }
  if (domainId != null) {
    Domain domain=_domainDao.findById(domainId);
    if (domain == null) {
      throw new InvalidParameterValueException("Domain id=" + domainId + " doesn't exist");
    }
    _accountMgr.checkAccess(caller,domain);
    if (aclRoleName != null) {
      AclRole role=_aclRoleDao.findByName(domainId,aclRoleName);
      if (role == null) {
        throw new InvalidParameterValueException("Unable to find acl role by name " + aclRoleName + " in domain "+ domainId);
      }
      _accountMgr.checkAccess(caller,null,true,role);
    }
  }
  if (aclRoleId == null) {
    if (_accountMgr.isAdmin(caller.getType()) && listAll && domainId == null) {
      listForDomain=true;
      isRecursive=true;
      if (domainId == null) {
        domainId=caller.getDomainId();
      }
    }
 else     if (_accountMgr.isAdmin(caller.getType()) && domainId != null) {
      listForDomain=true;
    }
  }
  Filter searchFilter=new Filter(AclRoleJoinVO.class,"id",true,startIndex,pageSize);
  SearchBuilder<AclRoleJoinVO> sb=_aclRoleJoinDao.createSearchBuilder();
  sb.select(null,Func.DISTINCT,sb.entity().getId());
  sb.and("name",sb.entity().getName(),SearchCriteria.Op.EQ);
  sb.and("domainId",sb.entity().getDomainId(),SearchCriteria.Op.EQ);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  if (listForDomain && isRecursive) {
    sb.and("path",sb.entity().getDomainPath(),SearchCriteria.Op.LIKE);
  }
  SearchCriteria<AclRoleJoinVO> sc=sb.create();
  if (aclRoleName != null) {
    sc.setParameters("name",aclRoleName);
  }
  if (aclRoleId != null) {
    sc.setParameters("id",aclRoleId);
  }
  if (listForDomain) {
    if (isRecursive) {
      Domain domain=_domainDao.findById(domainId);
      sc.setParameters("path",domain.getPath() + "%");
    }
 else {
      sc.setParameters("domainId",domainId);
    }
  }
  Pair<List<AclRoleJoinVO>,Integer> uniqueRolePair=_aclRoleJoinDao.searchAndCount(sc,searchFilter);
  Integer count=uniqueRolePair.second();
  if (count.intValue() == 0) {
    return uniqueRolePair;
  }
  List<AclRoleJoinVO> uniqueRoles=uniqueRolePair.first();
  Long[] vrIds=new Long[uniqueRoles.size()];
  int i=0;
  for (  AclRoleJoinVO v : uniqueRoles) {
    vrIds[i++]=v.getId();
  }
  List<AclRoleJoinVO> vrs=_aclRoleJoinDao.searchByIds(vrIds);
  return new Pair<List<AclRoleJoinVO>,Integer>(vrs,count);
}
