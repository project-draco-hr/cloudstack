{
  Account caller=CallContext.current().getCallingAccount();
  List<Long> permittedAccounts=new ArrayList<Long>();
  Ternary<Long,Boolean,ListProjectResourcesCriteria> domainIdRecursiveListProject=new Ternary<Long,Boolean,ListProjectResourcesCriteria>(cmd.getDomainId(),cmd.isRecursive(),null);
  _accountMgr.buildACLSearchParameters(caller,null,cmd.getAccountName(),null,permittedAccounts,domainIdRecursiveListProject,cmd.listAll(),false);
  Long domainId=domainIdRecursiveListProject.first();
  Boolean isRecursive=domainIdRecursiveListProject.second();
  ListProjectResourcesCriteria listProjectResourcesCriteria=domainIdRecursiveListProject.third();
  Filter searchFilter=new Filter(AsyncJobJoinVO.class,"id",true,cmd.getStartIndex(),cmd.getPageSizeVal());
  SearchBuilder<AsyncJobJoinVO> sb=_jobJoinDao.createSearchBuilder();
  sb.and("accountIdIN",sb.entity().getAccountId(),SearchCriteria.Op.IN);
  boolean accountJoinIsDone=false;
  if (permittedAccounts.isEmpty() && domainId != null) {
    sb.and("domainId",sb.entity().getDomainId(),SearchCriteria.Op.EQ);
    sb.and("path",sb.entity().getDomainPath(),SearchCriteria.Op.LIKE);
    accountJoinIsDone=true;
  }
  if (listProjectResourcesCriteria != null) {
    if (listProjectResourcesCriteria == Project.ListProjectResourcesCriteria.ListProjectResourcesOnly) {
      sb.and("type",sb.entity().getAccountType(),SearchCriteria.Op.EQ);
    }
 else     if (listProjectResourcesCriteria == Project.ListProjectResourcesCriteria.SkipProjectResources) {
      sb.and("type",sb.entity().getAccountType(),SearchCriteria.Op.NEQ);
    }
    if (!accountJoinIsDone) {
      sb.and("domainId",sb.entity().getDomainId(),SearchCriteria.Op.EQ);
      sb.and("path",sb.entity().getDomainPath(),SearchCriteria.Op.LIKE);
    }
  }
  Object keyword=cmd.getKeyword();
  Object startDate=cmd.getStartDate();
  SearchCriteria<AsyncJobJoinVO> sc=sb.create();
  if (listProjectResourcesCriteria != null) {
    sc.setParameters("type",Account.ACCOUNT_TYPE_PROJECT);
  }
  if (!permittedAccounts.isEmpty()) {
    sc.setParameters("accountIdIN",permittedAccounts.toArray());
  }
 else   if (domainId != null) {
    DomainVO domain=_domainDao.findById(domainId);
    if (isRecursive) {
      sc.setParameters("path",domain.getPath() + "%");
    }
 else {
      sc.setParameters("domainId",domainId);
    }
  }
  if (keyword != null) {
    sc.addAnd("cmd",SearchCriteria.Op.LIKE,"%" + keyword + "%");
  }
  if (startDate != null) {
    sc.addAnd("created",SearchCriteria.Op.GTEQ,startDate);
  }
  return _jobJoinDao.searchAndCount(sc,searchFilter);
}
