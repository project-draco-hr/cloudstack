{
  Account caller=CallContext.current().getCallingAccount();
  caller.getAccountId();
  if (vmId != null) {
    UserVmVO userVM=_userVmDao.findById(vmId);
    if (userVM == null) {
      throw new InvalidParameterValueException("Unable to list affinity groups for virtual machine instance " + vmId + "; instance not found.");
    }
    _accountMgr.checkAccess(caller,null,userVM);
    return listAffinityGroupsByVM(vmId.longValue(),startIndex,pageSize);
  }
  List<Long> permittedDomains=new ArrayList<Long>();
  List<Long> permittedAccounts=new ArrayList<Long>();
  List<Long> permittedResources=new ArrayList<Long>();
  Ternary<Long,Boolean,ListProjectResourcesCriteria> domainIdRecursiveListProject=new Ternary<Long,Boolean,ListProjectResourcesCriteria>(domainId,isRecursive,null);
  _accountMgr.buildACLSearchParameters(caller,affinityGroupId,accountName,null,permittedDomains,permittedAccounts,permittedResources,domainIdRecursiveListProject,listAll,true,"listAffinityGroups");
  isRecursive=domainIdRecursiveListProject.second();
  ListProjectResourcesCriteria listProjectResourcesCriteria=domainIdRecursiveListProject.third();
  Filter searchFilter=new Filter(AffinityGroupJoinVO.class,"id",true,startIndex,pageSize);
  SearchCriteria<AffinityGroupJoinVO> sc=buildAffinityGroupSearchCriteria(isRecursive,permittedDomains,permittedAccounts,permittedResources,listProjectResourcesCriteria,affinityGroupId,affinityGroupName,affinityGroupType,keyword);
  Pair<List<AffinityGroupJoinVO>,Integer> uniqueGroupsPair=_affinityGroupJoinDao.searchAndCount(sc,searchFilter);
  List<AffinityGroupJoinVO> vrs=new ArrayList<AffinityGroupJoinVO>();
  Integer count=uniqueGroupsPair.second();
  if (count.intValue() != 0) {
    List<AffinityGroupJoinVO> uniqueGroups=uniqueGroupsPair.first();
    Long[] vrIds=new Long[uniqueGroups.size()];
    int i=0;
    for (    AffinityGroupJoinVO v : uniqueGroups) {
      vrIds[i++]=v.getId();
    }
    vrs=_affinityGroupJoinDao.searchByIds(vrIds);
  }
  return new Pair<List<AffinityGroupJoinVO>,Integer>(vrs,vrs.size());
}
