{
  Long zoneId=_accountMgr.checkAccessAndSpecifyAuthority(UserContext.current().getCaller(),cmd.getZoneId());
  Object id=cmd.getId();
  Object name=cmd.getStoreName();
  String provider=cmd.getProvider();
  String protocol=cmd.getProtocol();
  ImageStore.State state=null;
  String stateStr=cmd.getState();
  if (stateStr != null) {
    try {
      state=Enum.valueOf(ImageStore.State.class,stateStr.toUpperCase());
    }
 catch (    Exception e) {
      throw new InvalidParameterValueException("invalid state" + stateStr);
    }
  }
  Object keyword=cmd.getKeyword();
  Long startIndex=cmd.getStartIndex();
  Long pageSize=cmd.getPageSizeVal();
  Filter searchFilter=new Filter(ImageStoreJoinVO.class,"id",Boolean.TRUE,startIndex,pageSize);
  SearchBuilder<ImageStoreJoinVO> sb=_imageStoreJoinDao.createSearchBuilder();
  sb.select(null,Func.DISTINCT,sb.entity().getId());
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  sb.and("name",sb.entity().getName(),SearchCriteria.Op.EQ);
  sb.and("dataCenterId",sb.entity().getZoneId(),SearchCriteria.Op.EQ);
  sb.and("protocol",sb.entity().getProtocol(),SearchCriteria.Op.EQ);
  sb.and("state",sb.entity().getState(),SearchCriteria.Op.EQ);
  sb.and("provider",sb.entity().getProviderName(),SearchCriteria.Op.EQ);
  SearchCriteria<ImageStoreJoinVO> sc=sb.create();
  if (keyword != null) {
    SearchCriteria<ImageStoreJoinVO> ssc=_imageStoreJoinDao.createSearchCriteria();
    ssc.addOr("name",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    ssc.addOr("provider",SearchCriteria.Op.LIKE,"%" + keyword + "%");
    sc.addAnd("name",SearchCriteria.Op.SC,ssc);
  }
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (name != null) {
    sc.setParameters("name",name);
  }
  if (zoneId != null) {
    sc.setParameters("dataCenterId",zoneId);
  }
  if (provider != null) {
    sc.setParameters("provider",provider);
  }
  if (state != null) {
    sc.setParameters("state",state);
  }
  if (protocol != null) {
    sc.setParameters("protocol",protocol);
  }
  Pair<List<ImageStoreJoinVO>,Integer> uniqueStorePair=_imageStoreJoinDao.searchAndCount(sc,searchFilter);
  Integer count=uniqueStorePair.second();
  if (count.intValue() == 0) {
    return uniqueStorePair;
  }
  List<ImageStoreJoinVO> uniqueStores=uniqueStorePair.first();
  Long[] vrIds=new Long[uniqueStores.size()];
  int i=0;
  for (  ImageStoreJoinVO v : uniqueStores) {
    vrIds[i++]=v.getId();
  }
  List<ImageStoreJoinVO> vrs=_imageStoreJoinDao.searchByIds(vrIds);
  return new Pair<List<ImageStoreJoinVO>,Integer>(vrs,count);
}
