{
  long projectId=cmd.getProjectId();
  String accountName=cmd.getAccountName();
  String role=cmd.getRole();
  Long startIndex=cmd.getStartIndex();
  Long pageSizeVal=cmd.getPageSizeVal();
  Account caller=CallContext.current().getCallingAccount();
  Project project=_projectDao.findById(projectId);
  if (project == null) {
    throw new InvalidParameterValueException("Unable to find the project id=" + projectId);
  }
  if (!_accountMgr.isAdmin(caller.getId()) && _projectAccountDao.findByProjectIdAccountId(projectId,caller.getAccountId()) == null) {
    throw new PermissionDeniedException("Account " + caller + " is not authorized to list users of the project id="+ projectId);
  }
  Filter searchFilter=new Filter(ProjectAccountJoinVO.class,"id",false,startIndex,pageSizeVal);
  SearchBuilder<ProjectAccountJoinVO> sb=_projectAccountJoinDao.createSearchBuilder();
  sb.and("accountRole",sb.entity().getAccountRole(),Op.EQ);
  sb.and("projectId",sb.entity().getProjectId(),Op.EQ);
  if (accountName != null) {
    sb.and("accountName",sb.entity().getAccountName(),Op.EQ);
  }
  SearchCriteria<ProjectAccountJoinVO> sc=sb.create();
  sc.setParameters("projectId",projectId);
  if (role != null) {
    sc.setParameters("accountRole",role);
  }
  if (accountName != null) {
    sc.setParameters("accountName",accountName);
  }
  return _projectAccountJoinDao.searchAndCount(sc,searchFilter);
}
