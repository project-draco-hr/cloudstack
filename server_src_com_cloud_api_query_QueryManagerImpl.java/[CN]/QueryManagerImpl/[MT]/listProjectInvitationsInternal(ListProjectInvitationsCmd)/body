{
  Long id=cmd.getId();
  Long projectId=cmd.getProjectId();
  String accountName=cmd.getAccountName();
  Long domainId=cmd.getDomainId();
  String state=cmd.getState();
  boolean activeOnly=cmd.isActiveOnly();
  Long startIndex=cmd.getStartIndex();
  Long pageSizeVal=cmd.getPageSizeVal();
  boolean isRecursive=cmd.isRecursive();
  boolean listAll=cmd.listAll();
  Account caller=CallContext.current().getCallingAccount();
  List<Long> permittedDomains=new ArrayList<Long>();
  List<Long> permittedAccounts=new ArrayList<Long>();
  List<Long> permittedResources=new ArrayList<Long>();
  Ternary<Long,Boolean,ListProjectResourcesCriteria> domainIdRecursiveListProject=new Ternary<Long,Boolean,ListProjectResourcesCriteria>(domainId,isRecursive,null);
  _accountMgr.buildACLSearchParameters(caller,id,accountName,projectId,permittedDomains,permittedAccounts,permittedResources,domainIdRecursiveListProject,listAll,true,"listProjectInvitations");
  isRecursive=domainIdRecursiveListProject.second();
  ListProjectResourcesCriteria listProjectResourcesCriteria=domainIdRecursiveListProject.third();
  Filter searchFilter=new Filter(ProjectInvitationJoinVO.class,"id",true,startIndex,pageSizeVal);
  SearchBuilder<ProjectInvitationJoinVO> sb=_projectInvitationJoinDao.createSearchBuilder();
  sb.and("projectId",sb.entity().getProjectId(),SearchCriteria.Op.EQ);
  sb.and("state",sb.entity().getState(),SearchCriteria.Op.EQ);
  sb.and("created",sb.entity().getCreated(),SearchCriteria.Op.GT);
  sb.and("id",sb.entity().getId(),SearchCriteria.Op.EQ);
  SearchCriteria<ProjectInvitationJoinVO> sc=sb.create();
  SearchCriteria<ProjectInvitationJoinVO> aclSc=_projectInvitationJoinDao.createSearchCriteria();
  _accountMgr.buildACLViewSearchCriteria(sc,aclSc,isRecursive,permittedDomains,permittedAccounts,permittedResources,listProjectResourcesCriteria);
  if (projectId != null) {
    sc.setParameters("projectId",projectId);
  }
  if (state != null) {
    sc.setParameters("state",state);
  }
  if (id != null) {
    sc.setParameters("id",id);
  }
  if (activeOnly) {
    sc.setParameters("state",ProjectInvitation.State.Pending);
    sc.setParameters("created",new Date((DateUtil.currentGMTTime().getTime()) - _projectMgr.getInvitationTimeout()));
  }
  return _projectInvitationJoinDao.searchAndCount(sc,searchFilter);
}
