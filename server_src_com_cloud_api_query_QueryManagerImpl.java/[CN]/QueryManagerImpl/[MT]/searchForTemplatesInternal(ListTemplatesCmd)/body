{
  TemplateFilter templateFilter=TemplateFilter.valueOf(cmd.getTemplateFilter());
  Long id=cmd.getId();
  Map<String,String> tags=cmd.getTags();
  boolean showRemovedTmpl=cmd.getShowRemoved();
  Account caller=CallContext.current().getCallingAccount();
  boolean listAll=false;
  if (templateFilter != null && templateFilter == TemplateFilter.all) {
    if (caller.getType() != Account.ACCOUNT_TYPE_ADMIN) {
      throw new InvalidParameterValueException("Filter " + TemplateFilter.all + " can be specified by root admin only");
    }
    listAll=true;
  }
  List<Long> permittedAccountIds=new ArrayList<Long>();
  Ternary<Long,Boolean,ListProjectResourcesCriteria> domainIdRecursiveListProject=new Ternary<Long,Boolean,ListProjectResourcesCriteria>(cmd.getDomainId(),cmd.isRecursive(),null);
  _accountMgr.buildACLSearchParameters(caller,id,cmd.getAccountName(),cmd.getProjectId(),permittedAccountIds,domainIdRecursiveListProject,listAll,false);
  ListProjectResourcesCriteria listProjectResourcesCriteria=domainIdRecursiveListProject.third();
  List<Account> permittedAccounts=new ArrayList<Account>();
  for (  Long accountId : permittedAccountIds) {
    permittedAccounts.add(_accountMgr.getAccount(accountId));
  }
  boolean showDomr=((templateFilter != TemplateFilter.selfexecutable) && (templateFilter != TemplateFilter.featured));
  HypervisorType hypervisorType=HypervisorType.getType(cmd.getHypervisor());
  return searchForTemplatesInternal(id,cmd.getTemplateName(),cmd.getKeyword(),templateFilter,false,null,cmd.getPageSizeVal(),cmd.getStartIndex(),cmd.getZoneId(),hypervisorType,showDomr,cmd.listInReadyState(),permittedAccounts,caller,listProjectResourcesCriteria,tags,showRemovedTmpl);
}
