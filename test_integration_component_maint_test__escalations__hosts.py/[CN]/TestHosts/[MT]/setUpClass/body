@classmethod
def setUpClass(cls):
    cls.testClient = super(TestHosts, cls).getClsTestClient()
    cls.testdata = cls.testClient.getParsedTestDataConfig()
    cls.apiclient = cls.testClient.getApiClient()
    cls.dbclient = cls.testClient.getDbConnection()
    cls._cleanup = []
    cls.zone = get_zone(cls.apiclient, cls.testClient.getZoneForTests())
    cls.domain = get_domain(cls.apiclient)
    cls.pod = get_pod(cls.apiclient, cls.zone.id)
    hosts = list_hosts(cls.apiclient)
    if (len(hosts) > 0):
        cls.my_host_id = hosts[0].id
        cls.host_db_id = cls.dbclient.execute(("select id from host where uuid='%s';" % cls.my_host_id))
        cls.my_cluster_id = hosts[0].clusterid
    else:
        raise unittest.SkipTest('There is no host available in the setup')
