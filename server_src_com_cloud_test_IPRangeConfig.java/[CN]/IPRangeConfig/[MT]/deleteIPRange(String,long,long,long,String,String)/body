{
  long startIPLong=NetUtils.ip2Long(startIP);
  long endIPLong=startIPLong;
  if (endIP != null) {
    endIPLong=NetUtils.ip2Long(endIP);
  }
  Transaction txn=Transaction.currentTxn();
  Vector<String> problemIPs=null;
  if (type.equals("public")) {
    problemIPs=deletePublicIPRange(txn,startIPLong,endIPLong,vlanDbId);
  }
 else   if (type.equals("private")) {
    problemIPs=deletePrivateIPRange(txn,startIPLong,endIPLong,podId,zoneId);
  }
  return problemIPs;
}
