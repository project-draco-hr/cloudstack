{
  String name=(String)params.get(BaseCmd.Properties.NAME.getName());
  String category=(String)params.get(BaseCmd.Properties.CATEGORY.getName());
  String keyword=(String)params.get(BaseCmd.Properties.KEYWORD.getName());
  Integer page=(Integer)params.get(BaseCmd.Properties.PAGE.getName());
  Integer pageSize=(Integer)params.get(BaseCmd.Properties.PAGESIZE.getName());
  Long startIndex=Long.valueOf(0);
  int pageSizeNum=100;
  if (pageSize != null) {
    pageSizeNum=pageSize.intValue();
  }
  if (page != null) {
    int pageNum=page.intValue();
    if (pageNum > 0) {
      startIndex=Long.valueOf(pageSizeNum * (pageNum - 1));
    }
  }
  Criteria c=new Criteria("name",Boolean.TRUE,startIndex,Long.valueOf(pageSizeNum));
  if (keyword != null) {
    c.addCriteria(Criteria.KEYWORD,keyword);
  }
 else {
    c.addCriteria(Criteria.NAME,name);
    c.addCriteria(Criteria.CATEGORY,category);
  }
  List<ConfigurationVO> configs=getManagementServer().searchForConfigurations(c,false);
  if (configs == null) {
    throw new ServerApiException(BaseCmd.INTERNAL_ERROR,"Unable to find configuration values for specified search criteria.");
  }
  List<Pair<String,Object>> cfgTags=new ArrayList<Pair<String,Object>>();
  Object[] cfgDataTags=new Object[configs.size()];
  int i=0;
  for (  ConfigurationVO config : configs) {
    List<Pair<String,Object>> cfgData=new ArrayList<Pair<String,Object>>();
    cfgData.add(new Pair<String,Object>(BaseCmd.Properties.CATEGORY.getName(),config.getCategory()));
    cfgData.add(new Pair<String,Object>(BaseCmd.Properties.NAME.getName(),config.getName()));
    cfgData.add(new Pair<String,Object>(BaseCmd.Properties.VALUE.getName(),config.getValue()));
    cfgData.add(new Pair<String,Object>(BaseCmd.Properties.DESCRIPTION.getName(),config.getDescription()));
    cfgDataTags[i++]=cfgData;
  }
  Pair<String,Object> cfgTag=new Pair<String,Object>("configuration",cfgDataTags);
  cfgTags.add(cfgTag);
  return cfgTags;
}
