{
  List<FirewallRuleVO> firewallRules=(List<FirewallRuleVO>)getResponseObject();
  Map<String,UserVmVO> userVmCache=new HashMap<String,UserVmVO>();
  IPAddressVO ipAddr=ApiDBUtils.findIpAddressById(ipAddress);
  ListResponse response=new ListResponse();
  List<FirewallRuleResponse> fwResponses=new ArrayList<FirewallRuleResponse>();
  for (  FirewallRuleVO fwRule : firewallRules) {
    FirewallRuleResponse ruleData=new FirewallRuleResponse();
    ruleData.setId(fwRule.getId());
    ruleData.setPublicPort(fwRule.getPublicPort());
    ruleData.setPrivatePort(fwRule.getPrivatePort());
    ruleData.setProtocol(fwRule.getProtocol());
    UserVmVO userVM=userVmCache.get(fwRule.getPrivateIpAddress());
    if (userVM == null) {
      Criteria c=new Criteria();
      c.addCriteria(Criteria.ACCOUNTID,new Object[]{ipAddr.getAccountId()});
      c.addCriteria(Criteria.DATACENTERID,ipAddr.getDataCenterId());
      c.addCriteria(Criteria.IPADDRESS,fwRule.getPrivateIpAddress());
      List<UserVmVO> userVMs=ApiDBUtils.searchForUserVMs(c);
      if ((userVMs != null) && (userVMs.size() > 0)) {
        userVM=userVMs.get(0);
        userVmCache.put(fwRule.getPrivateIpAddress(),userVM);
      }
    }
    if (userVM != null) {
      ruleData.setVirtualMachineId(userVM.getId());
      ruleData.setVirtualMachineName(userVM.getName());
    }
    ruleData.setResponseName("portforwardingrule");
    fwResponses.add(ruleData);
  }
  response.setResponses(fwResponses);
  response.setResponseName(getName());
  return ApiResponseSerializer.toSerializedString(response);
}
