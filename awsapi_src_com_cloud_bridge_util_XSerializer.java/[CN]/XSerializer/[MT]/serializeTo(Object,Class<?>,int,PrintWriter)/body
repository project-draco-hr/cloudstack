{
  if (clz.getSuperclass() != null)   serializeTo(obj,clz.getSuperclass(),indentLevel,writer);
  Field[] fields=clz.getDeclaredFields();
  for (int i=0; i < fields.length; i++) {
    Field f=fields[i];
    if ((f.getModifiers() & Modifier.STATIC) == 0) {
      f.setAccessible(true);
      Class<?> fieldType=f.getType();
      XElement elem=f.getAnnotation(XElement.class);
      if (elem == null)       continue;
      Object fieldValue=null;
      try {
        fieldValue=f.get(obj);
      }
 catch (      IllegalArgumentException e) {
        logger.error("Unexpected exception " + e.getMessage(),e);
      }
catch (      IllegalAccessException e) {
        logger.error("Unexpected exception " + e.getMessage(),e);
      }
      adapter.writeElement(elem.name(),elem.item(),fieldValue,f,indentLevel,writer);
      if (i < fields.length - 1) {
        Field next=fields[i + 1];
        if ((next.getModifiers() & Modifier.STATIC) == 0 && next.getAnnotation(XElement.class) != null) {
          adapter.writeSeparator(indentLevel,writer);
        }
      }
    }
  }
}
