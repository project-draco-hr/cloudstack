{
  Object fieldObject=f.get(object);
  if (fieldObject == null) {
    logger.error("Please initialize collection field " + f.getName() + " in class "+ object.getClass().getName()+ "'s constructor");
    return;
  }
  Class<?> itemClz=null;
  try {
    itemClz=this.getClass().forName(itemClass);
  }
 catch (  ClassNotFoundException e) {
    logger.error("Unable to find class " + itemClass);
    return;
  }
  NodeList l=node.getChildNodes();
  if (l != null && l.getLength() > 0) {
    for (int i=0; i < l.getLength(); i++) {
      try {
        Node itemNode=l.item(i);
        if (itemNode.getNodeName().equals(itemElementName)) {
          Object item=itemClz.newInstance();
          serializeFrom(item,itemClz,l.item(i));
          ((Collection)fieldObject).add(item);
        }
      }
 catch (      InstantiationException e) {
        logger.error("Unable to initiate object instance for class " + itemClass + ", make sure it has public constructor");
        break;
      }
    }
  }
}
