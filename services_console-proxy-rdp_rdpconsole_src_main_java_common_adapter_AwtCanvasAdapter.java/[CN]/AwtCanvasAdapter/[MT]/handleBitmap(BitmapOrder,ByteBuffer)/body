{
  BufferedImage image=canvas.getOfflineImage();
  Graphics2D g=(Graphics2D)image.getGraphics();
  for (  BitmapRectangle rectangle : order.rectangles) {
    int x=rectangle.x;
    int y=rectangle.y;
    int width=rectangle.width;
    int height=rectangle.height;
    int bufferWidth=rectangle.bufferWidth;
    int bufferHeight=rectangle.bufferHeight;
    BufferedImage rectImage;
switch (rectangle.colorDepth) {
case 8:
{
        rectImage=new BufferedImage(bufferWidth,height,BufferedImage.TYPE_BYTE_INDEXED,screen.colorMap);
        WritableRaster raster=rectImage.getRaster();
        raster.setDataElements(0,0,bufferWidth,bufferHeight,rectangle.bitmapDataStream.toByteArray());
        break;
      }
case 15:
{
      rectImage=new BufferedImage(bufferWidth,height,BufferedImage.TYPE_USHORT_555_RGB);
      WritableRaster raster=rectImage.getRaster();
      raster.setDataElements(0,0,bufferWidth,bufferHeight,rectangle.bitmapDataStream.toShortArray());
      break;
    }
case 16:
{
    rectImage=new BufferedImage(bufferWidth,height,BufferedImage.TYPE_USHORT_565_RGB);
    WritableRaster raster=rectImage.getRaster();
    raster.setDataElements(0,0,bufferWidth,bufferHeight,rectangle.bitmapDataStream.toShortArray());
    break;
  }
case 24:
case 32:
{
  rectImage=new BufferedImage(bufferWidth,height,BufferedImage.TYPE_INT_RGB);
  WritableRaster raster=rectImage.getRaster();
  raster.setDataElements(0,0,bufferWidth,bufferHeight,rectangle.bitmapDataStream.toIntLEArray());
  break;
}
default :
throw new RuntimeException("Unsupported color depth: " + rectangle.colorDepth + ".");
}
g.setClip(x,y,width,height);
g.drawImage(rectImage,x,y,null);
canvas.repaint(x,y,width,height);
}
}
