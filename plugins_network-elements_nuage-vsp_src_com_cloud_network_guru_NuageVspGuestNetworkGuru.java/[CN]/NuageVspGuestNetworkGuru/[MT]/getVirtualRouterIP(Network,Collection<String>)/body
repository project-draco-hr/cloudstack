{
  String virtualRouterIp;
  String subnet=NetUtils.getCidrSubNet(network.getCidr());
  String netmask=NetUtils.getCidrNetmask(network.getCidr());
  long cidrSize=NetUtils.getCidrSize(netmask);
  Set<Long> allIPsInCidr=NetUtils.getAllIpsFromCidr(subnet,cidrSize,new HashSet<Long>());
  if (allIPsInCidr.size() > 3) {
    Iterator<Long> ipIterator=allIPsInCidr.iterator();
    long vip=ipIterator.next();
    if (NetUtils.ip2Long(network.getGateway()) == vip) {
      logger.debug("Gateway of the Network(" + network.getUuid() + ") has the first IP "+ NetUtils.long2Ip(vip));
      vip=ipIterator.next();
      virtualRouterIp=NetUtils.long2Ip(vip);
      logger.debug("So, reserving the 2nd IP " + virtualRouterIp + " for the Virtual Router IP in Network("+ network.getUuid()+ ")");
    }
 else {
      virtualRouterIp=NetUtils.long2Ip(vip);
      logger.debug("1nd IP is not used as the gateway IP. So, reserving" + virtualRouterIp + " for the Virtual Router IP for "+ "Network("+ network.getUuid()+ ")");
    }
    addressRange.add(NetUtils.long2Ip(ipIterator.next()));
    addressRange.add(NetUtils.long2Ip((Long)allIPsInCidr.toArray()[allIPsInCidr.size() - 1]));
    return virtualRouterIp;
  }
  throw new InsufficientVirtualNetworkCapacityException("VSP allocates an IP for VirtualRouter." + " So, subnet should have atleast minimum 4 hosts ",Network.class,network.getId());
}
