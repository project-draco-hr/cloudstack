{
  long networkId=network.getId();
  network=_networkDao.acquireInLockTable(networkId,1200);
  if (network == null) {
    throw new ConcurrentOperationException("Unable to acquire lock on network " + networkId);
  }
  try {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Handling trash() call back to delete the network " + network.getName() + " with uuid "+ network.getUuid()+ " from VSP");
    }
    long domainId=network.getDomainId();
    Domain domain=_domainDao.findById(domainId);
    boolean isL3Network=isL3Network(network);
    boolean isSharedNetwork=offering.getGuestType() == GuestType.Shared;
    Long vpcId=network.getVpcId();
    String vpcUuid=null;
    if (vpcId != null) {
      Vpc vpcObj=_vpcDao.findById(vpcId);
      vpcUuid=vpcObj.getUuid();
    }
    String preConfiguredDomainTemplateName=NuageVspUtil.getPreConfiguredDomainTemplateName(_configDao,network,offering);
    HostVO nuageVspHost=getNuageVspHost(network.getPhysicalNetworkId());
    TrashNetworkVspCommand.Builder cmdBuilder=new TrashNetworkVspCommand.Builder().domainUuid(domain.getUuid()).networkUuid(network.getUuid()).isL3Network(isL3Network).isSharedNetwork(isSharedNetwork).vpcUuid(vpcUuid).domainTemplateName(preConfiguredDomainTemplateName);
    Answer answer=_agentMgr.easySend(nuageVspHost.getId(),cmdBuilder.build());
    if (answer == null || !answer.getResult()) {
      s_logger.error("TrashNetworkNuageVspCommand for network " + network.getUuid() + " failed");
      if ((null != answer) && (null != answer.getDetails())) {
        s_logger.error(answer.getDetails());
      }
      return false;
    }
  }
  finally {
    _networkDao.releaseFromLockTable(network.getId());
  }
  return super.trash(network,offering);
}
