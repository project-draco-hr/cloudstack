@attr(tags=['advanced', 'dvs'], required_hardware='true')
def test_guest_traffic_port_groups_shared_network(self):
    ' Verify vcenter port groups are created for shared network\n\n        # Steps,\n        #  1. Create a shared network\n        #  2. Deploy a VM in shared network so that router is\n        #     created\n        #  3. Verify that corresponding port groups are created\n              for guest traffic\n        '
    if (self.hypervisor.lower() != 'vmware'):
        self.skipTest('This test is intended for only vmware')
    (physical_network, shared_vlan) = get_free_vlan(self.api_client, self.zone.id)
    if (shared_vlan is None):
        self.fail('Failed to get free vlan id for shared network')
    self.testdata['shared_network_offering']['specifyVlan'] = 'True'
    self.testdata['shared_network_offering']['specifyIpRanges'] = 'True'
    self.shared_network_offering = NetworkOffering.create(self.api_client, self.testdata['shared_network_offering'], conservemode=False)
    NetworkOffering.update(self.shared_network_offering, self.api_client, id=self.shared_network_offering.id, state='enabled')
    self.testdata['shared_network']['acltype'] = 'Domain'
    self.testdata['shared_network']['networkofferingid'] = self.shared_network_offering.id
    self.testdata['shared_network']['physicalnetworkid'] = physical_network.id
    self.testdata['shared_network']['vlan'] = shared_vlan
    self.network = Network.create(self.api_client, self.testdata['shared_network'], networkofferingid=self.shared_network_offering.id, zoneid=self.zone.id)
    self.cleanup_networks.append(self.network)
    vm = VirtualMachine.create(self.api_client, self.testdata['virtual_machine'], networkids=self.network.id, serviceofferingid=self.service_offering.id)
    self.cleanup_vms.append(vm)
    routers = Router.list(self.api_client, networkid=self.network.id, listall=True)
    self.assertEqual(validateList(routers)[0], PASS, 'No Router associated with the network found')
    response = verifyGuestTrafficPortGroups(self.api_client, self.config, self.zone)
    self.assertEqual(response[0], PASS, response[1])
    return
