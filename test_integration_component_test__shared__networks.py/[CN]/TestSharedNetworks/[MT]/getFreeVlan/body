def getFreeVlan(self, apiclient, zoneid):
    "\n        Find an unallocated VLAN outside the range allocated to the physical network.\n\n        @note: This does not guarantee that the VLAN is available for use in\n        the deployment's network gear\n        @return: physical_network, shared_vlan_tag\n        "
    list_physical_networks_response = PhysicalNetwork.list(apiclient, zoneid=zoneid)
    assert isinstance(list_physical_networks_response, list)
    assert (len(list_physical_networks_response) > 0), ('No physical networks found in zone %s' % zoneid)
    physical_network = list_physical_networks_response[0]
    vlans = xsplit(physical_network.vlan, ['-', ','])
    assert (len(vlans) > 0)
    assert (int(vlans[0]) < int(vlans[(-1)])), ('VLAN range  %s was improperly split' % physical_network.vlan)
    shared_ntwk_vlan = (int(vlans[(-1)]) + random.randrange(1, 20))
    if (shared_ntwk_vlan > 4095):
        shared_ntwk_vlan = (int(vlans[0]) - random.randrange(1, 20))
        assert (shared_ntwk_vlan > 0), ('VLAN chosen %s is invalid < 0' % shared_ntwk_vlan)
    self.debug(('Attempting free VLAN %s for shared network creation' % shared_ntwk_vlan))
    return (physical_network, shared_ntwk_vlan)
