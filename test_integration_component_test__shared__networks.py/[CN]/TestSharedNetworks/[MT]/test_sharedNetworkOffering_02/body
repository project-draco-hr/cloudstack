def test_sharedNetworkOffering_02(self):
    ' Test Shared Network Offering 02 '
    self.account = Account.create(self.api_client, self.services['account'], admin=True, domainid=self.domain.id)
    self.cleanup_accounts.append(self.account)
    list_accounts_response = Account.list(self.api_client, id=self.account.account.id, listall=True)
    self.assertEqual(isinstance(list_accounts_response, list), True, 'listAccounts returned invalid object in response.')
    self.assertNotEqual(len(list_accounts_response), 0, 'listAccounts returned empty list.')
    self.assertEqual(list_accounts_response[0].state, 'enabled', 'The admin account created is not enabled.')
    self.debug(('Admin type account created: %s' % self.account.name))
    list_physical_networks_response = PhysicalNetwork.list(self.api_client, zoneid=self.zone.id)
    self.assertEqual(isinstance(list_physical_networks_response, list), True, 'listPhysicalNetworks returned invalid object in response.')
    self.assertNotEqual(len(list_physical_networks_response), 0, 'listPhysicalNetworks should return at least one physical network.')
    physical_network = list_physical_networks_response[0]
    self.debug(('Physical network found: %s' % physical_network.id))
    self.services['network_offering']['specifyVlan'] = 'False'
    self.services['network_offering']['specifyIpRanges'] = 'False'
    try:
        self.shared_network_offering = NetworkOffering.create(self.api_client, self.services['network_offering'], conservemode=False)
        self.fail('Network offering got created with vlan as False in advance mode and shared guest type, which is invalid case.')
    except Exception as e:
        self.debug('Network Offering creation failed with vlan as False in advance mode and shared guest type.')
