@attr(tags=['advanced', 'selfservice'])
def test_05_assign_virtual_machine_different_domain(self):
    'Test assign virtual machine to account belonging to different domain\n\n        # Steps\n        1. Create a parent domain and two sub-domains in it (also admin accounts\n           of each domain)\n        2. Deploy VM in child domain 1\n        3. Check if the resource count for domain 1 is updated correctly\n        4. Assign this virtual machine to account 2 in domain 2\n        5. Verify that primaru storage resource count of domain 1 is now 0 and\n           primary storage resource count of domain 2 is increased by equivalent number\n        '
    result = self.setupAccounts()
    self.assertEqual(result[0], PASS, result[1])
    apiclient = self.testClient.getUserApiClient(UserName=self.cadmin_1.name, DomainName=self.cadmin_1.domain)
    self.assertNotEqual(apiclient, FAILED, ('Failed to create api client for account: %s' % self.cadmin_1.name))
    try:
        vm_1 = VirtualMachine.create(apiclient, self.services['virtual_machine'], accountid=self.cadmin_1.name, domainid=self.cadmin_1.domainid, diskofferingid=self.disk_offering.id, serviceofferingid=self.service_offering.id)
        templatesize = (self.template.size / (1024 ** 3))
        expectedCount = (templatesize + self.disk_offering.disksize)
        result = isDomainResourceCountEqualToExpectedCount(self.apiclient, self.cadmin_1.domainid, expectedCount, RESOURCE_PRIMARY_STORAGE)
        self.assertFalse(result[0], result[1])
        self.assertTrue(result[2], 'Resource count does not match')
        vm_1.stop(apiclient)
        vm_1.assign_virtual_machine(self.apiclient, account=self.cadmin_2.name, domainid=self.cadmin_2.domainid)
        result = isDomainResourceCountEqualToExpectedCount(self.apiclient, self.cadmin_2.domainid, expectedCount, RESOURCE_PRIMARY_STORAGE)
        self.assertFalse(result[0], result[1])
        self.assertTrue(result[2], 'Resource count does not match')
        expectedCount = 0
        result = isDomainResourceCountEqualToExpectedCount(self.apiclient, self.cadmin_1.domainid, expectedCount, RESOURCE_PRIMARY_STORAGE)
        self.assertFalse(result[0], result[1])
        self.assertTrue(result[2], 'Resource count does not match')
    except Exception as e:
        self.fail(('Failed with exception: %s' % e))
    return
