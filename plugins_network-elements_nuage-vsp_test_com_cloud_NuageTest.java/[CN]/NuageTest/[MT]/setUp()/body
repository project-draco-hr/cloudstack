{
  when(_networkModel.isProviderForNetwork(Network.Provider.NuageVsp,NETWORK_ID)).thenReturn(true);
  when(_configurationDao.getValue(NuageVspIsolatedNetworkDomainTemplateName.key())).thenReturn("IsolatedDomainTemplate");
  when(_configurationDao.getValue(NuageVspVpcDomainTemplateName.key())).thenReturn("VpcDomainTemplate");
  when(_configurationDao.getValue(NuageVspSharedNetworkDomainTemplateName.key())).thenReturn("SharedDomainTemplate");
  when(_nuageVspEntityBuilder.buildVspDomain(any(Domain.class))).thenReturn(buildVspDomain());
  when(_nuageVspEntityBuilder.buildVspNetwork(any(Network.class),anyBoolean())).thenReturn(buildVspNetwork());
  when(_nuageVspEntityBuilder.buildVspVm(any(VirtualMachine.class),any(Network.class))).thenReturn(buildVspVm());
  when(_nuageVspEntityBuilder.buildVspNic(anyString(),any(NicProfile.class))).thenReturn(buildVspNic());
  when(_nuageVspEntityBuilder.buildVspNic(any(NicVO.class))).thenReturn(buildVspNic());
  when(_nuageVspEntityBuilder.buildVspStaticNat(anyBoolean(),any(IPAddressVO.class),any(VlanVO.class),any(NicVO.class))).thenReturn(buildVspStaticNat());
  when(_nuageVspEntityBuilder.buildVspAclRule(any(FirewallRule.class),any(Network.class))).thenReturn(buildVspAclRule());
  when(_nuageVspEntityBuilder.buildVspAclRule(any(NetworkACLItem.class))).thenReturn(buildVspAclRule());
}
