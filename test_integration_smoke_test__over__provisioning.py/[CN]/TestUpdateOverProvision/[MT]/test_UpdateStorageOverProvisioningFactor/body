@attr(tags=['simulator', 'devcloud', 'basic', 'advanced', 'selfservice'])
def test_UpdateStorageOverProvisioningFactor(self):
    '\n        test update configuration setting at storage scope\n        @return:\n        '
    ' 1. list storagepools for id '
    ' 2. list overprovisioning factor for storage pool '
    ' 3. update setting for the pool'
    ' 4. list overprovisioning factor for storage pool and assert'
    ' list storagepools '
    storage_pools = StoragePool.list(self.apiClient, listall=True)
    self.assertEqual(isinstance(storage_pools, list), True, 'List storage pools should not return empty response')
    if (len(storage_pools) < 1):
        raise self.skipTest("The environment don't have storage pools required for test")
    for pool in storage_pools:
        if ((pool.type == 'NetworkFilesystem') or (pool.type == 'VMFS')):
            break
    if ((pool.type != 'NetworkFilesystem') and (pool.type != 'VMFS')):
        raise self.skipTest((('Storage overprovisioning currently not supported on ' + pool.type) + ' pools'))
    self.poolId = pool.id
    ' list overprovisioning factor for storage pool '
    factorOld = float(str(pool.overprovisionfactor))
    factorNew = str((factorOld + 1.0))
    ' update setting for the pool'
    updateConfigurationCmd = updateConfiguration.updateConfigurationCmd()
    updateConfigurationCmd.name = 'storage.overprovisioning.factor'
    updateConfigurationCmd.value = factorNew
    updateConfigurationCmd.storageid = pool.id
    updateConfigurationResponse = self.apiClient.updateConfiguration(updateConfigurationCmd)
    self.debug(('updated the parameter %s with value %s' % (updateConfigurationResponse.name, updateConfigurationResponse.value)))
    storage_pools = StoragePool.list(self.apiClient, id=self.poolId)
    pool = storage_pools[0]
    factorNew = float(str(pool.overprovisionfactor))
    self.assertNotEqual(int(factorNew), int(factorOld), ' Check if overprovision factor of storage pool has changed')
    self.assertEqual(int(factorNew), int((factorOld + 1.0)), ' Check if overprovision factor of storage pool has increased by 1')
