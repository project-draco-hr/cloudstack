{
  List<? extends VirtualMachineTemplate> isos=_mgr.listIsos(this);
  TemplateFilter isoFilterObj=null;
  try {
    if (isoFilter == null) {
      isoFilterObj=TemplateFilter.selfexecutable;
    }
 else {
      isoFilterObj=TemplateFilter.valueOf(isoFilter);
    }
  }
 catch (  IllegalArgumentException e) {
    isoFilterObj=TemplateFilter.selfexecutable;
  }
  boolean isAdmin=false;
  boolean isAccountSpecific=true;
  Account account=UserContext.current().getAccount();
  if ((account == null) || (account.getType() == Account.ACCOUNT_TYPE_ADMIN) || (account.getType() == Account.ACCOUNT_TYPE_DOMAIN_ADMIN)) {
    isAdmin=true;
    if ((accountName == null) || (domainId == null)) {
      isAccountSpecific=false;
    }
  }
  boolean onlyReady=(isoFilterObj == TemplateFilter.featured) || (isoFilterObj == TemplateFilter.selfexecutable) || (isoFilterObj == TemplateFilter.sharedexecutable)|| (isoFilterObj == TemplateFilter.executable && isAccountSpecific)|| (isoFilterObj == TemplateFilter.community);
  ListResponse<TemplateResponse> response=_responseGenerator.createIsoResponse(isos,zoneId,onlyReady,isAdmin,account);
  response.setResponseName(getName());
  this.setResponseObject(response);
}
