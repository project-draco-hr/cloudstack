def test_01_firewall_rules_port_fw(self):
    '"Checking firewall rules deletion after static NAT disable'
    public_ip = self.public_ip.ipaddress
    StaticNATRule.enable(self.apiclient, public_ip.id, self.virtual_machine.id)
    self.debug(('Enabled static NAT for public IP ID: %s' % public_ip.id))
    nat_rule = StaticNATRule.create(self.apiclient, self.services['static_nat'], public_ip.id)
    self.debug(('Created Static NAT rule for public IP ID: %s' % public_ip.id))
    list_rules_repsonse = StaticNATRule.list(self.apiclient, id=nat_rule.id)
    self.assertEqual(isinstance(list_rules_repsonse, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_rules_repsonse), 0, 'Check IP Forwarding Rule is created')
    self.assertEqual(list_rules_repsonse[0].id, nat_rule.id, 'Check Correct IP forwarding Rule is returned')
    self.debug(("select id from user_ip_address where uuid = '%s';" % public_ip.id))
    qresultset = self.dbclient.execute(("select id from user_ip_address where uuid = '%s';" % public_ip.id))
    self.assertEqual(isinstance(qresultset, list), True, 'Check database query returns a valid data')
    self.assertNotEqual(len(qresultset), 0, 'Check DB Query result set')
    qresult = qresultset[0]
    public_ip_id = qresult[0]
    self.debug(("select id, state from firewall_rules where ip_address_id = '%s';" % public_ip_id))
    qresultset = self.dbclient.execute(("select id, state from firewall_rules where ip_address_id = '%s';" % public_ip_id))
    self.assertEqual(isinstance(qresultset, list), True, 'Check database query returns a valid data for firewall rules')
    self.assertNotEqual(len(qresultset), 0, 'Check DB Query result set')
    for qresult in qresultset:
        self.assertEqual(qresult[1], 'Active', 'Check state of the static NAT rule in database')
    nat_rule.delete(self.apiclient)
    list_rules_repsonse = StaticNATRule.list(self.apiclient, id=nat_rule.id)
    self.assertEqual(list_rules_repsonse, None, 'Check Port Forwarding Rule is deleted')
    self.debug(("select id, state from firewall_rules where ip_address_id = '%s';" % public_ip.id))
    qresultset = self.dbclient.execute(("select id, state from firewall_rules where ip_address_id = '%s';" % public_ip.id))
    self.assertEqual(len(qresultset), 0, 'Check DB Query result set')
    return
