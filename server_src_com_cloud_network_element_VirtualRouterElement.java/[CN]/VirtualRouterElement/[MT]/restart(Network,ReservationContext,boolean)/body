{
  DataCenter dc=_configMgr.getZone(network.getDataCenterId());
  if (!canHandle(network.getGuestType(),dc)) {
    s_logger.trace("Virtual router element doesn't handle network restart for the network " + network);
    return false;
  }
  DeployDestination dest=new DeployDestination(dc,null,null,null);
  NetworkOffering networkOffering=_networkOfferingDao.findById(network.getNetworkOfferingId());
  List<DomainRouterVO> routers=_routerDao.listByNetworkAndRole(network.getId(),Role.DHCP_FIREWALL_LB_PASSWD_USERDATA);
  if (routers == null || routers.isEmpty()) {
    s_logger.trace("Can't find virtual router element in network " + network.getId());
    return true;
  }
  Long host_id=new Long(0);
  for (  DomainRouterVO router : routers) {
    if (host_id == null || host_id == 0) {
      host_id=(router.getHostId() != null ? router.getHostId() : router.getLastHostId());
    }
    if (cleanup) {
      if (router.getState() != State.Stopped || _routerMgr.stopRouter(router.getId(),false) == null) {
        s_logger.warn("Failed to stop virtual router element " + router + " as a part of network "+ network+ " restart");
      }
      if (_routerMgr.destroyRouter(router.getId()) == null) {
        s_logger.warn("Failed to destroy virtual router element " + router + " as a part of network "+ network+ " restart");
      }
    }
  }
  if (host_id == null || host_id == 0) {
    throw new ResourceUnavailableException("Fail to locate virtual router element in network " + network.getId(),this.getClass(),0);
  }
  Cluster cluster=_configMgr.getCluster(_hostDao.findById(host_id).getClusterId());
  dest=new DeployDestination(dc,null,cluster,null);
  return implement(network,networkOffering,dest,context);
}
