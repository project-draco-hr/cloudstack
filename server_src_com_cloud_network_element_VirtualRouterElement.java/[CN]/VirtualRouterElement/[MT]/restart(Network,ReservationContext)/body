{
  DataCenter dc=_configMgr.getZone(network.getDataCenterId());
  if (!canHandle(network.getGuestType(),dc)) {
    s_logger.trace("Virtual router element doesn't handle network restart for the network " + network);
    return false;
  }
  DeployDestination dest=new DeployDestination(dc,null,null,null);
  NetworkOffering networkOffering=_networkOfferingDao.findById(network.getNetworkOfferingId());
  List<DomainRouterVO> routers=_routerDao.findByNetwork(network.getId());
  if (routers == null || routers.isEmpty()) {
    s_logger.trace("Can't find virtual router element in network " + network.getId());
    return true;
  }
  long host_id=0;
  for (  DomainRouterVO router : routers) {
    host_id=router.getHostId();
    if (_routerMgr.stopRouter(router.getId(),false) == null) {
      s_logger.warn("Failed to stop virtual router element " + router + " as a part of network "+ network+ " restart");
    }
    if (!_routerMgr.destroyRouter(router.getId())) {
      s_logger.warn("Failed to destroy virtual router element " + router + " as a part of network "+ network+ " restart");
    }
  }
  Cluster cluster=_configMgr.getCluster(_hostDao.findById(host_id).getClusterId());
  dest=new DeployDestination(dc,null,cluster,null);
  return implement(network,networkOffering,dest,context);
}
