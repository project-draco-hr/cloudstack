{
  Map<Service,Map<Capability,String>> capabilities=new HashMap<Service,Map<Capability,String>>();
  Map<Capability,String> lbCapabilities=new HashMap<Capability,String>();
  lbCapabilities.put(Capability.SupportedLBAlgorithms,"roundrobin,leastconn,source");
  lbCapabilities.put(Capability.SupportedProtocols,"tcp, udp");
  capabilities.put(Service.Lb,lbCapabilities);
  Map<Capability,String> firewallCapabilities=new HashMap<Capability,String>();
  firewallCapabilities.put(Capability.PortForwarding,"true");
  firewallCapabilities.put(Capability.TrafficStatistics,"per public ip");
  firewallCapabilities.put(Capability.StaticNat,"true");
  firewallCapabilities.put(Capability.SupportedProtocols,"tcp,udp");
  firewallCapabilities.put(Capability.MultipleIps,"true");
  firewallCapabilities.put(Capability.SupportedSourceNatTypes,"per account");
  capabilities.put(Service.Firewall,firewallCapabilities);
  Map<Capability,String> vpnCapabilities=new HashMap<Capability,String>();
  vpnCapabilities.put(Capability.SupportedVpnTypes,"pptp,l2tp,ipsec");
  capabilities.put(Service.Vpn,vpnCapabilities);
  capabilities.put(Service.Dns,null);
  capabilities.put(Service.UserData,null);
  capabilities.put(Service.Dhcp,null);
  capabilities.put(Service.Gateway,null);
  return capabilities;
}
