{
  bytesRead=0;
  if (isChunk) {
    if (!moreChunks)     throw new RuntimeException("attach.DimeStreamError2");
    dataPadLength-=readPad(dataPadLength);
  }
  byte[] header=new byte[12];
  if (header.length != readFromStream(header)) {
    streamInError=new IOException("attach.DimeStreamError3 " + header.length);
    throw streamInError;
  }
  byte version=(byte)((header[0] >>> 3) & 0x1f);
  if (version > 1) {
    streamInError=new IOException("attach.DimeStreamError4 " + version);
    throw streamInError;
  }
  MB=0 != (0x4 & header[0]);
  ME=0 != (0x2 & header[0]);
  moreChunks=0 != (0x1 & header[0]);
  if (!isChunk) {
switch (((header[1] >>> 4) & (byte)0x0f)) {
case 0x00:
      tnf="UNCHANGED";
    break;
case 0x01:
  tnf="MIME";
break;
case 0x02:
tnf="URI";
break;
default :
tnf="UNKNOWN";
break;
}
}
int optionsLength=((((int)header[2]) << 8) & 0xff00) | ((int)header[3]);
int idLength=((((int)header[4]) << 8) & 0xff00) | ((int)header[5]);
int typeLength=((((int)header[6]) << 8) & 0xff00) | ((int)header[7]);
recordLength=((((long)header[8]) << 24) & 0xff000000L) | ((((long)header[9]) << 16) & 0xff0000L) | ((((long)header[10]) << 8) & 0xff00L)| ((long)header[11] & 0xffL);
if (0 != optionsLength) {
byte[] optBytes=new byte[optionsLength];
if (optionsLength != readFromStream(optBytes)) {
streamInError=new IOException("attach.DimeStreamError5 " + optionsLength);
throw streamInError;
}
optBytes=null;
int pad=(int)((4L - (optionsLength & 0x3L)) & 0x03L);
if (pad != readFromStream(header,0,pad)) {
streamInError=new IOException("attach.DimeStreamError7");
throw streamInError;
}
}
if (0 < idLength) {
byte[] idBytes=new byte[idLength];
if (idLength != readFromStream(idBytes)) {
streamInError=new IOException("attach.DimeStreamError8");
throw streamInError;
}
if (idLength != 0 && !isChunk) id=new String(idBytes);
int pad=(int)((4L - (idLength & 0x3L)) & 0x03L);
if (pad != readFromStream(header,0,pad)) {
streamInError=new IOException("attach.DimeStreamError9");
throw streamInError;
}
}
if (0 < typeLength) {
byte[] typeBytes=new byte[typeLength];
if (typeLength != readFromStream(typeBytes)) {
streamInError=new IOException("attach.DimeStreamError10");
throw streamInError;
}
if (typeLength != 0 && !isChunk) type=new String(typeBytes);
int pad=(int)((4L - (typeLength & 0x3L)) & 0x03L);
if (pad != readFromStream(header,0,pad)) {
streamInError=new IOException("attach.DimeStreamError11");
throw streamInError;
}
}
logger.debug("MB:" + MB + ", ME:"+ ME+ ", CF:"+ moreChunks+ "Option length:"+ optionsLength+ ", ID length:"+ idLength+ ", typeLength:"+ typeLength+ ", TYPE_T:"+ tnf);
logger.debug("id:\"" + id + "\"");
logger.debug("type:\"" + type + "\"");
logger.debug("recordlength:\"" + recordLength + "\"");
dataPadLength=(int)((4L - (recordLength & 0x3L)) & 0x03L);
}
