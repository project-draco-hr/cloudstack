{
  int totalbytesread=0;
  int bytes2read=0;
  if (len < 0)   throw new IllegalArgumentException("attach.readLengthError" + len);
  if (off < 0)   throw new IllegalArgumentException("attach.readOffsetError" + off);
  if (b == null)   throw new IllegalArgumentException("attach.readArrayNullError");
  if (b.length < off + len)   throw new IllegalArgumentException("attach.readArraySizeError " + b.length + " "+ len+ " "+ off);
  if (null != streamInError)   throw streamInError;
  if (0 == len)   return 0;
  if (recordLength == 0 && bytesRead == 0 && !moreChunks) {
    ++bytesRead;
    if (ME)     finalClose();
    return 0;
  }
  if (bytesRead >= recordLength && !moreChunks) {
    dataPadLength-=readPad(dataPadLength);
    if (ME)     finalClose();
    return -1;
  }
  do {
    if (bytesRead >= recordLength && moreChunks)     readHeader(true);
    bytes2read=(int)Math.min(recordLength - bytesRead,(long)len - totalbytesread);
    try {
      bytes2read=is.read(b,off + totalbytesread,bytes2read);
    }
 catch (    IOException e) {
      streamInError=e;
      throw e;
    }
    if (0 < bytes2read) {
      totalbytesread+=bytes2read;
      bytesRead+=bytes2read;
    }
  }
 while (bytes2read > -1 && totalbytesread < len && (bytesRead < recordLength || moreChunks));
  if (0 > bytes2read) {
    if (moreChunks) {
      streamInError=new IOException("attach.DimeStreamError0");
      throw streamInError;
    }
    if (bytesRead < recordLength) {
      streamInError=new IOException("attach.DimeStreamError1 " + (recordLength - bytesRead));
      throw streamInError;
    }
    if (!ME) {
      streamInError=new IOException("attach.DimeStreamError0");
      throw streamInError;
    }
    dataPadLength=0;
  }
 else   if (bytesRead >= recordLength) {
    try {
      dataPadLength-=readPad(dataPadLength);
    }
 catch (    IOException e) {
      if (!ME)       throw e;
 else {
        dataPadLength=0;
        streamInError=null;
      }
    }
  }
  if (bytesRead >= recordLength && ME)   finalClose();
  return totalbytesread >= 0 ? totalbytesread : -1;
}
