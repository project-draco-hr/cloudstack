def get_free_vlan(apiclient, zoneid):
    "\n    Find an unallocated VLAN outside the range allocated to the physical network.\n\n    @note: This does not guarantee that the VLAN is available for use in\n    the deployment's network gear\n    @return: physical_network, shared_vlan_tag\n    "
    list_physical_networks_response = PhysicalNetwork.list(apiclient, zoneid=zoneid)
    assert isinstance(list_physical_networks_response, list)
    assert (len(list_physical_networks_response) > 0), ('No physical networks found in zone %s' % zoneid)
    physical_network = list_physical_networks_response[0]
    networks = list_networks(apiclient, zoneid=zoneid, type='Shared')
    usedVlanIds = []
    if (isinstance(networks, list) and (len(networks) > 0)):
        usedVlanIds = [int(nw.vlan) for nw in networks if (nw.vlan != 'untagged')]
    if (hasattr(physical_network, 'vlan') is False):
        while True:
            shared_ntwk_vlan = random.randrange(1, 4095)
            if (shared_ntwk_vlan in usedVlanIds):
                continue
            else:
                break
    else:
        vlans = xsplit(physical_network.vlan, ['-', ','])
        assert (len(vlans) > 0)
        assert (int(vlans[0]) < int(vlans[(-1)])), ('VLAN range  %s was improperly split' % physical_network.vlan)
        retriesCount = 20
        shared_ntwk_vlan = None
        while True:
            if (retriesCount == 0):
                break
            free_vlan = (int(vlans[(-1)]) + random.randrange(1, 20))
            if (free_vlan > 4095):
                free_vlan = (int(vlans[0]) - random.randrange(1, 20))
            if ((free_vlan < 0) or (free_vlan in usedVlanIds)):
                retriesCount -= 1
                continue
            else:
                shared_ntwk_vlan = free_vlan
                break
    return (physical_network, shared_ntwk_vlan)
