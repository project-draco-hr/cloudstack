def createEnabledNetworkOffering(apiclient, networkServices):
    "Create and enable network offering according to the type\n\n       @output: List, containing [ Result,Network Offering,Reason ]\n                 Ist Argument('Result') : FAIL : If exception or assertion error occurs\n                                          PASS : If network offering\n                                          is created and enabled successfully\n                 IInd Argument(Net Off) : Enabled network offering\n                                                In case of exception or\n                                                assertion error, it will be None\n                 IIIrd Argument(Reason) :  Reason for failure,\n                                              default to None\n    "
    try:
        resultSet = [FAIL, None, None]
        network_offering = NetworkOffering.create(apiclient, networkServices, conservemode=False)
        NetworkOffering.update(network_offering, apiclient, id=network_offering.id, state='enabled')
    except Exception as e:
        resultSet[2] = e
        return resultSet
    return [PASS, network_offering, None]
