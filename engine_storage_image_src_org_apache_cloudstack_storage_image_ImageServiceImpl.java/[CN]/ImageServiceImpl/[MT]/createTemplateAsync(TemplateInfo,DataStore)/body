{
  TemplateObject to=(TemplateObject)template;
  AsyncCallFuture<CommandResult> future=new AsyncCallFuture<CommandResult>();
  try {
    to.stateTransit(TemplateEvent.CreateRequested);
  }
 catch (  NoTransitionException e) {
    s_logger.debug("Failed to transit state:",e);
    CommandResult result=new CommandResult();
    result.setResult(e.toString());
    future.complete(result);
    return future;
  }
  DataObject templateOnStore=store.create(template);
  templateOnStore.processEvent(ObjectInDataStoreStateMachine.Event.CreateOnlyRequested);
  CreateTemplateContext<CommandResult> context=new CreateTemplateContext<CommandResult>(null,template,future,store,templateOnStore);
  AsyncCallbackDispatcher<ImageServiceImpl,CreateCmdResult> caller=AsyncCallbackDispatcher.create(this);
  caller.setCallback(caller.getTarget().createTemplateCallback(null,null)).setContext(context);
  store.getDriver().createAsync(templateOnStore,caller);
  return future;
}
