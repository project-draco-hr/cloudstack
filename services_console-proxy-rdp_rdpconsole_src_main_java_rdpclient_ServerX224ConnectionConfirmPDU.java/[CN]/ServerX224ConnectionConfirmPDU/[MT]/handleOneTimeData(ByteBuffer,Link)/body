{
  if (buf == null)   return;
  if (verbose)   System.out.println("[" + this + "] INFO: Data received: "+ buf+ ".");
  int x224Length=buf.readVariableSignedIntLE();
  int x224Type=buf.readUnsignedByte();
  if (x224Type != X224_TPDU_CONNECTION_CONFIRM)   throw new RuntimeException("Unexpected type of packet. Expected type: " + X224_TPDU_CONNECTION_CONFIRM + " (CONNECTION CONFIRM), actual type: "+ x224Type+ ", length: "+ x224Length+ ", buf: "+ buf+ ".");
  buf.skipBytes(2);
  buf.skipBytes(2);
  buf.skipBytes(1);
  int negType=buf.readUnsignedByte();
  buf.skipBytes(1);
  int length=buf.readUnsignedShortLE();
  if (length != 8)   throw new RuntimeException("Unexpected length of buffer. Expected value: 8, actual value: " + length + ", RDP NEG buf: "+ buf+ ".");
  int protocol=buf.readSignedIntLE();
  if (negType != RdpConstants.RDP_NEG_REQ_TYPE_NEG_RSP) {
    int errorCode=protocol;
    String message="Unknown error.";
switch (errorCode) {
case SSL_REQUIRED_BY_SERVER:
      message="The server requires that the client support Enhanced RDP Security with either TLS 1.0, 1.1 or 1.2 or CredSSP. If only CredSSP was requested then the server only supports TLS.";
    break;
case SSL_NOT_ALLOWED_BY_SERVER:
  message="The server is configured to only use Standard RDP Security mechanisms and does not support any External Security Protocols.";
break;
case SSL_CERT_NOT_ON_SERVER:
message="The server does not possess a valid authentication certificate and cannot initialize the External Security Protocol Provider.";
break;
case INCONSISTENT_FLAGS:
message="The list of requested security protocols is not consistent with the current security protocol in effect. This error is only possible when the Direct Approach is used and an External Security Protocolis already being used.";
break;
case HYBRID_REQUIRED_BY_SERVER:
message="The server requires that the client support Enhanced RDP Security with CredSSP.";
break;
case SSL_WITH_USER_AUTH_REQUIRED_BY_SERVER:
message="The server requires that the client support Enhanced RDP Security  with TLS 1.0, 1.1 or 1.2 and certificate-based client authentication.";
break;
}
throw new RuntimeException("Connection failure: " + message);
}
if (protocol != RdpConstants.RDP_NEG_REQ_PROTOCOL_SSL) throw new RuntimeException("Unexpected protocol type. Expected protocol type: " + RdpConstants.RDP_NEG_REQ_PROTOCOL_SSL + " (SSL), actual response type: "+ protocol+ ", RDP NEG buf: "+ buf+ ".");
if (verbose) System.out.println("[" + this + "] INFO: RDP Negotiation response. Type: "+ negType+ ", protocol: "+ protocol+ ".");
switchOff();
}
