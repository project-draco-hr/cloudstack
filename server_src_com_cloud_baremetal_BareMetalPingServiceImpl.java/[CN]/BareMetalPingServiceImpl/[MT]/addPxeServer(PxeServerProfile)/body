{
  Long zoneId=profile.getZoneId();
  Long podId=profile.getPodId();
  DataCenterVO zone=_dcDao.findById(zoneId);
  if (zone == null) {
    throw new InvalidParameterValueException("Could not find zone with ID: " + zoneId);
  }
  List<HostVO> pxeServers=_resourceMgr.listAllUpAndEnabledHosts(Host.Type.PxeServer,null,podId,zoneId);
  if (pxeServers.size() != 0) {
    InvalidParameterValueException ex=new InvalidParameterValueException("Already had a PXE server in Pod with specified podId and zone with specified zoneId");
    ex.addProxyObject("pod",podId,"podId");
    ex.addProxyObject(zone,zoneId,"zoneId");
  }
  String ipAddress=profile.getUrl();
  String username=profile.getUsername();
  String password=profile.getPassword();
  ServerResource resource=null;
  Map params=new HashMap<String,String>();
  params.put("type",PxeServerType.PING.getName());
  params.put("zone",Long.toString(zoneId));
  params.put("pod",podId.toString());
  params.put("ip",ipAddress);
  params.put("username",username);
  params.put("password",password);
  if (profile.getType().equalsIgnoreCase(PxeServerType.PING.getName())) {
    String storageServerIp=profile.getPingStorageServerIp();
    if (storageServerIp == null) {
      throw new InvalidParameterValueException("No IP for storage server specified");
    }
    String pingDir=profile.getPingDir();
    if (pingDir == null) {
      throw new InvalidParameterValueException("No direcotry for storage server specified");
    }
    String tftpDir=profile.getTftpDir();
    if (tftpDir == null) {
      throw new InvalidParameterValueException("No TFTP directory specified");
    }
    String cifsUsername=profile.getPingCifsUserName();
    if (cifsUsername == null || cifsUsername.equalsIgnoreCase("")) {
      cifsUsername="xxx";
    }
    String cifsPassword=profile.getPingCifspassword();
    if (cifsPassword == null || cifsPassword.equalsIgnoreCase("")) {
      cifsPassword="xxx";
    }
    String guid=getPxeServerGuid(Long.toString(zoneId) + "-" + Long.toString(podId),PxeServerType.PING.getName(),ipAddress);
    params.put("storageServer",storageServerIp);
    params.put("pingDir",pingDir);
    params.put("tftpDir",tftpDir);
    params.put("cifsUserName",cifsUsername);
    params.put("cifsPassword",cifsPassword);
    params.put("guid",guid);
    resource=new PingPxeServerResource();
    try {
      resource.configure("PING PXE resource",params);
    }
 catch (    Exception e) {
      s_logger.debug(e);
      throw new CloudRuntimeException(e.getMessage());
    }
  }
 else {
    throw new CloudRuntimeException("Unsupport PXE server type:" + profile.getType());
  }
  Host pxeServer=_resourceMgr.addHost(zoneId,resource,Host.Type.PxeServer,params);
  if (pxeServer == null) {
    throw new CloudRuntimeException("Cannot add PXE server as a host");
  }
  return pxeServer;
}
