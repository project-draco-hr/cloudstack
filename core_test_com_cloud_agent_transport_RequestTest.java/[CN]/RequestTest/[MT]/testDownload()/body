{
  s_logger.info("Testing Download answer");
  VirtualMachineTemplate template=Mockito.mock(VirtualMachineTemplate.class);
  Mockito.when(template.getId()).thenReturn(1L);
  Mockito.when(template.getFormat()).thenReturn(ImageFormat.QCOW2);
  Mockito.when(template.getName()).thenReturn("templatename");
  Mockito.when(template.getTemplateType()).thenReturn(TemplateType.USER);
  Mockito.when(template.getDisplayText()).thenReturn("displayText");
  Mockito.when(template.getHypervisorType()).thenReturn(HypervisorType.KVM);
  Mockito.when(template.getUrl()).thenReturn("url");
  NfsTO nfs=new NfsTO("secUrl",DataStoreRole.Image);
  TemplateObjectTO to=new TemplateObjectTO(template);
  to.setImageDataStore(nfs);
  DownloadCommand cmd=new DownloadCommand(to,30000000l);
  Request req=new Request(1,1,cmd,true);
  req.logD("Debug for Download");
  DownloadAnswer answer=new DownloadAnswer("jobId",50,"errorString",Status.ABANDONED,"filesystempath","installpath",10000000,20000000,"chksum");
  Response resp=new Response(req,answer);
  resp.logD("Debug for Download");
}
