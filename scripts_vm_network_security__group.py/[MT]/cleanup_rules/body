def cleanup_rules():
    try:
        chainscmd = 'iptables-save | grep -P \'^:(?!.*-(def|eg))\' | awk \'{sub(/^:/, "", $1) ; print $1}\''
        chains = execute(chainscmd).split('\n')
        cleanup = []
        for chain in chains:
            if (1 in [chain.startswith(c) for c in ['r-', 'i-', 's-', 'v-']]):
                vm_name = chain
                cmd = (("virsh list |awk '/" + vm_name) + "/ {print $3}'")
                try:
                    result = execute(cmd).strip()
                except:
                    result = None
                if ((result == None) or (len(result) == 0)):
                    logging.debug((('chain ' + chain) + ' does not correspond to a vm, cleaning up iptable rules'))
                    cleanup.append(vm_name)
                    continue
                if (not ((result == 'running') or (result == 'paused'))):
                    logging.debug((('vm ' + vm_name) + ' is not running or paused, cleaning up iptable rules'))
                    cleanup.append(vm_name)
        chainscmd = 'ebtables-save | awk \'/:i/ { gsub(/(^:|-(in|out))/, "") ; print $1}\''
        chains = execute(chainscmd).split('\n')
        for chain in chains:
            if (1 in [chain.startswith(c) for c in ['r-', 'i-', 's-', 'v-']]):
                vm_name = chain
                cmd = (("virsh list |awk '/" + vm_name) + "/ {print $3}'")
                try:
                    result = execute(cmd).strip()
                except:
                    result = None
                if ((result == None) or (len(result) == 0)):
                    logging.debug((('chain ' + chain) + ' does not correspond to a vm, cleaning up ebtable rules'))
                    cleanup.append(vm_name)
                    continue
                if (not ((result == 'running') or (result == 'paused'))):
                    logging.debug((('vm ' + vm_name) + ' is not running or paused, cleaning up ebtable rules'))
                    cleanup.append(vm_name)
        for vmname in cleanup:
            destroy_network_rules_for_vm(vmname)
        logging.debug((('Cleaned up rules for ' + str(len(cleanup))) + ' chains'))
    except:
        logging.debug('Failed to cleanup rules !')
