def default_network_rules(vm_name, vm_id, vm_ip, vm_mac, vif, brname):
    if (not addFWFramework(brname)):
        return False
    vmName = vm_name
    brfw = ('BF-' + brname)
    domID = getvmId(vm_name)
    delete_rules_for_vm_in_bridge_firewall_chain(vmName)
    vmchain = vm_name
    vmchain_default = ('-'.join(vmchain.split('-')[:(-1)]) + '-def')
    destroy_ebtables_rules(vmName, vif)
    try:
        execute(('iptables -N ' + vmchain))
    except:
        execute(('iptables -F ' + vmchain))
    try:
        execute(('iptables -N ' + vmchain_default))
    except:
        execute(('iptables -F ' + vmchain_default))
    try:
        execute((((((('iptables -A ' + brfw) + '-OUT') + ' -m physdev --physdev-is-bridged --physdev-out ') + vif) + ' -j ') + vmchain_default))
        execute((((((('iptables -A ' + brfw) + '-IN') + ' -m physdev --physdev-is-bridged --physdev-in ') + vif) + ' -j ') + vmchain_default))
        execute((('iptables -A  ' + vmchain_default) + ' -m state --state RELATED,ESTABLISHED -j ACCEPT'))
        execute((((('iptables -A ' + vmchain_default) + ' -m physdev --physdev-is-bridged --physdev-in ') + vif) + ' -p udp --dport 67 --sport 68 -j ACCEPT'))
        execute((((('iptables -A ' + vmchain_default) + ' -m physdev --physdev-is-bridged --physdev-out ') + vif) + ' -p udp --dport 68 --sport 67  -j ACCEPT'))
        if (vm_ip is not None):
            execute((((((('iptables -A ' + vmchain_default) + ' -m physdev --physdev-is-bridged --physdev-in ') + vif) + ' --source ') + vm_ip) + ' -j ACCEPT'))
        execute(((('iptables -A ' + vmchain_default) + ' -j ') + vmchain))
        execute((('iptables -A ' + vmchain) + ' -j DROP'))
    except:
        logging.debug(('Failed to program default rules for vm ' + vm_name))
        return 'false'
    default_ebtables_rules(vmchain, vm_ip, vm_mac, vif)
    if (vm_ip is not None):
        if (write_rule_log_for_vm(vmName, vm_id, vm_ip, domID, '_initial_', '-1') == False):
            logging.debug('Failed to log default network rules, ignoring')
    logging.debug(('Programmed default rules for vm ' + vm_name))
    return 'true'
