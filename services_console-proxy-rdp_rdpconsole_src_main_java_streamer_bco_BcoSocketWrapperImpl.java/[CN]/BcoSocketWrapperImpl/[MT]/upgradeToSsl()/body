{
  if (sslSocket != null)   return;
  if (verbose)   System.out.println("[" + this + "] INFO: Upgrading socket to SSL.");
  try {
    SecureRandom secureRandom=new SecureRandom();
    bcoSslSocket=new TlsProtocolHandler(socket.getInputStream(),socket.getOutputStream(),secureRandom);
    CertificateVerifyer client=new CertificateVerifyer(){
      @Override public boolean isValid(      X509CertificateStructure[] chain){
        try {
          if (sslState != null) {
            sslState.serverCertificateSubjectPublicKeyInfo=chain[0].getSubjectPublicKeyInfo().getEncoded();
          }
        }
 catch (        IOException e) {
          throw new RuntimeException("Cannot get server public key.",e);
        }
        return true;
      }
    }
;
    bcoSslSocket.connect(client);
    InputStream sis=bcoSslSocket.getInputStream();
    source.setInputStream(sis);
    OutputStream sos=bcoSslSocket.getOutputStream();
    sink.setOutputStream(sos);
  }
 catch (  Exception e) {
    throw new RuntimeException("Cannot upgrade socket to SSL: " + e.getMessage(),e);
  }
}
