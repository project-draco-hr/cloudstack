@staticmethod
def default_ebtables_rules(vm_name, vm_ip, vm_mac, vif):
    vm_chain_in = (vm_name + '-in')
    vm_chain_out = (vm_name + '-out')
    for chain in [vm_chain_in, vm_chain_out]:
        try:
            execute(('ebtables -t nat -N ' + chain))
        except:
            execute(('ebtables -t nat -F ' + chain))
    try:
        execute(((('ebtables -t nat -A PREROUTING -i ' + vif) + ' -j ') + vm_chain_in))
        execute(((('ebtables -t nat -A POSTROUTING -o ' + vif) + ' -j ') + vm_chain_out))
    except:
        logging.debug('Failed to program default rules')
        return False
    try:
        execute((((('ebtables -t nat -A ' + vm_chain_in) + ' -s ! ') + vm_mac) + ' -j DROP'))
        execute((((('ebtables -t nat -A ' + vm_chain_in) + ' -p ARP -s ! ') + vm_mac) + ' -j DROP'))
        execute((((('ebtables -t nat -A ' + vm_chain_in) + ' -p ARP --arp-mac-src ! ') + vm_mac) + ' -j DROP'))
        if (vm_ip is not None):
            execute((((('ebtables -t nat -A ' + vm_chain_in) + ' -p ARP --arp-ip-src ! ') + vm_ip) + ' -j DROP'))
        execute((('ebtables -t nat -A ' + vm_chain_in) + ' -p ARP --arp-op Request -j ACCEPT'))
        execute((('ebtables -t nat -A ' + vm_chain_in) + ' -p ARP --arp-op Reply -j ACCEPT'))
        execute((('ebtables -t nat -A ' + vm_chain_in) + ' -p ARP  -j DROP'))
    except:
        logging.exception('Failed to program default ebtables IN rules')
        return False
    try:
        execute((((('ebtables -t nat -A ' + vm_chain_out) + ' -p ARP --arp-op Reply --arp-mac-dst ! ') + vm_mac) + ' -j DROP'))
        if (vm_ip is not None):
            execute((((('ebtables -t nat -A ' + vm_chain_out) + ' -p ARP --arp-ip-dst ! ') + vm_ip) + ' -j DROP'))
        execute((('ebtables -t nat -A ' + vm_chain_out) + ' -p ARP --arp-op Request -j ACCEPT'))
        execute((('ebtables -t nat -A ' + vm_chain_out) + ' -p ARP --arp-op Reply -j ACCEPT'))
        execute((('ebtables -t nat -A ' + vm_chain_out) + ' -p ARP -j DROP'))
    except:
        logging.debug('Failed to program default ebtables OUT rules')
        return False
    return True
