{
  UserContext caller=UserContext.current();
  LBStickinessPolicyVO stickinessPolicy=_lb2stickinesspoliciesDao.findById(stickinessPolicyId);
  if (stickinessPolicy == null) {
    throw new InvalidParameterException("Invalid Stickiness policy id value: " + stickinessPolicyId);
  }
  LoadBalancerVO loadBalancer=_lbDao.findById(Long.valueOf(stickinessPolicy.getLoadBalancerId()));
  if (loadBalancer == null) {
    throw new InvalidParameterException("Invalid Load balancer :" + stickinessPolicy.getLoadBalancerId() + " for Stickiness policy id: "+ stickinessPolicyId);
  }
  long loadBalancerId=loadBalancer.getId();
  _accountMgr.checkAccess(caller.getCaller(),null,loadBalancer);
  try {
    if (loadBalancer.getState() == FirewallRule.State.Active) {
      loadBalancer.setState(FirewallRule.State.Add);
      _lbDao.persist(loadBalancer);
    }
    stickinessPolicy.setRevoke(true);
    _lb2stickinesspoliciesDao.persist(stickinessPolicy);
    s_logger.debug("Set load balancer rule for revoke: rule id " + loadBalancerId + ", stickinesspolicyID "+ stickinessPolicyId);
    if (!applyLoadBalancerConfig(loadBalancerId)) {
      s_logger.warn("Failed to remove load balancer rule id " + loadBalancerId + " for stickinesspolicyID "+ stickinessPolicyId);
      throw new CloudRuntimeException("Failed to remove load balancer rule id " + loadBalancerId + " for stickinesspolicyID "+ stickinessPolicyId);
    }
  }
 catch (  ResourceUnavailableException e) {
    s_logger.warn("Unable to apply the load balancer config because resource is unavaliable.",e);
    return false;
  }
  return true;
}
