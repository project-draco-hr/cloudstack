{
  UserContext caller=UserContext.current();
  LoadBalancerVO loadBalancer=_lbDao.findById(cmd.getLbRuleId());
  if (loadBalancer == null) {
    throw new InvalidParameterValueException("Failed: LB rule id: " + cmd.getLbRuleId() + " not present ");
  }
  _accountMgr.checkAccess(caller.getCaller(),null,true,loadBalancer);
  if (loadBalancer.getState() == FirewallRule.State.Revoke) {
    throw new InvalidParameterValueException("Failed:  LB rule id:" + cmd.getLbRuleId() + " is in deleting state: ");
  }
  if (!genericValidator(cmd)) {
    throw new InvalidParameterValueException("Failed to create Stickiness policy: Validation Failed " + cmd.getLbRuleId());
  }
  LBStickinessPolicyVO lbpolicy=new LBStickinessPolicyVO(loadBalancer.getId(),cmd.getLBStickinessPolicyName(),cmd.getStickinessMethodName(),cmd.getparamList(),cmd.getDescription());
  List<LbStickinessPolicy> policyList=new ArrayList<LbStickinessPolicy>();
  policyList.add(new LbStickinessPolicy(cmd.getStickinessMethodName(),lbpolicy.getParams()));
  LoadBalancingRule lbRule=new LoadBalancingRule(loadBalancer,getExistingDestinations(lbpolicy.getId()),policyList);
  if (!_networkMgr.validateRule(lbRule)) {
    throw new InvalidParameterValueException("Failed to create Stickiness policy: Validation Failed " + cmd.getLbRuleId());
  }
  LBStickinessPolicyVO policy=new LBStickinessPolicyVO(loadBalancer.getId(),cmd.getLBStickinessPolicyName(),cmd.getStickinessMethodName(),cmd.getparamList(),cmd.getDescription());
  policy=_lb2stickinesspoliciesDao.persist(policy);
  loadBalancer.setState(FirewallRule.State.Add);
  _lbDao.persist(loadBalancer);
  return policy;
}
