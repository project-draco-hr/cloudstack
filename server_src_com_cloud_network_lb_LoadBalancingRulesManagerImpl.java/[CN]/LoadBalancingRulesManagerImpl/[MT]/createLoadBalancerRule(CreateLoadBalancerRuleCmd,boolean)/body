{
  Account lbOwner=_accountMgr.getAccount(lb.getEntityOwnerId());
  int defPortStart=lb.getDefaultPortStart();
  int defPortEnd=lb.getDefaultPortEnd();
  if (!NetUtils.isValidPort(defPortEnd)) {
    throw new InvalidParameterValueException("privatePort is an invalid value: " + defPortEnd);
  }
  if (defPortStart > defPortEnd) {
    throw new InvalidParameterValueException("private port range is invalid: " + defPortStart + "-"+ defPortEnd);
  }
  if ((lb.getAlgorithm() == null) || !NetUtils.isValidAlgorithm(lb.getAlgorithm())) {
    throw new InvalidParameterValueException("Invalid algorithm: " + lb.getAlgorithm());
  }
  Long ipAddrId=lb.getSourceIpAddressId();
  IPAddressVO ipAddressVo=null;
  if (ipAddrId != null) {
    ipAddressVo=_ipAddressDao.findById(ipAddrId);
    if (ipAddressVo == null) {
      throw new InvalidParameterValueException("Unable to create load balance rule; ip id=" + ipAddrId + " doesn't exist in the system");
    }
 else     if (ipAddressVo.isOneToOneNat()) {
      throw new NetworkRuleConflictException("Can't do load balance on ip address: " + ipAddressVo.getAddress());
    }
    _networkMgr.checkIpForService(ipAddressVo,Service.Lb);
  }
  LoadBalancer result=_elbMgr.handleCreateLoadBalancerRule(lb,lbOwner,lb.getNetworkId());
  if (result == null) {
    IpAddress ip=null;
    Network guestNetwork=_networkMgr.getNetwork(lb.getNetworkId());
    NetworkOffering off=_configMgr.getNetworkOffering(guestNetwork.getNetworkOfferingId());
    if (off.getElasticLb() && ipAddressVo == null) {
      ip=_networkMgr.assignSystemIp(lb.getNetworkId(),lbOwner,true,false);
      lb.setSourceIpAddressId(ip.getId());
    }
    try {
      result=createLoadBalancer(lb,openFirewall);
    }
 catch (    Exception ex) {
      s_logger.warn("Failed to create load balancer due to ",ex);
      if (ex instanceof NetworkRuleConflictException) {
        throw (NetworkRuleConflictException)ex;
      }
    }
 finally {
      if (result == null && ip != null) {
        s_logger.debug("Releasing system IP address " + ip + " as corresponding lb rule failed to create");
        _networkMgr.handleSystemIpRelease(ip);
      }
    }
  }
  if (result == null) {
    throw new CloudRuntimeException("Failed to create load balancer rule: " + lb.getName());
  }
  return result;
}
