{
  SummedCapactySearch=createSearchBuilder(SummedCapacity.class);
  SummedCapactySearch.select("sumUsed",Func.SUM,SummedCapactySearch.entity().getUsedCapacity());
  SummedCapactySearch.select("sumTotal",Func.SUM,SummedCapactySearch.entity().getTotalCapacity());
  SummedCapactySearch.select("clusterId",Func.NATIVE,SummedCapactySearch.entity().getClusterId());
  SummedCapactySearch.select("podId",Func.NATIVE,SummedCapactySearch.entity().getPodId());
  SummedCapactySearch.and("dcId",SummedCapactySearch.entity().getDataCenterId(),Op.EQ);
  SummedCapactySearch.and("capacityType",SummedCapactySearch.entity().getCapacityType(),Op.EQ);
  SummedCapactySearch.groupBy(SummedCapactySearch.entity().getClusterId());
  if (podId != null) {
    SummedCapactySearch.and("podId",SummedCapactySearch.entity().getPodId(),Op.EQ);
  }
  if (clusterId != null) {
    SummedCapactySearch.and("clusterId",SummedCapactySearch.entity().getClusterId(),Op.EQ);
  }
  SummedCapactySearch.done();
  SearchCriteria<SummedCapacity> sc=SummedCapactySearch.create();
  sc.setParameters("dcId",zoneId);
  sc.setParameters("capacityType",capacityType);
  if (podId != null) {
    sc.setParameters("podId",podId);
  }
  if (clusterId != null) {
    sc.setParameters("clusterId",clusterId);
  }
  Filter filter=new Filter(CapacityVO.class,null,true,startIndex,pageSize);
  List<SummedCapacity> results=customSearchIncludingRemoved(sc,filter);
  return results;
}
