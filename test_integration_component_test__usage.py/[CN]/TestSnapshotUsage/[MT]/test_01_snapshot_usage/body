def test_01_snapshot_usage(self):
    'Test Create/Delete a manual snap shot and verify\n        correct usage is recorded \n        '
    volumes = list_volumes(self.apiclient, virtualmachineid=self.virtual_machine.id, type='ROOT', listall=True)
    self.assertEqual(isinstance(volumes, list), True, 'Check if list volumes return a valid data')
    volume = volumes[0]
    self.debug(('Creating snapshot from volume: %s' % volumes[0].id))
    snapshot = Snapshot.create(self.apiclient, volumes[0].id)
    self.debug(('Deleting snapshot: %s' % snapshot.id))
    snapshot.delete(self.apiclient)
    self.debug(("select id from account where uuid = '%s';" % self.account.account.id))
    qresultset = self.dbclient.execute(("select id from account where uuid = '%s';" % self.account.account.id))
    self.assertEqual(isinstance(qresultset, list), True, 'Check DB query result set for valid data')
    self.assertNotEqual(len(qresultset), 0, 'Check DB Query result set')
    qresult = qresultset[0]
    account_id = qresult[0]
    self.debug(("select type from usage_event where account_id = '%s';" % account_id))
    qresultset = self.dbclient.execute(("select type from usage_event where account_id = '%s';" % account_id))
    self.assertEqual(isinstance(qresultset, list), True, 'Check if database query returns a valid data')
    self.assertNotEqual(len(qresultset), 0, 'Check DB Query result set')
    qresult = str(qresultset)
    self.debug(('Query Result: %s' % qresult))
    self.assertEqual(qresult.count('SNAPSHOT.CREATE'), 1, 'Check SNAPSHOT.CREATE event in events table')
    self.assertEqual(qresult.count('SNAPSHOT.DELETE'), 1, 'Check SNAPSHOT.DELETE in events table')
    return
