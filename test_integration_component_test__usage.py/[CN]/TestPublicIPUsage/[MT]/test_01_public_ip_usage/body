def test_01_public_ip_usage(self):
    'Test Assign new IP and verify usage calculation \n        '
    self.debug(('Deleting public IP: %s' % self.public_ip.ipaddress.ipaddress))
    self.public_ip.delete(self.apiclient)
    self.debug(("select id from account where uuid = '%s';" % self.account.account.id))
    qresultset = self.dbclient.execute(("select id from account where uuid = '%s';" % self.account.account.id))
    self.assertEqual(isinstance(qresultset, list), True, 'Check DB query result set for valid data')
    self.assertNotEqual(len(qresultset), 0, 'Check DB Query result set')
    qresult = qresultset[0]
    account_id = qresult[0]
    self.debug(("select type from usage_event where account_id = '%s';" % account_id))
    qresultset = self.dbclient.execute(("select type from usage_event where account_id = '%s';" % account_id))
    self.assertEqual(isinstance(qresultset, list), True, 'Check DB query result set for valid data')
    self.assertNotEqual(len(qresultset), 0, 'Check DB Query result set')
    qresult = str(qresultset)
    self.assertEqual((qresult.count('NET.IPASSIGN') > 0), True, 'Check NET.IPASSIGN event in events table')
    self.assertEqual((qresult.count('NET.IPRELEASE') > 0), True, 'Check NET.IPRELEASE in events table')
    return
