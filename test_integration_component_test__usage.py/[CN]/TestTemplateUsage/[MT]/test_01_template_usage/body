def test_01_template_usage(self):
    'Test Upload/ delete a template and verify correct usage is generated\n            for the template uploaded\n        '
    self.template = Template.create(self.apiclient, self.services['templates'], self.volume.id)
    self.debug(('Created template with ID: %s' % self.template.id))
    self.template.delete(self.apiclient)
    self.debug(('Deleted template with ID: %s' % self.template.id))
    self.debug(("select id from account where uuid = '%s';" % self.account.account.id))
    qresultset = self.dbclient.execute(("select id from account where uuid = '%s';" % self.account.account.id))
    self.assertEqual(isinstance(qresultset, list), True, 'Check DB query result set for valid data')
    self.assertNotEqual(len(qresultset), 0, 'Check DB Query result set')
    qresult = qresultset[0]
    account_id = qresult[0]
    self.debug(("select type from usage_event where account_id = '%s';" % account_id))
    qresultset = self.dbclient.execute(("select type from usage_event where account_id = '%s';" % account_id))
    self.assertEqual(isinstance(qresultset, list), True, 'Check DB query result set for valid data')
    self.assertNotEqual(len(qresultset), 0, 'Check DB Query result set')
    qresult = str(qresultset)
    self.debug(('Query result: %s' % qresult))
    self.assertEqual(qresult.count('TEMPLATE.CREATE'), 1, 'Check TEMPLATE.CREATE event in events table')
    self.assertEqual(qresult.count('TEMPLATE.DELETE'), 1, 'Check TEMPLATE.DELETE in events table')
    return
