def test_01_lb_usage(self):
    'Test Create/Delete a LB rule and verify correct usage is recorded\n        '
    self.debug(('Creating load balancer rule for public IP: %s' % self.public_ip_1.ipaddress.id))
    lb_rule = LoadBalancerRule.create(self.apiclient, self.services['lbrule'], self.public_ip_1.ipaddress.id, accountid=self.account.account.name)
    self.debug(('Deleting LB rule with ID: %s' % lb_rule.id))
    lb_rule.delete(self.apiclient)
    self.debug(("select id from account where uuid = '%s';" % self.account.account.id))
    qresultset = self.dbclient.execute(("select id from account where uuid = '%s';" % self.account.account.id))
    self.assertEqual(isinstance(qresultset, list), True, 'Check DB query result set for valid data')
    self.assertNotEqual(len(qresultset), 0, 'Check DB Query result set')
    qresult = qresultset[0]
    account_id = qresult[0]
    self.debug(("select type from usage_event where account_id = '%s';" % account_id))
    qresultset = self.dbclient.execute(("select type from usage_event where account_id = '%s';" % account_id))
    self.assertEqual(isinstance(qresultset, list), True, 'Check DB query result set for valid data')
    self.assertNotEqual(len(qresultset), 0, 'Check DB Query result set')
    qresult = str(qresultset)
    self.debug(('Query result: %s' % qresult))
    self.assertEqual(qresult.count('LB.CREATE'), 1, 'Check LB.CREATE event in events table')
    self.assertEqual(qresult.count('LB.DELETE'), 1, 'Check LB.DELETE in events table')
    return
