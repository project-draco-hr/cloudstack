{
  final long networkId=gateway.getNetworkId();
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    final TransactionStatus status){
      final List<PrivateIpVO> privateIps=_privateIpDao.listByNetworkId(networkId);
      if (privateIps.size() > 1 || !privateIps.get(0).getIpAddress().equalsIgnoreCase(gateway.getIp4Address())) {
        s_logger.debug("Not removing network id=" + gateway.getNetworkId() + " as it has private ip addresses for other gateways");
        deleteNetwork=false;
      }
      final PrivateIpVO ip=_privateIpDao.findByIpAndVpcId(gateway.getVpcId(),gateway.getIp4Address());
      if (ip != null) {
        _privateIpDao.remove(ip.getId());
        s_logger.debug("Deleted private ip " + ip);
      }
      _vpcGatewayDao.remove(gateway.getId());
      s_logger.debug("Deleted private gateway " + gateway);
    }
  }
);
  return deleteNetwork;
}
