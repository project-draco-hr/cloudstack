{
  try {
    s_eventBus=ComponentContext.getComponent(EventBus.class);
  }
 catch (  NoSuchBeanDefinitionException nbe) {
    return;
  }
  String entityType=null;
  String entityUuid=null;
  CallContext context=CallContext.current();
  String vmEntityName=ReflectUtil.getEntityName(VirtualMachine.class);
  String vmuuid=(String)context.getContextParameter(vmEntityName);
  Class entityKey=getEntityKey(eventType);
  if (entityKey != null) {
    entityUuid=(String)context.getContextParameter(entityKey);
    if (entityUuid != null)     entityType=entityKey.getName();
  }
 else   if (EventTypes.getEntityForEvent(eventType) != null) {
    entityType=EventTypes.getEntityForEvent(eventType);
    if (entityType != null) {
      entityUuid=(String)context.getContextParameter(entityType);
    }
  }
  org.apache.cloudstack.framework.events.Event event=new org.apache.cloudstack.framework.events.Event(ManagementService.Name,eventCategory,eventType,EventTypes.getEntityForEvent(eventType),entityUuid);
  Map<String,String> eventDescription=new HashMap<String,String>();
  Project project=s_projectDao.findByProjectAccountId(accountId);
  Account account=s_accountDao.findById(accountId);
  User user=s_userDao.findById(userId);
  if (account == null)   return;
  if (user == null)   return;
  if (project != null)   eventDescription.put("project",project.getUuid());
  eventDescription.put("user",user.getUuid());
  eventDescription.put("account",account.getUuid());
  eventDescription.put("event",eventType);
  eventDescription.put("status",state.toString());
  eventDescription.put("entity",entityType);
  eventDescription.put("entityuuid",entityUuid);
  eventDescription.put(vmEntityName,vmuuid);
  eventDescription.put("description",description);
  String eventDate=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss Z").format(new Date());
  eventDescription.put("eventDateTime",eventDate);
  event.setDescription(eventDescription);
  try {
    s_eventBus.publish(event);
  }
 catch (  EventBusException e) {
    s_logger.warn("Failed to publish action event on the the event bus.");
  }
}
