@attr(tags=['advanced', 'simulator', 'basic', 'sg'], required_hardware=False)
def test_role_lifecycle_update_role_inuse(self):
    '\n            Tests role update when role is in use by an account\n        '
    new_role_name = self.getRandomRoleName()
    try:
        self.role.update(self.apiclient, name=new_role_name, type='Admin')
        self.fail('Updation of role type is not allowed when role is in use')
    except CloudstackAPIException:
        pass
    self.role.update(self.apiclient, name=new_role_name)
    update_role = Role.list(self.apiclient, id=self.role.id)[0]
    self.assertEqual(update_role.name, new_role_name, msg='Role name does not match updated role name')
