@attr(tags=['advanced', 'simulator', 'basic', 'sg'], required_hardware=False)
def test_rolepermission_lifecycle_concurrent_updates(self):
    '\n            Tests concurrent order updation of role permission\n        '
    permissions = [self.rolepermission]
    rules = ['list*', '*Vol*', 'listCapabilities']
    for rule in rules:
        data = copy.deepcopy(self.testdata['rolepermission'])
        data['rule'] = rule
        permission = RolePermission.create(self.apiclient, data)
        self.cleanup.append(permission)
        permissions.append(permission)
    data = copy.deepcopy(self.testdata['rolepermission'])
    data['rule'] = 'someRule*'
    permission = RolePermission.create(self.apiclient, data)
    self.cleanup.append(permission)
    shuffle(permissions)
    try:
        permission.update(self.apiclient, ruleorder=','.join(map((lambda x: x.id), permissions)))
        self.fail('Reordering should fail in case of concurrent updates by other user')
    except CloudstackAPIException:
        pass
