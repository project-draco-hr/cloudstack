{
  ListResponse<HostResponse> response=null;
  if (getVirtualMachineId() == null) {
    response=_queryService.searchForServers(this);
  }
 else {
    Pair<List<? extends Host>,Integer> result;
    List<? extends Host> hostsWithCapacity=new ArrayList<Host>();
    Pair<Pair<List<? extends Host>,Integer>,List<? extends Host>> hostsForMigration=_mgr.listHostsForMigrationOfVM(getVirtualMachineId(),this.getStartIndex(),this.getPageSizeVal());
    result=hostsForMigration.first();
    hostsWithCapacity=hostsForMigration.second();
    response=new ListResponse<HostResponse>();
    List<HostResponse> hostResponses=new ArrayList<HostResponse>();
    for (    Host host : result.first()) {
      HostResponse hostResponse=_responseGenerator.createHostResponse(host,getDetails());
      Boolean suitableForMigration=false;
      if (hostsWithCapacity.contains(host)) {
        suitableForMigration=true;
      }
      hostResponse.setSuitableForMigration(suitableForMigration);
      hostResponse.setObjectName("host");
      hostResponses.add(hostResponse);
    }
    response.setResponses(hostResponses,result.second());
  }
  response.setResponseName(getCommandName());
  this.setResponseObject(response);
}
