def test_02_project_disk_offerings(self):
    ' Test project disk offerings\n        '
    project = Project.create(self.apiclient, self.services['project'], account=self.account.account.name, domainid=self.account.account.domainid)
    self.cleanup.append(project)
    self.debug(('Created project with domain admin with ID: %s' % project.id))
    list_projects_reponse = Project.list(self.apiclient, id=project.id, listall=True)
    self.assertEqual(isinstance(list_projects_reponse, list), True, 'Check for a valid list projects response')
    list_project = list_projects_reponse[0]
    self.assertNotEqual(len(list_projects_reponse), 0, 'Check list project response returns a valid project')
    self.assertEqual(project.name, list_project.name, 'Check project name from list response')
    self.debug(('Create a data volume for project: %s' % project.id))
    volume = Volume.create(self.apiclient, self.services['volume'], zoneid=self.zone.id, diskofferingid=self.disk_offering.id, projectid=project.id)
    self.cleanup.append(volume)
    self.assertEqual((volume.state in ['Allocated', 'Ready']), True, 'Check Volume state is Ready or not')
    return
