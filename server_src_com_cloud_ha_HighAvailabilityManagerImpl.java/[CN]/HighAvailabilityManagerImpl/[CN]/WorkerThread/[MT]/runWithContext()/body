{
  HaWorkVO work=null;
  try {
    s_logger.trace("Checking the database for work");
    work=_haDao.take(_serverId);
    if (work == null) {
      try {
synchronized (this) {
          wait(_timeToSleep);
        }
        return;
      }
 catch (      final InterruptedException e) {
        s_logger.info("Interrupted");
        return;
      }
    }
    NDC.push("work-" + work.getId());
    s_logger.info("Processing work " + work);
    processWork(work);
  }
 catch (  final Throwable th) {
    s_logger.error("Caught this throwable, ",th);
  }
 finally {
    if (work != null) {
      NDC.pop();
    }
  }
}
