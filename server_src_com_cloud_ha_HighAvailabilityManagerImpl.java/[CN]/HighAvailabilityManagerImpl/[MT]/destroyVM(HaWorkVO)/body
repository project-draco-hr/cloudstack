{
  final VirtualMachineGuru<VMInstanceVO> mgr=findManager(work.getType());
  final VMInstanceVO vm=mgr.findById(work.getInstanceId());
  s_logger.info("Destroying " + vm.toString());
  try {
    if (vm.getState() != State.Destroyed) {
      s_logger.info("VM is no longer in Destroyed state " + vm.toString());
      return null;
    }
    if (vm.getHostId() != null) {
      if (_itMgr.destroy(vm,_accountMgr.getSystemUser(),_accountMgr.getSystemAccount())) {
        s_logger.info("Successfully destroy " + vm);
        return null;
      }
      s_logger.debug("Stop for " + vm + " was unsuccessful.");
    }
 else {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug(vm + " has already been stopped");
      }
      return null;
    }
  }
 catch (  final AgentUnavailableException e) {
    s_logger.debug("Agnet is not available" + e.getMessage());
  }
catch (  OperationTimedoutException e) {
    s_logger.debug("operation timed out: " + e.getMessage());
  }
catch (  ConcurrentOperationException e) {
    s_logger.debug("concurrent operation: " + e.getMessage());
  }
  work.setTimesTried(work.getTimesTried() + 1);
  return (System.currentTimeMillis() >> 10) + _stopRetryInterval;
}
