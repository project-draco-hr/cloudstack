{
  long vmId=work.getInstanceId();
  long srcHostId=work.getHostId();
  try {
    work.setStep(Step.Migrating);
    _haDao.update(work.getId(),work);
    if (!_itMgr.migrateAway(work.getType(),vmId,srcHostId)) {
      s_logger.warn("Unable to migrate vm from " + srcHostId);
      _resourceMgr.maintenanceFailed(srcHostId);
    }
    return null;
  }
 catch (  InsufficientServerCapacityException e) {
    s_logger.warn("Insufficient capacity for migrating a VM.");
    _resourceMgr.maintenanceFailed(srcHostId);
    return (System.currentTimeMillis() >> 10) + _migrateRetryInterval;
  }
catch (  VirtualMachineMigrationException e) {
    s_logger.warn("Looks like VM is still starting, we need to retry migrating the VM later.");
    _resourceMgr.maintenanceFailed(srcHostId);
    return (System.currentTimeMillis() >> 10) + _migrateRetryInterval;
  }
}
