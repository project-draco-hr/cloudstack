{
  final Map<Long,AgentVmInfo> states=convertToIds(newStates);
  final ArrayList<Command> commands=new ArrayList<Command>();
  boolean nativeHA=isHostClusterNativeHAEnabled(hostId);
  for (  final Map.Entry<Long,AgentVmInfo> entry : states.entrySet()) {
    final AgentVmInfo info=entry.getValue();
    final VMInstanceVO vm=info.mgr.findById(entry.getKey());
    Command command=null;
    if (vm != null && vm.getHostId() != null && vm.getHostId() == hostId) {
      command=compareState(vm,info,false,nativeHA);
    }
 else {
      if (nativeHA) {
        if (vm.getHostId() != null && vm.getHostId() != hostId && info.state == VirtualMachine.State.Running) {
          vm.setHostId(hostId);
          _instanceDao.update(vm.getId(),vm);
          s_logger.info("Native is enabled and we found VM has been switched from host " + vm.getHostId() + " to "+ hostId);
          command=compareState(vm,info,false,nativeHA);
        }
      }
 else {
        s_logger.debug("VM is not found.  Stopping " + info.name);
        command=info.mgr.cleanup(null,info.name);
      }
    }
    if (command != null) {
      commands.add(command);
    }
  }
  return commands;
}
