{
  final List<NetworkACLTO> rulesTO=new ArrayList<NetworkACLTO>();
  String guestVlan=null;
  final Network guestNtwk=_networkDao.findById(guestNetworkId);
  final URI uri=guestNtwk.getBroadcastUri();
  if (uri != null) {
    guestVlan=BroadcastDomainType.getValue(uri);
  }
  if (rules != null) {
    for (    final NetworkACLItem rule : rules) {
      final NetworkACLTO ruleTO=new NetworkACLTO(rule,guestVlan,rule.getTrafficType());
      rulesTO.add(ruleTO);
    }
  }
  final SetNetworkACLCommand cmd=new SetNetworkACLCommand(rulesTO,_networkHelper.getNicTO(router,guestNetworkId,null));
  cmd.setAccessDetail(NetworkElementCommand.ROUTER_IP,_routerControlHelper.getRouterControlIp(router.getId()));
  cmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP,_routerControlHelper.getRouterIpInNetwork(guestNetworkId,router.getId()));
  cmd.setAccessDetail(NetworkElementCommand.GUEST_VLAN_TAG,guestVlan);
  cmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME,router.getInstanceName());
  final DataCenterVO dcVo=_dcDao.findById(router.getDataCenterId());
  cmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE,dcVo.getNetworkType().toString());
  if (privateGateway) {
    cmd.setAccessDetail(NetworkElementCommand.VPC_PRIVATE_GATEWAY,String.valueOf(VpcGateway.Type.Private));
  }
  cmds.addCommand(cmd);
}
