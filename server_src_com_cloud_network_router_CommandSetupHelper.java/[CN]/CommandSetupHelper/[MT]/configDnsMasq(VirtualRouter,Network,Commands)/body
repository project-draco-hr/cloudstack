{
  final DataCenterVO dcVo=_dcDao.findById(router.getDataCenterId());
  final List<NicIpAliasVO> ipAliasVOList=_nicIpAliasDao.listByNetworkIdAndState(network.getId(),NicIpAlias.state.active);
  final List<DhcpTO> ipList=new ArrayList<DhcpTO>();
  final NicVO router_guest_nic=_nicDao.findByNtwkIdAndInstanceId(network.getId(),router.getId());
  final String cidr=NetUtils.getCidrFromGatewayAndNetmask(router_guest_nic.getIPv4Gateway(),router_guest_nic.getIPv4Netmask());
  final String[] cidrPair=cidr.split("\\/");
  final String cidrAddress=cidrPair[0];
  final long cidrSize=Long.parseLong(cidrPair[1]);
  final String startIpOfSubnet=NetUtils.getIpRangeStartIpFromCidr(cidrAddress,cidrSize);
  ipList.add(new DhcpTO(router_guest_nic.getIPv4Address(),router_guest_nic.getIPv4Gateway(),router_guest_nic.getIPv4Netmask(),startIpOfSubnet));
  for (  final NicIpAliasVO ipAliasVO : ipAliasVOList) {
    final DhcpTO DhcpTO=new DhcpTO(ipAliasVO.getIp4Address(),ipAliasVO.getGateway(),ipAliasVO.getNetmask(),ipAliasVO.getStartIpOfSubnet());
    if (s_logger.isTraceEnabled()) {
      s_logger.trace("configDnsMasq : adding ip {" + DhcpTO.getGateway() + ", "+ DhcpTO.getNetmask()+ ", "+ DhcpTO.getRouterIp()+ ", "+ DhcpTO.getStartIpOfSubnet()+ "}");
    }
    ipList.add(DhcpTO);
    ipAliasVO.setVmId(router.getId());
  }
  _dcDao.findById(router.getDataCenterId());
  final DnsMasqConfigCommand dnsMasqConfigCmd=new DnsMasqConfigCommand(ipList);
  dnsMasqConfigCmd.setAccessDetail(NetworkElementCommand.ROUTER_IP,_routerControlHelper.getRouterControlIp(router.getId()));
  dnsMasqConfigCmd.setAccessDetail(NetworkElementCommand.ROUTER_NAME,router.getInstanceName());
  dnsMasqConfigCmd.setAccessDetail(NetworkElementCommand.ROUTER_GUEST_IP,_routerControlHelper.getRouterIpInNetwork(network.getId(),router.getId()));
  dnsMasqConfigCmd.setAccessDetail(NetworkElementCommand.ZONE_NETWORK_TYPE,dcVo.getNetworkType().toString());
  cmds.addCommand("dnsMasqConfig",dnsMasqConfigCmd);
}
