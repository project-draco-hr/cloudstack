def test_02_edit_iso(self):
    'Test Edit ISO\n        '
    new_displayText = random_gen()
    new_name = random_gen()
    self.debug(('Updating ISO permissions for ISO: %s' % self.iso_1.id))
    cmd = updateIso.updateIsoCmd()
    cmd.id = self.iso_1.id
    cmd.displaytext = new_displayText
    cmd.name = new_name
    cmd.bootable = self.services['bootable']
    cmd.passwordenabled = self.services['passwordenabled']
    self.apiclient.updateIso(cmd)
    list_iso_response = list_isos(self.apiclient, id=self.iso_1.id)
    self.assertEqual(isinstance(list_iso_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_iso_response), 0, 'Check template available in List ISOs')
    iso_response = list_iso_response[0]
    self.assertEqual(iso_response.displaytext, new_displayText, 'Check display text of updated ISO')
    self.assertEqual(iso_response.name, new_name, 'Check name of updated ISO')
    self.assertEqual(iso_response.bootable, self.services['bootable'], 'Check if image is bootable of updated ISO')
    self.assertEqual(iso_response.ostypeid, self.services['ostypeid'], 'Check OSTypeID of updated ISO')
    return
