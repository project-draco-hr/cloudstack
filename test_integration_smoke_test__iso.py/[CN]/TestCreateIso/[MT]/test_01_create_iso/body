def test_01_create_iso(self):
    'Test create public & private ISO\n        '
    iso = Iso.create(self.apiclient, self.services['iso_2'], account=self.account.account.name, domainid=self.account.account.domainid)
    self.debug(('ISO created with ID: %s' % iso.id))
    try:
        iso.download(self.apiclient)
    except Exception as e:
        self.fail(('Exception while downloading ISO %s: %s' % (iso.id, e)))
    list_iso_response = list_isos(self.apiclient, id=iso.id)
    self.assertEqual(isinstance(list_iso_response, list), True, 'Check list response returns a valid list')
    self.assertNotEqual(len(list_iso_response), 0, 'Check template available in List ISOs')
    iso_response = list_iso_response[0]
    self.assertEqual(iso_response.displaytext, self.services['iso_2']['displaytext'], 'Check display text of newly created ISO')
    self.assertEqual(iso_response.name, self.services['iso_2']['name'], 'Check name of newly created ISO')
    self.assertEqual(iso_response.zoneid, self.services['iso_2']['zoneid'], 'Check zone ID of newly created ISO')
    return
