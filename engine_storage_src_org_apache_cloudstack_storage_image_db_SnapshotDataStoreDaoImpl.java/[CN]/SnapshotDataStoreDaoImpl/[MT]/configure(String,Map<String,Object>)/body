{
  super.configure(name,params);
  storeSearch=createSearchBuilder();
  storeSearch.and("store_id",storeSearch.entity().getDataStoreId(),SearchCriteria.Op.EQ);
  storeSearch.and("store_role",storeSearch.entity().getRole(),SearchCriteria.Op.EQ);
  storeSearch.and("state",storeSearch.entity().getState(),SearchCriteria.Op.NEQ);
  storeSearch.done();
  destroyedSearch=createSearchBuilder();
  destroyedSearch.and("store_id",destroyedSearch.entity().getDataStoreId(),SearchCriteria.Op.EQ);
  destroyedSearch.and("store_role",destroyedSearch.entity().getRole(),SearchCriteria.Op.EQ);
  destroyedSearch.and("state",destroyedSearch.entity().getState(),SearchCriteria.Op.EQ);
  destroyedSearch.done();
  cacheSearch=createSearchBuilder();
  cacheSearch.and("store_id",cacheSearch.entity().getDataStoreId(),SearchCriteria.Op.EQ);
  cacheSearch.and("store_role",cacheSearch.entity().getRole(),SearchCriteria.Op.EQ);
  cacheSearch.and("state",cacheSearch.entity().getState(),SearchCriteria.Op.NEQ);
  cacheSearch.and("ref_cnt",cacheSearch.entity().getRefCnt(),SearchCriteria.Op.NEQ);
  cacheSearch.done();
  updateStateSearch=this.createSearchBuilder();
  updateStateSearch.and("id",updateStateSearch.entity().getId(),Op.EQ);
  updateStateSearch.and("state",updateStateSearch.entity().getState(),Op.EQ);
  updateStateSearch.and("updatedCount",updateStateSearch.entity().getUpdatedCount(),Op.EQ);
  updateStateSearch.done();
  snapshotSearch=createSearchBuilder();
  snapshotSearch.and("snapshot_id",snapshotSearch.entity().getSnapshotId(),SearchCriteria.Op.EQ);
  snapshotSearch.and("store_role",snapshotSearch.entity().getRole(),SearchCriteria.Op.EQ);
  snapshotSearch.done();
  storeSnapshotSearch=createSearchBuilder();
  storeSnapshotSearch.and("snapshot_id",storeSnapshotSearch.entity().getSnapshotId(),SearchCriteria.Op.EQ);
  storeSnapshotSearch.and("store_id",storeSnapshotSearch.entity().getDataStoreId(),SearchCriteria.Op.EQ);
  storeSnapshotSearch.and("store_role",storeSnapshotSearch.entity().getRole(),SearchCriteria.Op.EQ);
  storeSnapshotSearch.and("state",storeSnapshotSearch.entity().getState(),SearchCriteria.Op.EQ);
  storeSnapshotSearch.done();
  snapshotIdSearch=createSearchBuilder();
  snapshotIdSearch.and("snapshot_id",snapshotIdSearch.entity().getSnapshotId(),SearchCriteria.Op.EQ);
  snapshotIdSearch.done();
  volumeIdSearch=createSearchBuilder();
  volumeIdSearch.and("volume_id",volumeIdSearch.entity().getVolumeId(),SearchCriteria.Op.EQ);
  volumeIdSearch.done();
  return true;
}
