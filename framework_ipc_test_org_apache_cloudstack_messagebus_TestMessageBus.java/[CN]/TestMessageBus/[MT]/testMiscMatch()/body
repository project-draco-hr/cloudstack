{
  MessageSubscriber subscriberAtParentLevel=new MessageSubscriber(){
    @Override public void onPublishMessage(    String senderAddress,    String subject,    Object args){
      Assert.assertTrue(subject.startsWith(("Host")) || subject.startsWith("VM"));
    }
  }
;
  MessageSubscriber subscriberAtChildLevel=new MessageSubscriber(){
    @Override public void onPublishMessage(    String senderAddress,    String subject,    Object args){
      Assert.assertTrue(subject.equals("Host.123"));
    }
  }
;
  subscriberAtParentLevel=Mockito.spy(subscriberAtParentLevel);
  subscriberAtChildLevel=Mockito.spy(subscriberAtChildLevel);
  _messageBus.subscribe("Host",subscriberAtParentLevel);
  _messageBus.subscribe("VM",subscriberAtParentLevel);
  _messageBus.subscribe("Host.123",subscriberAtChildLevel);
  _messageBus.publish(null,"Host.123",PublishScope.LOCAL,null);
  _messageBus.publish(null,"Host.321",PublishScope.LOCAL,null);
  _messageBus.publish(null,"VM.123",PublishScope.LOCAL,null);
  Mockito.verify(subscriberAtParentLevel).onPublishMessage(null,"Host.123",null);
  Mockito.verify(subscriberAtParentLevel).onPublishMessage(null,"Host.321",null);
  Mockito.verify(subscriberAtParentLevel).onPublishMessage(null,"VM.123",null);
  Mockito.verify(subscriberAtChildLevel).onPublishMessage(null,"Host.123",null);
  Mockito.reset(subscriberAtParentLevel);
  Mockito.reset(subscriberAtChildLevel);
  _messageBus.unsubscribe(null,subscriberAtParentLevel);
  _messageBus.publish(null,"Host.123",PublishScope.LOCAL,null);
  _messageBus.publish(null,"VM.123",PublishScope.LOCAL,null);
  Mockito.verify(subscriberAtChildLevel).onPublishMessage(null,"Host.123",null);
  Mockito.verify(subscriberAtParentLevel,Mockito.times(0)).onPublishMessage(null,"Host.123",null);
  Mockito.verify(subscriberAtParentLevel,Mockito.times(0)).onPublishMessage(null,"VM.123",null);
  _messageBus.clearAll();
}
