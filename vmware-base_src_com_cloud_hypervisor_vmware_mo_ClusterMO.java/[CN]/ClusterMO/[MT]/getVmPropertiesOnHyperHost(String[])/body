{
  if (s_logger.isTraceEnabled())   s_logger.trace("vCenter API trace - retrieveProperties() for VM properties. target MOR: " + _mor.get_value() + ", properties: "+ new Gson().toJson(propertyPaths));
  PropertySpec pSpec=new PropertySpec();
  pSpec.setType("VirtualMachine");
  pSpec.setPathSet(propertyPaths);
  TraversalSpec host2VmFolderTraversal=new TraversalSpec();
  host2VmFolderTraversal.setType("HostSystem");
  host2VmFolderTraversal.setPath("vm");
  host2VmFolderTraversal.setName("host2VmFolderTraversal");
  TraversalSpec cluster2HostFolderTraversal=new TraversalSpec();
  cluster2HostFolderTraversal.setType("ClusterComputeResource");
  cluster2HostFolderTraversal.setPath("host");
  cluster2HostFolderTraversal.setName("cluster2HostFolderTraversal");
  cluster2HostFolderTraversal.setSelectSet(new SelectionSpec[]{host2VmFolderTraversal});
  ObjectSpec oSpec=new ObjectSpec();
  oSpec.setObj(getMor());
  oSpec.setSkip(Boolean.TRUE);
  oSpec.setSelectSet(new SelectionSpec[]{cluster2HostFolderTraversal});
  PropertyFilterSpec pfSpec=new PropertyFilterSpec();
  pfSpec.setPropSet(new PropertySpec[]{pSpec});
  pfSpec.setObjectSet(new ObjectSpec[]{oSpec});
  ObjectContent[] properties=_context.getService().retrieveProperties(_context.getServiceContent().getPropertyCollector(),new PropertyFilterSpec[]{pfSpec});
  if (s_logger.isTraceEnabled())   s_logger.trace("vCenter API trace - retrieveProperties() done");
  return properties;
}
