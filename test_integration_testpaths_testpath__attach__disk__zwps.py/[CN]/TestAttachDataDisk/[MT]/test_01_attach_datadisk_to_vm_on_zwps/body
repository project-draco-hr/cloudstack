@attr(tags=['basic', 'advanced'], required_hardware='true')
def test_01_attach_datadisk_to_vm_on_zwps(self):
    ' Attach Data Disk To VM on ZWPS\n            1.  Check if zwps storage pool exists.\n            2.  Adding tag to zone wide primary storage\n            3.  Launch a VM on ZWPS\n            4.  Attach data disk to vm which is on zwps.\n            5.  Verify disk is attached.\n        '
    if (len(list((storagePool for storagePool in self.pools if (storagePool.scope == 'ZONE')))) < 1):
        self.skipTest('There must be at least one zone wide                 storage pools available in the setup')
    zone_no = 1
    for storagePool in self.pools:
        if (storagePool.scope == 'ZONE'):
            StoragePool.update(self.apiclient, id=storagePool.id, tags=[(ZONETAG1[:(-1)] + repr(zone_no))])
            zone_no += 1
    self.vm = VirtualMachine.create(self.apiclient, self.testdata['small'], templateid=self.template.id, accountid=self.account.name, domainid=self.account.domainid, serviceofferingid=self.service_offering_zone1.id, zoneid=self.zone.id)
    self.data_volume_created = Volume.create(self.userapiclient, self.testdata['volume'], zoneid=self.zone.id, account=self.account.name, domainid=self.account.domainid, diskofferingid=self.disk_offering.id)
    self.cleanup.append(self.data_volume_created)
    self.vm.attach_volume(self.userapiclient, self.data_volume_created)
    data_volumes_list = Volume.list(self.userapiclient, id=self.data_volume_created.id, virtualmachineid=self.vm.id)
    data_volume = data_volumes_list[0]
    status = validateList(data_volume)
    self.assertEqual(status[0], PASS, 'Check: Data if Disk is attached to VM')
    return
