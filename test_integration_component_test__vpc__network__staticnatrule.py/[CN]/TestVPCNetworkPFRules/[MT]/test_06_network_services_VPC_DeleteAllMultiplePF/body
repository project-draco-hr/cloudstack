@attr(tags=['advanced', 'intervlan', 'provisioning'])
def test_06_network_services_VPC_DeleteAllMultiplePF(self):
    ' Test case no 233: Delete all Static NAT rules for two/multiple virtual networks of a VPC. \n            Observe the status of the Public IP Addresses of the rules when the Virtual Router is in Running State.\n        '
    network_1 = self.create_Network(self.services['network_offering'])
    network_2 = self.create_Network(self.services['network_offering_no_lb'], '10.1.2.1')
    self.create_ingress_rule(network_1)
    self.create_ingress_rule(network_2)
    self.create_ingress_rule(network_1, self.services['http_rule'])
    self.create_ingress_rule(network_2, self.services['http_rule'])
    vm_1 = self.create_VM_in_Network(network_1)
    vm_2 = self.create_VM_in_Network(network_1)
    vm_3 = self.create_VM_in_Network(network_2)
    vm_4 = self.create_VM_in_Network(network_2)
    public_ip_1 = self.acquire_Public_IP(network_1)
    public_ip_2 = self.acquire_Public_IP(network_1)
    public_ip_3 = self.acquire_Public_IP(network_2)
    public_ip_4 = self.acquire_Public_IP(network_2)
    self.create_StaticNatRule_For_VM(vm_1, public_ip_1, network_1)
    self.create_StaticNatRule_For_VM(vm_2, public_ip_2, network_1)
    self.create_StaticNatRule_For_VM(vm_3, public_ip_3, network_2)
    self.create_StaticNatRule_For_VM(vm_4, public_ip_4, network_2)
    self.check_ssh_into_vm(vm_1, public_ip_1, testnegative=False)
    self.check_ssh_into_vm(vm_2, public_ip_2, testnegative=False)
    self.check_ssh_into_vm(vm_3, public_ip_1, testnegative=False)
    self.check_ssh_into_vm(vm_4, public_ip_2, testnegative=False)
    self.check_wget_from_vm(vm_1, public_ip_1, testnegative=False)
    self.check_wget_from_vm(vm_2, public_ip_2, testnegative=False)
    self.check_wget_from_vm(vm_3, public_ip_1, testnegative=False)
    self.check_wget_from_vm(vm_4, public_ip_2, testnegative=False)
    self.delete_StaticNatRule_For_VM(vm_1, public_ip_1)
    self.delete_StaticNatRule_For_VM(vm_2, public_ip_2)
    self.delete_StaticNatRule_For_VM(vm_3, public_ip_3)
    self.delete_StaticNatRule_For_VM(vm_4, public_ip_4)
    self.check_ssh_into_vm(vm_1, public_ip_1, testnegative=True)
    self.check_ssh_into_vm(vm_2, public_ip_2, testnegative=True)
    self.check_ssh_into_vm(vm_3, public_ip_1, testnegative=True)
    self.check_ssh_into_vm(vm_4, public_ip_2, testnegative=True)
    self.check_wget_from_vm(vm_1, public_ip_1, testnegative=True)
    self.check_wget_from_vm(vm_2, public_ip_2, testnegative=True)
    self.check_wget_from_vm(vm_3, public_ip_1, testnegative=True)
    self.check_wget_from_vm(vm_4, public_ip_2, testnegative=True)
    return
