{
  UserAccount user=_userAccountDao.getUserAccount(username,domainId);
  if (user != null) {
    return user;
  }
 else {
    DomainVO domain=_domainDao.findById(domainId);
    if (domain == null) {
      s_logger.debug("Domain with Id :" + domainId + " doesn't exist");
    }
    String command="findUser";
    List<NameValuePair> params=new ArrayList<NameValuePair>();
    params.add(new NameValuePair(ApiConstants.USERNAME,username));
    params.add(new NameValuePair(ApiConstants.DOMAIN_ID,domain.getUuid()));
    RegionUser regionuser=null;
    List<RegionVO> regions=_regionDao.listAll();
    boolean sourceCheck=false;
    for (    Region region : regions) {
      if (region.getId() == getId()) {
        continue;
      }
      s_logger.debug("Looking up user :" + username + " in Region: "+ region.getId());
      regionuser=RegionsApiUtil.makeUserAPICall(region,command,params);
      if (regionuser != null) {
        s_logger.debug("Found user :" + username + " in Region: "+ region.getId());
        if (regionuser.getRegionId() != region.getId()) {
          sourceCheck=true;
        }
        break;
      }
    }
    if (regionuser == null) {
      s_logger.debug("User :" + username + " not found in any Region");
      return null;
    }
    if (sourceCheck) {
      if (regionuser.getRegionId() == getId()) {
        s_logger.debug("Current Region is the source Region for found user: " + username + ". Ignoring..");
        return null;
      }
      s_logger.debug("Verifying user: " + username + " in source Region: "+ regionuser.getRegionId());
      Region sourceRegion=_regionDao.findById(regionuser.getRegionId());
      if (sourceRegion != null) {
        regionuser=RegionsApiUtil.makeUserAPICall(sourceRegion,command,params);
        if (regionuser != null && sourceRegion.getId() == regionuser.getRegionId()) {
          s_logger.debug("Found User :" + username + " in Source Region: "+ sourceRegion.getId()+ " Add to local Region");
        }
 else {
          s_logger.debug("User :" + username + " not found in Source Region: "+ sourceRegion.getId());
          return null;
        }
      }
 else {
        s_logger.debug("Source Region :" + regionuser.getRegionId() + " not found");
        return null;
      }
    }
    if (regionuser != null) {
      Long accountId=_identityDao.getIdentityId("account",regionuser.getAccountuuid());
      if (accountId == null) {
      }
      regionuser.setAccountId(accountId);
      UserVO newuser=(UserVO)regionuser;
      _userDao.persist(newuser);
      return _userAccountDao.getUserAccount(username,domainId);
    }
    return null;
  }
}
