{
  long id=cmd.getId();
  DomainVO domain=_domainDao.findById(id);
  if (domain == null) {
    throw new InvalidParameterValueException("The specified domain doesn't exist in the system");
  }
  String domainUUID=domain.getUuid();
  String command="updateDomain";
  List<NameValuePair> params=new ArrayList<NameValuePair>();
  params.add(new NameValuePair(ApiConstants.ID,domainUUID));
  params.add(new NameValuePair(ApiConstants.NAME,cmd.getDomainName()));
  params.add(new NameValuePair(ApiConstants.NETWORK_DOMAIN,cmd.getNetworkDomain()));
  int regionId=domain.getRegionId();
  if (getId() == regionId) {
    Domain updatedDomain=_domainMgr.updateDomain(cmd);
    if (updatedDomain != null) {
      List<RegionVO> regions=_regionDao.listAll();
      for (      Region region : regions) {
        if (region.getId() == getId()) {
          continue;
        }
        params.add(new NameValuePair(ApiConstants.IS_PROPAGATE,"true"));
        if (RegionsApiUtil.makeAPICall(region,command,params)) {
          s_logger.debug("Successfully updated updatedDomain :" + domainUUID + " in Region: "+ region.getId());
        }
 else {
          s_logger.error("Error while updating updatedDomain :" + domainUUID + " in Region: "+ region.getId());
        }
      }
    }
    return updatedDomain;
  }
 else {
    Region region=_regionDao.findById(regionId);
    RegionDomain updatedDomain=RegionsApiUtil.makeDomainAPICall(region,command,params);
    if (updatedDomain != null) {
      Long parentId=_identityDao.getIdentityId("domain",updatedDomain.getParentUuid());
      updatedDomain.setParent(parentId);
      s_logger.debug("Successfully updated user :" + domainUUID + " in source Region: "+ region.getId());
      return (DomainVO)updatedDomain;
    }
 else {
      throw new CloudRuntimeException("Error while updating user :" + domainUUID + " in source Region: "+ region.getId());
    }
  }
}
