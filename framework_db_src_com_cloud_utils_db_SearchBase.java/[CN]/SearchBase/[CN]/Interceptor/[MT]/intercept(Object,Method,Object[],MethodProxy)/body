{
  final String name=method.getName();
  if (method.getAnnotation(Transient.class) == null) {
    if (name.startsWith("get")) {
      final String fieldName=Character.toLowerCase(name.charAt(3)) + name.substring(4);
      set(fieldName);
      return null;
    }
 else     if (name.startsWith("is")) {
      final String fieldName=Character.toLowerCase(name.charAt(2)) + name.substring(3);
      set(fieldName);
      return null;
    }
 else {
      final Column ann=method.getAnnotation(Column.class);
      if (ann != null) {
        final String colName=ann.name();
        for (        final Map.Entry<String,Attribute> attr : _attrs.entrySet()) {
          if (colName.equals(attr.getValue().columnName)) {
            set(attr.getKey());
            return null;
          }
        }
      }
      throw new RuntimeException("Perhaps you need to make the method start with get or is: " + method);
    }
  }
  return methodProxy.invokeSuper(object,args);
}
