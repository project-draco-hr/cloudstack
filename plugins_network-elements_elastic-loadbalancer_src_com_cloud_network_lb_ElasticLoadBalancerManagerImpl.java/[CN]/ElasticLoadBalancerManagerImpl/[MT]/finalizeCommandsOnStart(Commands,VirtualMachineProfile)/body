{
  DomainRouterVO elbVm=_routerDao.findById(profile.getVirtualMachine().getId());
  DataCenterVO dcVo=_dcDao.findById(elbVm.getDataCenterId());
  NicProfile controlNic=null;
  Long guestNetworkId=null;
  if (profile.getHypervisorType() == HypervisorType.VMware && dcVo.getNetworkType() == NetworkType.Basic) {
    for (    NicProfile nic : profile.getNics()) {
      if (nic.getTrafficType() == TrafficType.Guest && nic.getIPv4Address() != null) {
        controlNic=nic;
        guestNetworkId=nic.getNetworkId();
      }
    }
  }
 else {
    for (    NicProfile nic : profile.getNics()) {
      if (nic.getTrafficType() == TrafficType.Control && nic.getIPv4Address() != null) {
        controlNic=nic;
      }
 else       if (nic.getTrafficType() == TrafficType.Guest) {
        guestNetworkId=nic.getNetworkId();
      }
    }
  }
  if (controlNic == null) {
    logger.error("Control network doesn't exist for the ELB vm " + elbVm);
    return false;
  }
  cmds.addCommand("checkSsh",new CheckSshCommand(profile.getInstanceName(),controlNic.getIPv4Address(),3922));
  List<LoadBalancerVO> lbs=_elbVmMapDao.listLbsForElbVm(elbVm.getId());
  List<LoadBalancingRule> lbRules=new ArrayList<LoadBalancingRule>();
  for (  LoadBalancerVO lb : lbs) {
    List<LbDestination> dstList=_lbMgr.getExistingDestinations(lb.getId());
    List<LbStickinessPolicy> policyList=_lbMgr.getStickinessPolicies(lb.getId());
    List<LbHealthCheckPolicy> hcPolicyList=_lbMgr.getHealthCheckPolicies(lb.getId());
    Ip sourceIp=_networkModel.getPublicIpAddress(lb.getSourceIpAddressId()).getAddress();
    LoadBalancingRule loadBalancing=new LoadBalancingRule(lb,dstList,policyList,hcPolicyList,sourceIp);
    lbRules.add(loadBalancing);
  }
  logger.debug("Found " + lbRules.size() + " load balancing rule(s) to apply as a part of ELB vm "+ elbVm+ " start.");
  if (!lbRules.isEmpty()) {
    createApplyLoadBalancingRulesCommands(lbRules,elbVm,cmds,guestNetworkId);
  }
  return true;
}
