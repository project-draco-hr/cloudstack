{
  try {
    PreparedStatement pstmt=conn.prepareStatement("select h.id, sum(s.speed*s.cpu) from host h, vm_instance v, service_offering s where h.type='Routing' and v.state='Running' and v.`type`='User' and v.host_id=h.id  and v.service_offering_id = s.id group by h.id");
    ResultSet rs=pstmt.executeQuery();
    Map<Long,Long> hostUsedCpuInfo=new HashMap<Long,Long>();
    while (rs.next()) {
      hostUsedCpuInfo.put(rs.getLong(1),rs.getLong(2));
    }
    rs.close();
    pstmt.close();
    int proxyCpuMhz=NumbersUtil.parseInt(getConfigValue(conn,"consoleproxy.cpu.mhz"),ConsoleProxyManager.DEFAULT_PROXY_VM_CPUMHZ);
    int domrCpuMhz=NumbersUtil.parseInt(getConfigValue(conn,"router.cpu.mhz"),VirtualNetworkApplianceManager.DEFAULT_ROUTER_CPU_MHZ);
    int ssvmCpuMhz=NumbersUtil.parseInt(getConfigValue(conn,"secstorage.vm.cpu.mhz"),SecondaryStorageVmManager.DEFAULT_SS_VM_CPUMHZ);
    pstmt=conn.prepareStatement("select h.id, count(v.id) from host h, vm_instance v where h.type='Routing' and v.state='Running' and v.`type`='ConsoleProxy' and v.host_id=h.id group by h.id");
    rs=pstmt.executeQuery();
    while (rs.next()) {
      if (hostUsedCpuInfo.get(rs.getLong(1)) != null) {
        Long usedCpuMhz=hostUsedCpuInfo.get(rs.getLong(1));
        hostUsedCpuInfo.put(rs.getLong(1),rs.getLong(2) * proxyCpuMhz + usedCpuMhz);
      }
 else {
        hostUsedCpuInfo.put(rs.getLong(1),rs.getLong(2) * proxyCpuMhz);
      }
    }
    rs.close();
    pstmt.close();
    pstmt=conn.prepareStatement("select h.id, count(v.id) from host h, vm_instance v where h.type='Routing' and v.state='Running' and v.`type`='DomainRouter' and v.host_id=h.id group by h.id");
    rs=pstmt.executeQuery();
    while (rs.next()) {
      if (hostUsedCpuInfo.get(rs.getLong(1)) != null) {
        Long usedCpuMhz=hostUsedCpuInfo.get(rs.getLong(1));
        hostUsedCpuInfo.put(rs.getLong(1),rs.getLong(2) * domrCpuMhz + usedCpuMhz);
      }
 else {
        hostUsedCpuInfo.put(rs.getLong(1),rs.getLong(2) * domrCpuMhz);
      }
    }
    rs.close();
    pstmt.close();
    pstmt=conn.prepareStatement("select h.id, count(v.id) from host h, vm_instance v where h.type='Routing' and v.state='Running' and v.`type`='SecondaryStorageVm' and v.host_id=h.id group by h.id");
    rs=pstmt.executeQuery();
    while (rs.next()) {
      if (hostUsedCpuInfo.get(rs.getLong(1)) != null) {
        Long usedCpuMhz=hostUsedCpuInfo.get(rs.getLong(1));
        hostUsedCpuInfo.put(rs.getLong(1),rs.getLong(2) * ssvmCpuMhz + usedCpuMhz);
      }
 else {
        hostUsedCpuInfo.put(rs.getLong(1),rs.getLong(2) * ssvmCpuMhz);
      }
    }
    rs.close();
    pstmt.close();
    for (    Map.Entry<Long,Long> entry : hostUsedCpuInfo.entrySet()) {
      pstmt=conn.prepareStatement("update op_host_capacity set used_capacity=? where host_id=? and capacity_type=1");
      pstmt.setLong(1,entry.getValue());
      pstmt.setLong(2,entry.getKey());
      pstmt.executeUpdate();
    }
  }
 catch (  SQLException e) {
    throw new CloudRuntimeException("Can't upgrade host capacity info ",e);
  }
}
