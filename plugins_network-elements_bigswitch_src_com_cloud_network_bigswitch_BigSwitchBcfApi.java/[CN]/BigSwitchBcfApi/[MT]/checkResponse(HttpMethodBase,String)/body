{
  String customErrorMsg=null;
  if (m.getStatusCode() == HttpStatus.SC_OK) {
    String hash="";
    if (m.getResponseHeader(HASH_MATCH) != null) {
      hash=m.getResponseHeader(HASH_MATCH).getValue();
      set_hash(hash);
    }
    return hash;
  }
  if (m.getStatusCode() == HttpStatus.SC_CONFLICT) {
    if (m instanceof GetMethod) {
      return HASH_CONFLICT;
    }
    throw new BigSwitchBcfApiException("BCF topology sync required",true);
  }
  if (m.getStatusCode() == HttpStatus.SC_SEE_OTHER) {
    isMaster=false;
    set_hash(HASH_IGNORE);
    return HASH_IGNORE;
  }
  if (m.getStatusCode() == HttpStatus.SC_NOT_FOUND) {
    if (m instanceof DeleteMethod) {
      return "";
    }
  }
  if (m.getStatusCode() == HttpStatus.SC_BAD_REQUEST) {
    customErrorMsg=" Invalid data in BCF request";
    throw new IllegalArgumentException(customErrorMsg);
  }
  String errorMessage=responseToErrorMessage(m);
  m.releaseConnection();
  S_LOGGER.error(errorMessageBase + errorMessage);
  throw new BigSwitchBcfApiException(errorMessageBase + errorMessage + customErrorMsg);
}
