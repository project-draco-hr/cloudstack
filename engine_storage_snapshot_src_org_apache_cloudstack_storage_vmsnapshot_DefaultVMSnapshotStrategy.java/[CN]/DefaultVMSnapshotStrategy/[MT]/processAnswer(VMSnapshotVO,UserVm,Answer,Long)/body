{
  try {
    Transaction.execute(new TransactionCallbackWithExceptionNoReturn<NoTransitionException>(){
      @Override public void doInTransactionWithoutResult(      TransactionStatus status) throws NoTransitionException {
        if (as instanceof CreateVMSnapshotAnswer) {
          CreateVMSnapshotAnswer answer=(CreateVMSnapshotAnswer)as;
          finalizeCreate(vmSnapshot,answer.getVolumeTOs());
          vmSnapshotHelper.vmSnapshotStateTransitTo(vmSnapshot,VMSnapshot.Event.OperationSucceeded);
        }
 else         if (as instanceof RevertToVMSnapshotAnswer) {
          RevertToVMSnapshotAnswer answer=(RevertToVMSnapshotAnswer)as;
          finalizeRevert(vmSnapshot,answer.getVolumeTOs());
          vmSnapshotHelper.vmSnapshotStateTransitTo(vmSnapshot,VMSnapshot.Event.OperationSucceeded);
        }
 else         if (as instanceof DeleteVMSnapshotAnswer) {
          DeleteVMSnapshotAnswer answer=(DeleteVMSnapshotAnswer)as;
          finalizeDelete(vmSnapshot,answer.getVolumeTOs());
          vmSnapshotDao.remove(vmSnapshot.getId());
        }
      }
    }
);
  }
 catch (  Exception e) {
    String errMsg="Error while process answer: " + as.getClass() + " due to "+ e.getMessage();
    logger.error(errMsg,e);
    throw new CloudRuntimeException(errMsg);
  }
}
