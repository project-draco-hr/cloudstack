{
  Long hostId=vmSnapshotHelper.pickRunningHost(vmSnapshot.getVmId());
  UserVm userVm=userVmDao.findById(vmSnapshot.getVmId());
  VMSnapshotVO vmSnapshotVO=(VMSnapshotVO)vmSnapshot;
  try {
    vmSnapshotHelper.vmSnapshotStateTransitTo(vmSnapshotVO,VMSnapshot.Event.CreateRequested);
  }
 catch (  NoTransitionException e) {
    throw new CloudRuntimeException(e.getMessage());
  }
  CreateVMSnapshotAnswer answer=null;
  boolean result=false;
  try {
    GuestOSVO guestOS=guestOSDao.findById(userVm.getGuestOSId());
    List<VolumeObjectTO> volumeTOs=vmSnapshotHelper.getVolumeTOList(userVm.getId());
    VMSnapshotTO current=null;
    VMSnapshotVO currentSnapshot=vmSnapshotDao.findCurrentSnapshotByVmId(userVm.getId());
    if (currentSnapshot != null)     current=vmSnapshotHelper.getSnapshotWithParents(currentSnapshot);
    VMSnapshotOptions options=((VMSnapshotVO)vmSnapshot).getOptions();
    boolean quiescevm=true;
    if (options != null)     quiescevm=options.needQuiesceVM();
    VMSnapshotTO target=new VMSnapshotTO(vmSnapshot.getId(),vmSnapshot.getName(),vmSnapshot.getType(),null,vmSnapshot.getDescription(),false,current,quiescevm);
    if (current == null)     vmSnapshotVO.setParent(null);
 else     vmSnapshotVO.setParent(current.getId());
    HostVO host=hostDao.findById(hostId);
    GuestOSHypervisorVO guestOsMapping=guestOsHypervisorDao.findByOsIdAndHypervisor(guestOS.getId(),host.getHypervisorType().toString(),host.getHypervisorVersion());
    CreateVMSnapshotCommand ccmd=new CreateVMSnapshotCommand(userVm.getInstanceName(),userVm.getUuid(),target,volumeTOs,guestOS.getDisplayName());
    if (guestOsMapping == null) {
      ccmd.setPlatformEmulator(null);
    }
 else {
      ccmd.setPlatformEmulator(guestOsMapping.getGuestOsName());
    }
    ccmd.setWait(_wait);
    answer=(CreateVMSnapshotAnswer)agentMgr.send(hostId,ccmd);
    if (answer != null && answer.getResult()) {
      processAnswer(vmSnapshotVO,userVm,answer,hostId);
      logger.debug("Create vm snapshot " + vmSnapshot.getName() + " succeeded for vm: "+ userVm.getInstanceName());
      result=true;
      for (      VolumeObjectTO volumeTo : answer.getVolumeTOs()) {
        publishUsageEvent(EventTypes.EVENT_VM_SNAPSHOT_CREATE,vmSnapshot,userVm,volumeTo);
      }
      return vmSnapshot;
    }
 else {
      String errMsg="Creating VM snapshot: " + vmSnapshot.getName() + " failed";
      if (answer != null && answer.getDetails() != null)       errMsg=errMsg + " due to " + answer.getDetails();
      logger.error(errMsg);
      throw new CloudRuntimeException(errMsg);
    }
  }
 catch (  OperationTimedoutException e) {
    logger.debug("Creating VM snapshot: " + vmSnapshot.getName() + " failed: "+ e.toString());
    throw new CloudRuntimeException("Creating VM snapshot: " + vmSnapshot.getName() + " failed: "+ e.toString());
  }
catch (  AgentUnavailableException e) {
    logger.debug("Creating VM snapshot: " + vmSnapshot.getName() + " failed",e);
    throw new CloudRuntimeException("Creating VM snapshot: " + vmSnapshot.getName() + " failed: "+ e.toString());
  }
 finally {
    if (!result) {
      try {
        vmSnapshotHelper.vmSnapshotStateTransitTo(vmSnapshot,VMSnapshot.Event.OperationFailed);
      }
 catch (      NoTransitionException e1) {
        logger.error("Cannot set vm snapshot state due to: " + e1.getMessage());
      }
    }
  }
}
