{
  byte[] versionBytes=new byte[]{0x01,0x00,0x00,0x00};
  byte[] seqNumBytes=new byte[]{(byte)(recvSeqNum & 0xff),(byte)((recvSeqNum >> 8) & 0xff),(byte)((recvSeqNum >> 16) & 0xff),(byte)((recvSeqNum >> 24) & 0xff)};
  byte[] actualSignature=Arrays.copyOf(wrappedMssage,16);
  byte[] encryptedMessage=Arrays.copyOfRange(wrappedMssage,16,wrappedMssage.length);
  byte[] decryptedMessage=CryptoAlgos.RC4(recvRc4Seal,encryptedMessage);
  byte[] digest=CryptoAlgos.HMAC_MD5(recvSigningKey,CryptoAlgos.concatenationOf(seqNumBytes,decryptedMessage));
  byte[] checksum=CryptoAlgos.RC4(recvRc4Seal,Arrays.copyOf(digest,8));
  byte[] expectedSignature=CryptoAlgos.concatenationOf(versionBytes,checksum,seqNumBytes);
  if (!Arrays.equals(expectedSignature,actualSignature))   throw new RuntimeException("Unexpected signature of message:\nExpected signature: " + new ByteBuffer(expectedSignature).toPlainHexString() + "\n  Actual signature: "+ new ByteBuffer(actualSignature).toPlainHexString());
  recvSeqNum++;
  return decryptedMessage;
}
