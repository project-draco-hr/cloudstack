{
  byte[] ntlm_v2_hash=new byte[]{(byte)0x5f,(byte)0xcc,(byte)0x4c,(byte)0x48,(byte)0x74,(byte)0x6b,(byte)0x94,(byte)0xce,(byte)0xb7,(byte)0xae,(byte)0xf1,(byte)0x0d,(byte)0xc9,(byte)0x11,(byte)0x22,(byte)0x8f};
  byte[] nt_proof_str=new byte[]{(byte)0x19,(byte)0x4b,(byte)0xeb,(byte)0xad,(byte)0xda,(byte)0x24,(byte)0xd5,(byte)0x96,(byte)0x85,(byte)0x2e,(byte)0x24,(byte)0x94,(byte)0xd6,(byte)0x4a,(byte)0xb8,(byte)0x5e};
  byte[] expected=new byte[]{(byte)0x8e,(byte)0x0f,(byte)0xdd,(byte)0x12,(byte)0x4c,(byte)0x3b,(byte)0x11,(byte)0x7f,(byte)0x22,(byte)0xb9,(byte)0x4b,(byte)0x59,(byte)0x52,(byte)0xbc,(byte)0xa7,(byte)0x18};
  byte[] actual=computeSessionBaseKey(ntlm_v2_hash,nt_proof_str);
  if (!Arrays.equals(expected,actual))   throw new RuntimeException("Incorrect result.\nExpected:\n" + new ByteBuffer(expected).toPlainHexString() + "\n  actual:\n"+ new ByteBuffer(actual).toPlainHexString()+ ".");
}
