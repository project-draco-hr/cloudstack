{
  if (!waitForViewerReady())   return onAjaxClientConnectFailed();
  setAjaxViewer(true);
  int tileWidth=tracker.getTileWidth();
  int tileHeight=tracker.getTileHeight();
  int width=tracker.getTrackWidth();
  int height=tracker.getTrackHeight();
  if (s_logger.isTraceEnabled())   s_logger.trace("Ajax client start, frame buffer w: " + width + ", "+ height);
synchronized (this) {
    if (framebufferResized) {
      framebufferResized=false;
    }
  }
  int retry=0;
  if (justCreated()) {
    tracker.initCoverageTest();
    try {
      rfb.writeFramebufferUpdateRequest(0,0,tracker.getTrackWidth(),tracker.getTrackHeight(),false);
      while (!tracker.hasFullCoverage() && retry < 10) {
        try {
          Thread.sleep(1000);
        }
 catch (        InterruptedException e) {
        }
        retry++;
      }
    }
 catch (    IOException e1) {
      s_logger.warn("Connection was broken ");
    }
  }
  List<TileInfo> tiles=tracker.scan(true);
  String imgUrl=prepareAjaxImage(tiles,true);
  String updateUrl=prepareAjaxSession(true);
  StringBuffer sbTileSequence=new StringBuffer();
  int i=0;
  for (  TileInfo tile : tiles) {
    sbTileSequence.append("[").append(tile.getRow()).append(",").append(tile.getCol()).append("]");
    if (i < tiles.size() - 1)     sbTileSequence.append(",");
    i++;
  }
  return getAjaxViewerPageContent(sbTileSequence.toString(),imgUrl,updateUrl,width,height,tileWidth,tileHeight,title,ConsoleProxy.keyboardType == ConsoleProxy.KEYBOARD_RAW,languages,guest);
}
