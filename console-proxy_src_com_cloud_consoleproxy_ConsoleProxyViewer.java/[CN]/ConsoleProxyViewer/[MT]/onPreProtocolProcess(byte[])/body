{
  if (s_logger.isTraceEnabled())   s_logger.trace("Send " + (bs != null ? bs.length : 0) + " bytes (original) to client");
  if (!ajaxViewer && bs != null && clientStream != null) {
    if (s_logger.isInfoEnabled())     s_logger.info("getSplit got " + bs.length + " bytes");
    if (compressServerMessage && bs.length > 10000) {
      ByteArrayOutputStream bos=new ByteArrayOutputStream(256000);
      GZIPOutputStream gos=new GZIPOutputStream(bos,65536);
      gos.write(bs);
      gos.finish();
      byte[] nbs=bos.toByteArray();
      gos.close();
      int n=nbs.length;
      if (s_logger.isInfoEnabled())       s_logger.info("Compressed " + bs.length + "=>"+ n);
      byte[] b=new byte[6];
      b[0]=(byte)250;
      b[1]=2;
      b[2]=(byte)((n >> 24) & 0xff);
      b[3]=(byte)((n >> 16) & 0xff);
      b[4]=(byte)((n >> 8) & 0xff);
      b[5]=(byte)(n & 0xff);
synchronized (clientStream) {
        writeToClientStream(b);
        writeToClientStream(nbs);
      }
    }
 else {
      if (s_logger.isInfoEnabled())       s_logger.info("Send uncompressed " + bs.length + " bytes to client");
      writeToClientStream(bs);
    }
  }
 else {
    if (s_logger.isTraceEnabled())     s_logger.trace("Client is not connected, ignore forwarding " + (bs != null ? bs.length : 0) + " bytes to client");
  }
  rfb.sis.setSplit();
}
