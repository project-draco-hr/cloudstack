{
  s_logger.info("Initializing...");
  s_logger.info("Ensure ip route towards host " + host);
  ConsoleProxy.ensureRoute(host);
  s_logger.info("Connecting to " + host + ", port "+ port+ "...");
  rfb=new RfbProto(host,port,this);
  s_logger.info("Connected to server");
  rfb.readVersionMsg();
  s_logger.info("RFB server supports protocol version " + rfb.serverMajor + "."+ rfb.serverMinor);
  rfb.writeVersionMsg();
  s_logger.info("Using RFB protocol version " + rfb.clientMajor + "."+ rfb.clientMinor);
  int secType=rfb.negotiateSecurity();
  int authType;
  if (secType == RfbProto.SecTypeTight) {
    s_logger.info("Enabling TightVNC protocol extensions");
    rfb.initCapabilities();
    rfb.setupTunneling();
    authType=rfb.negotiateAuthenticationTight();
  }
 else {
    authType=secType;
  }
switch (authType) {
case RfbProto.AuthNone:
    s_logger.info("No authentication needed");
  rfb.authenticateNone();
break;
case RfbProto.AuthVNC:
s_logger.info("Performing standard VNC authentication");
if (passwordParam != null) {
rfb.authenticateVNC(passwordParam);
}
 else {
throw new AuthenticationException("Bad password");
}
break;
default :
throw new Exception("Unknown authentication scheme " + authType);
}
}
