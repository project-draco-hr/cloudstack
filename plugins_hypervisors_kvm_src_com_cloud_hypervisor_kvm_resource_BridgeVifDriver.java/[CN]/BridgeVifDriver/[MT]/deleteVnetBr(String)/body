{
synchronized (_vnetBridgeMonitor) {
    String cmdout=Script.runSimpleBashScript("ls /sys/class/net/" + brName + "/brif | grep vnet");
    if (cmdout != null && cmdout.contains("vnet")) {
      return;
    }
    Pattern oldStyleBrNameRegex=Pattern.compile("^cloudVirBr(\\d+)$");
    Pattern brNameRegex=Pattern.compile("^br(\\S+)-(\\d+)$");
    Matcher oldStyleBrNameMatcher=oldStyleBrNameRegex.matcher(brName);
    Matcher brNameMatcher=brNameRegex.matcher(brName);
    String pName=null;
    String vNetId=null;
    if (oldStyleBrNameMatcher.find()) {
      pName="undefined";
      vNetId=oldStyleBrNameMatcher.group(1);
    }
 else     if (brNameMatcher.find()) {
      if (brNameMatcher.group(1) != null || !brNameMatcher.group(1).isEmpty()) {
        pName=brNameMatcher.group(1);
      }
 else {
        pName="undefined";
      }
      vNetId=brNameMatcher.group(2);
    }
    if (vNetId == null || vNetId.isEmpty()) {
      s_logger.debug("unable to get a vNet ID from name " + brName);
      return;
    }
    final Script command=new Script(_modifyVlanPath,_timeout,s_logger);
    command.add("-o","delete");
    command.add("-v",vNetId);
    command.add("-p",pName);
    command.add("-b",brName);
    final String result=command.execute();
    if (result != null) {
      s_logger.debug("Delete bridge " + brName + " failed: "+ result);
    }
  }
}
