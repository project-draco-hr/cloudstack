{
  Gson gson=GsonHelper.getBuilder().create();
  AsyncJobManager asyncMgr=getAsyncJobMgr();
  AsyncJobVO job=getJob();
  ManagementServer managementServer=asyncMgr.getExecutorContext().getManagementServer();
  VMOperationParam param=gson.fromJson(job.getCmdInfo(),VMOperationParam.class);
  if (getSyncSource() == null) {
    asyncMgr.syncAsyncJobExecution(job.getId(),"Router",param.getVmId());
    return true;
  }
 else {
    try {
      if (managementServer.stopRouter(param.getVmId(),param.getEventId())) {
        DomainRouter router=managementServer.findDomainRouterById(param.getVmId());
        asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_SUCCEEDED,0,RouterExecutorHelper.composeResultObject(managementServer,router));
      }
 else {
        asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"failed");
      }
    }
 catch (    Exception e) {
      s_logger.warn("Unable to stop router " + param.getVmId() + ":"+ e.getMessage(),e);
      asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,e.getMessage());
    }
    return true;
  }
}
