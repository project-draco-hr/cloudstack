{
  boolean result=super.configure(name,params);
  if (result) {
    final ComponentLocator locator=ComponentLocator.getCurrentLocator();
    _ipAddressDao=locator.getDao(IPAddressDao.class);
    if (_ipAddressDao == null) {
      throw new ConfigurationException("Unable to get " + IPAddressDao.class.getName());
    }
  }
  ZoneTypeAllPodsSearch=createSearchBuilder();
  ZoneTypeAllPodsSearch.and("zoneId",ZoneTypeAllPodsSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  ZoneTypeAllPodsSearch.and("vlanType",ZoneTypeAllPodsSearch.entity().getVlanType(),SearchCriteria.Op.EQ);
  SearchBuilder<PodVlanMapVO> PodVlanSearch=_podVlanMapDao.createSearchBuilder();
  PodVlanSearch.and("podId",PodVlanSearch.entity().getPodId(),SearchCriteria.Op.NNULL);
  ZoneTypeAllPodsSearch.join("vlan",PodVlanSearch,PodVlanSearch.entity().getVlanDbId(),ZoneTypeAllPodsSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  ZoneTypeAllPodsSearch.done();
  PodVlanSearch.done();
  ZoneTypePodSearch=createSearchBuilder();
  ZoneTypePodSearch.and("zoneId",ZoneTypePodSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  ZoneTypePodSearch.and("vlanType",ZoneTypePodSearch.entity().getVlanType(),SearchCriteria.Op.EQ);
  SearchBuilder<PodVlanMapVO> PodVlanSearch2=_podVlanMapDao.createSearchBuilder();
  PodVlanSearch2.and("podId",PodVlanSearch2.entity().getPodId(),SearchCriteria.Op.EQ);
  ZoneTypePodSearch.join("vlan",PodVlanSearch2,PodVlanSearch2.entity().getVlanDbId(),ZoneTypePodSearch.entity().getId(),JoinBuilder.JoinType.INNER);
  PodVlanSearch2.done();
  ZoneTypePodSearch.done();
  return result;
}
