{
  final String remoteIp="127.0.0.1";
  final Integer key=1;
  final Long from=1l;
  final Long to=2l;
  final long networkId=1l;
  final String fromIp="127.0.0.1";
  final String networkName="eth";
  final String networkUuid="8edb1156-a851-4914-afc6-468ee52ac861";
  final OvsCreateTunnelCommand command=new OvsCreateTunnelCommand(remoteIp,key,from,to,networkId,fromIp,networkName,networkUuid);
  final String bridge=command.getNetworkName();
  when(libvirtComputingResource.findOrCreateTunnelNetwork(bridge)).thenReturn(true);
  when(libvirtComputingResource.configureTunnelNetwork(command.getNetworkId(),command.getFrom(),command.getNetworkName())).thenThrow(Exception.class);
  final LibvirtRequestWrapper wrapper=LibvirtRequestWrapper.getInstance();
  assertNotNull(wrapper);
  final Answer answer=wrapper.execute(command,libvirtComputingResource);
  assertFalse(answer.getResult());
  verify(libvirtComputingResource,times(1)).findOrCreateTunnelNetwork(bridge);
  verify(libvirtComputingResource,times(1)).configureTunnelNetwork(command.getNetworkId(),command.getFrom(),command.getNetworkName());
}
