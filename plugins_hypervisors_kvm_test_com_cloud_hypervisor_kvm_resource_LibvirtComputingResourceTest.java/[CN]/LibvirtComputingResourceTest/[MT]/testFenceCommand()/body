{
  final VirtualMachine vm=Mockito.mock(VirtualMachine.class);
  ;
  final com.cloud.host.Host host=Mockito.mock(com.cloud.host.Host.class);
  final FenceCommand command=new FenceCommand(vm,host);
  final KVMHAMonitor monitor=Mockito.mock(KVMHAMonitor.class);
  final NfsStoragePool storagePool=Mockito.mock(NfsStoragePool.class);
  final List<NfsStoragePool> pools=new ArrayList<NfsStoragePool>();
  pools.add(storagePool);
  when(libvirtComputingResource.getMonitor()).thenReturn(monitor);
  when(monitor.getStoragePools()).thenReturn(pools);
  final LibvirtRequestWrapper wrapper=LibvirtRequestWrapper.getInstance();
  assertNotNull(wrapper);
  final Answer answer=wrapper.execute(command,libvirtComputingResource);
  assertFalse(answer.getResult());
  verify(libvirtComputingResource,times(1)).getMonitor();
  verify(monitor,times(1)).getStoragePools();
}
