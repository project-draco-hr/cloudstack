{
  final StoragePool pool=Mockito.mock(StoragePool.class);
  final String secondaryStoragePoolURL="nfs:/127.0.0.1/storage/secondary";
  final Long dcId=1l;
  final Long accountId=1l;
  final Long volumeId=1l;
  final String backedUpSnapshotUuid="/run/9a0afe7c-26a7-4585-bf87-abf82ae106d9/";
  final String backedUpSnapshotName="snap";
  final String origTemplateInstallPath="/install/path/";
  final Long newTemplateId=2l;
  final String templateName="templ";
  final int wait=0;
  final CreatePrivateTemplateFromSnapshotCommand command=new CreatePrivateTemplateFromSnapshotCommand(pool,secondaryStoragePoolURL,dcId,accountId,volumeId,backedUpSnapshotUuid,backedUpSnapshotName,origTemplateInstallPath,newTemplateId,templateName,wait);
  final KVMStoragePoolManager storagePoolMgr=Mockito.mock(KVMStoragePoolManager.class);
  final KVMStoragePool secondaryPool=Mockito.mock(KVMStoragePool.class);
  final KVMStoragePool snapshotPool=Mockito.mock(KVMStoragePool.class);
  final LibvirtUtilitiesHelper libvirtUtilitiesHelper=Mockito.mock(LibvirtUtilitiesHelper.class);
  final String tmplName="ce97bbc1-34fe-4259-9202-74bbce2562ab";
  when(libvirtComputingResource.getStoragePoolMgr()).thenReturn(storagePoolMgr);
  String snapshotPath=command.getSnapshotUuid();
  final int index=snapshotPath.lastIndexOf("/");
  snapshotPath=snapshotPath.substring(0,index);
  when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper);
  when(libvirtUtilitiesHelper.generateUUIDName()).thenReturn(tmplName);
  when(storagePoolMgr.getStoragePoolByURI(command.getSecondaryStorageUrl() + snapshotPath)).thenReturn(snapshotPool);
  when(storagePoolMgr.getStoragePoolByURI(command.getSecondaryStorageUrl())).thenReturn(secondaryPool);
  when(snapshotPool.getPhysicalDisk(command.getSnapshotName())).thenThrow(CloudRuntimeException.class);
  final LibvirtRequestWrapper wrapper=LibvirtRequestWrapper.getInstance();
  assertNotNull(wrapper);
  final Answer answer=wrapper.execute(command,libvirtComputingResource);
  assertFalse(answer.getResult());
  verify(libvirtComputingResource,times(1)).getStoragePoolMgr();
  verify(storagePoolMgr,times(1)).getStoragePoolByURI(command.getSecondaryStorageUrl() + snapshotPath);
  verify(storagePoolMgr,times(1)).getStoragePoolByURI(command.getSecondaryStorageUrl());
}
