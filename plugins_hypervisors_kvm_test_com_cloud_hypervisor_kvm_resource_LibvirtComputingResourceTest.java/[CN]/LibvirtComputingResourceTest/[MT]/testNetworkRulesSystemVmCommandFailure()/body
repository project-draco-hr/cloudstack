{
  final String vmName="Test";
  final Type type=Type.SecondaryStorageVm;
  final NetworkRulesSystemVmCommand command=new NetworkRulesSystemVmCommand(vmName,type);
  final LibvirtConnectionWrapper libvirtConnectionWrapper=Mockito.mock(LibvirtConnectionWrapper.class);
  when(libvirtComputingResource.getLibvirtConnectionWrapper()).thenReturn(libvirtConnectionWrapper);
  try {
    when(libvirtConnectionWrapper.getConnectionByVmName(command.getVmName())).thenThrow(LibvirtException.class);
  }
 catch (  final LibvirtException e) {
    fail(e.getMessage());
  }
  final LibvirtRequestWrapper wrapper=LibvirtRequestWrapper.getInstance();
  assertNotNull(wrapper);
  final Answer answer=wrapper.execute(command,libvirtComputingResource);
  assertFalse(answer.getResult());
  try {
    verify(libvirtConnectionWrapper,times(1)).getConnectionByVmName(command.getVmName());
  }
 catch (  final LibvirtException e) {
    fail(e.getMessage());
  }
  verify(libvirtComputingResource,times(1)).getLibvirtConnectionWrapper();
}
