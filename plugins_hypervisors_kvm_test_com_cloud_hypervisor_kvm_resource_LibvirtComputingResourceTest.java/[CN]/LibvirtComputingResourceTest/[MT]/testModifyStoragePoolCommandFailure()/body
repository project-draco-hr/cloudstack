{
  final StoragePool pool=Mockito.mock(StoragePool.class);
  ;
  final ModifyStoragePoolCommand command=new ModifyStoragePoolCommand(true,pool);
  final KVMStoragePoolManager storagePoolMgr=Mockito.mock(KVMStoragePoolManager.class);
  when(libvirtComputingResource.getStoragePoolMgr()).thenReturn(storagePoolMgr);
  when(storagePoolMgr.createStoragePool(command.getPool().getUuid(),command.getPool().getHost(),command.getPool().getPort(),command.getPool().getPath(),command.getPool().getUserInfo(),command.getPool().getType())).thenReturn(null);
  final LibvirtRequestWrapper wrapper=LibvirtRequestWrapper.getInstance();
  assertNotNull(wrapper);
  final Answer answer=wrapper.execute(command,libvirtComputingResource);
  assertFalse(answer.getResult());
  verify(libvirtComputingResource,times(1)).getStoragePoolMgr();
  verify(storagePoolMgr,times(1)).createStoragePool(command.getPool().getUuid(),command.getPool().getHost(),command.getPool().getPort(),command.getPool().getPath(),command.getPool().getUserInfo(),command.getPool().getType());
}
