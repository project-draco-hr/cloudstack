{
  final String path="nfs:/127.0.0.1/storage/secondary";
  final StorageFilerTO pool=Mockito.mock(StorageFilerTO.class);
  final Long currentSize=100l;
  final Long newSize=200l;
  final boolean shrinkOk=false;
  final String vmInstance="Test";
  final ResizeVolumeCommand command=new ResizeVolumeCommand(path,pool,currentSize,newSize,shrinkOk,vmInstance);
  final KVMStoragePoolManager storagePoolMgr=Mockito.mock(KVMStoragePoolManager.class);
  final KVMStoragePool storagePool=Mockito.mock(KVMStoragePool.class);
  when(libvirtComputingResource.getStoragePoolMgr()).thenReturn(storagePoolMgr);
  when(storagePoolMgr.getStoragePool(pool.getType(),pool.getUuid())).thenReturn(storagePool);
  when(storagePool.getPhysicalDisk(path)).thenThrow(CloudRuntimeException.class);
  final LibvirtRequestWrapper wrapper=LibvirtRequestWrapper.getInstance();
  assertNotNull(wrapper);
  final Answer answer=wrapper.execute(command,libvirtComputingResource);
  assertFalse(answer.getResult());
  verify(libvirtComputingResource,times(1)).getStoragePoolMgr();
}
