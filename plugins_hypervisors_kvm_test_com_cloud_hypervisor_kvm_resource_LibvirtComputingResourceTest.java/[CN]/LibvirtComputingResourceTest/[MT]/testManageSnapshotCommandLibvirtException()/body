{
  final StoragePool pool=Mockito.mock(StoragePool.class);
  ;
  final String volumePath="/123/vol";
  final String vmName="Test";
  final long snapshotId=1l;
  final String preSnapshotPath="/snapshot/path";
  final String snapshotName="snap";
  final ManageSnapshotCommand command=new ManageSnapshotCommand(snapshotId,volumePath,pool,preSnapshotPath,snapshotName,vmName);
  final LibvirtUtilitiesHelper libvirtUtilitiesHelper=Mockito.mock(LibvirtUtilitiesHelper.class);
  when(libvirtComputingResource.getLibvirtConnectionWrapper()).thenReturn(libvirtUtilitiesHelper);
  try {
    when(libvirtUtilitiesHelper.getConnectionByVmName(command.getVmName())).thenThrow(LibvirtException.class);
  }
 catch (  final LibvirtException e) {
    fail(e.getMessage());
  }
  final LibvirtRequestWrapper wrapper=LibvirtRequestWrapper.getInstance();
  assertNotNull(wrapper);
  final Answer answer=wrapper.execute(command,libvirtComputingResource);
  assertFalse(answer.getResult());
  verify(libvirtComputingResource,times(1)).getLibvirtConnectionWrapper();
  try {
    verify(libvirtUtilitiesHelper,times(1)).getConnectionByVmName(command.getVmName());
  }
 catch (  final LibvirtException e) {
    fail(e.getMessage());
  }
}
