{
  super("Date","date");
  String patternOption;
  if ((options == null) || (options.length == 0)) {
    patternOption=null;
  }
 else {
    patternOption=options[0];
  }
  String pattern;
  if ((patternOption == null) || patternOption.equalsIgnoreCase(ISO8601_FORMAT)) {
    pattern=ISO8601_PATTERN;
  }
 else   if (patternOption.equalsIgnoreCase(ABSOLUTE_FORMAT)) {
    pattern=ABSOLUTE_TIME_PATTERN;
  }
 else   if (patternOption.equalsIgnoreCase(DATE_AND_TIME_FORMAT)) {
    pattern=DATE_AND_TIME_PATTERN;
  }
 else {
    pattern=patternOption;
  }
  int maximumCacheValidity=1000;
  SimpleDateFormat simpleFormat=null;
  try {
    simpleFormat=new SimpleDateFormat(pattern);
    maximumCacheValidity=CachedDateFormat.getMaximumCacheValidity(pattern);
  }
 catch (  IllegalArgumentException e) {
    LogLog.warn("Could not instantiate SimpleDateFormat with pattern " + patternOption,e);
    simpleFormat=new SimpleDateFormat(ISO8601_PATTERN);
  }
  if ((options != null) && (options.length > 1)) {
    TimeZone tz=TimeZone.getTimeZone((String)options[1]);
    simpleFormat.setTimeZone(tz);
  }
  df=new CachedDateFormat(simpleFormat,maximumCacheValidity);
}
