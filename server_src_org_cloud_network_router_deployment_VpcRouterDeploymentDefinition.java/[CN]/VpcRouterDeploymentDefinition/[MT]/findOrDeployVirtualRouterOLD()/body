{
  logger.debug("Deploying Virtual Router in VPC " + vpc);
  Vpc vpcLock=vpcDao.acquireInLockTable(vpc.getId());
  if (vpcLock == null) {
    throw new ConcurrentOperationException("Unable to lock vpc " + vpc.getId());
  }
  this.planDeploymentRouters();
  this.generateDeploymentPlan();
  if (this.routers.size() < 1) {
    try {
      Long offeringId=vpcOffDao.findById(vpc.getVpcOfferingId()).getServiceOfferingId();
      if (offeringId == null) {
        offeringId=offering.getId();
      }
      List<? extends PhysicalNetwork> pNtwks=pNtwkDao.listByZone(vpc.getZoneId());
      VirtualRouterProvider vpcVrProvider=null;
      for (      PhysicalNetwork pNtwk : pNtwks) {
        PhysicalNetworkServiceProvider provider=physicalProviderDao.findByServiceProvider(pNtwk.getId(),Type.VPCVirtualRouter.toString());
        if (provider == null) {
          throw new CloudRuntimeException("Cannot find service provider " + Type.VPCVirtualRouter.toString() + " in physical network "+ pNtwk.getId());
        }
        vpcVrProvider=vrProviderDao.findByNspIdAndType(provider.getId(),Type.VPCVirtualRouter);
        if (vpcVrProvider != null) {
          break;
        }
      }
      PublicIp sourceNatIp=vpcMgr.assignSourceNatIpAddressToVpc(this.owner,vpc);
      DomainRouterVO router=deployVpcRouter(vpcVrProvider,offeringId,sourceNatIp);
      this.routers.add(router);
    }
  finally {
      if (vpcLock != null) {
        vpcDao.releaseFromLockTable(vpc.getId());
      }
    }
  }
}
