def main(command, vif_raw):
    if (command not in ('online', 'offline')):
        return
    (vif_name, dom_id, vif_index) = vif_raw.split('-')
    vif = ('%s%s.%s' % (vif_name, dom_id, vif_index))
    bridge = pluginlib.do_cmd([pluginlib.VSCTL_PATH, 'iface-to-br', vif])
    xs_nw_uuid = pluginlib.do_cmd([pluginlib.XE_PATH, 'network-list', ('bridge=%s' % bridge), '--minimal'])
    result = pluginlib.do_cmd([pluginlib.XE_PATH, 'network-param-get', ('uuid=%s' % xs_nw_uuid), 'param-name=other-config', 'param-key=is-ovs-tun-network', '--minimal'])
    if (result != 'True'):
        return
    vlan = pluginlib.do_cmd([pluginlib.VSCTL_PATH, 'br-to-vlan', bridge])
    if (vlan != '0'):
        bridge = pluginlib.do_cmd([pluginlib.VSCTL_PATH, 'br-to-parent', bridge])
    vif_ofport = pluginlib.do_cmd([pluginlib.VSCTL_PATH, 'get', 'Interface', vif, 'ofport'])
    if (command == 'offline'):
        clear_flows(bridge, vif_ofport)
    if (command == 'online'):
        apply_flows(bridge, vif_ofport)
