{
  if (aclRequestString.equalsIgnoreCase("public-read"))   return new OrderedPair<Integer,Integer>(PERMISSION_READ,GRANTEE_ALLUSERS);
 else   if (aclRequestString.equalsIgnoreCase("public-read-write"))   return new OrderedPair<Integer,Integer>((PERMISSION_READ | PERMISSION_WRITE),GRANTEE_ALLUSERS);
 else   if (aclRequestString.equalsIgnoreCase("authenticated-read"))   return new OrderedPair<Integer,Integer>(PERMISSION_READ,GRANTEE_AUTHENTICATED);
 else   if (aclRequestString.equalsIgnoreCase("private"))   return new OrderedPair<Integer,Integer>(PERMISSION_FULL,GRANTEE_USER);
 else   if (aclRequestString.equalsIgnoreCase("bucket-owner-read")) {
    if (target.equalsIgnoreCase("SBucket"))     return new OrderedPair<Integer,Integer>(PERMISSION_READ,GRANTEE_USER);
 else     return new OrderedPair<Integer,Integer>(PERMISSION_FULL,GRANTEE_USER);
  }
 else   if (aclRequestString.equalsIgnoreCase("bucket-owner-full-control")) {
    return new OrderedPair<Integer,Integer>(PERMISSION_FULL,GRANTEE_USER);
  }
 else   throw new UnsupportedException("Unknown Canned Access Policy: " + aclRequestString + " is not supported");
}
