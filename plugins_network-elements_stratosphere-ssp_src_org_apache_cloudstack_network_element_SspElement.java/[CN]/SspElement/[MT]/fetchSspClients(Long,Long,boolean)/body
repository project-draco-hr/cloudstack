{
  ArrayList<SspClient> clients=new ArrayList<SspClient>();
  boolean provider_found=false;
  PhysicalNetworkServiceProviderVO provider=_physicalNetworkServiceProviderDao.findByServiceProvider(physicalNetworkId,s_SSP_NAME);
  if (enabledOnly) {
    if (provider != null && provider.getState() == State.Enabled) {
      provider_found=true;
    }
  }
 else {
    provider_found=true;
  }
  if (physicalNetworkId != null && provider_found) {
    SspCredentialVO credential=_sspCredentialDao.findByZone(dataCenterId);
    List<HostVO> hosts=_resourceMgr.listAllHostsInOneZoneByType(Host.Type.L2Networking,dataCenterId);
    for (    HostVO host : hosts) {
      assert(credential != null);
      _hostDao.loadDetails(host);
      if ("v1Api".equals(host.getDetail("sspHost"))) {
        clients.add(new SspClient(host.getDetail("url"),credential.getUsername(),credential.getPassword()));
      }
    }
  }
  if (clients.size() == 0) {
    String global_apiUrl=_configDao.getValueAndInitIfNotExist("ssp.url","Network",null);
    String global_username=_configDao.getValueAndInitIfNotExist("ssp.username","Network",null);
    String global_password=_configDao.getValueAndInitIfNotExist("ssp.password","Network",null);
    if (global_apiUrl != null && global_username != null && global_password != null) {
      clients.add(new SspClient(global_apiUrl,global_username,global_password));
    }
  }
  return clients;
}
