{
  if (host.getHypervisorType() != HypervisorType.Ovm3) {
    s_logger.debug("Don't know how to fence non Ovm3 hosts " + host.getHypervisorType());
    return null;
  }
 else {
    s_logger.debug("Fencing " + vm + " on host "+ host+ " with params: "+ _params);
  }
  List<HostVO> hosts=_resourceMgr.listAllHostsInCluster(host.getClusterId());
  FenceCommand fence=new FenceCommand(vm,host);
  for (  HostVO h : hosts) {
    if (h.getHypervisorType() != HypervisorType.Ovm3) {
      continue;
    }
    if (h.getStatus() != Status.Up) {
      continue;
    }
    if (h.getId() == host.getId()) {
      continue;
    }
    FenceAnswer answer;
    try {
      answer=(FenceAnswer)_agentMgr.send(h.getId(),fence);
    }
 catch (    AgentUnavailableException e) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Moving on to the next host because " + h.toString() + " is unavailable");
      }
      continue;
    }
catch (    OperationTimedoutException e) {
      if (s_logger.isDebugEnabled()) {
        s_logger.debug("Moving on to the next host because " + h.toString() + " is unavailable");
      }
      continue;
    }
    if (answer != null && answer.getResult()) {
      return true;
    }
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Unable to fence off " + vm.toString() + " on "+ host.toString());
  }
  return false;
}
