def test_02_storage_migrate_root_and_data_disks(self):
    primarystorage2 = self.testdata[TestData.primaryStorage2]
    primary_storage_2 = StoragePool.create(self.apiClient, primarystorage2, clusterid=self.cluster_1.id)
    primary_storage_3 = StoragePool.create(self.apiClient, primarystorage2, clusterid=self.cluster_2.id)
    (src_host, dest_host) = self._get_source_and_dest_hosts()
    virtual_machine = VirtualMachine.create(self.apiClient, self.testdata[TestData.virtualMachine], accountid=self.account.name, zoneid=self.zone.id, serviceofferingid=self.compute_offering_3.id, templateid=self.template.id, domainid=self.domain.id, hostid=src_host.id, startvm=True)
    cs_data_volume = Volume.create(self.apiClient, self.testdata[TestData.volume_1], account=self.account.name, domainid=self.domain.id, zoneid=self.zone.id, diskofferingid=self.disk_offering_1.id)
    self.cleanup = [virtual_machine, cs_data_volume, primary_storage_2, primary_storage_3]
    cs_data_volume = virtual_machine.attach_volume(self.apiClient, cs_data_volume)
    sf_account_id = sf_util.get_sf_account_id(self.cs_api, self.account.id, self.primary_storage.id, self, TestVMMigrationWithStorage._sf_account_id_should_be_non_zero_int_err_msg)
    sf_volumes = sf_util.get_active_sf_volumes(self.sf_client, sf_account_id)
    sf_data_volume = sf_util.check_and_get_sf_volume(sf_volumes, cs_data_volume.name, self)
    sf_data_volume = self._migrate_and_verify_one_disk_only(virtual_machine, dest_host, cs_data_volume, sf_account_id, sf_data_volume, self.xen_session_1, self.xen_session_2)
    (src_host, dest_host) = (dest_host, src_host)
    self._migrate_and_verify_one_disk_only(virtual_machine, dest_host, cs_data_volume, sf_account_id, sf_data_volume, self.xen_session_2, self.xen_session_1)
