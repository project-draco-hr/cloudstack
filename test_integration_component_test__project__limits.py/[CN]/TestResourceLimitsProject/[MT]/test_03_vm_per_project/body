def test_03_vm_per_project(self):
    'Test VM limit per project\n        '
    self.debug(('Updating instance resource limits for project: %s' % self.project.id))
    update_resource_limit(self.apiclient, 0, max=2, projectid=self.project.id)
    self.debug(('Deploying VM for project: %s' % self.project.id))
    virtual_machine_1 = VirtualMachine.create(self.apiclient, self.services['server'], templateid=self.template.id, serviceofferingid=self.service_offering.id, projectid=self.project.id)
    self.cleanup.append(virtual_machine_1)
    self.assertEqual(virtual_machine_1.state, 'Running', 'Check VM state is Running or not')
    self.debug(('Deploying VM for project: %s' % self.project.id))
    virtual_machine_2 = VirtualMachine.create(self.apiclient, self.services['server'], templateid=self.template.id, serviceofferingid=self.service_offering.id, projectid=self.project.id)
    self.cleanup.append(virtual_machine_2)
    self.assertEqual(virtual_machine_2.state, 'Running', 'Check VM state is Running or not')
    with self.assertRaises(Exception):
        VirtualMachine.create(self.apiclient, self.services['server'], templateid=self.template.id, serviceofferingid=self.service_offering.id, projectid=self.project.id)
    return
