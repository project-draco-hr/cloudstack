@classmethod
def setUpClass(cls):
    cls.testClient = super(TestProjectOwners, cls).getClsTestClient()
    cls.api_client = cls.testClient.getApiClient()
    cls.services = Services().services
    cls.zone = get_zone(cls.api_client, cls.testClient.getZoneForTests())
    cls.domain = get_domain(cls.api_client)
    cls.services['mode'] = cls.zone.networktype
    cls._cleanup = []
    cls.isGlobalSettingInvalid = False
    configs = Configurations.list(cls.api_client, name='project.invite.required')
    if (configs[0].value.lower() != 'false'):
        cls.isGlobalSettingInvalid = True
        return
    cls.admin = Account.create(cls.api_client, cls.services['account'], admin=True, domainid=cls.domain.id)
    cls._cleanup.append(cls.admin)
    cls.new_admin = Account.create(cls.api_client, cls.services['account'], admin=True, domainid=cls.domain.id)
    cls._cleanup.append(cls.new_admin)
    return
