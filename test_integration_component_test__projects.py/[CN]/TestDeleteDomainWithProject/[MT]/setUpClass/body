@classmethod
def setUpClass(cls):
    cls.api_client = super(TestDeleteDomainWithProject, cls).getClsTestClient().getApiClient()
    cls.services = Services().services
    cls.zone = get_zone(cls.api_client, cls.services)
    configs = Configurations.list(cls.api_client, name='project.invite.required')
    if (not isinstance(configs, list)):
        raise unittest.SkipTest('List configurations has no config: project.invite.required')
    elif (configs[0].value.lower() != 'false'):
        raise unittest.SkipTest("'project.invite.required' should be set to false")
    cls.domain = Domain.create(cls.api_client, cls.services['domain'])
    cls.account = Account.create(cls.api_client, cls.services['account'], admin=True, domainid=cls.domain.id)
    cls._cleanup = []
    return
