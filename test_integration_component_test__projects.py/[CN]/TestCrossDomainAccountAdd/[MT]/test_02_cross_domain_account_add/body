@attr(tags=['advanced', 'basic', 'sg', 'eip', 'advancedns', 'simulator', 'selfservice'])
def test_02_cross_domain_account_add(self):
    ' Verify No cross domain projects\n        '
    project = Project.create(self.apiclient, self.services['project'], account=self.account.name, domainid=self.account.domainid)
    self.cleanup.append(project)
    self.debug(('Created project with domain admin with ID: %s' % project.id))
    list_projects_reponse = Project.list(self.apiclient, id=project.id, listall=True)
    self.assertEqual(isinstance(list_projects_reponse, list), True, 'Check for a valid list projects response')
    list_project = list_projects_reponse[0]
    self.assertNotEqual(len(list_projects_reponse), 0, 'Check list project response returns a valid project')
    self.assertEqual(project.name, list_project.name, 'Check project name from list response')
    self.debug(('Adding user: %s from domain: %s to project: %s' % (self.user.name, self.user.domainid, project.id)))
    response = project.addAccount(self.apiclient, self.user.name)
    self.assertEqual(response.errorcode, ERROR_CODE_530, ('Job should                          have failed with error code %s, instead got response                          %s' % (ERROR_CODE_530, str(response))))
    return
