{
  String vmName=cmd.getVmName();
  DiskTO disk=cmd.getDisk();
  DataTO data=disk.getData();
  try {
    Connection conn=this.hypervisorResource.getConnection();
    VDI vdi=null;
    if (cmd.isManaged()) {
      vdi=this.hypervisorResource.handleSrAndVdiAttach(cmd.get_iScsiName(),cmd.getStorageHost(),cmd.getChapInitiatorUsername(),cmd.getChapInitiatorPassword());
    }
 else {
      vdi=this.hypervisorResource.mount(conn,null,null,data.getPath());
    }
    VM vm=this.hypervisorResource.getVM(conn,vmName);
    boolean isHVM;
    if (vm.getPVBootloader(conn).equalsIgnoreCase("")) {
      isHVM=true;
    }
 else {
      isHVM=false;
    }
    VMGuestMetrics vgm=vm.getGuestMetrics(conn);
    boolean pvDrvInstalled=false;
    if (!this.hypervisorResource.isRefNull(vgm) && vgm.getPVDriversUpToDate(conn)) {
      pvDrvInstalled=true;
    }
    if (isHVM && !pvDrvInstalled) {
      s_logger.warn(": You attempted an operation on a VM which requires PV drivers to be installed but the drivers were not detected");
      return new AttachAnswer("You attempted an operation that requires PV drivers to be installed on the VM. Please install them by inserting xen-pv-drv.iso.");
    }
    String diskNumber=null;
    Long deviceId=disk.getDiskSeq();
    if (deviceId != null) {
      if (deviceId.longValue() == 3) {
        String msg="Device 3 is reserved for CD-ROM, choose other device";
        return new AttachAnswer(msg);
      }
      if (this.hypervisorResource.isDeviceUsed(conn,vm,deviceId)) {
        String msg="Device " + deviceId + " is used in VM "+ vmName;
        return new AttachAnswer(msg);
      }
      diskNumber=deviceId.toString();
    }
 else {
      diskNumber=this.hypervisorResource.getUnusedDeviceNum(conn,vm);
    }
    VBD.Record vbdr=new VBD.Record();
    vbdr.VM=vm;
    vbdr.VDI=vdi;
    vbdr.bootable=false;
    vbdr.userdevice=diskNumber;
    vbdr.mode=Types.VbdMode.RW;
    vbdr.type=Types.VbdType.DISK;
    vbdr.unpluggable=true;
    VBD vbd=VBD.create(conn,vbdr);
    vbd.plug(conn);
    vdi.setNameLabel(conn,vmName + "-DATA");
    DiskTO newDisk=new DiskTO(disk.getData(),Long.parseLong(diskNumber),vdi.getUuid(conn),disk.getType());
    return new AttachAnswer(newDisk);
  }
 catch (  XenAPIException e) {
    String msg="Failed to attach volume" + " for uuid: " + data.getPath() + "  due to "+ e.toString();
    s_logger.warn(msg,e);
    return new AttachAnswer(msg);
  }
catch (  Exception e) {
    String msg="Failed to attach volume" + " for uuid: " + data.getPath() + "  due to "+ e.getMessage();
    s_logger.warn(msg,e);
    return new AttachAnswer(msg);
  }
}
