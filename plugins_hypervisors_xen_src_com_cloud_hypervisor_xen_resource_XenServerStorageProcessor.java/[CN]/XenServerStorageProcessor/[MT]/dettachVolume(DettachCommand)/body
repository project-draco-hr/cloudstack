{
  String vmName=cmd.getVmName();
  DiskTO disk=cmd.getDisk();
  DataTO data=disk.getData();
  try {
    Connection conn=hypervisorResource.getConnection();
    VDI vdi=hypervisorResource.mount(conn,null,null,data.getPath());
    VM vm=hypervisorResource.getVM(conn,vmName);
    boolean isHVM;
    if (vm.getPVBootloader(conn).equalsIgnoreCase("")) {
      isHVM=true;
    }
 else {
      isHVM=false;
    }
    VMGuestMetrics vgm=vm.getGuestMetrics(conn);
    boolean pvDrvInstalled=false;
    if (!hypervisorResource.isRefNull(vgm) && vgm.getPVDriversUpToDate(conn)) {
      pvDrvInstalled=true;
    }
    if (isHVM && !pvDrvInstalled) {
      s_logger.warn(": You attempted an operation on a VM which requires PV drivers to be installed but the drivers were not detected");
      return new DettachAnswer("You attempted an operation that requires PV drivers to be installed on the VM. Please install them by inserting xen-pv-drv.iso.");
    }
    Set<VBD> vbds=vdi.getVBDs(conn);
    for (    VBD vbd : vbds) {
      VBD.Record vbdr=vbd.getRecord(conn);
      if (vbdr.currentlyAttached) {
        vbd.unplug(conn);
      }
      vbd.destroy(conn);
    }
    vdi.setNameLabel(conn,"detached");
    hypervisorResource.umount(conn,vdi);
    if (cmd.isManaged()) {
      hypervisorResource.handleSrAndVdiDetach(cmd.get_iScsiName());
    }
    return new DettachAnswer(disk);
  }
 catch (  Exception e) {
    s_logger.warn("Failed dettach volume: " + data.getPath());
    return new DettachAnswer("Failed dettach volume: " + data.getPath() + ", due to "+ e.toString());
  }
}
