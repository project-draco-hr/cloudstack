{
  DiskTO disk=cmd.getDisk();
  DataTO data=disk.getData();
  try {
    Connection conn=this.hypervisorResource.getConnection();
    String vmName=cmd.getVmName();
    VM vm=null;
    boolean vmNotRunning=true;
    try {
      vm=this.hypervisorResource.getVM(conn,vmName);
      VM.Record vmr=vm.getRecord(conn);
      vmNotRunning=vmr.powerState != VmPowerState.RUNNING;
    }
 catch (    CloudRuntimeException ex) {
    }
    if (vmNotRunning && !cmd.isManaged()) {
      return new DettachAnswer(disk);
    }
    if (!vmNotRunning) {
      boolean isHVM=vm.getPVBootloader(conn).equalsIgnoreCase("");
      VMGuestMetrics vgm=vm.getGuestMetrics(conn);
      boolean pvDrvInstalled=false;
      if (!this.hypervisorResource.isRefNull(vgm) && vgm.getPVDriversUpToDate(conn)) {
        pvDrvInstalled=true;
      }
      if (isHVM && !pvDrvInstalled) {
        s_logger.warn(": You attempted an operation on a VM which requires PV drivers to be installed but the drivers were not detected");
        return new DettachAnswer("You attempted an operation that requires PV drivers to be installed on the VM. Please install them by inserting xen-pv-drv.iso.");
      }
      VDI vdi=this.hypervisorResource.mount(conn,null,null,data.getPath());
      Set<VBD> vbds=vdi.getVBDs(conn);
      for (      VBD vbd : vbds) {
        VBD.Record vbdr=vbd.getRecord(conn);
        if (vbdr.currentlyAttached) {
          vbd.unplug(conn);
        }
        vbd.destroy(conn);
      }
      vdi.setNameLabel(conn,"detached");
      this.hypervisorResource.umount(conn,vdi);
    }
    if (cmd.isManaged()) {
      hypervisorResource.handleSrAndVdiDetach(cmd.get_iScsiName());
    }
    return new DettachAnswer(disk);
  }
 catch (  Exception e) {
    s_logger.warn("Failed dettach volume: " + data.getPath());
    return new DettachAnswer("Failed dettach volume: " + data.getPath() + ", due to "+ e.toString());
  }
}
