{
  testApiName=testCmdClass.getAnnotation(APICommand.class).name();
  testApiDescription=testCmdClass.getAnnotation(APICommand.class).description();
  testApiSince=testCmdClass.getAnnotation(APICommand.class).since();
  testApiAsync=false;
  testUser=new UserVO();
  _discoveryService._apiAccessCheckers=(List<APIChecker>)mock(List.class);
  _discoveryService._services=(List<PluggableService>)mock(List.class);
  when(_apiChecker.checkAccess(any(User.class),anyString())).thenReturn(true);
  when(_pluggableService.getCommands()).thenReturn(new ArrayList<Class<?>>());
  when(_discoveryService._apiAccessCheckers.iterator()).thenReturn(Arrays.asList(_apiChecker).iterator());
  when(_discoveryService._services.iterator()).thenReturn(Arrays.asList(_pluggableService).iterator());
  Set<Class<?>> cmdClasses=new HashSet<Class<?>>();
  cmdClasses.add(ListApisCmd.class);
  _discoveryService.init();
  _discoveryService.cacheResponseMap(cmdClasses);
}
