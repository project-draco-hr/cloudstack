{
  Pair<Long,Long> sizes=_volumeDao.getCountAndTotalByPool(pool.getId());
  long totalAllocatedSize=sizes.second() + sizes.first() * _extraBytesPerVolume;
  boolean tmpinstalled=false;
  List<VMTemplateStoragePoolVO> templatePoolVOs;
  templatePoolVOs=_templatePoolDao.listByPoolId(pool.getId());
  for (  VMTemplateStoragePoolVO templatePoolVO : templatePoolVOs) {
    if ((templateForVmCreation != null) && !tmpinstalled && (templatePoolVO.getTemplateId() == templateForVmCreation.getId())) {
      tmpinstalled=true;
    }
    long templateSize=templatePoolVO.getTemplateSize();
    totalAllocatedSize+=templateSize + _extraBytesPerVolume;
  }
  if ((templateForVmCreation != null) && !tmpinstalled) {
    VMTemplateHostVO templateHostVO=_storageMgr.findVmTemplateHost(templateForVmCreation.getId(),pool);
    if (templateHostVO == null) {
      VMTemplateSwiftVO templateSwiftVO=_swiftMgr.findByTmpltId(templateForVmCreation.getId());
      if (templateSwiftVO != null) {
        long templateSize=templateSwiftVO.getPhysicalSize();
        if (templateSize == 0) {
          templateSize=templateSwiftVO.getSize();
        }
        totalAllocatedSize+=(templateSize + _extraBytesPerVolume);
      }
    }
 else {
      long templateSize=templateHostVO.getPhysicalSize();
      if (templateSize == 0) {
        templateSize=templateHostVO.getSize();
      }
      totalAllocatedSize+=(templateSize + _extraBytesPerVolume);
    }
  }
  return totalAllocatedSize;
}
