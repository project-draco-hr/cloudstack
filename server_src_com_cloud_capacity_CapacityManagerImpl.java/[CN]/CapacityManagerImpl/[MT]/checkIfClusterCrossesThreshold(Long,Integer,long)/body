{
  Float clusterCpuOverProvisioning=getClusterOverProvisioningFactor(clusterId,Capacity.CAPACITY_TYPE_CPU);
  Float clusterMemoryOverProvisioning=getClusterOverProvisioningFactor(clusterId,Capacity.CAPACITY_TYPE_MEMORY);
  Float clusterCpuCapacityDisableThreshold=DeploymentClusterPlanner.ClusterCPUCapacityDisableThreshold.valueIn(clusterId);
  Float clusterMemoryCapacityDisableThreshold=DeploymentClusterPlanner.ClusterMemoryCapacityDisableThreshold.valueIn(clusterId);
  float cpuConsumption=_capacityDao.findClusterConsumption(clusterId,Capacity.CAPACITY_TYPE_CPU,cpuRequested);
  if (cpuConsumption / clusterCpuOverProvisioning > clusterCpuCapacityDisableThreshold) {
    s_logger.debug("Cluster: " + clusterId + " cpu consumption "+ cpuConsumption / clusterCpuOverProvisioning + " crosses disable threshold " + clusterCpuCapacityDisableThreshold);
    return true;
  }
  float memoryConsumption=_capacityDao.findClusterConsumption(clusterId,Capacity.CAPACITY_TYPE_MEMORY,ramRequested);
  if (memoryConsumption / clusterMemoryOverProvisioning > clusterMemoryCapacityDisableThreshold) {
    s_logger.debug("Cluster: " + clusterId + " memory consumption "+ memoryConsumption / clusterMemoryOverProvisioning + " crosses disable threshold " + clusterMemoryCapacityDisableThreshold);
    return true;
  }
  return false;
}
