{
  _name=name;
  _hostCapacityCheckerDelay=NumbersUtil.parseInt(_configDao.getValue(Config.HostCapacityCheckerWait.key()),3600);
  _hostCapacityCheckerInterval=NumbersUtil.parseInt(_configDao.getValue(Config.HostCapacityCheckerInterval.key()),3600);
  _vmCapacityReleaseInterval=NumbersUtil.parseInt(_configDao.getValue(Config.CapacitySkipcountingHours.key()),3600);
  _storageOverProvisioningFactor=NumbersUtil.parseFloat(_configDao.getValue(Config.StorageOverprovisioningFactor.key()),1.0f);
  _cpuOverProvisioningFactor=NumbersUtil.parseFloat(_configDao.getValue(Config.CPUOverprovisioningFactor.key()),1.0f);
  if (_cpuOverProvisioningFactor < 1.0f) {
    _cpuOverProvisioningFactor=1.0f;
  }
  _executor=Executors.newScheduledThreadPool(1,new NamedThreadFactory("HostCapacity-Checker"));
  VirtualMachine.State.getStateMachine().registerListener(this);
  _agentManager.registerForHostEvents(new StorageCapacityListener(_capacityDao,_storageOverProvisioningFactor),true,false,false);
  _agentManager.registerForHostEvents(new ComputeCapacityListener(_capacityDao,_cpuOverProvisioningFactor),true,false,false);
  return true;
}
