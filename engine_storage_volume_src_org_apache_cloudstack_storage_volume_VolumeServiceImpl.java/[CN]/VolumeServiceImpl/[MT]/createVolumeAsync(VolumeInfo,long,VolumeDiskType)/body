{
  PrimaryDataStore dataStore=dataStoreMgr.getPrimaryDataStore(dataStoreId);
  AsyncCallFuture<VolumeApiResult> future=new AsyncCallFuture<VolumeApiResult>();
  VolumeApiResult result=new VolumeApiResult(volume);
  if (dataStore == null) {
    result.setResult("Can't find dataStoreId: " + dataStoreId);
    future.complete(result);
    return future;
  }
  if (dataStore.exists(volume)) {
    result.setResult("Volume: " + volume.getId() + " already exists on primary data store: "+ dataStoreId);
    future.complete(result);
    return future;
  }
  VolumeObject vo=(VolumeObject)volume;
  vo.stateTransit(Volume.Event.CreateRequested);
  CreateVolumeContext<VolumeApiResult> context=new CreateVolumeContext<VolumeApiResult>(null,vo,future);
  AsyncCallbackDispatcher<VolumeServiceImpl,CommandResult> caller=AsyncCallbackDispatcher.create(this);
  caller.setCallback(caller.getTarget().createVolumeCallback(null,null)).setContext(context);
  dataStore.createVolumeAsync(vo,diskType,caller);
  return future;
}
