{
  VolumeObject vo=(VolumeObject)volume;
  try {
    vo.stateTransit(Volume.Event.CreateRequested);
  }
 catch (  Exception e) {
    VolumeApiResult result=new VolumeApiResult(volume);
    result.setResult(e.toString());
    future.complete(result);
    return;
  }
  CreateVolumeFromBaseImageContext<VolumeApiResult> context=new CreateVolumeFromBaseImageContext<VolumeApiResult>(null,vo,pd,templateOnPrimaryStore,future);
  AsyncCallbackDispatcher<VolumeServiceImpl,CreateCmdResult> caller=AsyncCallbackDispatcher.create(this);
  caller.setCallback(caller.getTarget().copyBaseImageCallBack(null,null)).setContext(context);
  DataObject volumeOnPrimaryStorage=dataObjectMgr.createInternalStateOnly(volume,pd);
  dataObjectMgr.copyAsync(context.templateOnStore,volumeOnPrimaryStorage,caller);
  return;
}
