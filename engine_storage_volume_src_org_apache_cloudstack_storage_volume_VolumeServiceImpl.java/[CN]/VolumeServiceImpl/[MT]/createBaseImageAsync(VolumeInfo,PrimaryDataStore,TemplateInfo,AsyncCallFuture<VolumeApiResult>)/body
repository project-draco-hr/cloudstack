{
  DataObject templateOnPrimaryStoreObj=dataStore.create(template);
  VMTemplateStoragePoolVO templatePoolRef=_tmpltPoolDao.findByPoolTemplate(dataStore.getId(),template.getId());
  if (templatePoolRef == null) {
    throw new CloudRuntimeException("Failed to find template " + template.getUniqueName() + " in VMTemplateStoragePool");
  }
  long templatePoolRefId=templatePoolRef.getId();
  CreateBaseImageContext<CreateCmdResult> context=new CreateBaseImageContext<CreateCmdResult>(null,volume,dataStore,template,future,templateOnPrimaryStoreObj,templatePoolRefId);
  AsyncCallbackDispatcher<VolumeServiceImpl,CopyCommandResult> caller=AsyncCallbackDispatcher.create(this);
  caller.setCallback(caller.getTarget().copyBaseImageCallback(null,null)).setContext(context);
  int storagePoolMaxWaitSeconds=NumbersUtil.parseInt(configDao.getValue(Config.StoragePoolMaxWaitSeconds.key()),3600);
  templatePoolRef=_tmpltPoolDao.acquireInLockTable(templatePoolRefId,storagePoolMaxWaitSeconds);
  if (templatePoolRef == null) {
    templatePoolRef=_tmpltPoolDao.findByPoolTemplate(dataStore.getId(),template.getId());
    if (templatePoolRef.getState() == ObjectInDataStoreStateMachine.State.Ready) {
      s_logger.info("Unable to acquire lock on VMTemplateStoragePool " + templatePoolRefId + ", But Template "+ template.getUniqueName()+ " is already copied to primary storage, skip copying");
      createVolumeFromBaseImageAsync(volume,templateOnPrimaryStoreObj,dataStore,future);
      return;
    }
    throw new CloudRuntimeException("Unable to acquire lock on VMTemplateStoragePool: " + templatePoolRefId);
  }
  try {
    if (templatePoolRef.getState() == ObjectInDataStoreStateMachine.State.Ready) {
      s_logger.info("Template " + template.getUniqueName() + " is already copied to primary storage, skip copying");
      createVolumeFromBaseImageAsync(volume,templateOnPrimaryStoreObj,dataStore,future);
      return;
    }
    dataStore.delete(templateOnPrimaryStoreObj);
    templateOnPrimaryStoreObj=dataStore.create(template);
    templateOnPrimaryStoreObj.processEvent(Event.CreateOnlyRequested);
    motionSrv.copyAsync(template,templateOnPrimaryStoreObj,caller);
  }
 catch (  Throwable e) {
    s_logger.debug("failed to create template on storage",e);
    templateOnPrimaryStoreObj.processEvent(Event.OperationFailed);
    VolumeApiResult result=new VolumeApiResult(volume);
    result.setResult(e.toString());
    future.complete(result);
    _tmpltPoolDao.releaseFromLockTable(templatePoolRefId);
  }
  return;
}
