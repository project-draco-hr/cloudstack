{
  Long vmId=(Long)params.get(BaseCmd.Properties.ID.getName());
  Account account=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  if (account != null && account.getRemoved() != null)   throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"The account " + account.getId() + " is removed");
  UserVmVO vmInstance=getManagementServer().findUserVMInstanceById(vmId.longValue());
  if (vmInstance == null) {
    throw new ServerApiException(BaseCmd.VM_INVALID_PARAM_ERROR,"unable to find a virtual machine with id " + vmId);
  }
  if ((account != null) && !getManagementServer().isChildDomain(account.getDomainId(),vmInstance.getDomainId())) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"Unable to recover virtual machine with id " + vmId + ", invalid id given.");
  }
  try {
    boolean success=getManagementServer().recoverVirtualMachine(vmId.longValue());
    if (success == false) {
      throw new ServerApiException(BaseCmd.VM_RECOVER_ERROR,"unable to recover virtual machine with id " + vmId.toString());
    }
    List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
    returnValues.add(new Pair<String,Object>(BaseCmd.Properties.SUCCESS.getName(),Boolean.valueOf(success).toString()));
    return returnValues;
  }
 catch (  ResourceAllocationException ex) {
    throw new ServerApiException(BaseCmd.VM_RECOVER_ERROR,"Failed to recover virtual machine with id " + vmId + "; "+ ex.getMessage());
  }
}
