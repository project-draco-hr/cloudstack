{
  if (!NetUtils.isValidCIDR(cidrA)) {
    s_logger.info("Invalid value of cidr " + cidrA);
    return false;
  }
  if (!NetUtils.isValidCIDR(cidrB)) {
    s_logger.info("Invalid value of cidr " + cidrB);
    return false;
  }
  final String[] cidrPairFirst=cidrA.split("\\/");
  final String[] cidrPairSecond=cidrB.split("\\/");
  final Long networkSizeFirst=Long.valueOf(cidrPairFirst[1]);
  final Long networkSizeSecond=Long.valueOf(cidrPairSecond[1]);
  final String ipRangeFirst[]=NetUtils.getIpRangeFromCidr(cidrPairFirst[0],networkSizeFirst);
  final String ipRangeSecond[]=NetUtils.getIpRangeFromCidr(cidrPairFirst[0],networkSizeSecond);
  final long startIpFirst=NetUtils.ip2Long(ipRangeFirst[0]);
  final long endIpFirst=NetUtils.ip2Long(ipRangeFirst[1]);
  final long startIpSecond=NetUtils.ip2Long(ipRangeSecond[0]);
  final long endIpSecond=NetUtils.ip2Long(ipRangeSecond[1]);
  if (startIpFirst == startIpSecond && endIpFirst == endIpSecond) {
    return true;
  }
  return false;
}
