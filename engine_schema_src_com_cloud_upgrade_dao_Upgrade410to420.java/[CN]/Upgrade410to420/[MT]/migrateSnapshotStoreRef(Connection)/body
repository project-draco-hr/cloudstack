{
  PreparedStatement snapshotStoreInsert=null;
  s_logger.debug("Updating snapshot_store_ref table from snapshots table");
  try {
    snapshotStoreInsert=conn.prepareStatement("INSERT INTO `cloud`.`snapshot_store_ref` (store_id,  snapshot_id, created, size, parent_snapshot_id, install_path, volume_id, update_count, ref_cnt, store_role, state) select sechost_id, id, created, size, prev_snap_id, CONCAT('snapshots', '/', account_id, '/', volume_id, '/', backup_snap_id), volume_id, 0, 0, 'Image', 'Ready' from `cloud`.`snapshots` where status = 'BackedUp' and hypervisor_type <> 'KVM' and sechost_id is not null and removed is null");
    int rowCount=snapshotStoreInsert.executeUpdate();
    s_logger.debug("Inserted " + rowCount + " snapshots into snapshot_store_ref");
    snapshotStoreInsert=conn.prepareStatement("INSERT INTO `cloud`.`snapshot_store_ref` (store_id,  snapshot_id, created, size, parent_snapshot_id, install_path, volume_id, update_count, ref_cnt, store_role, state) select sechost_id, id, created, size, prev_snap_id, backup_snap_id, volume_id, 0, 0, 'Image', 'Ready' from `cloud`.`snapshots` where status = 'BackedUp' and hypervisor_type = 'KVM' and sechost_id is not null and removed is null");
    rowCount=snapshotStoreInsert.executeUpdate();
    s_logger.debug("Inserted " + rowCount + " KVM snapshots into snapshot_store_ref");
  }
 catch (  SQLException e) {
    String msg="Unable to migrate snapshot_store_ref." + e.getMessage();
    s_logger.error(msg);
    throw new CloudRuntimeException(msg,e);
  }
 finally {
    try {
      if (snapshotStoreInsert != null) {
        snapshotStoreInsert.close();
      }
    }
 catch (    SQLException e) {
    }
  }
  s_logger.debug("Completed updating snapshot_store_ref table from snapshots table");
}
