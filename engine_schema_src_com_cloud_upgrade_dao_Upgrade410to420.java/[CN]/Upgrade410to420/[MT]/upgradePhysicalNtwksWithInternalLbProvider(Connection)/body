{
  try (PreparedStatement pstmt=conn.prepareStatement("SELECT id FROM `cloud`.`physical_network` where removed is null")){
    try (ResultSet rs=pstmt.executeQuery()){
      while (rs.next()) {
        long pNtwkId=rs.getLong(1);
        String uuid=UUID.randomUUID().toString();
        try (PreparedStatement insert_pstmt=conn.prepareStatement("INSERT INTO `cloud`.`physical_network_service_providers` " + "(uuid, physical_network_id, provider_name, state, load_balance_service_provided, destination_physical_network_id)" + " VALUES (?, ?, 'InternalLbVm', 'Enabled', 1, 0)")){
          insert_pstmt.setString(1,uuid);
          insert_pstmt.setLong(2,pNtwkId);
          insert_pstmt.executeUpdate();
          try (PreparedStatement pstmt1=conn.prepareStatement("SELECT id FROM `cloud`.`physical_network_service_providers`" + " WHERE physical_network_id=? AND provider_name='InternalLbVm'")){
            pstmt1.setLong(1,pNtwkId);
            try (ResultSet rs1=pstmt1.executeQuery()){
              while (rs1.next()) {
                long providerId=rs1.getLong(1);
                uuid=UUID.randomUUID().toString();
                try (PreparedStatement insert_cloud_pstmt=conn.prepareStatement("INSERT INTO `cloud`.`virtual_router_providers` (nsp_id, uuid, type, enabled) VALUES (?, ?, 'InternalLbVm', 1)")){
                  insert_cloud_pstmt.setLong(1,providerId);
                  insert_cloud_pstmt.setString(2,uuid);
                  insert_cloud_pstmt.executeUpdate();
                }
 catch (                SQLException e) {
                  throw new CloudRuntimeException("Unable to update existing physical networks with internal lb provider",e);
                }
              }
            }
 catch (            SQLException e) {
              throw new CloudRuntimeException("Unable to update existing physical networks with internal lb provider",e);
            }
          }
 catch (          SQLException e) {
            throw new CloudRuntimeException("Unable to update existing physical networks with internal lb provider",e);
          }
        }
       }
    }
 catch (    SQLException e) {
      throw new CloudRuntimeException("Unable to update existing physical networks with internal lb provider",e);
    }
  }
 catch (  SQLException e) {
    throw new CloudRuntimeException("Unable to update existing physical networks with internal lb provider",e);
  }
}
