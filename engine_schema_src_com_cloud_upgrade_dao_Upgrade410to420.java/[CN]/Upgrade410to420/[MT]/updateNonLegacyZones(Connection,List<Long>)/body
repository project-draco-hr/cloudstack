{
  try {
    for (    Long zoneId : zones) {
      s_logger.debug("Discovered non-legacy zone " + zoneId + ". Processing the zone to associate with VMware datacenter.");
      try (PreparedStatement clustersQuery=conn.prepareStatement("select id from `cloud`.`cluster` where removed is NULL AND data_center_id=?")){
        clustersQuery.setLong(1,zoneId);
        try (ResultSet clusters=clustersQuery.executeQuery()){
          clusters.next();
          Long clusterId=clusters.getLong("id");
          String user=null;
          String password=null;
          String url=null;
          try (PreparedStatement clusterDetailsQuery=conn.prepareStatement("select name, value from `cloud`.`cluster_details` where cluster_id=?")){
            clusterDetailsQuery.setLong(1,clusterId);
            try (ResultSet clusterDetails=clusterDetailsQuery.executeQuery()){
              while (clusterDetails.next()) {
                String key=clusterDetails.getString(1);
                String value=clusterDetails.getString(2);
                if (key.equalsIgnoreCase("username")) {
                  user=value;
                }
 else                 if (key.equalsIgnoreCase("password")) {
                  password=value;
                }
 else                 if (key.equalsIgnoreCase("url")) {
                  url=value;
                }
              }
              String[] tokens=url.split("/");
              String vc=tokens[2];
              String dcName=tokens[3];
              String guid=dcName + "@" + vc;
              try (PreparedStatement insertVmWareDC=conn.prepareStatement("INSERT INTO `cloud`.`vmware_data_center` (uuid, name, guid, vcenter_host, username, password) values(?, ?, ?, ?, ?, ?)")){
                insertVmWareDC.setString(1,UUID.randomUUID().toString());
                insertVmWareDC.setString(2,dcName);
                insertVmWareDC.setString(3,guid);
                insertVmWareDC.setString(4,vc);
                insertVmWareDC.setString(5,user);
                insertVmWareDC.setString(6,password);
                insertVmWareDC.executeUpdate();
              }
               try (PreparedStatement selectVmWareDC=conn.prepareStatement("SELECT id FROM `cloud`.`vmware_data_center` where guid=?")){
                selectVmWareDC.setString(1,guid);
                try (ResultSet vmWareDcInfo=selectVmWareDC.executeQuery()){
                  Long vmwareDcId=-1L;
                  if (vmWareDcInfo.next()) {
                    vmwareDcId=vmWareDcInfo.getLong("id");
                  }
                  try (PreparedStatement insertMapping=conn.prepareStatement("INSERT INTO `cloud`.`vmware_data_center_zone_map` (zone_id, vmware_data_center_id) values(?, ?)")){
                    insertMapping.setLong(1,zoneId);
                    insertMapping.setLong(2,vmwareDcId);
                    insertMapping.executeUpdate();
                  }
                 }
               }
             }
           }
         }
       }
     }
  }
 catch (  SQLException e) {
    String msg="Unable to update non legacy zones." + e.getMessage();
    s_logger.error(msg);
    throw new CloudRuntimeException(msg,e);
  }
}
