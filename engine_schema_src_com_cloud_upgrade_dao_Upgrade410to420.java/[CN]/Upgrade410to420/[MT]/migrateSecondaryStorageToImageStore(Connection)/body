{
  String sqlSelectS3Count="select count(*) from `cloud`.`s3`";
  String sqlSelectSwiftCount="select count(*) from `cloud`.`swift`";
  String sqlInsertStoreDetail="INSERT INTO `cloud`.`image_store_details` (store_id, name, value) values(?, ?, ?)";
  String sqlUpdateHostAsRemoved="UPDATE `cloud`.`host` SET removed = now() WHERE type = 'SecondaryStorage' and removed is null";
  s_logger.debug("Migrating secondary storage to image store");
  boolean hasS3orSwift=false;
  try (PreparedStatement pstmtSelectS3Count=conn.prepareStatement(sqlSelectS3Count);PreparedStatement pstmtSelectSwiftCount=conn.prepareStatement(sqlSelectSwiftCount);PreparedStatement storeDetailInsert=conn.prepareStatement(sqlInsertStoreDetail);PreparedStatement storeInsert=conn.prepareStatement("INSERT INTO `cloud`.`image_store` (id, uuid, name, image_provider_name, protocol, url, data_center_id, scope, role, parent, total_size, created, removed) values(?, ?, ?, 'NFS', 'nfs', ?, ?, 'ZONE', ?, ?, ?, ?, ?)");PreparedStatement nfsQuery=conn.prepareStatement("select id, uuid, url, data_center_id, parent, total_size, created, removed from `cloud`.`host` where type = 'SecondaryStorage'");PreparedStatement pstmtUpdateHostAsRemoved=conn.prepareStatement(sqlUpdateHostAsRemoved);ResultSet rsSelectS3Count=pstmtSelectS3Count.executeQuery();ResultSet rsSelectSwiftCount=pstmtSelectSwiftCount.executeQuery();ResultSet rsNfs=nfsQuery.executeQuery()){
    s_logger.debug("Checking if we need to migrate NFS secondary storage to image store or staging store");
    int numRows=0;
    if (rsSelectS3Count.next()) {
      numRows=rsSelectS3Count.getInt(1);
    }
    if (rsSelectSwiftCount.next()) {
      numRows+=rsSelectSwiftCount.getInt(1);
    }
    if (numRows > 0) {
      hasS3orSwift=true;
    }
    String store_role="Image";
    if (hasS3orSwift) {
      store_role="ImageCache";
    }
    s_logger.debug("Migrating NFS secondary storage to " + store_role + " store");
    while (rsNfs.next()) {
      Long nfs_id=rsNfs.getLong("id");
      String nfs_uuid=rsNfs.getString("uuid");
      String nfs_url=rsNfs.getString("url");
      String nfs_parent=rsNfs.getString("parent");
      int nfs_dcid=rsNfs.getInt("data_center_id");
      Long nfs_totalsize=rsNfs.getObject("total_size") != null ? rsNfs.getLong("total_size") : null;
      Date nfs_created=rsNfs.getDate("created");
      Date nfs_removed=rsNfs.getDate("removed");
      storeInsert.setLong(1,nfs_id);
      storeInsert.setString(2,nfs_uuid);
      storeInsert.setString(3,nfs_uuid);
      storeInsert.setString(4,nfs_url);
      storeInsert.setInt(5,nfs_dcid);
      storeInsert.setString(6,store_role);
      storeInsert.setString(7,nfs_parent);
      if (nfs_totalsize != null) {
        storeInsert.setLong(8,nfs_totalsize);
      }
 else {
        storeInsert.setNull(8,Types.BIGINT);
      }
      storeInsert.setDate(9,nfs_created);
      storeInsert.setDate(10,nfs_removed);
      storeInsert.executeUpdate();
    }
    s_logger.debug("Marking NFS secondary storage in host table as removed");
    pstmtUpdateHostAsRemoved.executeUpdate();
  }
 catch (  SQLException e) {
    String msg="Unable to migrate secondary storages." + e.getMessage();
    s_logger.error(msg);
    throw new CloudRuntimeException(msg,e);
  }
  s_logger.debug("Completed migrating secondary storage to image store");
}
