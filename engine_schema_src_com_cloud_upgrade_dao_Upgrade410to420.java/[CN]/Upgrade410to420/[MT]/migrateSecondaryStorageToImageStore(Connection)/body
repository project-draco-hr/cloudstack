{
  PreparedStatement storeInsert=null;
  PreparedStatement storeDetailInsert=null;
  PreparedStatement nfsQuery=null;
  PreparedStatement pstmt=null;
  ResultSet rs=null;
  ResultSet storeInfo=null;
  s_logger.debug("Migrating secondary storage to image store");
  boolean hasS3orSwift=false;
  try {
    s_logger.debug("Checking if we need to migrate NFS secondary storage to image store or staging store");
    int numRows=0;
    pstmt=conn.prepareStatement("select count(*) from `cloud`.`s3`");
    rs=pstmt.executeQuery();
    if (rs.next()) {
      numRows=rs.getInt(1);
    }
    rs.close();
    pstmt.close();
    if (numRows > 0) {
      hasS3orSwift=true;
    }
 else {
      pstmt=conn.prepareStatement("select count(*) from `cloud`.`swift`");
      rs=pstmt.executeQuery();
      if (rs.next()) {
        numRows=rs.getInt(1);
      }
      rs.close();
      pstmt.close();
      if (numRows > 0) {
        hasS3orSwift=true;
      }
    }
    String store_role="Image";
    if (hasS3orSwift) {
      store_role="ImageCache";
    }
    s_logger.debug("Migrating NFS secondary storage to " + store_role + " store");
    storeDetailInsert=conn.prepareStatement("INSERT INTO `cloud`.`image_store_details` (store_id, name, value) values(?, ?, ?)");
    storeInsert=conn.prepareStatement("INSERT INTO `cloud`.`image_store` (id, uuid, name, image_provider_name, protocol, url, data_center_id, scope, role, parent, total_size, created) values(?, ?, ?, 'NFS', 'nfs', ?, ?, 'ZONE', ?, ?, ?, ?)");
    nfsQuery=conn.prepareStatement("select id, uuid, url, data_center_id, parent, total_size, created from `cloud`.`host` where type = 'SecondaryStorage' and removed is null");
    rs=nfsQuery.executeQuery();
    while (rs.next()) {
      Long nfs_id=rs.getLong("id");
      String nfs_uuid=rs.getString("uuid");
      String nfs_url=rs.getString("url");
      String nfs_parent=rs.getString("parent");
      int nfs_dcid=rs.getInt("data_center_id");
      Long nfs_totalsize=rs.getObject("total_size") != null ? rs.getLong("total_size") : null;
      Date nfs_created=rs.getDate("created");
      storeInsert.setLong(1,nfs_id);
      storeInsert.setString(2,nfs_uuid);
      storeInsert.setString(3,nfs_uuid);
      storeInsert.setString(4,nfs_url);
      storeInsert.setInt(5,nfs_dcid);
      storeInsert.setString(6,store_role);
      storeInsert.setString(7,nfs_parent);
      if (nfs_totalsize != null) {
        storeInsert.setLong(8,nfs_totalsize);
      }
 else {
        storeInsert.setNull(8,Types.BIGINT);
      }
      storeInsert.setDate(9,nfs_created);
      storeInsert.executeUpdate();
    }
    s_logger.debug("Marking NFS secondary storage in host table as removed");
    pstmt=conn.prepareStatement("UPDATE `cloud`.`host` SET removed = now() WHERE type = 'SecondaryStorage' and removed is null");
    pstmt.executeUpdate();
    pstmt.close();
  }
 catch (  SQLException e) {
    String msg="Unable to migrate secondary storages." + e.getMessage();
    s_logger.error(msg);
    throw new CloudRuntimeException(msg,e);
  }
 finally {
    try {
      if (rs != null) {
        rs.close();
      }
      if (storeInfo != null) {
        storeInfo.close();
      }
      if (storeInsert != null) {
        storeInsert.close();
      }
      if (storeDetailInsert != null) {
        storeDetailInsert.close();
      }
      if (nfsQuery != null) {
        nfsQuery.close();
      }
      if (pstmt != null) {
        pstmt.close();
      }
    }
 catch (    SQLException e) {
    }
  }
  s_logger.debug("Completed migrating secondary storage to image store");
}
