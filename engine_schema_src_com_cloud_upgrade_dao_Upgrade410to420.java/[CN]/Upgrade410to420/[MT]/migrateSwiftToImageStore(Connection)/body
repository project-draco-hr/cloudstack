{
  Long storeId=null;
  Map<Long,Long> swift_store_id_map=new HashMap<Long,Long>();
  s_logger.debug("Migrating Swift to image store");
  try (PreparedStatement storeQuery=conn.prepareStatement("select id from `cloud`.`image_store` where uuid = ?");PreparedStatement storeDetailInsert=conn.prepareStatement("INSERT INTO `cloud`.`image_store_details` (store_id, name, value) values(?, ?, ?)");PreparedStatement storeInsert=conn.prepareStatement("INSERT INTO `cloud`.`image_store` (uuid, name, image_provider_name, protocol, url, scope, role, created) values(?, ?, 'Swift', 'http', ?, 'REGION', 'Image', ?)");PreparedStatement swiftQuery=conn.prepareStatement("select id, uuid, url, account, username, swift.key, created from `cloud`.`swift`");ResultSet rs=swiftQuery.executeQuery()){
    while (rs.next()) {
      Long swift_id=rs.getLong("id");
      String swift_uuid=rs.getString("uuid");
      String swift_url=rs.getString("url");
      String swift_account=rs.getString("account");
      String swift_username=rs.getString("username");
      String swift_key=rs.getString("key");
      Date swift_created=rs.getDate("created");
      storeInsert.setString(1,swift_uuid);
      storeInsert.setString(2,swift_uuid);
      storeInsert.setString(3,swift_url);
      storeInsert.setDate(4,swift_created);
      storeInsert.executeUpdate();
      storeQuery.setString(1,swift_uuid);
      try (ResultSet storeInfo=storeQuery.executeQuery()){
        if (storeInfo.next()) {
          storeId=storeInfo.getLong("id");
        }
      }
       Map<String,String> detailMap=new HashMap<String,String>();
      detailMap.put(ApiConstants.ACCOUNT,swift_account);
      detailMap.put(ApiConstants.USERNAME,swift_username);
      detailMap.put(ApiConstants.KEY,swift_key);
      Iterator<String> keyIt=detailMap.keySet().iterator();
      while (keyIt.hasNext()) {
        String key=keyIt.next();
        String val=detailMap.get(key);
        storeDetailInsert.setLong(1,storeId);
        storeDetailInsert.setString(2,key);
        storeDetailInsert.setString(3,val);
        storeDetailInsert.executeUpdate();
      }
      swift_store_id_map.put(swift_id,storeId);
    }
  }
 catch (  SQLException e) {
    String msg="Unable to migrate swift secondary storages." + e.getMessage();
    s_logger.error(msg);
    throw new CloudRuntimeException(msg,e);
  }
  s_logger.debug("Migrating template_swift_ref to template_store_ref");
  migrateTemplateSwiftRef(conn,swift_store_id_map);
  s_logger.debug("Migrating swift backedup snapshots to snapshot_store_ref");
  migrateSnapshotSwiftRef(conn,swift_store_id_map);
  s_logger.debug("Completed migrating Swift secondary storage to image store");
}
