{
  VolumeOperationResultObject resultObject=new VolumeOperationResultObject();
  Long diskOfferingId=null;
  diskOfferingId=volume.getDiskOfferingId();
  resultObject.setId(volume.getId());
  resultObject.setName(param.getName());
  resultObject.setVolumeType(volume.getVolumeType());
  resultObject.setVolumeSize(volume.getSize());
  resultObject.setCreatedDate(volume.getCreated());
  resultObject.setState(volume.getStatus());
  resultObject.setAccountName(getAsyncJobMgr().getExecutorContext().getManagementServer().findAccountById(param.getAccountId()).getAccountName());
  resultObject.setDomainId(volume.getDomainId());
  resultObject.setDiskOfferingId(volume.getDiskOfferingId());
  if (diskOfferingId != null) {
    resultObject.setDiskOfferingName(getAsyncJobMgr().getExecutorContext().getManagementServer().findDiskOfferingById(diskOfferingId).getName());
    resultObject.setDiskOfferingDisplayText(getAsyncJobMgr().getExecutorContext().getManagementServer().findDiskOfferingById(diskOfferingId).getDisplayText());
  }
  resultObject.setStorageType("shared");
  if (volume.getPoolId() != null)   resultObject.setStorage(getAsyncJobMgr().getExecutorContext().getManagementServer().findPoolById(volume.getPoolId()).getName());
  resultObject.setZoneId(volume.getDataCenterId());
  return resultObject;
}
