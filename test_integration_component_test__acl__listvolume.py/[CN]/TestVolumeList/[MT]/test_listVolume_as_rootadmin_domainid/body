@attr('simulator_only', tags=['advanced'], required_hardware='false')
def test_listVolume_as_rootadmin_domainid(self):
    '\n\t# Test listing of Volumes by passing domainid parameter as admin\n\t# Validate that it returns all the Volumes in the domain passed\n\t'
    self.apiclient.connection.apiKey = self.user_a_apikey
    self.apiclient.connection.securityKey = self.user_a_secretkey
    volumeList = Volume.list(self.apiclient, domainid=self.domain_11.id)
    self.debug(('List as ROOT Admin passing domainId  - %s' % volumeList))
    self.assertEqual((len(volumeList) == 3), True, 'Number of items in list response check failed!!')
    if (self.checkForExistenceOfValue(volumeList, self.vm_d11_volume[0].id) and self.checkForExistenceOfValue(volumeList, self.vm_d11a_volume[0].id) and self.checkForExistenceOfValue(volumeList, self.vm_d11b_volume[0].id)):
        accountAccess = True
    else:
        accountAccess = False
    self.assertEqual(accountAccess, True, 'Account access check failed!!')
