{
  int size=10;
  for (int n=1; n < size * 2; n++) {
    for (int i=0; i < size * 2; i++) {
      for (int d=0; d < min(i,size); d++) {
        BoundedFIFO bf=new BoundedFIFO(size);
        for (int p=0; p < i; p++) {
          bf.put(e[p]);
        }
        for (int g=0; g < d; g++) {
          bf.get();
        }
        int x=bf.length();
        bf.resize(n);
        int expectedSize=min(n,x);
        assertEquals(bf.length(),expectedSize);
        for (int c=0; c < expectedSize; c++) {
          assertEquals(bf.get(),e[c + d]);
        }
        assertNull(bf.get());
      }
    }
  }
}
