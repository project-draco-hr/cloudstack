def _checkSlaves(self, vdi):
    "Confirm with all slaves in the pool that 'vdi' is not in use. We\n        try to check all slaves, including those that the Agent believes are\n        offline, but ignore failures for offline hosts. This is to avoid cases\n        where the Agent thinks a host is offline but the host is up."
    args = {'vgName': self.vgName, 'action1': 'deactivateNoRefcount', 'lvName1': vdi.lvName, 'action2': 'cleanupLock', 'uuid2': vdi.uuid, 'ns2': (lvhdutil.NS_PREFIX_LVM + self.uuid), }
    onlineHosts = self.xapi.getOnlineHosts()
    abortFlag = IPCFlag(self.uuid)
    for pbdRecord in self.xapi.getAttachedPBDs():
        hostRef = pbdRecord['host']
        if (hostRef == self.xapi._hostRef):
            continue
        if abortFlag.test(FLAG_TYPE_ABORT):
            raise AbortException('Aborting due to signal')
        Util.log(('Checking with slave %s (path %s)' % (hostRef, vdi.path)))
        try:
            self.xapi.ensureInactive(hostRef, args)
        except XenAPI.Failure:
            if onlineHosts.__contains__(hostRef):
                raise
