def _redundant_on(self):
    CsHelper.mkdir(self.CS_RAMDISK_DIR, 493, False)
    CsHelper.mount_tmpfs(self.CS_RAMDISK_DIR)
    CsHelper.mkdir(self.CS_ROUTER_DIR, 493, False)
    for s in self.CS_TEMPLATES:
        d = s
        if s.endswith('.templ'):
            d = s.replace('.templ', '')
        CsHelper.copy_if_needed(('%s/%s' % (self.CS_TEMPLATES_DIR, s)), ('%s/%s' % (self.CS_ROUTER_DIR, d)))
    CsHelper.copy_if_needed(('%s/%s' % (self.CS_TEMPLATES_DIR, 'keepalived.conf.templ')), '/etc/keepalived/keepalived.conf')
    CsHelper.copy_if_needed(('%s/%s' % (self.CS_TEMPLATES_DIR, 'conntrackd.conf.templ')), '/etc/conntrackd/conntrackd.conf')
    CsHelper.copy_if_needed(('%s/%s' % (self.CS_TEMPLATES_DIR, 'checkrouter.sh.templ')), '/opt/cloud/bin/checkrouter.sh')
    file = CsFile('/etc/keepalived/keepalived.conf')
    file.search(' router_id ', ('    router_id %s' % self.cl.get_name()))
    file.search(' priority ', ('    priority %s' % 20))
    file.search(' weight ', ('    weight %s' % 2))
    file.greplace('[RROUTER_BIN_PATH]', self.CS_ROUTER_DIR)
    file.section('virtual_ipaddress {', '}', self._collect_ips())
    file.commit()
    control = self.address.get_control_if()
    connt = CsFile('/etc/conntrackd/conntrackd.conf')
    connt.search('[\\s\t]IPv4_interface ', ('\t\tIPv4_interface %s' % control.get_ip()))
    connt.search('[\\s\t]Interface ', ('\t\tInterface %s' % control.get_device()))
    connt.section('Address Ignore {', '}', self._collect_ignore_ips())
    connt.commit()
    if connt.is_changed():
        CsHelper.service('conntrackd', 'restart')
    if file.is_changed():
        CsHelper.service('keepalived', 'restart')
    cron = CsFile('/etc/cron.d/heartbeat')
    cron.add('SHELL=/bin/bash', 0)
    cron.add('PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin', 1)
    cron.add(('*/1 * * * * root $SHELL %s/check_heartbeat.sh 2>&1 > /dev/null' % self.CS_ROUTER_DIR), (-1))
    cron.commit()
