{
  VirtualMachineEntityImpl vmEntity=null;
  try {
    vmEntity=_vmEntityFactory.getObject();
  }
 catch (  Exception e) {
  }
  vmEntity.init(id,owner,hostName,displayName,cpu,speed,memory,computeTags,rootDiskTags,networks);
  VMInstanceVO vm=_vmDao.findByUUID(id);
  Pair<DiskOfferingVO,Long> rootDiskOffering=new Pair<DiskOfferingVO,Long>(null,null);
  ServiceOfferingVO offering=_serviceOfferingDao.findById(vm.getServiceOfferingId());
  rootDiskOffering.first(offering);
  List<Pair<DiskOfferingVO,Long>> dataDiskOfferings=new ArrayList<Pair<DiskOfferingVO,Long>>();
  Long diskOfferingId=vm.getDiskOfferingId();
  if (diskOfferingId == null) {
    throw new InvalidParameterValueException("Installing from ISO requires a disk offering to be specified for the root disk.");
  }
  DiskOfferingVO diskOffering=_diskOfferingDao.findById(diskOfferingId);
  if (diskOffering == null) {
    throw new InvalidParameterValueException("Unable to find disk offering " + diskOfferingId);
  }
  Long size=null;
  if (diskOffering.getDiskSize() == 0) {
    size=diskSize;
    if (size == null) {
      throw new InvalidParameterValueException("Disk offering " + diskOffering + " requires size parameter.");
    }
  }
  rootDiskOffering.first(diskOffering);
  rootDiskOffering.second(size);
  HypervisorType hypervisorType=HypervisorType.valueOf(hypervisor);
  if (_itMgr.allocate(vm,_templateDao.findById(new Long(isoId)),offering,rootDiskOffering,dataDiskOfferings,null,null,plan,hypervisorType,null) == null) {
    return null;
  }
  return vmEntity;
}
