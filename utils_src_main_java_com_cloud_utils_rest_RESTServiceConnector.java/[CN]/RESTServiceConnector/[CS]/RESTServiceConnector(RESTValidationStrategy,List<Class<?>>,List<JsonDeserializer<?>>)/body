{
  validation=validationStrategy;
  client=createHttpClient();
  client.getParams().setCookiePolicy(CookiePolicy.BROWSER_COMPATIBILITY);
  try {
    Protocol.registerProtocol(HTTPS,new Protocol(HTTPS,(ProtocolSocketFactory)new TrustingProtocolSocketFactory(),HTTPS_PORT));
  }
 catch (  final IOException e) {
    s_logger.warn("Failed to register the TrustingProtocolSocketFactory, falling back to default SSLSocketFactory",e);
  }
  final GsonBuilder gsonBuilder=new GsonBuilder();
  if (classList != null && deserializerList != null) {
    for (int i=0; i < classList.size() && i < deserializerList.size(); i++) {
      gsonBuilder.registerTypeAdapter(classList.get(i),deserializerList.get(i));
    }
  }
  gson=gsonBuilder.setFieldNamingPolicy(FieldNamingPolicy.LOWER_CASE_WITH_UNDERSCORES).create();
}
