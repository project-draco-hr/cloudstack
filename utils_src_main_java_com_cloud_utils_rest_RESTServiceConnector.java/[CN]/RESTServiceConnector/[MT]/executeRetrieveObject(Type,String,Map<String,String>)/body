{
  final GetMethod gm=(GetMethod)createMethod(GET_METHOD_TYPE,uri);
  gm.setRequestHeader(CONTENT_TYPE,JSON_CONTENT_TYPE);
  if (parameters != null && !parameters.isEmpty()) {
    final List<NameValuePair> nameValuePairs=new ArrayList<NameValuePair>(parameters.size());
    for (    final Entry<String,String> e : parameters.entrySet()) {
      nameValuePairs.add(new NameValuePair(e.getKey(),e.getValue()));
    }
    gm.setQueryString(nameValuePairs.toArray(new NameValuePair[0]));
  }
  executeMethod(gm);
  if (gm.getStatusCode() != HttpStatus.SC_OK) {
    final String errorMessage=responseToErrorMessage(gm);
    gm.releaseConnection();
    s_logger.error("Failed to retrieve object : " + errorMessage);
    throw new CloudstackRESTException("Failed to retrieve object : " + errorMessage);
  }
  T returnValue;
  try {
    returnValue=(T)gson.fromJson(gm.getResponseBodyAsString(),returnObjectType);
  }
 catch (  final IOException e) {
    s_logger.error("IOException while retrieving response body",e);
    throw new CloudstackRESTException(e);
  }
 finally {
    gm.releaseConnection();
  }
  return returnValue;
}
