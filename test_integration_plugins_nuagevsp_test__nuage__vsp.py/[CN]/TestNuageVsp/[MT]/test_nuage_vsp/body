@attr(tags=['advanced', 'nuagevsp'], required_hardware='false')
def test_nuage_vsp(self):
    ' Test NuageVsp network plugin with basic Isolated Network functionality\n        '
    self.debug('Validating the NuageVsp network service provider...')
    self.validate_NetworkServiceProvider('NuageVsp', state='Enabled')
    self.debug('Creating and enabling Nuage Vsp Isolated Network offering...')
    network_offering = self.create_NetworkOffering(self.test_data['nuage_vsp_services']['isolated_network_offering'])
    self.validate_network_offering(network_offering, state='Enabled')
    self.debug('Creating an Isolated Network with Nuage Vsp Isolated Network offering...')
    network = self.create_Network(network_offering, gateway='10.1.1.1')
    self.validate_network(network, state='Allocated')
    vm_1 = self.create_VM_in_Network(network)
    self.validate_network(network, state='Implemented')
    vr = self.get_network_router(network)
    self.check_router_state(vr, state='Running')
    self.check_vm_state(vm_1, state='Running')
    self.verify_vsp_network(self.domain.id, network)
    self.verify_vsp_router(vr)
    self.verify_vsp_vm(vm_1)
    vm_2 = self.create_VM_in_Network(network)
    self.check_vm_state(vm_2, state='Running')
    self.verify_vsp_vm(vm_2)
    self.debug('Deleting the Isolated Network with Nuage Vsp Isolated Network offering...')
    self.delete_VM(vm_1)
    self.delete_VM(vm_2)
    self.delete_Network(network)
    with self.assertRaises(Exception):
        self.validate_network(network)
    self.debug('Isolated Network successfully deleted in CloudStack')
    with self.assertRaises(Exception):
        self.verify_vsp_network(self.domain.id, network)
    self.debug('Isolated Network successfully deleted in VSD')
