{
  AssignVMCmd cmd=new AssignVMCmd();
  Class<?> _class=cmd.getClass();
  Field virtualmachineIdField=_class.getDeclaredField("virtualMachineId");
  virtualmachineIdField.setAccessible(true);
  virtualmachineIdField.set(cmd,1L);
  Field accountNameField=_class.getDeclaredField("accountName");
  accountNameField.setAccessible(true);
  accountNameField.set(cmd,"account");
  Field domainIdField=_class.getDeclaredField("domainId");
  domainIdField.setAccessible(true);
  domainIdField.set(cmd,1L);
  Account caller=new AccountVO("testaccount",1,"networkdomain",(short)1,UUID.randomUUID().toString());
  UserVO user=new UserVO(1,"testuser","password","firstname","lastName","email","timezone",UUID.randomUUID().toString());
  Account oldAccount=new AccountVO("testaccount",1,"networkdomain",(short)0,UUID.randomUUID().toString());
  Account newAccount=new AccountVO("testaccount",1,"networkdomain",(short)1,UUID.randomUUID().toString());
  UserVmVO vm=new UserVmVO(10L,"test","test",1L,HypervisorType.Any,1L,false,false,1L,1L,5L,"test","test",1L);
  vm.setState(VirtualMachine.State.Stopped);
  when(_vmDao.findById(anyLong())).thenReturn(vm);
  when(_accountService.getActiveAccountById(anyLong())).thenReturn(oldAccount);
  when(_accountService.getActiveAccountByName(anyString(),anyLong())).thenReturn(newAccount);
  doThrow(new PermissionDeniedException("Access check failed")).when(_accountMgr).checkAccess(any(Account.class),any(AccessType.class),any(Boolean.class),any(ControlledEntity.class));
  CallContext.register(user,caller);
  try {
    _userVmMgr.moveVMToUser(cmd);
  }
  finally {
    CallContext.unregister();
  }
}
