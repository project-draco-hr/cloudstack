{
  UserVm userVm=mock(UserVm.class);
  when(userVm.getId()).thenReturn(1L);
  when(_nicMock.getNetworkId()).thenReturn(2L);
  when(_networkMock.getNetworkOfferingId()).thenReturn(3L);
  when(_networkDao.findById(2L)).thenReturn(_networkMock);
  UserDataServiceProvider userDataServiceProvider=mock(UserDataServiceProvider.class);
  when(userDataServiceProvider.saveUserData(any(Network.class),any(NicProfile.class),any(VirtualMachineProfile.class))).thenReturn(true);
  when(_networkModel.areServicesSupportedByNetworkOffering(3L,Service.UserData)).thenReturn(true);
  when(_networkModel.getUserDataUpdateProvider(_networkMock)).thenReturn(userDataServiceProvider);
  assertTrue(_userVmMgr.applyUserData(HypervisorType.KVM,userVm,_nicMock));
}
