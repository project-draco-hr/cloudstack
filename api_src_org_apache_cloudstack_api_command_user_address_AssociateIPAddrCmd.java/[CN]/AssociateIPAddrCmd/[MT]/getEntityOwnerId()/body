{
  Account caller=CallContext.current().getCallingAccount();
  if (accountName != null && domainId != null) {
    Account account=_accountService.finalizeOwner(caller,accountName,domainId,projectId);
    return account.getId();
  }
 else   if (projectId != null) {
    Project project=_projectService.getProject(projectId);
    if (project != null) {
      if (project.getState() == Project.State.Active) {
        return project.getProjectAccountId();
      }
 else {
        throw new PermissionDeniedException("Can't add resources to the project with specified projectId in state=" + project.getState() + " as it's no longer active");
      }
    }
 else {
      throw new InvalidParameterValueException("Unable to find project by id");
    }
  }
 else   if (networkId != null) {
    Network network=_networkService.getNetwork(networkId);
    if (network == null) {
      throw new InvalidParameterValueException("Unable to find network by network id specified");
    }
    NetworkOffering offering=_configService.getNetworkOffering(network.getNetworkOfferingId());
    DataCenter zone=_configService.getZone(network.getDataCenterId());
    if (zone.getNetworkType() == NetworkType.Basic && offering.getElasticIp() && offering.getElasticLb()) {
      return caller.getAccountId();
    }
    return network.getAccountId();
  }
 else   if (vpcId != null) {
    Vpc vpc=_vpcService.getVpc(getVpcId());
    if (vpc == null) {
      throw new InvalidParameterValueException("Can't find Enabled vpc by id specified");
    }
    return vpc.getAccountId();
  }
  return caller.getAccountId();
}
