{
  List<FirewallRuleVO> ruleList=new ArrayList<FirewallRuleVO>();
  FirewallRuleVO rule=new FirewallRuleVO("rule1",1,80,"TCP",1,2,1,FirewallRule.Purpose.Firewall,null,null,null,null);
  ruleList.add(rule);
  FirewallManagerImpl firewallMgr=(FirewallManagerImpl)_firewallMgr;
  VirtualRouterElement virtualRouter=mock(VirtualRouterElement.class);
  VpcVirtualRouterElement vpcVirtualRouter=mock(VpcVirtualRouterElement.class);
  List<FirewallServiceProvider> fwElements=new ArrayList<FirewallServiceProvider>();
  fwElements.add(ComponentContext.inject(VirtualRouterElement.class));
  fwElements.add(ComponentContext.inject(VpcVirtualRouterElement.class));
  firewallMgr._firewallElements=fwElements;
  try {
    when(virtualRouter.applyFWRules(any(Network.class),any(List.class))).thenReturn(false);
    when(vpcVirtualRouter.applyFWRules(any(Network.class),any(List.class))).thenReturn(true);
    firewallMgr.applyRules(mock(Network.class),Purpose.Firewall,ruleList);
    verify(vpcVirtualRouter).applyFWRules(any(Network.class),any(List.class));
    verify(virtualRouter).applyFWRules(any(Network.class),any(List.class));
  }
 catch (  ResourceUnavailableException e) {
    Assert.fail("Unreachable code");
  }
}
