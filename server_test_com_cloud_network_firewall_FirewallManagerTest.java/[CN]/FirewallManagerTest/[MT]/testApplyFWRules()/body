{
  List<FirewallRuleVO> ruleList=new ArrayList<FirewallRuleVO>();
  FirewallRuleVO rule=new FirewallRuleVO("rule1",1,80,"TCP",1,2,1,FirewallRule.Purpose.Firewall,null,null,null,null);
  ruleList.add(rule);
  FirewallManagerImpl firewallMgr=(FirewallManagerImpl)ComponentLocator.getCurrentLocator().getManager(FirewallManager.class);
  VirtualRouterElement virtualRouter=mock(VirtualRouterElement.class);
  VpcVirtualRouterElement vpcVirtualRouter=mock(VpcVirtualRouterElement.class);
  ComponentInfo<Adapter> c1=new ComponentInfo<Adapter>("VirtualRouter",VirtualRouterElement.class,virtualRouter);
  ComponentInfo<Adapter> c2=new ComponentInfo<Adapter>("VpcVirtualRouter",VpcVirtualRouterElement.class,vpcVirtualRouter);
  List<ComponentInfo<Adapter>> adapters=new ArrayList<ComponentLocator.ComponentInfo<Adapter>>();
  adapters.add(c1);
  adapters.add(c2);
  Adapters<FirewallServiceProvider> fwElements=new Adapters<FirewallServiceProvider>("firewalElements",adapters);
  firewallMgr._firewallElements=fwElements;
  try {
    when(virtualRouter.applyFWRules(any(Network.class),any(List.class))).thenReturn(false);
    when(vpcVirtualRouter.applyFWRules(any(Network.class),any(List.class))).thenReturn(true);
    firewallMgr.applyRules(mock(Network.class),Purpose.Firewall,ruleList);
    verify(vpcVirtualRouter).applyFWRules(any(Network.class),any(List.class));
    verify(virtualRouter).applyFWRules(any(Network.class),any(List.class));
  }
 catch (  ResourceUnavailableException e) {
    Assert.fail("Unreachable code");
  }
}
