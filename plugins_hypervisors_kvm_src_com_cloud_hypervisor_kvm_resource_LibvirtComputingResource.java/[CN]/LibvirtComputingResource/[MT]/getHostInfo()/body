{
  final ArrayList<Object> info=new ArrayList<Object>();
  long speed=0;
  long cpus=0;
  long ram=0;
  String cap=null;
  try {
    Connect conn=LibvirtConnection.getConnection();
    final NodeInfo hosts=conn.nodeInfo();
    boolean result=false;
    try {
      BufferedReader in=new BufferedReader(new FileReader("/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq"));
      speed=Long.parseLong(in.readLine()) / 1000;
      result=true;
    }
 catch (    FileNotFoundException e) {
    }
catch (    IOException e) {
    }
catch (    NumberFormatException e) {
    }
    if (!result) {
      speed=hosts.mhz;
    }
    cpus=hosts.cpus;
    ram=hosts.memory * 1024L;
    LibvirtCapXMLParser parser=new LibvirtCapXMLParser();
    parser.parseCapabilitiesXML(conn.getCapabilities());
    ArrayList<String> oss=parser.getGuestOsType();
    for (    String s : oss) {
      if (s.equalsIgnoreCase("hvm")) {
        cap="hvm";
      }
    }
  }
 catch (  LibvirtException e) {
  }
  if (isSnapshotSupported()) {
    cap=cap + ",snapshot";
  }
  info.add((int)cpus);
  info.add(speed);
  info.add(ram);
  info.add(cap);
  long dom0ram=Math.min(ram / 10,768 * 1024 * 1024L);
  dom0ram=Math.max(dom0ram,_dom0MinMem);
  info.add(dom0ram);
  s_logger.debug("cpus=" + cpus + ", speed="+ speed+ ", ram="+ ram+ ", dom0ram="+ dom0ram);
  return info;
}
