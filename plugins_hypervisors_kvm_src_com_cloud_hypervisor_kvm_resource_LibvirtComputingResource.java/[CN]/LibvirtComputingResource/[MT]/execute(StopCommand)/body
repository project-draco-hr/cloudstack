{
  final String vmName=cmd.getVmName();
  if (cmd.checkBeforeCleanup()) {
    try {
      Connect conn=LibvirtConnection.getConnectionByVmName(vmName);
      Domain vm=conn.domainLookupByName(cmd.getVmName());
      if (vm != null && vm.getInfo().state == DomainInfo.DomainState.VIR_DOMAIN_RUNNING) {
        return new StopAnswer(cmd,"vm is still running on host",false);
      }
    }
 catch (    Exception e) {
      s_logger.debug("Failed to get vm status in case of checkboforecleanup is true",e);
    }
  }
  State state=null;
synchronized (_vms) {
    state=_vms.get(vmName);
    _vms.put(vmName,State.Stopping);
  }
  try {
    Connect conn=LibvirtConnection.getConnectionByVmName(vmName);
    List<DiskDef> disks=getDisks(conn,vmName);
    List<InterfaceDef> ifaces=getInterfaces(conn,vmName);
    destroy_network_rules_for_vm(conn,vmName);
    String result=stopVM(conn,vmName);
    if (result == null) {
      for (      DiskDef disk : disks) {
        cleanupDisk(disk);
      }
      for (      InterfaceDef iface : ifaces) {
        for (        VifDriver vifDriver : getAllVifDrivers()) {
          vifDriver.unplug(iface);
        }
      }
    }
    state=State.Stopped;
    return new StopAnswer(cmd,result,true);
  }
 catch (  LibvirtException e) {
    return new StopAnswer(cmd,e.getMessage(),false);
  }
 finally {
synchronized (_vms) {
      if (state != null) {
        _vms.put(vmName,state);
      }
 else {
        _vms.remove(vmName);
      }
    }
  }
}
