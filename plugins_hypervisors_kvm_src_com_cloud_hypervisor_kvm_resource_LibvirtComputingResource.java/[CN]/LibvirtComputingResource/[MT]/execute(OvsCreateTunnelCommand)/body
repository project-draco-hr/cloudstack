{
  String bridge="OVSTunnel" + cmd.getKey();
  try {
    if (!findOrCreateTunnelNetwork(cmd.getKey())) {
      s_logger.debug("Error during bridge setup");
      return new OvsCreateTunnelAnswer(cmd,false,"Cannot create network",bridge);
    }
    configureTunnelNetwork(cmd.getNetworkId(),cmd.getFrom(),cmd.getKey());
    Script command=new Script(_ovsTunnelPath,_timeout,s_logger);
    command.add("create_tunnel");
    command.add("--bridge",bridge);
    command.add("--remote_ip",cmd.getRemoteIp());
    command.add("--key",cmd.getKey().toString());
    command.add("--src_host",cmd.getFrom().toString());
    command.add("--dst_host",cmd.getTo().toString());
    String result=command.execute();
    String[] res=result.split(":");
    if (res.length == 2 && res[0].equalsIgnoreCase("SUCCESS")) {
      return new OvsCreateTunnelAnswer(cmd,true,result,res[1],bridge);
    }
 else {
      return new OvsCreateTunnelAnswer(cmd,false,result,bridge);
    }
  }
 catch (  Exception e) {
    s_logger.debug("Error during tunnel setup");
    s_logger.warn("Caught execption when creating ovs tunnel",e);
    return new OvsCreateTunnelAnswer(cmd,false,e.getMessage(),bridge);
  }
}
