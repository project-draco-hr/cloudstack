{
  Domain dm=null;
  try {
    dm=conn.domainLookupByName(vmName);
    final int persist=dm.isPersistent();
    if (force) {
      if (dm.isActive() == 1) {
        dm.destroy();
        if (persist == 1) {
          dm.undefine();
        }
      }
    }
 else {
      if (dm.isActive() == 0) {
        return null;
      }
      dm.shutdown();
      int retry=_stopTimeout / 2000;
      try {
        while (dm.isActive() == 1 && retry >= 0) {
          Thread.sleep(2000);
          retry--;
        }
      }
 catch (      final LibvirtException e) {
        final String error=e.toString();
        if (error.contains("Domain not found")) {
          s_logger.debug("successfully shut down vm " + vmName);
        }
 else {
          s_logger.debug("Error in waiting for vm shutdown:" + error);
        }
      }
      if (retry < 0) {
        s_logger.warn("Timed out waiting for domain " + vmName + " to shutdown gracefully");
        return Script.ERR_TIMEOUT;
      }
 else {
        if (persist == 1) {
          dm.undefine();
        }
      }
    }
  }
 catch (  final LibvirtException e) {
    if (e.getMessage().contains("Domain not found")) {
      s_logger.debug("VM " + vmName + " doesn't exist, no need to stop it");
      return null;
    }
    s_logger.debug("Failed to stop VM :" + vmName + " :",e);
    return e.getMessage();
  }
catch (  final InterruptedException ie) {
    s_logger.debug("Interrupted sleep");
    return ie.getMessage();
  }
 finally {
    try {
      if (dm != null) {
        dm.free();
      }
    }
 catch (    final LibvirtException e) {
      s_logger.trace("Ignoring libvirt error.",e);
    }
  }
  return null;
}
