{
  Domain dm=null;
  try {
    dm=conn.domainLookupByUUID(UUID.nameUUIDFromBytes(vmName.getBytes()));
    int persist=dm.isPersistent();
    if (force) {
      if (dm.getInfo().state != DomainInfo.DomainState.VIR_DOMAIN_SHUTOFF) {
        dm.destroy();
        if (persist == 1) {
          dm.undefine();
        }
      }
    }
 else {
      if (dm.getInfo().state == DomainInfo.DomainState.VIR_DOMAIN_SHUTOFF) {
        return null;
      }
      dm.shutdown();
      int retry=_stopTimeout / 2000;
      while ((dm.getInfo().state != DomainInfo.DomainState.VIR_DOMAIN_SHUTOFF) && (retry >= 0)) {
        Thread.sleep(2000);
        retry--;
      }
      if (retry < 0) {
        s_logger.warn("Timed out waiting for domain " + vmName + " to shutdown gracefully");
        return Script.ERR_TIMEOUT;
      }
 else {
        if (persist == 1) {
          dm.undefine();
        }
      }
    }
  }
 catch (  LibvirtException e) {
    s_logger.debug("Failed to stop VM :" + vmName + " :",e);
    return e.getMessage();
  }
catch (  InterruptedException ie) {
    s_logger.debug("Interrupted sleep");
    return ie.getMessage();
  }
 finally {
    try {
      if (dm != null) {
        dm.free();
      }
    }
 catch (    LibvirtException e) {
      s_logger.trace("Ignoring libvirt error.",e);
    }
  }
  return null;
}
