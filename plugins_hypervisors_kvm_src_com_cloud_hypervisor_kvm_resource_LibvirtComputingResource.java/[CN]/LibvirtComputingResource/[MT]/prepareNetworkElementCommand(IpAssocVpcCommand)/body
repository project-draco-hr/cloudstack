{
  Connect conn;
  final String routerName=cmd.getAccessDetail(NetworkElementCommand.ROUTER_NAME);
  try {
    conn=LibvirtConnection.getConnectionByVmName(routerName);
    final IpAddressTO[] ips=cmd.getIpAddresses();
    Integer devNum=0;
    final Map<String,Integer> broadcastUriToNicNum=new HashMap<String,Integer>();
    final List<InterfaceDef> pluggedNics=getInterfaces(conn,routerName);
    for (    final InterfaceDef pluggedNic : pluggedNics) {
      final String pluggedVlan=pluggedNic.getBrName();
      if (pluggedVlan.equalsIgnoreCase(_linkLocalBridgeName)) {
        broadcastUriToNicNum.put("LinkLocal",devNum);
      }
 else       if (pluggedVlan.equalsIgnoreCase(_publicBridgeName) || pluggedVlan.equalsIgnoreCase(_privBridgeName) || pluggedVlan.equalsIgnoreCase(_guestBridgeName)) {
        broadcastUriToNicNum.put(BroadcastDomainType.Vlan.toUri(Vlan.UNTAGGED).toString(),devNum);
      }
 else {
        broadcastUriToNicNum.put(getBroadcastUriFromBridge(pluggedVlan),devNum);
      }
      devNum++;
    }
    for (    final IpAddressTO ip : ips) {
      ip.setNicDevId(broadcastUriToNicNum.get(ip.getBroadcastUri()));
    }
    return new ExecutionResult(true,null);
  }
 catch (  final LibvirtException e) {
    s_logger.error("Ip Assoc failure on applying one ip due to exception:  ",e);
    return new ExecutionResult(false,e.getMessage());
  }
}
