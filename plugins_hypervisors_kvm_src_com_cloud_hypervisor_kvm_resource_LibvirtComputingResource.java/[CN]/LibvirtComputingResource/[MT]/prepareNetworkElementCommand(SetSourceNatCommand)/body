{
  Connect conn;
  final String routerName=cmd.getAccessDetail(NetworkElementCommand.ROUTER_NAME);
  cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);
  final IpAddressTO pubIP=cmd.getIpAddress();
  try {
    conn=LibvirtConnection.getConnectionByVmName(routerName);
    Integer devNum=0;
    final String pubVlan=pubIP.getBroadcastUri();
    final List<InterfaceDef> pluggedNics=getInterfaces(conn,routerName);
    for (    final InterfaceDef pluggedNic : pluggedNics) {
      final String pluggedVlanBr=pluggedNic.getBrName();
      final String pluggedVlanId=getBroadcastUriFromBridge(pluggedVlanBr);
      if (pubVlan.equalsIgnoreCase(Vlan.UNTAGGED) && pluggedVlanBr.equalsIgnoreCase(_publicBridgeName)) {
        break;
      }
 else       if (pluggedVlanBr.equalsIgnoreCase(_linkLocalBridgeName)) {
      }
 else       if (pluggedVlanId == null) {
        return new ExecutionResult(false,"unable to find the vlan id for bridge " + pluggedVlanBr + " when attempting to set up"+ pubVlan+ " on router "+ routerName);
      }
 else       if (pluggedVlanId.equals(pubVlan)) {
        break;
      }
      devNum++;
    }
    pubIP.setNicDevId(devNum);
    return new ExecutionResult(true,"success");
  }
 catch (  final LibvirtException e) {
    final String msg="Ip SNAT failure due to " + e.toString();
    s_logger.error(msg,e);
    return new ExecutionResult(false,msg);
  }
}
