{
  final ExecutorService executors=Executors.newSingleThreadExecutor();
  final List<NfsStoragePool> pools=_monitor.getStoragePools();
  final KVMHAChecker ha=new KVMHAChecker(pools,cmd.getHostIp());
  final Future<Boolean> future=executors.submit(ha);
  try {
    final Boolean result=future.get();
    if (result) {
      return new FenceAnswer(cmd,false,"Heart is still beating...");
    }
 else {
      return new FenceAnswer(cmd);
    }
  }
 catch (  final InterruptedException e) {
    s_logger.warn("Unable to fence",e);
    return new FenceAnswer(cmd,false,e.getMessage());
  }
catch (  final ExecutionException e) {
    s_logger.warn("Unable to fence",e);
    return new FenceAnswer(cmd,false,e.getMessage());
  }
}
