{
  VirtualMachineTO vmSpec=cmd.getVirtualMachine();
  vmSpec.setVncAddr(cmd.getHostIp());
  String vmName=vmSpec.getName();
  LibvirtVMDef vm=null;
  State state=State.Stopped;
  Connect conn=null;
  try {
synchronized (_vms) {
      _vms.put(vmName,State.Starting);
    }
    vm=createVMFromSpec(vmSpec);
    conn=LibvirtConnection.getConnectionByType(vm.getHvsType());
    createVbd(conn,vmSpec,vmName,vm);
    createVifs(vmSpec,vm);
    s_logger.debug("starting " + vmName + ": "+ vm.toString());
    startVM(conn,vmName,vm.toString());
    NicTO[] nics=vmSpec.getNics();
    for (    NicTO nic : nics) {
      if (nic.isSecurityGroupEnabled() || (nic.getIsolationUri() != null && nic.getIsolationUri().getScheme().equalsIgnoreCase(IsolationType.Ec2.toString()))) {
        if (vmSpec.getType() != VirtualMachine.Type.User) {
          default_network_rules_for_systemvm(conn,vmName);
          break;
        }
 else {
          List<String> nicSecIps=nic.getNicSecIps();
          String secIpsStr;
          StringBuilder sb=new StringBuilder();
          if (nicSecIps != null) {
            for (            String ip : nicSecIps) {
              sb.append(ip).append(":");
            }
            secIpsStr=sb.toString();
          }
 else {
            secIpsStr="0:";
          }
          default_network_rules(conn,vmName,nic,vmSpec.getId(),secIpsStr);
        }
      }
    }
    if (vmSpec.getType() != VirtualMachine.Type.User) {
      passCmdLine(vmName,vmSpec.getBootArgs());
    }
    state=State.Running;
    return new StartAnswer(cmd);
  }
 catch (  LibvirtException e) {
    s_logger.warn("LibvirtException ",e);
    if (conn != null) {
      handleVmStartFailure(conn,vmName,vm);
    }
    return new StartAnswer(cmd,e.getMessage());
  }
catch (  InternalErrorException e) {
    s_logger.warn("InternalErrorException ",e);
    if (conn != null) {
      handleVmStartFailure(conn,vmName,vm);
    }
    return new StartAnswer(cmd,e.getMessage());
  }
catch (  URISyntaxException e) {
    s_logger.warn("URISyntaxException ",e);
    if (conn != null) {
      handleVmStartFailure(conn,vmName,vm);
    }
    return new StartAnswer(cmd,e.getMessage());
  }
 finally {
synchronized (_vms) {
      if (state != State.Stopped) {
        _vms.put(vmName,state);
      }
 else {
        _vms.remove(vmName);
      }
    }
  }
}
