{
  VirtualMachineTO vmSpec=cmd.getVirtualMachine();
  vmSpec.setVncAddr(cmd.getHostIp());
  String vmName=vmSpec.getName();
  LibvirtVMDef vm=null;
  DomainState state=DomainState.VIR_DOMAIN_SHUTOFF;
  Connect conn=null;
  try {
    NicTO[] nics=vmSpec.getNics();
    for (    NicTO nic : nics) {
      if (vmSpec.getType() != VirtualMachine.Type.User) {
        nic.setPxeDisable(true);
      }
    }
    vm=createVMFromSpec(vmSpec);
    conn=LibvirtConnection.getConnectionByType(vm.getHvsType());
    createVbd(conn,vmSpec,vmName,vm);
    if (!_storagePoolMgr.connectPhysicalDisksViaVmSpec(vmSpec)) {
      return new StartAnswer(cmd,"Failed to connect physical disks to host");
    }
    createVifs(vmSpec,vm);
    s_logger.debug("starting " + vmName + ": "+ vm.toString());
    startVM(conn,vmName,vm.toString());
    for (    NicTO nic : nics) {
      if (nic.isSecurityGroupEnabled() || (nic.getIsolationUri() != null && nic.getIsolationUri().getScheme().equalsIgnoreCase(IsolationType.Ec2.toString()))) {
        if (vmSpec.getType() != VirtualMachine.Type.User) {
          default_network_rules_for_systemvm(conn,vmName);
          break;
        }
 else {
          List<String> nicSecIps=nic.getNicSecIps();
          String secIpsStr;
          StringBuilder sb=new StringBuilder();
          if (nicSecIps != null) {
            for (            String ip : nicSecIps) {
              sb.append(ip).append(":");
            }
            secIpsStr=sb.toString();
          }
 else {
            secIpsStr="0:";
          }
          default_network_rules(conn,vmName,nic,vmSpec.getId(),secIpsStr);
        }
      }
    }
    if (vmSpec.getType() != VirtualMachine.Type.User) {
      String controlIp=null;
      for (      NicTO nic : nics) {
        if (nic.getType() == TrafficType.Control) {
          controlIp=nic.getIp();
          break;
        }
      }
      for (int count=0; count < 30; count++) {
        passCmdLine(vmName,vmSpec.getBootArgs());
        boolean result=_virtRouterResource.connect(controlIp,1,5000);
        if (result) {
          break;
        }
      }
    }
    state=DomainState.VIR_DOMAIN_RUNNING;
    return new StartAnswer(cmd);
  }
 catch (  LibvirtException e) {
    s_logger.warn("LibvirtException ",e);
    if (conn != null) {
      handleVmStartFailure(conn,vmName,vm);
    }
    return new StartAnswer(cmd,e.getMessage());
  }
catch (  InternalErrorException e) {
    s_logger.warn("InternalErrorException ",e);
    if (conn != null) {
      handleVmStartFailure(conn,vmName,vm);
    }
    return new StartAnswer(cmd,e.getMessage());
  }
catch (  URISyntaxException e) {
    s_logger.warn("URISyntaxException ",e);
    if (conn != null) {
      handleVmStartFailure(conn,vmName,vm);
    }
    return new StartAnswer(cmd,e.getMessage());
  }
 finally {
    if (state != DomainState.VIR_DOMAIN_RUNNING) {
      _storagePoolMgr.disconnectPhysicalDisksViaVmSpec(vmSpec);
    }
  }
}
