{
  List<DiskDef> disks=vm.getDevices().getDisks();
  DiskDef rootDisk=disks.get(0);
  VolumeTO rootVol=getVolume(vmSpec,Volume.Type.ROOT);
  String patchName=vmName + "-patchdisk";
  KVMStoragePool pool=_storagePoolMgr.getStoragePool(rootVol.getPoolUuid());
  String patchDiskPath=pool.getLocalPath() + "/" + patchName;
  List<KVMPhysicalDisk> phyDisks=pool.listPhysicalDisks();
  boolean foundDisk=false;
  for (  KVMPhysicalDisk phyDisk : phyDisks) {
    if (phyDisk.getPath().equals(patchDiskPath)) {
      foundDisk=true;
      break;
    }
  }
  if (!foundDisk) {
    s_logger.debug("generating new patch disk for " + vmName + " since none was found");
    KVMPhysicalDisk disk=pool.createPhysicalDisk(patchName,KVMPhysicalDisk.PhysicalDiskFormat.RAW,10L * 1024 * 1024);
  }
 else {
    s_logger.debug("found existing patch disk at " + patchDiskPath + " using it for "+ vmName);
  }
  final Script command=new Script(_createvmPath,_timeout,s_logger);
  command.add("-f",patchDiskPath);
  String result=command.execute();
  if (result != null) {
    s_logger.debug("Failed to create data disk: " + result);
    throw new InternalErrorException("Failed to create data disk: " + result);
  }
  DiskDef patchDisk=new DiskDef();
  if (pool.getType() == StoragePoolType.CLVM) {
    patchDisk.defBlockBasedDisk(patchDiskPath,1,rootDisk.getBusType());
  }
 else {
    patchDisk.defFileBasedDisk(patchDiskPath,1,rootDisk.getBusType(),DiskDef.diskFmtType.RAW);
  }
  disks.add(patchDisk);
  String bootArgs=vmSpec.getBootArgs();
  patchSystemVm(bootArgs,patchDiskPath,vmName);
}
