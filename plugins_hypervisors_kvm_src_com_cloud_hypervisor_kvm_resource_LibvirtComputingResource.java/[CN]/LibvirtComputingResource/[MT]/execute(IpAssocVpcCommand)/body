{
  Connect conn;
  String[] results=new String[cmd.getIpAddresses().length];
  int i=0;
  String routerName=cmd.getAccessDetail(NetworkElementCommand.ROUTER_NAME);
  String routerIP=cmd.getAccessDetail(NetworkElementCommand.ROUTER_IP);
  try {
    conn=LibvirtConnection.getConnectionByVmName(routerName);
    IpAddressTO[] ips=cmd.getIpAddresses();
    Integer devNum=0;
    Map<String,Integer> broadcastUriToNicNum=new HashMap<String,Integer>();
    List<InterfaceDef> pluggedNics=getInterfaces(conn,routerName);
    for (    InterfaceDef pluggedNic : pluggedNics) {
      String pluggedVlan=pluggedNic.getBrName();
      if (pluggedVlan.equalsIgnoreCase(_linkLocalBridgeName)) {
        broadcastUriToNicNum.put("LinkLocal",devNum);
      }
 else       if (pluggedVlan.equalsIgnoreCase(_publicBridgeName) || pluggedVlan.equalsIgnoreCase(_privBridgeName) || pluggedVlan.equalsIgnoreCase(_guestBridgeName)) {
        broadcastUriToNicNum.put(BroadcastDomainType.Vlan.toUri(Vlan.UNTAGGED).toString(),devNum);
      }
 else {
        broadcastUriToNicNum.put(getBroadcastUriFromBridge(pluggedVlan),devNum);
      }
      devNum++;
    }
    for (    IpAddressTO ip : ips) {
      String nicName="eth" + broadcastUriToNicNum.get(ip.getBroadcastUri());
      String netmask=Long.toString(NetUtils.getCidrSize(ip.getVlanNetmask()));
      String subnet=NetUtils.getSubNet(ip.getPublicIp(),ip.getVlanNetmask());
      _virtRouterResource.assignVpcIpToRouter(routerIP,ip.isAdd(),ip.getPublicIp(),nicName,ip.getVlanGateway(),netmask,subnet,ip.isSourceNat());
      results[i++]=ip.getPublicIp() + " - success";
    }
  }
 catch (  LibvirtException e) {
    s_logger.error("Ip Assoc failure on applying one ip due to exception:  ",e);
    results[i++]=IpAssocAnswer.errorResult;
  }
catch (  InternalErrorException e) {
    s_logger.error("Ip Assoc failure on applying one ip due to exception:  ",e);
    results[i++]=IpAssocAnswer.errorResult;
  }
  return new IpAssocAnswer(cmd,results);
}
