{
  final String pif=matchPifFileInDirectory(brName);
  final Pattern pattern=Pattern.compile("(\\D+)(\\d+)(\\D*)(\\d*)");
  final Matcher matcher=pattern.matcher(pif);
  s_logger.debug("getting broadcast uri for pif " + pif + " and bridge "+ brName);
  if (matcher.find()) {
    if (brName.startsWith("brvx")) {
      return BroadcastDomainType.Vxlan.toUri(matcher.group(2)).toString();
    }
 else {
      if (!matcher.group(4).isEmpty()) {
        return BroadcastDomainType.Vlan.toUri(matcher.group(4)).toString();
      }
 else {
        s_logger.debug("failed to get vNet id from bridge " + brName + "attached to physical interface"+ pif+ ", perhaps untagged interface");
        return "";
      }
    }
  }
 else {
    s_logger.debug("failed to get vNet id from bridge " + brName + "attached to physical interface"+ pif);
    return "";
  }
}
