{
  SnapshotInfo snapshot=(SnapshotInfo)snapObj;
  StoragePool pool=(StoragePool)volObj.getDataStore();
  String basicErrMsg="Failed to create volume from " + snapshot.getName() + " on pool "+ pool;
  DataStore store=snapObj.getDataStore();
  DataStoreTO storTO=store.getTO();
  DataObject srcData=snapObj;
  try {
    if (!(storTO instanceof NfsTO)) {
      srcData=cacheSnapshotChain(snapshot);
    }
    String value=configDao.getValue(Config.CreateVolumeFromSnapshotWait.toString());
    int _createVolumeFromSnapshotWait=NumbersUtil.parseInt(value,Integer.parseInt(Config.CreateVolumeFromSnapshotWait.getDefaultValue()));
    EndPoint ep=null;
    if (srcData.getDataStore().getRole() == DataStoreRole.Primary) {
      ep=selector.select(volObj);
    }
 else {
      ep=selector.select(snapObj,volObj);
    }
    CopyCommand cmd=new CopyCommand(srcData.getTO(),volObj.getTO(),_createVolumeFromSnapshotWait,_mgmtServer.getExecuteInSequence());
    Answer answer=ep.sendMessage(cmd);
    return answer;
  }
 catch (  Exception e) {
    s_logger.error(basicErrMsg,e);
    throw new CloudRuntimeException(basicErrMsg);
  }
 finally {
    if (!(storTO instanceof NfsTO)) {
      releaseSnapshotCacheChain((SnapshotInfo)srcData);
    }
  }
}
