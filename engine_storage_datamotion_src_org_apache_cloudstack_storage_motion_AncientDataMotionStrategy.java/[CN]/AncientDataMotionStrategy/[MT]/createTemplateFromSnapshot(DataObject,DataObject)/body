{
  long snapshotId=srcData.getId();
  SnapshotVO snapshot=snapshotDao.findById(snapshotId);
  if (snapshot == null) {
    throw new CloudRuntimeException("Unable to find Snapshot for Id " + srcData.getId());
  }
  Long zoneId=snapshot.getDataCenterId();
  DataStore secStore=destData.getDataStore();
  String secondaryStorageURL=snapshotMgr.getSecondaryStorageURL(snapshot);
  VMTemplateVO template=this.templateDao.findById(destData.getId());
  String name=template.getName();
  String backupSnapshotUUID=snapshot.getBackupSnapshotId();
  if (backupSnapshotUUID == null) {
    throw new CloudRuntimeException("Unable to create private template from snapshot " + snapshotId + " due to there is no backupSnapshotUUID for this snapshot");
  }
  Long dcId=snapshot.getDataCenterId();
  Long accountId=snapshot.getAccountId();
  Long volumeId=snapshot.getVolumeId();
  String origTemplateInstallPath=null;
  List<StoragePoolVO> pools=this.storageMgr.ListByDataCenterHypervisor(zoneId,snapshot.getHypervisorType());
  if (pools == null || pools.size() == 0) {
    throw new CloudRuntimeException("Unable to find storage pools in zone " + zoneId);
  }
  StoragePoolVO poolvo=pools.get(0);
  StoragePool pool=(StoragePool)this.dataStoreMgr.getDataStore(poolvo.getId(),DataStoreRole.Primary);
  if (snapshot.getSwiftId() != null && snapshot.getSwiftId() != 0) {
    snapshotMgr.downloadSnapshotsFromSwift(snapshot);
  }
  String value=configDao.getValue(Config.CreatePrivateTemplateFromSnapshotWait.toString());
  int _createprivatetemplatefromsnapshotwait=NumbersUtil.parseInt(value,Integer.parseInt(Config.CreatePrivateTemplateFromSnapshotWait.getDefaultValue()));
  CreatePrivateTemplateFromSnapshotCommand cmd=new CreatePrivateTemplateFromSnapshotCommand(pool,secondaryStorageURL,dcId,accountId,snapshot.getVolumeId(),backupSnapshotUUID,snapshot.getName(),origTemplateInstallPath,template.getId(),name,_createprivatetemplatefromsnapshotwait);
  return sendCommand(cmd,pool,template.getId(),dcId,secStore);
}
