{
  String value=configDao.getValue(Config.MigrateWait.key());
  int waitInterval=NumbersUtil.parseInt(value,Integer.parseInt(Config.MigrateWait.getDefaultValue()));
  VolumeInfo volume=(VolumeInfo)srcData;
  StoragePool destPool=(StoragePool)dataStoreMgr.getDataStore(destData.getDataStore().getId(),DataStoreRole.Primary);
  MigrateVolumeCommand command=new MigrateVolumeCommand(volume.getId(),volume.getPath(),destPool,volume.getAttachedVmName(),volume.getVolumeType(),waitInterval);
  EndPoint ep=selector.select(srcData,StorageAction.MIGRATEVOLUME);
  Answer answer=null;
  if (ep == null) {
    String errMsg="No remote endpoint to send command, check if host or ssvm is down?";
    s_logger.error(errMsg);
    answer=new Answer(command,false,errMsg);
  }
 else {
    answer=ep.sendMessage(command);
  }
  if (answer == null || !answer.getResult()) {
    throw new CloudRuntimeException("Failed to migrate volume " + volume + " to storage pool "+ destPool);
  }
 else {
    VolumeVO volumeVo=volDao.findById(volume.getId());
    Long oldPoolId=volume.getPoolId();
    volumeVo.setPath(((MigrateVolumeAnswer)answer).getVolumePath());
    String chainInfo=((MigrateVolumeAnswer)answer).getVolumeChainInfo();
    if (chainInfo != null) {
      volumeVo.setChainInfo(chainInfo);
    }
    volumeVo.setPodId(destPool.getPodId());
    volumeVo.setPoolId(destPool.getId());
    volumeVo.setLastPoolId(oldPoolId);
    String folder=destPool.getPath();
    if (destPool.getPoolType() == StoragePoolType.SMB && folder != null && folder.contains("?")) {
      folder=folder.substring(0,folder.indexOf("?"));
    }
    volumeVo.setFolder(folder);
    volDao.update(volume.getId(),volumeVo);
  }
  return answer;
}
