{
  VspNetwork vspNetwork=_nuageVspEntityBuilder.buildVspNetwork(network,false);
  List<VspAclRule> vspAclRules=Lists.transform(rules,new Function<InternalIdentity,VspAclRule>(){
    @Nullable @Override public VspAclRule apply(    @Nullable InternalIdentity input){
      if (input instanceof FirewallRule) {
        return _nuageVspEntityBuilder.buildVspAclRule((FirewallRule)input,network);
      }
      return _nuageVspEntityBuilder.buildVspAclRule((NetworkACLItem)input);
    }
  }
);
  HostVO nuageVspHost=getNuageVspHost(network.getPhysicalNetworkId());
  VspAclRule.ACLType vspAclType=isNetworkAcl ? VspAclRule.ACLType.NetworkACL : VspAclRule.ACLType.Firewall;
  ApplyAclRuleVspCommand cmd=new ApplyAclRuleVspCommand(vspAclType,vspNetwork,vspAclRules,networkReset);
  Answer answer=_agentMgr.easySend(nuageVspHost.getId(),cmd);
  if (answer == null || !answer.getResult()) {
    s_logger.error("ApplyAclRuleNuageVspCommand for network " + network.getUuid() + " failed on Nuage VSD "+ nuageVspHost.getDetail("hostname"));
    if ((null != answer) && (null != answer.getDetails())) {
      throw new ResourceUnavailableException(answer.getDetails(),Network.class,network.getId());
    }
  }
  return true;
}
