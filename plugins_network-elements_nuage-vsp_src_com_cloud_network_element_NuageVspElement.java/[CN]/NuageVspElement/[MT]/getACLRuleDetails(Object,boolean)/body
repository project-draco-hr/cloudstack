{
  Map<String,Object> aclDetails=new HashMap<String,Object>();
  if (aclRule instanceof FirewallRule) {
    FirewallRule firewallRule=(FirewallRule)aclRule;
    aclDetails.put("sourceCidrList",firewallRule.getSourceCidrList());
    aclDetails.put("uuid",firewallRule.getUuid());
    aclDetails.put("protocol",firewallRule.getProtocol());
    aclDetails.put("startPort",firewallRule.getSourcePortStart());
    aclDetails.put("endPort",firewallRule.getSourcePortEnd());
    aclDetails.put("state",firewallRule.getState().name());
    aclDetails.put("trafficType",firewallRule.getTrafficType().name());
    if (firewallRule.getSourceIpAddressId() != null) {
      IPAddressVO ipaddress=_ipAddressDao.findById(((FirewallRule)aclRule).getSourceIpAddressId());
      aclDetails.put("sourceIpAddress",ipaddress != null ? ipaddress.getVmIp() + "/32" : null);
    }
    if (firewallRule.getTrafficType().equals(FirewallRule.TrafficType.Egress) && egressDefaultPolicy) {
      aclDetails.put("action","Deny");
    }
 else {
      aclDetails.put("action","Allow");
    }
    aclDetails.put("priority",-1);
    aclDetails.put("type","Firewall");
  }
 else {
    NetworkACLItem networkAcl=(NetworkACLItem)aclRule;
    aclDetails.put("sourceCidrList",networkAcl.getSourceCidrList());
    aclDetails.put("uuid",networkAcl.getUuid());
    aclDetails.put("protocol",networkAcl.getProtocol());
    aclDetails.put("startPort",networkAcl.getSourcePortStart());
    aclDetails.put("endPort",networkAcl.getSourcePortEnd());
    aclDetails.put("state",networkAcl.getState().name());
    aclDetails.put("trafficType",networkAcl.getTrafficType().name());
    aclDetails.put("sourceIpAddress",null);
    aclDetails.put("action",networkAcl.getAction().name());
    aclDetails.put("priority",networkAcl.getNumber());
    aclDetails.put("type","NetworkACL");
  }
  return aclDetails;
}
