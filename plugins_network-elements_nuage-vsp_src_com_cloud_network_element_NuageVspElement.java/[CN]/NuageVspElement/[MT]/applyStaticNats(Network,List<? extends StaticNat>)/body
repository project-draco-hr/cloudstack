{
  List<VspStaticNat> vspStaticNatDetails=new ArrayList<VspStaticNat>();
  for (  StaticNat staticNat : rules) {
    IPAddressVO sourceNatIp=_ipAddressDao.findById(staticNat.getSourceIpAddressId());
    VlanVO sourceNatVlan=_vlanDao.findById(sourceNatIp.getVlanId());
    NicVO nicVO=_nicDao.findByIp4AddressAndNetworkId(staticNat.getDestIpAddress(),staticNat.getNetworkId());
    VspStaticNat vspStaticNat=_nuageVspEntityBuilder.buildVspStaticNat(staticNat.isForRevoke(),sourceNatIp,sourceNatVlan,nicVO);
    vspStaticNatDetails.add(vspStaticNat);
  }
  VspNetwork vspNetwork=_nuageVspEntityBuilder.buildVspNetwork(config,false);
  HostVO nuageVspHost=getNuageVspHost(config.getPhysicalNetworkId());
  ApplyStaticNatVspCommand cmd=new ApplyStaticNatVspCommand(vspNetwork,vspStaticNatDetails);
  Answer answer=_agentMgr.easySend(nuageVspHost.getId(),cmd);
  if (answer == null || !answer.getResult()) {
    s_logger.error("ApplyStaticNatNuageVspCommand for network " + config.getUuid() + " failed on Nuage VSD "+ nuageVspHost.getDetail("hostname"));
    if ((null != answer) && (null != answer.getDetails())) {
      throw new ResourceUnavailableException(answer.getDetails(),Network.class,config.getId());
    }
  }
  return true;
}
