{
  com.trilead.ssh2.Connection sshConnection=new com.trilead.ssh2.Connection(_ip,22);
  try {
    sshConnection.connect(null,60000,60000);
    if (!sshConnection.authenticateWithPassword(_username,_password)) {
      logger.debug("SSH Failed to authenticate");
      throw new ConfigurationException(String.format("Cannot connect to PING PXE server(IP=%1$s, username=%2$s, password=%3$s",_ip,_username,_password));
    }
    String copyTo=String.format("%s/%s",_tftpDir,cmd.getTemplateUuid());
    String script=String.format("python /usr/bin/prepare_kickstart_kernel_initrd.py %s %s %s",cmd.getKernel(),cmd.getInitrd(),copyTo);
    if (!SSHCmdHelper.sshExecuteCmd(sshConnection,script)) {
      return new Answer(cmd,false,"prepare kickstart at pxe server " + _ip + " failed, command:"+ script);
    }
    String kernelPath=String.format("%s/vmlinuz",cmd.getTemplateUuid());
    String initrdPath=String.format("%s/initrd.img",cmd.getTemplateUuid());
    script=String.format("python /usr/bin/prepare_kickstart_bootfile.py %s %s %s %s %s %s",_tftpDir,cmd.getMac(),kernelPath,initrdPath,cmd.getKsFile(),cmd.getMac());
    if (!SSHCmdHelper.sshExecuteCmd(sshConnection,script)) {
      return new Answer(cmd,false,"prepare kickstart at pxe server " + _ip + " failed, command:"+ script);
    }
    logger.debug("Prepare kickstart PXE server successfully");
    return new Answer(cmd,true,"Success");
  }
 catch (  Exception e) {
    logger.debug("Prepare for kickstart server failed",e);
    return new Answer(cmd,false,e.getMessage());
  }
 finally {
    if (sshConnection != null) {
      sshConnection.close();
    }
  }
}
