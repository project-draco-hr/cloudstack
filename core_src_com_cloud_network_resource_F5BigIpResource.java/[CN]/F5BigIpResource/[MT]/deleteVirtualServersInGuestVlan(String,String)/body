{
  vlanSelfIp=stripRouteDomainFromAddress(vlanSelfIp);
  List<String> virtualServersToDelete=new ArrayList<String>();
  List<String> allVirtualServers=getVirtualServers();
  for (  String virtualServerName : allVirtualServers) {
    List<String> poolMembers=getMembers(virtualServerName);
    for (    String poolMemberName : poolMembers) {
      String poolMemberIp=stripRouteDomainFromAddress(getIpAndPort(poolMemberName)[0]);
      if (NetUtils.sameSubnet(vlanSelfIp,poolMemberIp,vlanNetmask)) {
        virtualServersToDelete.add(virtualServerName);
        break;
      }
    }
  }
  for (  String virtualServerName : virtualServersToDelete) {
    s_logger.debug("Found a virtual server (" + virtualServerName + ") for guest network with self IP "+ vlanSelfIp+ " that is active when the guest network is being destroyed.");
    deleteVirtualServerAndDefaultPool(virtualServerName);
  }
}
