{
  ComponentContext.initComponentsLifeCycle();
  PlannerHostReservationVO reservationVO=new PlannerHostReservationVO(200L,1L,2L,3L,PlannerResourceUsage.Shared);
  Mockito.when(_plannerHostReserveDao.persist(Mockito.any(PlannerHostReservationVO.class))).thenReturn(reservationVO);
  Mockito.when(_plannerHostReserveDao.findById(Mockito.anyLong())).thenReturn(reservationVO);
  Mockito.when(_affinityGroupVMMapDao.countAffinityGroupsForVm(Mockito.anyLong())).thenReturn(0L);
  VMInstanceVO vm=new VMInstanceVO();
  Mockito.when(vmProfile.getVirtualMachine()).thenReturn(vm);
  Mockito.when(_dcDao.findById(Mockito.anyLong())).thenReturn(dc);
  Mockito.when(dc.getId()).thenReturn(dataCenterId);
  ClusterVO clusterVO=new ClusterVO();
  clusterVO.setHypervisorType(HypervisorType.XenServer.toString());
  Mockito.when(_clusterDao.findById(Mockito.anyLong())).thenReturn(clusterVO);
  Mockito.when(_planner.getName()).thenReturn("FirstFitPlanner");
  List<DeploymentPlanner> planners=new ArrayList<DeploymentPlanner>();
  planners.add(_planner);
  _dpm.setPlanners(planners);
}
