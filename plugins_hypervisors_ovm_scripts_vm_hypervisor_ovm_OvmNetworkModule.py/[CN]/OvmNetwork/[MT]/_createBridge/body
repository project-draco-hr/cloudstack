def _createBridge(self, bridge):
    '\n        @return : success\n        ex. {bridge:xapi100, attach:eth0.100}\n        create bridge interface, and attached it \n        cmd 1: brctl addbr bridge\n        cmd 2: brctl addif brdige attach\n        '
    if (('xenbr' not in bridge.name) and ('vlan' not in bridge.name)):
        raise Exception(('Invalid bridge name %s. Bridge name must be in partten xenbr/vlan, e.g. xenbr0' % bridge.name))
    if (bridge.name in self.bridges.keys()):
        msg = ('Bridge(%s) already exist, return it' % bridge.name)
        logger.debug(self._createBridge, msg)
        return self.bridges[bridge.name]
    if ((bridge.attach not in self.vlans.keys()) and (bridge.attach not in self.pifs.keys())):
        msg = ('%s is not either pif or vlan' % bridge.attach)
        logger.error(self._createBridge, msg)
        raise Exception(msg)
    doCmd(['brctl', 'addbr', bridge.name])
    doCmd(['brctl', 'addif', bridge.name, bridge.attach])
    self.bringUP(bridge.name)
    logger.debug(self._createBridge, ('Create bridge %s on %s successfully' % (bridge.name, bridge.attach)))
    return self.bridges[bridge.name]
