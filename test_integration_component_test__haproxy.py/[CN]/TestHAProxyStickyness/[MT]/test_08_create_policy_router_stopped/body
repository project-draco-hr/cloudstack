@attr(tags=['advanced', 'advancedns'], required_hardware='true')
def test_08_create_policy_router_stopped(self):
    'Test verify create stickiness policy when router is stopped state'
    self.debug(('Creating LB rule for account: %s' % self.account.name))
    lb_rule = self.create_LB_Rule(self.public_ip, network=self.get_Network(self.account), vmarray=[self.virtual_machine, self.virtual_machine_2])
    self.debug(('Fetching routers for the account: %s' % self.account.name))
    router = self.get_router(self.account)
    self.debug(('Stopping the router: %s' % router.name))
    Router.stop(self.apiclient, id=router.id)
    policies = self.configure_Stickiness_Policy(lb_rule, method='SourceBased')
    policy = policies.stickinesspolicy[0]
    self.debug(('Starting the router: %s' % router.name))
    Router.start(self.apiclient, id=router.id)
    self.debug(('Policy: %s' % str(policy)))
    self.debug('Validating the stickiness policy')
    self.validate_Stickiness_Policy(lb_rule, 'SourceBased', self.public_ip.ipaddress.ipaddress)
    return
