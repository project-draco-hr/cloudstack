@attr(tags=['advanced', 'advancedns'], required_hardware='true')
@attr(speed='slow')
def test_01_create_sticky_policy_default_values(self):
    'Test Configure stickiness policies with default values'
    self.debug(('Creating a load balancing rule on IP: %s' % self.public_ip.ipaddress.ipaddress))
    lb_rule = self.create_LB_Rule(self.public_ip, network=self.get_Network(self.account), vmarray=[self.virtual_machine, self.virtual_machine_2])
    methods = ['SourceBased']
    for method in methods:
        self.debug(('Creating stickiness policy for the LB rule: %s' % lb_rule.id))
        policies = self.configure_Stickiness_Policy(lb_rule, method=method)
        policy = policies.stickinesspolicy[0]
        self.debug(('Policy: %s' % str(policy)))
        self.debug('Validating the stickiness policy')
        self.validate_Stickiness_Policy(lb_rule, method, self.public_ip.ipaddress.ipaddress)
        self.debug(('Deleting the stickiness policy for lb rule: %s' % lb_rule.name))
        self.delete_Stickiness_policy(policy, lb_rule)
    return
