{
  super();
  ProfileSearch=createSearchBuilder();
  ProfileSearch.and("trafficType",ProfileSearch.entity().getTrafficType(),SearchCriteria.Op.EQ);
  ProfileSearch.and("cidr",ProfileSearch.entity().getCidr(),SearchCriteria.Op.EQ);
  ProfileSearch.and("broadcastType",ProfileSearch.entity().getBroadcastDomainType(),SearchCriteria.Op.EQ);
  ProfileSearch.and("offering",ProfileSearch.entity().getNetworkOfferingId(),SearchCriteria.Op.EQ);
  ProfileSearch.and("datacenter",ProfileSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  ProfileSearch.done();
  AccountSearch=createSearchBuilder();
  AccountSearch.and("offering",AccountSearch.entity().getNetworkOfferingId(),SearchCriteria.Op.EQ);
  SearchBuilder<NetworkAccountVO> join=_accountsDao.createSearchBuilder();
  join.and("account",join.entity().getAccountId(),SearchCriteria.Op.EQ);
  AccountSearch.join("accounts",join,AccountSearch.entity().getId(),join.entity().getNetworkId(),JoinBuilder.JoinType.INNER);
  AccountSearch.and("datacenter",AccountSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  AccountSearch.done();
  OfferingSearch=createSearchBuilder();
  OfferingSearch.and("guesttype",OfferingSearch.entity().getGuestType(),SearchCriteria.Op.EQ);
  OfferingSearch.and("datacenter",OfferingSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  RelatedConfigSearch=createSearchBuilder();
  RelatedConfigSearch.and("offering",RelatedConfigSearch.entity().getNetworkOfferingId(),SearchCriteria.Op.EQ);
  RelatedConfigSearch.and("datacenter",RelatedConfigSearch.entity().getDataCenterId(),SearchCriteria.Op.EQ);
  SearchBuilder<NetworkAccountVO> join2=_accountsDao.createSearchBuilder();
  join2.and("account",join2.entity().getAccountId(),SearchCriteria.Op.EQ);
  RelatedConfigSearch.join("account",join2,join2.entity().getNetworkId(),RelatedConfigSearch.entity().getId(),JoinType.INNER);
  RelatedConfigSearch.done();
  RelatedConfigsSearch=createSearchBuilder();
  RelatedConfigsSearch.and("related",RelatedConfigsSearch.entity().getRelated(),SearchCriteria.Op.EQ);
  RelatedConfigsSearch.done();
  AccountNetworkSearch=createSearchBuilder();
  AccountNetworkSearch.and("networkId",AccountNetworkSearch.entity().getId(),SearchCriteria.Op.EQ);
  SearchBuilder<NetworkAccountVO> mapJoin=_accountsDao.createSearchBuilder();
  mapJoin.and("accountId",mapJoin.entity().getAccountId(),SearchCriteria.Op.EQ);
  AccountNetworkSearch.join("networkSearch",mapJoin,AccountNetworkSearch.entity().getId(),mapJoin.entity().getNetworkId(),JoinBuilder.JoinType.INNER);
  AccountNetworkSearch.done();
  _tgMacAddress=_tgs.get("macAddress");
}
