def configAgent(self):
    try:
        cfo = configFileOps('/etc/cloudstack/agent/agent.properties', self)
        cfo.addEntry('host', self.syscfg.env.mgtSvr)
        cfo.addEntry('zone', self.syscfg.env.zone)
        cfo.addEntry('pod', self.syscfg.env.pod)
        cfo.addEntry('cluster', self.syscfg.env.cluster)
        cfo.addEntry('hypervisor.type', self.syscfg.env.hypervisor)
        cfo.addEntry('port', '8250')
        cfo.addEntry('private.network.device', self.syscfg.env.nics[0])
        cfo.addEntry('public.network.device', self.syscfg.env.nics[1])
        cfo.addEntry('guest.network.device', self.syscfg.env.nics[2])
        cfo.addEntry('guid', str(self.syscfg.env.uuid))
        if (cfo.getEntry('local.storage.uuid') == ''):
            cfo.addEntry('local.storage.uuid', str(bash('uuidgen').getStdout()))
        cfo.addEntry('resource', 'com.cloud.hypervisor.kvm.resource.LibvirtComputingResource')
        cfo.save()
        self.syscfg.svo.stopService('cloudstack-agent')
        bash('sleep 30')
        self.syscfg.svo.enableService('cloudstack-agent')
        return True
    except:
        raise
