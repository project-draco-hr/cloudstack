{
  while (_loop) {
    try {
      _pcapedDev=initializePcap();
      if (_pcapedDev == null) {
        return;
      }
      PcapPacketHandler<String> jpacketHandler=new PcapPacketHandler<String>(){
        public void nextPacket(        PcapPacket packet,        String user){
          Udp u=new Udp();
          if (packet.hasHeader(u)) {
            int offset=u.getOffset() + u.getLength();
            _executor.execute(new DhcpPacketParser(packet,offset,u.length() - u.getLength(),_manager));
          }
        }
      }
;
      s_logger.debug("Starting DHCP snooping on " + _bridge);
      int retValue=_pcapedDev.loop(-1,jpacketHandler,"pcapPacketHandler");
      if (retValue == -1) {
        s_logger.debug("Pcap: failed to set loop handler");
      }
 else       if (retValue == -2 && !_loop) {
        s_logger.debug("Pcap: terminated");
        return;
      }
      _pcapedDev.close();
    }
 catch (    Exception e) {
      s_logger.debug("Pcap error:" + e.toString());
    }
  }
}
