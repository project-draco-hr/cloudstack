{
  configLog4j();
  if (args.length == 0) {
    System.out.println("Must specify at least one parameter");
  }
  if (args[0].equals("m2l")) {
    System.out.println(mac2Long(args[1]));
  }
 else   if (args[0].equals("l2m")) {
    System.out.println(long2Mac(NumbersUtil.parseLong(args[1],0)));
  }
 else   if (args[0].equals("i2l")) {
    System.out.println(ip2Long(args[1]));
  }
 else   if (args[0].equals("nic")) {
    if (args.length < 2) {
      System.out.println("Needs the nic information");
      System.exit(1);
    }
    String[] result=getNicParams(args[1]);
    if (result == null) {
      System.out.println("Unable to get information for " + args[1]);
    }
 else {
      if (result[0] != null) {
        System.out.println("Ip Address: " + result[0]);
      }
      if (result[1] != null) {
        System.out.println("Mac Address: " + result[1]);
      }
      if (result[2] != null) {
        System.out.println("Netmask: " + result[2]);
      }
    }
  }
 else   if (args[0].equals("range")) {
    if (args.length < 4) {
      String[] result=getIpRangeFromCidr(args[1],Long.parseLong(args[2]));
      System.out.println("Range is " + result[0] + "-"+ result[1]);
    }
 else {
      System.err.println("Needs 3 parameters: " + args.length);
    }
  }
 else   if (args[0].equals("ip2")) {
    Set<Long> result=getAllIpsFromCidr("10.1.1.192",24);
    System.out.println("Number of ips: " + result.size());
  }
 else   if (args[0].equals("within")) {
    String cidrA=args[1];
    String cidrB=args[2];
    System.out.println(NetUtils.isNetworkAWithinNetworkB(cidrA,cidrB));
  }
 else   if (args[0].equals("tocidr")) {
    String ip=args[1];
    String mask=args[2];
    System.out.println(NetUtils.ipAndNetMaskToCidr(ip,mask));
  }
 else   if (args[0].equals("ipmasktorange")) {
    String ip=args[1];
    String mask=args[2];
    String[] range=NetUtils.ipAndNetMaskToRange(ip,mask);
    System.out.println(range[0] + " : " + range[1]);
  }
 else {
    System.out.println(long2Ip(NumbersUtil.parseLong(args[1],0)));
  }
}
