{
  final Long[] cidrALong=cidrToLong(cidrA);
  final Long[] cidrBLong=cidrToLong(cidrB);
  long shift=0;
  if (cidrALong == null || cidrBLong == null) {
    return SupersetOrSubset.errorInCidrFormat;
  }
  if (cidrALong[1] >= cidrBLong[1]) {
    shift=MAX_CIDR - cidrBLong[1];
  }
 else {
    shift=MAX_CIDR - cidrALong[1];
  }
  final long result=(cidrALong[0] >> shift) - (cidrBLong[0] >> shift);
  if (result == 0) {
    if (cidrALong[1] < cidrBLong[1]) {
      return SupersetOrSubset.isSuperset;
    }
 else     if (cidrALong[1].equals(cidrBLong[1])) {
      return SupersetOrSubset.sameSubnet;
    }
    return SupersetOrSubset.isSubset;
  }
  return SupersetOrSubset.neitherSubetNorSuperset;
}
