{
  if (!NetUtils.isValidCIDR(cidrA)) {
    s_logger.info("Invalid value of cidr " + cidrA);
    return false;
  }
  if (!NetUtils.isValidCIDR(cidrB)) {
    s_logger.info("Invalid value of cidr " + cidrB);
    return false;
  }
  String[] cidrPairFirst=cidrA.split("\\/");
  String[] cidrPairSecond=cidrB.split("\\/");
  Long networkSizeFirst=Long.valueOf(cidrPairFirst[1]);
  Long networkSizeSecond=Long.valueOf(cidrPairSecond[1]);
  String ipRangeFirst[]=NetUtils.getIpRangeFromCidr(cidrPairFirst[0],networkSizeFirst);
  String ipRangeSecond[]=NetUtils.getIpRangeFromCidr(cidrPairFirst[0],networkSizeSecond);
  long startIpFirst=NetUtils.ip2Long(ipRangeFirst[0]);
  long endIpFirst=NetUtils.ip2Long(ipRangeFirst[1]);
  long startIpSecond=NetUtils.ip2Long(ipRangeSecond[0]);
  long endIpSecond=NetUtils.ip2Long(ipRangeSecond[1]);
  if (startIpFirst == startIpSecond && endIpFirst == endIpSecond) {
    return true;
  }
  return false;
}
