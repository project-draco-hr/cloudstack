{
  Set<Class<?>> classes=new HashSet<Class<?>>();
  String path=packageName.replace('.','/');
  try {
    Enumeration<URL> resources=loader.getResources(path);
    if (resources != null) {
      while (resources.hasMoreElements()) {
        String filePath=resources.nextElement().getFile();
        if (filePath != null) {
          if (filePath.indexOf("%20") > 0)           filePath=filePath.replaceAll("%20"," ");
          if ((filePath.indexOf("!") > 0) && (filePath.indexOf(".jar") > 0)) {
            String jarPath=filePath.substring(0,filePath.indexOf("!")).substring(filePath.indexOf(":") + 1);
            if (jarPath.indexOf(":") >= 0)             jarPath=jarPath.substring(1);
            classes.addAll(getFromJARFile(jarPath,path));
          }
 else {
            classes.addAll(getFromDirectory(new File(filePath),packageName));
          }
        }
      }
    }
  }
 catch (  IOException e) {
    s_logger.debug("Encountered IOException",e);
  }
catch (  ClassNotFoundException e) {
    s_logger.info("[ignored] class not found",e);
  }
  return classes;
}
