{
  final DeployDestination dest=routerDeploymentDefinition.getDest();
  List<HypervisorType> hypervisors=new ArrayList<HypervisorType>();
  if (dest.getCluster() != null) {
    if (dest.getCluster().getHypervisorType() == HypervisorType.Ovm) {
      hypervisors.add(getClusterToStartDomainRouterForOvm(dest.getCluster().getPodId()));
    }
 else {
      hypervisors.add(dest.getCluster().getHypervisorType());
    }
  }
 else {
    final HypervisorType defaults=_resourceMgr.getDefaultHypervisor(dest.getDataCenter().getId());
    if (defaults != HypervisorType.None) {
      hypervisors.add(defaults);
    }
 else {
      hypervisors=_resourceMgr.getSupportedHypervisorTypes(dest.getDataCenter().getId(),true,routerDeploymentDefinition.getPodId());
    }
  }
  final StringBuilder hTypesStr=new StringBuilder();
  if (supportedHypervisors != null && !supportedHypervisors.isEmpty()) {
    hypervisors.retainAll(supportedHypervisors);
    for (    final HypervisorType hType : supportedHypervisors) {
      hTypesStr.append(hType).append(" ");
    }
  }
  if (hypervisors.isEmpty()) {
    final String errMsg=(hTypesStr.capacity() > 0) ? "supporting hypervisors " + hTypesStr.toString() : "";
    if (routerDeploymentDefinition.getPodId() != null) {
      throw new InsufficientServerCapacityException("Unable to create virtual router, " + "there are no clusters in the pod " + errMsg,Pod.class,routerDeploymentDefinition.getPodId());
    }
    throw new InsufficientServerCapacityException("Unable to create virtual router, " + "there are no clusters in the zone " + errMsg,DataCenter.class,dest.getDataCenter().getId());
  }
  return hypervisors;
}
