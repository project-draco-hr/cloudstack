{
  String vmName=null;
  VolumeVO vol=this.volumeDao.findById(data.getId());
  StoragePool pool=(StoragePool)data.getDataStore();
  DestroyCommand cmd=new DestroyCommand(pool,vol,vmName);
  CommandResult result=new CommandResult();
  try {
    Answer answer=this.storageMgr.sendToPool(pool,cmd);
    if (answer != null && !answer.getResult()) {
      result.setResult(answer.getDetails());
      s_logger.info("Will retry delete of " + vol + " from "+ pool.getId());
    }
  }
 catch (  StorageUnavailableException e) {
    s_logger.error("Storage is unavailable currently.  Will retry delete of " + vol + " from "+ pool.getId(),e);
    result.setResult(e.toString());
  }
catch (  Exception ex) {
    s_logger.debug("Unable to destoy volume" + vol + " from "+ pool.getId(),ex);
    result.setResult(ex.toString());
  }
  callback.complete(result);
}
