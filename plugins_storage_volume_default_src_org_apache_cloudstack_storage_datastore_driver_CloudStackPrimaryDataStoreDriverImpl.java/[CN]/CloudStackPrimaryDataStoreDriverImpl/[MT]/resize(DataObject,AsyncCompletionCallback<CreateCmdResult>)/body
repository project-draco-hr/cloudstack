{
  VolumeObject vol=(VolumeObject)data;
  StoragePool pool=(StoragePool)data.getDataStore();
  ResizeVolumePayload resizeParameter=(ResizeVolumePayload)vol.getpayload();
  ResizeVolumeCommand resizeCmd=new ResizeVolumeCommand(vol.getPath(),new StorageFilerTO(pool),vol.getSize(),resizeParameter.newSize,resizeParameter.shrinkOk,resizeParameter.instanceName);
  CreateCmdResult result=new CreateCmdResult(null,null);
  try {
    ResizeVolumeAnswer answer=(ResizeVolumeAnswer)storageMgr.sendToPool(pool,resizeParameter.hosts,resizeCmd);
    if (answer != null && answer.getResult()) {
      long finalSize=answer.getNewSize();
      s_logger.debug("Resize: volume started at size " + vol.getSize() + " and ended at size "+ finalSize);
      vol.setSize(finalSize);
      vol.update();
    }
 else     if (answer != null) {
      result.setResult(answer.getDetails());
    }
 else {
      s_logger.debug("return a null answer, mark it as failed for unknown reason");
      result.setResult("return a null answer, mark it as failed for unknown reason");
    }
  }
 catch (  Exception e) {
    s_logger.debug("sending resize command failed",e);
    result.setResult(e.toString());
  }
  callback.complete(result);
}
