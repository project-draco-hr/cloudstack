{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Creating volume: " + volume);
  }
  DiskOfferingVO offering=diskOfferingDao.findById(volume.getDiskOfferingId());
  DiskProfile diskProfile=new DiskProfile(volume,offering,null);
  StoragePool pool=(StoragePool)volume.getDataStore();
  VolumeVO vol=volumeDao.findById(volume.getId());
  if (pool != null) {
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Trying to create in " + pool);
    }
    vol.setPoolId(pool.getId());
    CreateCommand cmd=new CreateCommand(diskProfile,new StorageFilerTO(pool));
    Answer answer=storageMgr.sendToPool(pool,null,cmd);
    if (answer.getResult()) {
      CreateAnswer createAnswer=(CreateAnswer)answer;
      vol.setFolder(pool.getPath());
      vol.setPath(createAnswer.getVolume().getPath());
      vol.setSize(createAnswer.getVolume().getSize());
      vol.setPoolType(pool.getPoolType());
      vol.setPoolId(pool.getId());
      vol.setPodId(pool.getPodId());
      this.volumeDao.update(vol.getId(),vol);
      return true;
    }
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Unable to create volume " + volume.getId());
  }
  return false;
}
