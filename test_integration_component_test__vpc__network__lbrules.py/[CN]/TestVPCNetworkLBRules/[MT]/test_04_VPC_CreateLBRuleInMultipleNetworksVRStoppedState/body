@attr(tags=['advanced', 'advancedns', 'intervlan', 'provisioning'])
def test_04_VPC_CreateLBRuleInMultipleNetworksVRStoppedState(self):
    ' Test case no 222 : Create LB rules for a two/multiple virtual networks of a\n            VPC using a new Public IP Address available with the VPC when the Virtual Router is in Stopped State\n        '
    network_1 = self.create_Network(self.services['network_offering'])
    network_2 = self.create_Network(self.services['network_offering_no_lb'], '10.1.2.1')
    vm_1 = self.create_VM_in_Network(network_1)
    vm_2 = self.create_VM_in_Network(network_1)
    vm_3 = self.create_VM_in_Network(network_2)
    public_ip_1 = self.acquire_Public_IP(network_1)
    lb_rule = self.create_LB_Rule(public_ip_1, network_1, [vm_1, vm_2], self.services['lbrule_http'])
    with self.assertRaises(Exception):
        lb_rule.assign(self.apiclient, [vm_3])
    self.check_wget_from_vm(vm_1, public_ip_1, testnegative=False)
    return
