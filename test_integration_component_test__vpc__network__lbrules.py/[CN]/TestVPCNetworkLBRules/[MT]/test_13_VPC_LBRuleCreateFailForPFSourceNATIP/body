@attr(tags=['advanced', 'intervlan', 'provisioning'])
def test_13_VPC_LBRuleCreateFailForPFSourceNATIP(self):
    ' Test User should not be allowed to create a LB rule on an Ipaddress that already has a PF rule.\n        '
    network_1 = self.create_Network(self.services['network_offering'])
    vm_1 = self.create_VM_in_Network(network_1)
    vm_2 = self.create_VM_in_Network(network_1)
    public_ip_1 = self.acquire_Public_IP(network_1)
    nat_rule1 = self.create_NatRule_For_VM(vm_1, public_ip_1, network_1)
    self.check_ssh_into_vm(vm_1, public_ip_1, testnegative=False)
    self.debug(('nat_rule1=%s' % nat_rule1.__dict__))
    try:
        lb_rule = self.create_LB_Rule(public_ip_1, network_1, [vm_2, vm_1])
        self.fail(('Successfully created LB rule for vm_2, vm_1 in network1 %s=' % lb_rule.__dict__))
    except:
        self.debug('Failed to Create LB rule vm_2 and vm_1')
    return
