@attr(tags=['advanced', 'intervlan', 'selfservice'])
def test_01_VPC_LBRulesListing(self):
    ' Test case no 210 and 227: List Load Balancing Rules belonging to a VPC\n        '
    network_1 = self.create_Network(self.services['network_offering'])
    network_2 = self.create_Network(self.services['network_offering_no_lb'], '10.1.2.1')
    self.debug(('deploying VMs in network: %s' % network_2.name))
    vm_1 = self.create_VM_in_Network(network_1)
    vm_2 = self.create_VM_in_Network(network_1)
    vm_3 = self.create_VM_in_Network(network_2)
    vm_4 = self.create_VM_in_Network(network_2)
    public_ip_1 = self.acquire_Public_IP(network_1)
    lb_rule1 = self.create_LB_Rule(public_ip_1, network_1, [vm_1, vm_2])
    public_ip_2 = self.acquire_Public_IP(network_2)
    with self.assertRaises(Exception):
        self.create_LB_Rule(public_ip_2, network_2, [vm_3, vm_4])
    lb_rules = LoadBalancerRule.list(self.apiclient, id=lb_rule1.id, listall=True)
    self.failIfEqual(lb_rules, None, 'Failed to list the LB Rule')
    vms = VirtualMachine.list(self.apiclient, networkid=network_1.id, listall=True)
    self.failIfEqual(vms, None, ('Failed to list the VMs in network=%s' % network_1.name))
    return
