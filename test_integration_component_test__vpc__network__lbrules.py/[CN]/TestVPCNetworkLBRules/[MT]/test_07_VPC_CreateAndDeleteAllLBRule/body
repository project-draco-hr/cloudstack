@attr(tags=['advanced', 'intervlan'])
def test_07_VPC_CreateAndDeleteAllLBRule(self):
    ' Test Delete all LB rules for a single virtual network of a\n            VPC belonging to a single Public IP Address when the Virtual Router is in Running State\n        '
    network_1 = self.create_Network(self.services['network_offering'])
    vm_1 = self.create_VM_in_Network(network_1)
    vm_2 = self.create_VM_in_Network(network_1)
    vm_3 = self.create_VM_in_Network(network_1)
    public_ip_1 = self.acquire_Public_IP(network_1)
    lb_rule_http = self.create_LB_Rule(public_ip_1, network_1, [vm_1, vm_2, vm_3], self.services['lbrule_http'])
    lb_rule_nat = self.create_LB_Rule(public_ip_1, network_1, [vm_1, vm_2, vm_3])
    self.debug(('lb_rule_http=%s' % lb_rule_http.__dict__))
    self.check_wget_from_vm(vm_1, public_ip_1, testnegative=False)
    self.check_ssh_into_vm(vm_1, public_ip_1, testnegative=False)
    lb_rule_nat.delete(self.apiclient)
    lb_rule_http.delete(self.apiclient)
    self.check_ssh_into_vm(vm_1, public_ip_1, testnegative=True)
    self.check_wget_from_vm(vm_1, public_ip_1, testnegative=True)
    return
