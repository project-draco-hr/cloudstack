{
  try {
    if (amqpHost == null || amqpHost.isEmpty()) {
      throw new ConfigurationException("Unable to get the AMQP server details");
    }
    if (username == null || username.isEmpty()) {
      throw new ConfigurationException("Unable to get the username details");
    }
    if (password == null || password.isEmpty()) {
      throw new ConfigurationException("Unable to get the password details");
    }
    if (amqpExchangeName == null || amqpExchangeName.isEmpty()) {
      throw new ConfigurationException("Unable to get the _exchange details on the AMQP server");
    }
    if (port == null) {
      throw new ConfigurationException("Unable to get the port details of AMQP server");
    }
    if (useSsl != null && !useSsl.isEmpty()) {
      if (!useSsl.equalsIgnoreCase("true") && !useSsl.equalsIgnoreCase("false")) {
        throw new ConfigurationException("Invalid configuration parameter for 'ssl'.");
      }
    }
    if (retryInterval == null) {
      retryInterval=10000;
    }
  }
 catch (  NumberFormatException e) {
    throw new ConfigurationException("Invalid port number/retry interval");
  }
  s_subscribers=new ConcurrentHashMap<String,Ternary<String,Channel,EventSubscriber>>();
  executorService=Executors.newCachedThreadPool();
  disconnectHandler=new DisconnectHandler();
  return true;
}
