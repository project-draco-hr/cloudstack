{
  final Map<String,String> deviceConfig=new HashMap<String,String>();
  try {
    final String server=pool.getHost();
    String serverpath=pool.getPath();
    serverpath=serverpath.replace("//","/");
    final Set<SR> srs=SR.getAll(conn);
    for (    final SR sr : srs) {
      if (!SRType.NFS.equals(sr.getType(conn))) {
        continue;
      }
      final Set<PBD> pbds=sr.getPBDs(conn);
      if (pbds.isEmpty()) {
        continue;
      }
      final PBD pbd=pbds.iterator().next();
      final Map<String,String> dc=pbd.getDeviceConfig(conn);
      if (dc == null) {
        continue;
      }
      if (dc.get("server") == null) {
        continue;
      }
      if (dc.get("serverpath") == null) {
        continue;
      }
      if (server.equals(dc.get("server")) && serverpath.equals(dc.get("serverpath"))) {
        throw new CloudRuntimeException("There is a SR using the same configuration server:" + dc.get("server") + ", serverpath:"+ dc.get("serverpath")+ " for pool "+ pool.getUuid()+ "on host:"+ hypervisorResource.getHost().getUuid());
      }
    }
    deviceConfig.put("server",server);
    deviceConfig.put("serverpath",serverpath);
    final Host host=Host.getByUuid(conn,hypervisorResource.getHost().getUuid());
    final Map<String,String> smConfig=new HashMap<String,String>();
    smConfig.put("nosubdir","true");
    final SR sr=SR.create(conn,host,deviceConfig,new Long(0),pool.getUuid(),Long.toString(pool.getId()),SRType.NFS.toString(),"user",true,smConfig);
    sr.scan(conn);
    return sr;
  }
 catch (  final XenAPIException e) {
    throw new CloudRuntimeException("Unable to create NFS SR " + pool.toString(),e);
  }
catch (  final XmlRpcException e) {
    throw new CloudRuntimeException("Unable to create NFS SR " + pool.toString(),e);
  }
}
