{
  Connection conn=hypervisorResource.getConnection();
  try {
    SR sourceSr=null;
    Map<String,String> sourceDetails=cmd.getSourceDetails();
    if (sourceDetails != null && sourceDetails.keySet().size() > 0) {
      String iScsiName=sourceDetails.get(DiskTO.IQN);
      String storageHost=sourceDetails.get(DiskTO.STORAGE_HOST);
      String chapInitiatorUsername=sourceDetails.get(DiskTO.CHAP_INITIATOR_USERNAME);
      String chapInitiatorSecret=sourceDetails.get(DiskTO.CHAP_INITIATOR_SECRET);
      sourceSr=hypervisorResource.getIscsiSR(conn,iScsiName,storageHost,iScsiName,chapInitiatorUsername,chapInitiatorSecret,false);
    }
    VDI vdiToSnapshot=VDI.getByUuid(conn,cmd.getUuidOfSourceVdi());
    VDI vdiSnapshot=vdiToSnapshot.snapshot(conn,new HashMap<String,String>());
    Map<String,String> destDetails=cmd.getDestDetails();
    String iScsiName=destDetails.get(DiskTO.IQN);
    String storageHost=destDetails.get(DiskTO.STORAGE_HOST);
    String chapInitiatorUsername=destDetails.get(DiskTO.CHAP_INITIATOR_USERNAME);
    String chapInitiatorSecret=destDetails.get(DiskTO.CHAP_INITIATOR_SECRET);
    SR newSr=hypervisorResource.getIscsiSR(conn,iScsiName,storageHost,iScsiName,chapInitiatorUsername,chapInitiatorSecret,false);
    VDI vdiCopy=vdiSnapshot.copy(conn,newSr);
    String vdiUuid=vdiCopy.getUuid(conn);
    vdiSnapshot.destroy(conn);
    if (sourceSr != null) {
      hypervisorResource.removeSR(conn,sourceSr);
    }
    hypervisorResource.removeSR(conn,newSr);
    SnapshotAndCopyAnswer snapshotAndCopyAnswer=new SnapshotAndCopyAnswer();
    snapshotAndCopyAnswer.setPath(vdiUuid);
    return snapshotAndCopyAnswer;
  }
 catch (  Exception ex) {
    s_logger.warn("Failed to take and copy snapshot: " + ex.toString(),ex);
    return new SnapshotAndCopyAnswer(ex.getMessage());
  }
}
