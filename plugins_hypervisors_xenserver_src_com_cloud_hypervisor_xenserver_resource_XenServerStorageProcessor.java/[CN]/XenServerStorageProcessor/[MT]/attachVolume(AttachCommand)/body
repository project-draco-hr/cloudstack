{
  final DiskTO disk=cmd.getDisk();
  final DataTO data=disk.getData();
  try {
    final String vmName=cmd.getVmName();
    final String vdiNameLabel=vmName + "-DATA";
    final Connection conn=hypervisorResource.getConnection();
    VM vm=null;
    boolean vmNotRunning=true;
    try {
      vm=hypervisorResource.getVM(conn,vmName);
      final VM.Record vmr=vm.getRecord(conn);
      vmNotRunning=vmr.powerState != VmPowerState.RUNNING;
    }
 catch (    final CloudRuntimeException ex) {
    }
    final Map<String,String> details=disk.getDetails();
    final boolean isManaged=Boolean.parseBoolean(details.get(DiskTO.MANAGED));
    if (vmNotRunning && !isManaged) {
      return new AttachAnswer(disk);
    }
    VDI vdi=null;
    if (isManaged) {
      vdi=hypervisorResource.prepareManagedStorage(conn,details,data.getPath(),vdiNameLabel);
      if (vmNotRunning) {
        final DiskTO newDisk=new DiskTO(disk.getData(),disk.getDiskSeq(),vdi.getUuid(conn),disk.getType());
        return new AttachAnswer(newDisk);
      }
    }
 else {
      vdi=hypervisorResource.mount(conn,null,null,data.getPath());
    }
    hypervisorResource.destroyUnattachedVBD(conn,vm);
    final VBD.Record vbdr=new VBD.Record();
    vbdr.VM=vm;
    vbdr.VDI=vdi;
    vbdr.bootable=false;
    vbdr.userdevice="autodetect";
    final Long deviceId=disk.getDiskSeq();
    if (deviceId != null && !hypervisorResource.isDeviceUsed(conn,vm,deviceId)) {
      vbdr.userdevice=deviceId.toString();
    }
    vbdr.mode=Types.VbdMode.RW;
    vbdr.type=Types.VbdType.DISK;
    vbdr.unpluggable=true;
    final VBD vbd=VBD.create(conn,vbdr);
    try {
      vbd.plug(conn);
    }
 catch (    final Exception e) {
      vbd.destroy(conn);
      throw e;
    }
    vdi.setNameLabel(conn,vdiNameLabel);
    final DiskTO newDisk=new DiskTO(disk.getData(),Long.parseLong(vbd.getUserdevice(conn)),vdi.getUuid(conn),disk.getType());
    return new AttachAnswer(newDisk);
  }
 catch (  final Exception e) {
    final String msg="Failed to attach volume for uuid: " + data.getPath() + " due to "+ e.toString();
    s_logger.warn(msg,e);
    return new AttachAnswer(msg);
  }
}
