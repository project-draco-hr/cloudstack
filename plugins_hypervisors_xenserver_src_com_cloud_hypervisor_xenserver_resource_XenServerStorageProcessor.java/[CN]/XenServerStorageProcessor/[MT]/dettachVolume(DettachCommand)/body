{
  final DiskTO disk=cmd.getDisk();
  final DataTO data=disk.getData();
  try {
    final Connection conn=hypervisorResource.getConnection();
    final String vmName=cmd.getVmName();
    VM vm=null;
    boolean vmNotRunning=true;
    try {
      vm=hypervisorResource.getVM(conn,vmName);
      final VM.Record vmr=vm.getRecord(conn);
      vmNotRunning=vmr.powerState != VmPowerState.RUNNING;
    }
 catch (    final CloudRuntimeException ex) {
    }
    if (vmNotRunning && !cmd.isManaged()) {
      return new DettachAnswer(disk);
    }
    if (!vmNotRunning) {
      final VDI vdi=hypervisorResource.mount(conn,null,null,data.getPath());
      final Set<VBD> vbds=vdi.getVBDs(conn);
      for (      final VBD vbd : vbds) {
        final VBD.Record vbdr=vbd.getRecord(conn);
        if (vbdr.currentlyAttached) {
          vbd.unplug(conn);
        }
        vbd.destroy(conn);
      }
      vdi.setNameLabel(conn,"detached");
      hypervisorResource.umount(conn,vdi);
    }
    if (cmd.isManaged()) {
      hypervisorResource.handleSrAndVdiDetach(cmd.get_iScsiName(),conn);
    }
    return new DettachAnswer(disk);
  }
 catch (  final Exception e) {
    s_logger.warn("Failed dettach volume: " + data.getPath());
    return new DettachAnswer("Failed dettach volume: " + data.getPath() + ", due to "+ e.toString());
  }
}
