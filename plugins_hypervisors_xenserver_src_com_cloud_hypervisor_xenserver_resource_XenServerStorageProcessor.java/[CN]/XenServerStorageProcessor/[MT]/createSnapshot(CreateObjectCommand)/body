{
  final Connection conn=hypervisorResource.getConnection();
  final SnapshotObjectTO snapshotTO=(SnapshotObjectTO)cmd.getData();
  final long snapshotId=snapshotTO.getId();
  final String snapshotName=snapshotTO.getName();
  String details="create snapshot operation Failed for snapshotId: " + snapshotId;
  String snapshotUUID=null;
  try {
    final String volumeUUID=snapshotTO.getVolume().getPath();
    final VDI volume=VDI.getByUuid(conn,volumeUUID);
    final VDI snapshot=volume.snapshot(conn,new HashMap<String,String>());
    if (snapshotName != null) {
      snapshot.setNameLabel(conn,snapshotName);
    }
    snapshotUUID=snapshot.getUuid(conn);
    final String preSnapshotUUID=snapshotTO.getParentSnapshotPath();
    if (preSnapshotUUID != null) {
      final SR sr=volume.getSR(conn);
      final String srUUID=sr.getUuid(conn);
      final String type=sr.getType(conn);
      final Boolean isISCSI=IsISCSI(type);
      final String snapshotParentUUID=getVhdParent(conn,srUUID,snapshotUUID,isISCSI);
      try {
        final String preSnapshotParentUUID=getVhdParent(conn,srUUID,preSnapshotUUID,isISCSI);
        if (snapshotParentUUID != null && snapshotParentUUID.equals(preSnapshotParentUUID)) {
          snapshot.destroy(conn);
          snapshotUUID=preSnapshotUUID;
        }
      }
 catch (      final Exception e) {
        s_logger.debug("Failed to get parent snapshot",e);
      }
    }
    final SnapshotObjectTO newSnapshot=new SnapshotObjectTO();
    newSnapshot.setPath(snapshotUUID);
    return new CreateObjectAnswer(newSnapshot);
  }
 catch (  final XenAPIException e) {
    details+=", reason: " + e.toString();
    s_logger.warn(details,e);
  }
catch (  final Exception e) {
    details+=", reason: " + e.toString();
    s_logger.warn(details,e);
  }
  return new CreateObjectAnswer(details);
}
