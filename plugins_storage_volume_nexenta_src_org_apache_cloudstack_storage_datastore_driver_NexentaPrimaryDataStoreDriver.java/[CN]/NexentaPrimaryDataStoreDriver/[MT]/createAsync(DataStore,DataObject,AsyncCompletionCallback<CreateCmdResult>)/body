{
  String iqn=null;
  String errorMessage=null;
  if (dataObject.getType() != DataObjectType.VOLUME) {
    errorMessage="Invalid DataObjectType (" + dataObject.getType() + ") passed to createAsync";
  }
 else {
    VolumeInfo volumeInfo=(VolumeInfo)dataObject;
    long storagePoolId=dataStore.getId();
    NexentaStorAppliance appliance=getNexentaStorAppliance(storagePoolId);
    NexentaStorZvol zvol=(NexentaStorZvol)appliance.createVolume(volumeInfo.getName(),volumeInfo.getSize());
    iqn=zvol.getIqn();
    VolumeVO volume=this._volumeDao.findById(volumeInfo.getId());
    volume.set_iScsiName(iqn);
    volume.setFolder(zvol.getName());
    volume.setPoolType(Storage.StoragePoolType.IscsiLUN);
    volume.setPoolId(storagePoolId);
    _volumeDao.update(volume.getId(),volume);
    StoragePoolVO storagePool=_storagePoolDao.findById(storagePoolId);
    long capacityBytes=storagePool.getCapacityBytes();
    long usedBytes=storagePool.getUsedBytes();
    usedBytes+=volumeInfo.getSize();
    storagePool.setUsedBytes(usedBytes > capacityBytes ? capacityBytes : usedBytes);
    _storagePoolDao.update(storagePoolId,storagePool);
  }
  CreateCmdResult result=new CreateCmdResult(iqn,new Answer(null,errorMessage == null,errorMessage));
  result.setResult(errorMessage);
  callback.complete(result);
}
