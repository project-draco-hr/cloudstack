{
  if (keyName.equalsIgnoreCase("aws:CurrentTime"))   return ConditionKeys.CurrentTime;
 else   if (keyName.equalsIgnoreCase("aws:SecureTransport"))   return ConditionKeys.SecureTransport;
 else   if (keyName.equalsIgnoreCase("aws:SourceIp"))   return ConditionKeys.SourceIp;
 else   if (keyName.equalsIgnoreCase("aws:SourceArn"))   return ConditionKeys.SourceArn;
 else   if (keyName.equalsIgnoreCase("aws:UserAgent"))   return ConditionKeys.UserAgent;
 else   if (keyName.equalsIgnoreCase("aws:EpochTime"))   return ConditionKeys.EpochTime;
 else   if (keyName.equalsIgnoreCase("aws:Referer"))   return ConditionKeys.Referer;
 else   if (keyName.equalsIgnoreCase("s3:x-amz-acl"))   return ConditionKeys.Acl;
 else   if (keyName.equalsIgnoreCase("s3:LocationConstraint"))   return ConditionKeys.Location;
 else   if (keyName.equalsIgnoreCase("s3:prefix"))   return ConditionKeys.Prefix;
 else   if (keyName.equalsIgnoreCase("s3:delimiter"))   return ConditionKeys.Delimiter;
 else   if (keyName.equalsIgnoreCase("s3:max-keys"))   return ConditionKeys.MaxKeys;
 else   if (keyName.equalsIgnoreCase("s3:x-amz-copy-source"))   return ConditionKeys.CopySource;
 else   if (keyName.equalsIgnoreCase("s3:x-amz-metadata-directive"))   return ConditionKeys.MetaData;
 else   if (keyName.equalsIgnoreCase("s3:VersionId"))   return ConditionKeys.VersionId;
 else   return ConditionKeys.UnknownKey;
}
