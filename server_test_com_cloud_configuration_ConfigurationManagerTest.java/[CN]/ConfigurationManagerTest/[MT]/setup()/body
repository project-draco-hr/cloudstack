{
  MockitoAnnotations.initMocks(this);
  configurationMgr._accountMgr=_accountMgr;
  configurationMgr._projectMgr=_projectMgr;
  configurationMgr._resourceLimitMgr=_resourceLimitMgr;
  configurationMgr._networkMgr=_networkMgr;
  configurationMgr._accountDao=_accountDao;
  configurationMgr._vlanDao=_vlanDao;
  configurationMgr._accountVlanMapDao=_accountVlanMapDao;
  configurationMgr._publicIpAddressDao=_publicIpAddressDao;
  configurationMgr._zoneDao=_zoneDao;
  configurationMgr._firewallDao=_firewallDao;
  configurationMgr._ipAddrMgr=_ipAddrMgr;
  configurationMgr._networkModel=_networkModel;
  Account account=new AccountVO("testaccount",1,"networkdomain",(short)0,UUID.randomUUID().toString());
  when(configurationMgr._accountMgr.getAccount(anyLong())).thenReturn(account);
  when(configurationMgr._accountDao.findActiveAccount(anyString(),anyLong())).thenReturn(account);
  when(configurationMgr._accountMgr.getActiveAccountById(anyLong())).thenReturn(account);
  UserVO user=new UserVO(1,"testuser","password","firstname","lastName","email","timezone",UUID.randomUUID().toString());
  CallContext.register(user,account);
  when(configurationMgr._publicIpAddressDao.countIPs(anyLong(),anyLong(),anyBoolean())).thenReturn(1);
  doNothing().when(configurationMgr._resourceLimitMgr).checkResourceLimit(any(Account.class),any(ResourceType.class),anyLong());
  when(configurationMgr._accountVlanMapDao.persist(any(AccountVlanMapVO.class))).thenReturn(new AccountVlanMapVO());
  when(configurationMgr._vlanDao.acquireInLockTable(anyLong(),anyInt())).thenReturn(vlan);
  Field dedicateIdField=_dedicatePublicIpRangeClass.getDeclaredField("id");
  dedicateIdField.setAccessible(true);
  dedicateIdField.set(dedicatePublicIpRangesCmd,1L);
  Field accountNameField=_dedicatePublicIpRangeClass.getDeclaredField("accountName");
  accountNameField.setAccessible(true);
  accountNameField.set(dedicatePublicIpRangesCmd,"accountname");
  Field projectIdField=_dedicatePublicIpRangeClass.getDeclaredField("projectId");
  projectIdField.setAccessible(true);
  projectIdField.set(dedicatePublicIpRangesCmd,null);
  Field domainIdField=_dedicatePublicIpRangeClass.getDeclaredField("domainId");
  domainIdField.setAccessible(true);
  domainIdField.set(dedicatePublicIpRangesCmd,1L);
  Field releaseIdField=_releasePublicIpRangeClass.getDeclaredField("id");
  releaseIdField.setAccessible(true);
  releaseIdField.set(releasePublicIpRangesCmd,1L);
}
