{
  java.util.ArrayList elementList=new java.util.ArrayList();
  java.util.ArrayList attribList=new java.util.ArrayList();
  elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","Bucket"));
  if (localBucket != null) {
    elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBucket));
  }
 else {
    throw new org.apache.axis2.databinding.ADBException("Bucket cannot be null!!");
  }
  elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","Key"));
  if (localKey != null) {
    elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localKey));
  }
 else {
    throw new org.apache.axis2.databinding.ADBException("Key cannot be null!!");
  }
  elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","GetMetadata"));
  elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGetMetadata));
  elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","GetData"));
  elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGetData));
  elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","InlineData"));
  elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localInlineData));
  if (localByteRangeStartTracker) {
    elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","ByteRangeStart"));
    elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localByteRangeStart));
  }
  if (localByteRangeEndTracker) {
    elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","ByteRangeEnd"));
    elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localByteRangeEnd));
  }
  if (localIfModifiedSinceTracker) {
    elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","IfModifiedSince"));
    if (localIfModifiedSince != null) {
      elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIfModifiedSince));
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("IfModifiedSince cannot be null!!");
    }
  }
  if (localIfUnmodifiedSinceTracker) {
    elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","IfUnmodifiedSince"));
    if (localIfUnmodifiedSince != null) {
      elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIfUnmodifiedSince));
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("IfUnmodifiedSince cannot be null!!");
    }
  }
  if (localIfMatchTracker) {
    if (localIfMatch != null) {
      for (int i=0; i < localIfMatch.length; i++) {
        if (localIfMatch[i] != null) {
          elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","IfMatch"));
          elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIfMatch[i]));
        }
 else {
        }
      }
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("IfMatch cannot be null!!");
    }
  }
  if (localIfNoneMatchTracker) {
    if (localIfNoneMatch != null) {
      for (int i=0; i < localIfNoneMatch.length; i++) {
        if (localIfNoneMatch[i] != null) {
          elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","IfNoneMatch"));
          elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIfNoneMatch[i]));
        }
 else {
        }
      }
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("IfNoneMatch cannot be null!!");
    }
  }
  if (localReturnCompleteObjectOnConditionFailureTracker) {
    elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","ReturnCompleteObjectOnConditionFailure"));
    elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReturnCompleteObjectOnConditionFailure));
  }
  if (localAWSAccessKeyIdTracker) {
    elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","AWSAccessKeyId"));
    if (localAWSAccessKeyId != null) {
      elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAWSAccessKeyId));
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("AWSAccessKeyId cannot be null!!");
    }
  }
  if (localTimestampTracker) {
    elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","Timestamp"));
    if (localTimestamp != null) {
      elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTimestamp));
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("Timestamp cannot be null!!");
    }
  }
  if (localSignatureTracker) {
    elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","Signature"));
    if (localSignature != null) {
      elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSignature));
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("Signature cannot be null!!");
    }
  }
  if (localCredentialTracker) {
    elementList.add(new javax.xml.namespace.QName("http://s3.amazonaws.com/doc/2006-03-01/","Credential"));
    if (localCredential != null) {
      elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCredential));
    }
 else {
      throw new org.apache.axis2.databinding.ADBException("Credential cannot be null!!");
    }
  }
  return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName,elementList.toArray(),attribList.toArray());
}
