{
  ComponentLocator locator=ComponentLocator.getCurrentLocator();
  HostDao _hostDao=locator.inject(HostDaoImpl.class);
  VMInstanceDao _vmDao=locator.inject(VMInstanceDaoImpl.class);
  s_logger.debug("Test seraching host:");
  SearchCriteriaService<HostVO,HostVO> sc=SearchCriteria2.create(HostVO.class);
  sc.addAnd(sc.getEntity().getStatus(),Op.EQ,Status.Disconnected);
  List<HostVO> ups=sc.list();
  for (  HostVO vo : ups) {
    s_logger.info("Host id: " + vo.getId() + " is Disconnected");
  }
  SearchCriteriaService<VMInstanceVO,VMInstanceVO> sc1=SearchCriteria2.create(VMInstanceVO.class);
  sc1.addAnd(sc1.getEntity().getState(),Op.EQ,VirtualMachine.State.Running);
  List<VMInstanceVO> vms=sc1.list();
  for (  VMInstanceVO vm : vms) {
    s_logger.info("Vm name:" + vm.getInstanceName());
  }
  sc1=SearchCriteria2.create(VMInstanceVO.class);
  sc1.addAnd(sc1.getEntity().getInstanceName(),Op.EQ,"s-1-TEST");
  VMInstanceVO vo=sc1.find();
  s_logger.info("SSVM name is " + vo.getInstanceName());
  SearchCriteriaService<HostVO,Long> sc3=SearchCriteria2.create(HostVO.class,Long.class);
  sc3.selectField(sc3.getEntity().getId());
  sc3.addAnd(sc3.getEntity().getStatus(),Op.EQ,Status.Disconnected);
  sc3.addAnd(sc3.getEntity().getType(),Op.EQ,Host.Type.Routing);
  List<Long> hostIds=sc3.list();
  for (  Long id : hostIds) {
    s_logger.info("Host Id is " + id);
  }
}
