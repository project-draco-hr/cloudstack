@attr(tags=['advanced', 'dvs'])
def test_25_add_nw_above_account_limit(self):
    'Add network to VM with maximum network limit reached'
    self.debug('Creating account 1')
    account_1 = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id)
    self.cleanup.append(account_1)
    self.debug(('setting network limit of account: %s as 1' % account_1.name))
    update_resource_limit(self.apiclient, 6, max=1, account=account_1.name, domainid=account_1.domainid)
    self.debug(('Creating isolated network in account: %s' % account_1.name))
    network_1 = Network.create(self.api_client, self.services['isolated_network'], account_1.name, account_1.domainid, networkofferingid=self.isolated_network_offering.id)
    self.debug(('created network %s' % network_1.name))
    self.debug(('Deploying virtual machine in account: %s' % account_1.name))
    virtual_machine = VirtualMachine.create(self.apiclient, self.services['virtual_machine'], accountid=account_1.name, domainid=account_1.domainid, serviceofferingid=self.service_offering.id, mode=self.zone.networktype)
    self.debug(('Deployed virtual machine : %s' % virtual_machine.id))
    self.debug('Creating another account')
    account_2 = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id)
    self.debug(('Created account %s' % account_2.name))
    self.cleanup.append(account_2)
    self.debug(('Creating network in account %s' % account_2.name))
    network_2 = Network.create(self.api_client, self.services['isolated_network'], account_2.name, account_2.domainid, networkofferingid=self.isolated_network_offering.id)
    self.debug(('Created network %s' % network_2.name))
    self.debug(('Trying to add netwrok %s to VM %s, this should fail' % (network_2.name, virtual_machine.id)))
    with self.assertRaises(Exception) as e:
        virtual_machine.add_nic(self.apiclient, network_2.id)
        self.debug(('Operation failed with exception %s' % e.exception))
    return
