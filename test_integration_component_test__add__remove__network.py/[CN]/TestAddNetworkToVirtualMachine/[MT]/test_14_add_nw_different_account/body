@attr(tags=['advanced'])
@data('isolated', 'shared')
def test_14_add_nw_different_account(self, value):
    'Add network to running VM'
    network = None
    account = Account.create(self.apiclient, self.services['account'], domainid=self.domain.id)
    self.cleanup.append(account)
    if (value == 'isolated'):
        network = Network.create(self.api_client, self.services['isolated_network'], account.name, account.domainid, networkofferingid=self.isolated_network_offering.id)
    elif (value == 'shared'):
        self.services['shared_network_2']['zoneid'] = self.zone.id
        self.services['shared_network_2']['vlan'] = get_free_vlan(self.apiclient, self.zone.id)[1]
        network = Network.create(self.api_client, self.services['shared_network_2'], account.name, account.domainid, networkofferingid=self.shared_network_offering.id)
    if (network is None):
        self.skipTest(('Network should not be none. Case not handled for Network of type %s' % value))
    self.debug(('Trying to %s network in account %s to a vm in account %s, This should fail' % (network.type, account.name, self.account.name)))
    with self.assertRaises(Exception) as e:
        self.virtual_machine.add_nic(self.apiclient, network.id)
        network.delete(self.apiclient)
    self.debug(('Operation failed with exception %s' % e.exception))
    return
