@attr(tags=['advanced', 'dvs'])
@data('isolated', 'shared')
def test_01_add_nw_running_vm(self, value):
    'Add network to running VM'
    network = None
    if (value == 'isolated'):
        network = self.isolated_network
    elif (value == 'shared'):
        network = self.shared_network
    if (network is None):
        self.skipTest(('Network should not be none. Case not handled for Network of type %s' % value))
    self.addNetworkToVm(network, self.virtual_machine)
    self.debug(("Retrieving the list of events matching 'NIC.CREATE' in account: %s" % self.account.name))
    events = list_events(self.apiclient, account=self.account.name, domainid=self.account.domainid, type='NIC.CREATE')
    event_list_validation_result = validateList(events)
    self.assertEqual(event_list_validation_result[0], PASS, ('event list validation failed due to %s' % event_list_validation_result[2]))
    self.debug('Events list contains event NIC.CREATE')
    return
