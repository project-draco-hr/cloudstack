def addNetworkToVm(self, network, vm, ipaddress=None):
    'Add network to VM and check if new nic added in the VM'
    self.debug(('Adding %s Network: %s to virtual machine %s' % (network.type, network.id, vm.id)))
    vm.add_nic(self.apiclient, network.id, ipaddress=ipaddress)
    vm_list = list_virtual_machines(self.apiclient, id=vm.id)
    vm_list_validation_result = validateList(vm_list)
    self.assertEqual(vm_list_validation_result[0], PASS, ('vm list validation failed due to %s' % vm_list_validation_result[2]))
    self.debug(('virtual machine nics: %s' % vm_list[0].nic))
    nics = [x for x in vm_list[0].nic if (x.networkid == network.id)]
    self.debug(('Filtered nics list: %s:' % nics))
    if (vm.id == self.virtual_machine.id):
        self.addednics.append(nics[(-1)])
    self.assertTrue((len(nics) == 1), ('nics list should contain the nic of added isolated network,                        the number of nics for the network should be 1, instead they are %s' % len(nics)))
    if (ipaddress is not None):
        self.assertEqual(nics[0].ipaddress, ipaddress, ('The ip address of nic does not match with                             the ip address passed while adding network to vm. ip address of nic is %s                             while passed ip address is %s' % (nics[0].ipaddress, ipaddress)))
    return
