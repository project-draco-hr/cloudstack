@attr(tags=['advanced', 'dvs'])
@data('isolated')
def test_05_add_vpc_nw_stopped_vm(self, value):
    'Add VPC network to stopped VM belonging to isolated network'
    try:
        self.virtual_machine.stop(self.apiclient)
    except Exception as e:
        self.fail(('Failed to stop virtual machine: %s' % e))
    self.addNetworkToVm(self.isolated_network, self.virtual_machine)
    self.debug('Creating VPC offering')
    vpc_off = VpcOffering.create(self.api_client, self.services['vpc_offering'])
    self.debug(('Created VPC offering: %s' % vpc_off.id))
    self.debug('Enabling the VPC offering')
    vpc_off.update(self.apiclient, state='Enabled')
    self.debug('Creating VPC')
    vpc = VPC.create(self.apiclient, self.services['vpc'], vpcofferingid=vpc_off.id, zoneid=self.zone.id, account=self.account.name, domainid=self.account.domainid)
    self.cleanup.append(vpc)
    self.cleanup.append(vpc_off)
    self.debug('Trying to add VPC to vm belonging to isolated network, this should fail')
    with self.assertRaises(Exception):
        self.virtual_machine.add_nic(self.apiclient, vpc.id)
    self.debug('Starting virtual machine')
    self.virtual_machine.start(self.apiclient)
    self.debug(('Disabling vpc offering: %s' % vpc_off.id))
    vpc_off.update(self.apiclient, state='Disabled')
    return
