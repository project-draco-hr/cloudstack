@attr(tags=['advanced', 'intervlan'])
def test_05_destroy_router_after_addition_of_one_guest_network(self):
    ' Test destroy of router after addition of one guest network\n        '
    self.validate_vpc_offering(self.vpc_off)
    self.validate_vpc_network(self.vpc)
    self.assertEqual(isinstance(self.gateways, list), True, 'List private gateways should return a valid response')
    self.assertEqual(isinstance(self.static_routes, list), True, 'List static route should return a valid response')
    routers = Router.list(self.apiclient, account=self.account.name, domainid=self.account.domainid, listall=True)
    self.assertEqual(isinstance(routers, list), True, 'List Routers should return a valid list')
    Router.destroy(self.apiclient, id=routers[0].id)
    routers = Router.list(self.apiclient, account=self.account.name, domainid=self.account.domainid, listall=True)
    self.assertEqual(isinstance(routers, list), False, 'List Routers should be empty')
    return
