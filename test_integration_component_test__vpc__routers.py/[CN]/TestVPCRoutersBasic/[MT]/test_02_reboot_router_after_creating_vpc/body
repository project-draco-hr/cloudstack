@attr(tags=['advanced', 'intervlan'])
def test_02_reboot_router_after_creating_vpc(self):
    ' Test to reboot the router after creating a VPC\n\t'
    self.validate_vpc_offering(self.vpc_off)
    self.validate_vpc_network(self.vpc)
    routers = Router.list(self.apiclient, account=self.account.account.name, domainid=self.account.account.domainid, listall=True)
    self.assertEqual(isinstance(routers, list), True, 'List Routers should return a valid list')
    router = routers[0]
    self.debug('Rebooting the router ...')
    cmd = rebootRouter.rebootRouterCmd()
    cmd.id = router.id
    self.apiclient.rebootRouter(cmd)
    router_response = list_routers(self.apiclient, id=router.id)
    self.assertEqual(isinstance(router_response, list), True, 'Check list response returns a valid list')
    self.assertEqual(router_response[0].state, 'Running', 'Check list router response for router state')
    return
