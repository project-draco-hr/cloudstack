def finalize(self):
    'generate an api call'
    header = '"""Test Client for CloudStack API"""\n'
    imports = 'import copy\n'
    initCmdsList = '__all__ = ['
    body = ''
    body += 'class CloudStackAPIClient:\n'
    body += (self.space + 'def __init__(self, connection):\n')
    body += ((self.space + self.space) + 'self.connection = connection\n')
    body += '\n'
    body += (self.space + 'def __copy__(self):\n')
    body += ((self.space + self.space) + 'return CloudStackAPIClient(copy.copy(self.connection))\n')
    body += '\n'
    for cmdName in self.cmdsName:
        body += (self.space + ('def %s(self,command):\n' % cmdName))
        body += ((self.space + self.space) + ('response = %sResponse()\n' % cmdName))
        body += ((self.space + self.space) + 'response = self.connection.make_request(command, response)\n')
        body += ((self.space + self.space) + 'return response\n')
        body += '\n'
        imports += ('from %s import %sResponse\n' % (cmdName, cmdName))
        initCmdsList += ('"%s",' % cmdName)
    fp = open((self.outputFolder + '/cloudstackAPI/cloudstackAPIClient.py'), 'w')
    for item in [header, imports, body]:
        fp.write(item)
    fp.close()
    'generate __init__.py'
    initCmdsList += '"cloudstackAPIClient"]'
    fp = open((self.outputFolder + '/cloudstackAPI/__init__.py'), 'w')
    fp.write(initCmdsList)
    fp.close()
    fp = open((self.outputFolder + '/cloudstackAPI/baseCmd.py'), 'w')
    basecmd = '"""Base Command"""\n'
    basecmd += 'class baseCmd:\n'
    basecmd += (self.space + 'pass\n')
    fp.write(basecmd)
    fp.close()
    fp = open((self.outputFolder + '/cloudstackAPI/baseResponse.py'), 'w')
    basecmd = '"""Base class for response"""\n'
    basecmd += 'class baseResponse:\n'
    basecmd += (self.space + 'pass\n')
    fp.write(basecmd)
    fp.close()
