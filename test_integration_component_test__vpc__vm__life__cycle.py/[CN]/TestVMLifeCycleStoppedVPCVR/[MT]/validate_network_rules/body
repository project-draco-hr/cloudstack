def validate_network_rules(self):
    'Validates if the network rules work properly or not?'
    try:
        self.debug(('Checking if we can SSH into VM_1 through %s?' % self.public_ip_1.ipaddress.ipaddress))
        ssh_1 = self.vm_1.get_ssh_client(ipaddress=self.public_ip_1.ipaddress.ipaddress, reconnect=True)
        self.debug('SSH into VM is successfully')
        self.debug('Verifying if we can ping to outside world from VM?')
        res = ssh_1.execute('ping -c 1 www.google.com')
    except Exception as e:
        self.fail(('Failed to SSH into VM - %s, %s' % (self.public_ip_1.ipaddress.ipaddress, e)))
    result = str(res)
    self.assertEqual(result.count('1 received'), 1, 'Ping to outside world from VM should be successful')
    self.debug('Checking if we can SSH into VM_1?')
    try:
        ssh_2 = self.vm_1.get_ssh_client(ipaddress=self.public_ip_2.ipaddress.ipaddress, reconnect=True)
        self.debug('SSH into VM is successfully')
        self.debug('Verifying if we can ping to outside world from VM?')
        res = ssh_2.execute('ping -c 1 www.google.com')
    except Exception as e:
        self.fail(('Failed to SSH into VM - %s, %s' % (self.public_ip_2.ipaddress.ipaddress, e)))
    result = str(res)
    self.assertEqual(result.count('1 received'), 1, 'Ping to outside world from VM should be successful')
    return
