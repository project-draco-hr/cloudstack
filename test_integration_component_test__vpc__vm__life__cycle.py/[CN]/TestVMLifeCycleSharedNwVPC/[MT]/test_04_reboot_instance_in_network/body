@attr(tags=['advanced', 'intervlan'])
def test_04_reboot_instance_in_network(self):
    ' Test reboot an instance in VPC networks\n        '
    self.debug('Validating if network rules are coonfigured properly?')
    self.validate_network_rules()
    self.debug(('Restarting the virtual machines in account: %s' % self.account.name))
    try:
        self.vm_1.reboot(self.apiclient)
        self.vm_2.reboot(self.apiclient)
    except Exception as e:
        self.fail(('Failed to reboot the virtual instances, %s' % e))
    self.debug('Check if the instance is in stopped state?')
    vms = VirtualMachine.list(self.apiclient, account=self.account.name, domainid=self.account.domainid, listall=True)
    self.assertEqual(isinstance(vms, list), True, 'List virtual machines should return a valid list')
    for vm in vms:
        self.assertEqual(vm.state, 'Running', 'Virtual machine should be in running state')
    self.debug('Validating if network rules are coonfigured properly?')
    self.validate_network_rules()
    return
