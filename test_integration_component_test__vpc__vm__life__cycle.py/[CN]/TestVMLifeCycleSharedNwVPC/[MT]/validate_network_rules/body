def validate_network_rules(self):
    'Validating if the network rules (PF/LB) works properly or not?'
    try:
        self.debug(('Checking if we can SSH into VM_1 through %s?' % self.public_ip_1.ipaddress.ipaddress))
        ssh_1 = self.vm_1.get_ssh_client(ipaddress=self.public_ip_1.ipaddress.ipaddress, reconnect=True)
        self.debug('SSH into VM is successfully')
        self.debug('Verifying if we can ping to outside world from VM?')
        res = ssh_1.execute('ping -c 1 www.google.com')
        result = str(res)
        self.assertEqual(result.count('1 received'), 1, 'Ping to outside world from VM should be successful')
        self.debug('We should be allowed to ping virtual gateway')
        self.debug('Finding the gateway corresponding to isolated network')
        gateways = [nic.gateway for nic in self.vm_1.nic if (nic.networkid == self.network_1.id)]
        gateway_list_validation_result = validateList(gateways)
        self.assertEqual(gateway_list_validation_result[0], PASS, ('gateway list validation failed due to %s' % gateway_list_validation_result[2]))
        gateway = gateway_list_validation_result[1]
        self.debug(('VM gateway: %s' % gateway))
        res = ssh_1.execute(('ping -c 1 %s' % gateway))
        self.debug(('ping -c 1 %s: %s' % (gateway, res)))
        result = str(res)
        self.assertEqual(result.count('1 received'), 1, 'Ping to VM gateway should be successful')
    except Exception as e:
        self.fail(('Failed to SSH into VM - %s, %s' % (self.public_ip_1.ipaddress.ipaddress, e)))
    return
