def generate(bits=1024, progress_func=None):
    '\n        Generate a new private DSS key.  This factory function can be used to\n        generate a new host key or authentication key.\n\n        @param bits: number of bits the generated key should be.\n        @type bits: int\n        @param progress_func: an optional function to call at key points in\n            key generation (used by C{pyCrypto.PublicKey}).\n        @type progress_func: function\n        @return: new private key\n        @rtype: L{DSSKey}\n        '
    randpool.stir()
    dsa = DSA.generate(bits, randpool.get_bytes, progress_func)
    key = DSSKey(vals=(dsa.p, dsa.q, dsa.g, dsa.y))
    key.x = dsa.x
    return key
