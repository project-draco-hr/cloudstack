{
  final StateMachine2<VirtualMachineTemplate.State,VirtualMachineTemplate.Event,VirtualMachineTemplate> stateMachine=VirtualMachineTemplate.State.getStateMachine();
  Transaction.execute(new TransactionCallbackNoReturn(){
    @Override public void doInTransactionWithoutResult(    TransactionStatus status){
      VMTemplateVO tmpTemplate=_templateDao.findById(template.getId());
      TemplateDataStoreVO tmpTemplateDataStore=_templateDataStoreDao.findById(templateDataStore.getId());
      boolean sendAlert=false;
      String msg=null;
      try {
switch (answer.getStatus()) {
case COMPLETED:
          tmpTemplateDataStore.setDownloadState(VMTemplateStorageResourceAssoc.Status.DOWNLOADED);
        tmpTemplateDataStore.setState(State.Ready);
      tmpTemplateDataStore.setInstallPath(answer.getInstallPath());
    tmpTemplateDataStore.setPhysicalSize(answer.getPhysicalSize());
  tmpTemplateDataStore.setSize(answer.getVirtualSize());
tmpTemplateDataStore.setDownloadPercent(100);
tmpTemplateDataStore.setExtractUrl(null);
VMTemplateVO templateUpdate=_templateDao.createForUpdate();
templateUpdate.setSize(answer.getVirtualSize());
_templateDao.update(tmpTemplate.getId(),templateUpdate);
stateMachine.transitTo(tmpTemplate,VirtualMachineTemplate.Event.OperationSucceeded,null,_templateDao);
_resourceLimitMgr.incrementResourceCount(template.getAccountId(),Resource.ResourceType.secondary_storage,answer.getVirtualSize());
if (s_logger.isDebugEnabled()) {
s_logger.debug("Template " + tmpTemplate.getUuid() + " uploaded successfully");
}
break;
case IN_PROGRESS:
if (tmpTemplate.getState() == VirtualMachineTemplate.State.NotUploaded) {
tmpTemplateDataStore.setDownloadState(VMTemplateStorageResourceAssoc.Status.DOWNLOAD_IN_PROGRESS);
stateMachine.transitTo(tmpTemplate,VirtualMachineTemplate.Event.UploadRequested,null,_templateDao);
tmpTemplateDataStore.setDownloadPercent(answer.getDownloadPercent());
}
 else if (tmpTemplate.getState() == VirtualMachineTemplate.State.UploadInProgress) {
if (System.currentTimeMillis() - tmpTemplateDataStore.getCreated().getTime() > _uploadOperationTimeout) {
tmpTemplateDataStore.setDownloadState(VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);
tmpTemplateDataStore.setState(State.Failed);
stateMachine.transitTo(tmpTemplate,VirtualMachineTemplate.Event.OperationFailed,null,_templateDao);
msg="Template " + tmpTemplate.getUuid() + " failed to upload due to operation timed out";
s_logger.error(msg);
sendAlert=true;
}
 else {
tmpTemplateDataStore.setDownloadPercent(answer.getDownloadPercent());
}
}
break;
case ERROR:
tmpTemplateDataStore.setDownloadState(VMTemplateStorageResourceAssoc.Status.DOWNLOAD_ERROR);
tmpTemplateDataStore.setState(State.Failed);
stateMachine.transitTo(tmpTemplate,VirtualMachineTemplate.Event.OperationFailed,null,_templateDao);
msg="Template " + tmpTemplate.getUuid() + " failed to upload. Error details: "+ answer.getDetails();
s_logger.error(msg);
sendAlert=true;
break;
case UNKNOWN:
if (tmpTemplate.getState() == VirtualMachineTemplate.State.NotUploaded) {
if (System.currentTimeMillis() - tmpTemplateDataStore.getCreated().getTime() > _uploadOperationTimeout) {
tmpTemplateDataStore.setDownloadState(VMTemplateStorageResourceAssoc.Status.ABANDONED);
tmpTemplateDataStore.setState(State.Failed);
stateMachine.transitTo(tmpTemplate,VirtualMachineTemplate.Event.OperationTimeout,null,_templateDao);
msg="Template " + tmpTemplate.getUuid() + " failed to upload due to operation timed out";
s_logger.error(msg);
sendAlert=true;
}
}
break;
}
_templateDataStoreDao.update(tmpTemplateDataStore.getId(),tmpTemplateDataStore);
}
 catch (NoTransitionException e) {
s_logger.error("Unexpected error " + e.getMessage());
}
 finally {
if (sendAlert) {
_alertMgr.sendAlert(AlertManager.AlertType.ALERT_TYPE_UPLOAD_FAILED,_vmTemplateZoneDao.listByTemplateId(tmpTemplate.getId()).get(0).getZoneId(),null,msg,msg);
}
}
}
}
);
}
