{
  String[] params=query.split("&");
  Map<String,String> map=new HashMap<String,String>();
  for (  String param : params) {
    String[] paramTokens=param.split("=");
    if (paramTokens != null && paramTokens.length == 2) {
      String name=param.split("=")[0];
      String value=param.split("=")[1];
      map.put(name,value);
    }
 else     if (paramTokens.length == 3) {
      String name=paramTokens[0];
      String value=paramTokens[1] + "=" + paramTokens[2];
      map.put(name,value);
    }
 else {
      if (s_logger.isDebugEnabled())       s_logger.debug("Invalid paramemter in URL found. param: " + param);
    }
  }
  if (map.get("token") != null) {
    ConsoleProxyPasswordBasedEncryptor encryptor=new ConsoleProxyPasswordBasedEncryptor(ConsoleProxy.getEncryptorPassword());
    ConsoleProxyClientParam param=encryptor.decryptObject(ConsoleProxyClientParam.class,map.get("token"));
    if (param != null) {
      if (param.getClientHostAddress() != null)       map.put("host",param.getClientHostAddress());
      if (param.getClientHostPort() != 0)       map.put("port",String.valueOf(param.getClientHostPort()));
      if (param.getClientTag() != null)       map.put("tag",param.getClientTag());
      if (param.getClientHostPassword() != null)       map.put("sid",param.getClientHostPassword());
      if (param.getClientTunnelUrl() != null)       map.put("consoleurl",param.getClientTunnelUrl());
      if (param.getClientTunnelSession() != null)       map.put("sessionref",param.getClientTunnelSession());
      if (param.getTicket() != null)       map.put("ticket",param.getTicket());
    }
  }
  return map;
}
