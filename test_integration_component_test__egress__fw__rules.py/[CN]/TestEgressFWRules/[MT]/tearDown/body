def tearDown(self):
    try:
        if self.egressruleid:
            self.debug(('remove egress rule id=%s' % self.egressruleid))
            self.deleteEgressRule()
        self.debug('Cleaning up the resources')
        self.virtual_machine.delete(self.apiclient)
        wait_for_cleanup(self.apiclient, ['expunge.interval', 'expunge.delay'])
        retriesCount = 5
        while True:
            vms = list_virtual_machines(self.apiclient, id=self.virtual_machine.id)
            if (vms is None):
                break
            elif (retriesCount == 0):
                self.fail('Failed to delete/expunge VM')
            time.sleep(10)
            retriesCount -= 1
        self.network.delete(self.apiclient)
        self.debug('Sleep for Network cleanup to complete.')
        wait_for_cleanup(self.apiclient, ['network.gc.wait', 'network.gc.interval'])
        cleanup_resources(self.apiclient, reversed(self.cleanup))
        self.debug('Cleanup complete!')
    except Exception as e:
        self.fail(('Warning! Cleanup failed: %s' % e))
