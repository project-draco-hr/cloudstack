def tearDown(self):
    try:
        if self.egressruleid:
            self.debug(('remove egress rule id=%s' % self.egressruleid))
            self.deleteEgressRule()
        self.debug('Cleaning up the resources')
        if (self.virtual_machine is not None):
            if (str(self.vm_list[0].state).lower() == 'running'):
                self.virtual_machine.delete(self.apiclient)
            wait_for_cleanup(self.apiclient, ['expunge.interval', 'expunge.delay'])
        self.network.delete(self.apiclient)
        self.debug('Sleep for Network cleanup to complete.')
        wait_for_cleanup(self.apiclient, ['network.gc.wait', 'network.gc.interval'])
        cleanup_resources(self.apiclient, reversed(self.cleanup))
        self.debug('Cleanup complete!')
    except Exception as e:
        self.fail(('Warning! Cleanup failed: %s' % e))
