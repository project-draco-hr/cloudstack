def configureManagementServer(mgmt_host):
    '\n    We currently configure all mgmt servers on a single xenserver HV. In the future\n    replace this by launching instances via the API on a IaaS cloud using\n    desired template\n    '
    mgmt_vm = macinfo[mgmt_host]
    mgmt_ip = macinfo[mgmt_host]['address']
    bash(('cobbler system remove --name=%s' % mgmt_host))
    bash(('cobbler system add --name=%s --hostname=%s --mac-address=%s          --netboot-enabled=yes --enable-gpxe=no          --profile=%s --server=%s --gateway=%s' % (mgmt_host, mgmt_host, mgmt_vm['ethernet'], mgmt_host, cobblerHomeResolve(mgmt_ip, param='cblrgw'), cobblerHomeResolve(mgmt_ip))))
    bash('cobbler sync')
    bash(('puppet cert clean %s.%s' % (mgmt_host, DOMAIN)))
    xenserverssh = sshClient.SshClient(macinfo['infraxenserver']['address'], 22, 'root', macinfo['infraxenserver']['password'])
    logging.debug(('bash vm-uninstall.sh -n %s' % mgmt_host))
    xenserverssh.execute(('xe vm-uninstall force=true vm=%s' % mgmt_host))
    logging.debug(('bash vm-start.sh -n %s -m %s' % (mgmt_host, mgmt_vm['ethernet'])))
    out = xenserverssh.execute(('bash vm-start.sh -n %s -m %s' % (mgmt_host, mgmt_vm['ethernet'])))
    logging.info(('started mgmt server with uuid: %s. Waiting for services ..' % out))
    return mgmt_host
