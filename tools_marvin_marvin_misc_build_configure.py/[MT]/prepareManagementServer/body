def prepareManagementServer(mgmt_host):
    '\n    Prepare the mgmt server for a marvin test run\n    '
    if (_isPortListening(host=mgmt_host, port=22, timeout=10) and _isPortListening(host=mgmt_host, port=3306, timeout=10) and _isPortListening(host=mgmt_host, port=8080, timeout=300)):
        delay(120)
        mgmt_ip = macinfo[mgmt_host]['address']
        mgmt_pass = macinfo[mgmt_host]['password']
        with contextlib.closing(sshClient.SshClient(mgmt_ip, 22, 'root', mgmt_pass)) as ssh:
            ssh.execute('mysql -ucloud -pcloud -Dcloud -e"update configuration set value=8096 where name like \'integr%\'"')
            ssh.execute('service cloudstack-management restart')
    else:
        raise Exception('Reqd services (ssh, mysql) on management server are not up. Aborting')
    if _isPortListening(host=mgmt_host, port=8096, timeout=300):
        logging.info(('All reqd services are up on the management server %s' % mgmt_host))
        testManagementServer(mgmt_host)
        return
    else:
        with contextlib.closing(sshClient.SshClient(mgmt_ip, 22, 'root', mgmt_pass)) as ssh:
            ssh.execute('killall -9 java; service cloudstack-management start')
    if _isPortListening(host=mgmt_host, port=8096, timeout=300):
        logging.info(('All reqd services are up on the management server %s' % mgmt_host))
        testManagementServer(mgmt_host)
        return
    else:
        raise Exception(('Reqd service for integration port on management server %s is not open. Aborting' % mgmt_host))
