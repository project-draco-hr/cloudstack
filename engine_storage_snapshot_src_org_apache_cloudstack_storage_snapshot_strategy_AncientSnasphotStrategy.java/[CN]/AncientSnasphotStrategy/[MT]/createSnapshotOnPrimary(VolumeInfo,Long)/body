{
  SnapshotObject snapshot=(SnapshotObject)this.snapshotfactory.getSnapshot(snapshotId);
  if (snapshot == null) {
    throw new CloudRuntimeException("Can not find snapshot " + snapshotId);
  }
  try {
    snapshot.processEvent(Snapshot.Event.CreateRequested);
  }
 catch (  NoTransitionException nte) {
    s_logger.debug("Failed to update snapshot state due to " + nte.getMessage());
    throw new CloudRuntimeException("Failed to update snapshot state due to " + nte.getMessage());
  }
  AsyncCallFuture<SnapshotResult> future=new AsyncCallFuture<SnapshotResult>();
  CreateSnapshotContext<CommandResult> context=new CreateSnapshotContext<CommandResult>(null,volume,snapshot,future);
  AsyncCallbackDispatcher<AncientSnasphotStrategy,CreateCmdResult> caller=AsyncCallbackDispatcher.create(this);
  caller.setCallback(caller.getTarget().createSnapshotAsyncCallback(null,null)).setContext(context);
  PrimaryDataStoreDriver primaryStore=(PrimaryDataStoreDriver)volume.getDataStore().getDriver();
  primaryStore.takeSnapshot(snapshot,caller);
  SnapshotResult result;
  try {
    result=future.get();
    if (result.isFailed()) {
      s_logger.debug("Failed to create snapshot:" + result.getResult());
      throw new CloudRuntimeException(result.getResult());
    }
    return result.snashot;
  }
 catch (  InterruptedException e) {
    s_logger.debug("Failed to create snapshot",e);
    throw new CloudRuntimeException("Failed to create snapshot",e);
  }
catch (  ExecutionException e) {
    s_logger.debug("Failed to create snapshot",e);
    throw new CloudRuntimeException("Failed to create snapshot",e);
  }
}
