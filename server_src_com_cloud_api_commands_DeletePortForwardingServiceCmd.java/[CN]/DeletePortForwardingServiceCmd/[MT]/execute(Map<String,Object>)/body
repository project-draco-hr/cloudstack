{
  Long userId=(Long)params.get(BaseCmd.Properties.USER_ID.getName());
  Account account=(Account)params.get(BaseCmd.Properties.ACCOUNT_OBJ.getName());
  Long id=(Long)params.get(BaseCmd.Properties.ID.getName());
  if (userId == null) {
    userId=Long.valueOf(User.UID_SYSTEM);
  }
  SecurityGroupVO sg=getManagementServer().findSecurityGroupById(id.longValue());
  if (sg == null) {
    throw new ServerApiException(BaseCmd.PARAM_ERROR,"unable to find port forwarding service with id " + id);
  }
  if (account != null) {
    if (!isAdmin(account.getType())) {
      if (account.getId() != sg.getAccountId()) {
        throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"unable to find a port forwarding service with id " + id + " for this account");
      }
    }
 else     if (!getManagementServer().isChildDomain(account.getDomainId(),sg.getDomainId())) {
      throw new ServerApiException(BaseCmd.ACCOUNT_ERROR,"Unable to delete port forwarding service " + id + ", permission denied.");
    }
  }
  long jobId=getManagementServer().deleteSecurityGroupAsync(userId.longValue(),sg.getAccountId(),id.longValue());
  List<Pair<String,Object>> returnValues=new ArrayList<Pair<String,Object>>();
  returnValues.add(new Pair<String,Object>(BaseCmd.Properties.JOB_ID.getName(),Long.valueOf(jobId).toString()));
  return returnValues;
}
