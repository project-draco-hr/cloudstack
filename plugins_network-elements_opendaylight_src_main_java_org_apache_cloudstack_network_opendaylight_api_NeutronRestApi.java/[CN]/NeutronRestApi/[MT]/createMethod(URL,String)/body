{
  String url;
  try {
    String formattedUrl=neutronUrl.toString() + uri;
    url=new URL(formattedUrl).toString();
    Constructor<? extends HttpMethodBase> httpMethodConstructor=httpClazz.getConstructor(String.class);
    HttpMethodBase httpMethod=httpMethodConstructor.newInstance(url);
    return httpMethod;
  }
 catch (  MalformedURLException e) {
    String error="Unable to build Neutron API URL";
    s_logger.error(error,e);
    throw new NeutronRestApiException(error,e);
  }
catch (  NoSuchMethodException e) {
    String error="Unable to build Neutron API URL due to reflection error";
    s_logger.error(error,e);
    throw new NeutronRestApiException(error,e);
  }
catch (  SecurityException e) {
    String error="Unable to build Neutron API URL due to security violation";
    s_logger.error(error,e);
    throw new NeutronRestApiException(error,e);
  }
catch (  InstantiationException e) {
    String error="Unable to build Neutron API due to instantiation error";
    s_logger.error(error,e);
    throw new NeutronRestApiException(error,e);
  }
catch (  IllegalAccessException e) {
    String error="Unable to build Neutron API URL due to absence of access modifier";
    s_logger.error(error,e);
    throw new NeutronRestApiException(error,e);
  }
catch (  IllegalArgumentException e) {
    String error="Unable to build Neutron API URL due to wrong argument in constructor";
    s_logger.error(error,e);
    throw new NeutronRestApiException(error,e);
  }
catch (  InvocationTargetException e) {
    String error="Unable to build Neutron API URL due to target error";
    s_logger.error(error,e);
    throw new NeutronRestApiException(error,e);
  }
}
