{
  TrustManager[] trustAllCerts=new TrustManager[]{new X509TrustManager(){
    @Override public X509Certificate[] getAcceptedIssuers(){
      return null;
    }
    @Override public void checkClientTrusted(    final X509Certificate[] certs,    final String authType){
    }
    @Override public void checkServerTrusted(    final X509Certificate[] certs,    final String authType){
    }
  }
};
  try {
    SSLContext sc=SSLUtils.getSSLContext();
    sc.init(null,trustAllCerts,new java.security.SecureRandom());
    ssf=new SecureSSLSocketFactory(sc);
  }
 catch (  KeyManagementException e) {
    throw new IOException(e);
  }
catch (  NoSuchAlgorithmException e) {
    throw new IOException(e);
  }
}
