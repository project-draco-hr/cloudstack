@attr(tags=['advanced'])
def test_network_state_after_destroying_vms(self):
    self.assertEquals(self.isolated_network.state, u'Implemented', 'network state of persistent is not implemented')
    self.assertIsNotNone(self.isolated_network.vlan, 'vlan must not be null for persistent network')
    try:
        virtual_machine = self.create_virtual_machine(network_id=self.isolated_network.id)
        virtual_machine.delete(self.apiclient)
    except Exception as e:
        self.skipTest('vm creation/deletion fails')
    wait_for_cleanup(self.api_client, ['network.gc.interval', 'network.gc.wait'])
    networks = Network.list(self.apiclient, id=self.isolated_network.id)
    self.assertEqual(isinstance(networks, list), True, 'list Networks should return valid response')
    self.assertEquals(networks[0].state, u'Implemented', 'network state of persistent network after all vms are destroyed is not implemented')
