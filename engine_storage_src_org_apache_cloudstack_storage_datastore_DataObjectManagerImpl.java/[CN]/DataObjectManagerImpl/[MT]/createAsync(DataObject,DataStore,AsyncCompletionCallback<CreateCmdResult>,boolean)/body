{
  DataObjectInStore obj=objectInDataStoreMgr.findObject(data,store);
  DataObject objInStore=null;
  boolean freshNewTemplate=false;
  if (obj == null) {
    try {
      objInStore=objectInDataStoreMgr.create(data,store);
      freshNewTemplate=true;
    }
 catch (    Throwable e) {
      obj=objectInDataStoreMgr.findObject(data,store);
      if (obj == null) {
        CreateCmdResult result=new CreateCmdResult(null,null);
        result.setSuccess(false);
        result.setResult(e.toString());
        callback.complete(result);
        return;
      }
    }
  }
  if (!freshNewTemplate && obj.getState() != ObjectInDataStoreStateMachine.State.Ready) {
    try {
      objInStore=waitingForCreated(data,store);
    }
 catch (    Exception e) {
      CreateCmdResult result=new CreateCmdResult(null,null);
      result.setSuccess(false);
      result.setResult(e.toString());
      callback.complete(result);
      return;
    }
    CreateCmdResult result=new CreateCmdResult(null,null);
    callback.complete(result);
    return;
  }
  try {
    ObjectInDataStoreStateMachine.Event event=null;
    if (noCopy) {
      event=ObjectInDataStoreStateMachine.Event.CreateOnlyRequested;
    }
 else {
      event=ObjectInDataStoreStateMachine.Event.CreateRequested;
    }
    objectInDataStoreMgr.update(objInStore,event);
  }
 catch (  NoTransitionException e) {
    try {
      objectInDataStoreMgr.update(objInStore,ObjectInDataStoreStateMachine.Event.OperationFailed);
    }
 catch (    Exception e1) {
      s_logger.debug("state transation failed",e1);
    }
    CreateCmdResult result=new CreateCmdResult(null,null);
    result.setSuccess(false);
    result.setResult(e.toString());
    callback.complete(result);
    return;
  }
catch (  ConcurrentOperationException e) {
    try {
      objectInDataStoreMgr.update(objInStore,ObjectInDataStoreStateMachine.Event.OperationFailed);
    }
 catch (    Exception e1) {
      s_logger.debug("state transation failed",e1);
    }
    CreateCmdResult result=new CreateCmdResult(null,null);
    result.setSuccess(false);
    result.setResult(e.toString());
    callback.complete(result);
    return;
  }
  CreateContext<CreateCmdResult> context=new CreateContext<CreateCmdResult>(callback,objInStore);
  AsyncCallbackDispatcher<DataObjectManagerImpl,CreateCmdResult> caller=AsyncCallbackDispatcher.create(this);
  caller.setCallback(caller.getTarget().createAsynCallback(null,null)).setContext(context);
  store.getDriver().createAsync(store,objInStore,caller);
  return;
}
