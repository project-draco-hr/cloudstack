def contruct_dictionary(self, obj_dict, type_dict):
    output_dict = {}
    self.debug('Upgrade Objects collected Data: ')
    self.debug(obj_dict)
    for (m, n) in obj_dict.items():
        if (type(n) is types.DictType):
            refined_dict = {}
            for (k, v) in n.items():
                if isinstance(v, jsonHelper.jsonLoader):
                    self.debug('JSON LOADER Class Identified. It is not in a list')
                    continue
                if isinstance(v, types.ListType):
                    if (len(v) == 0):
                        self.debug('Length of this List is Zero')
                        continue
                    self.debug('List Object Type')
                    self.debug(type(v[0]))
                    if isinstance(v[0], jsonHelper.jsonLoader):
                        self.debug('JSON LOADER Class Identified in a List!!')
                        continue
                if (type(v) in type_dict):
                    refined_dict[k] = v
                else:
                    raise Exception('Type of the Object is not Registered!!')
            output_dict[m] = refined_dict
        else:
            self.debug(('N Value is of %s Type' % type(n)))
            raise Exception(('N Value is of %s Type' % type(n)))
    return output_dict
