{
  AsyncJobManager asyncMgr=getAsyncJobMgr();
  UserVO user=asyncMgr.getExecutorContext().getUserDao().findById(userId);
  if (user == null) {
    if (s_logger.isInfoEnabled())     s_logger.info("User " + userId + " does not exist");
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"User " + userId + " does not exist");
    return;
  }
  if (managementServer.disableUser(userId)) {
    if (needToDisableAccount(user)) {
      if (s_logger.isInfoEnabled())       s_logger.info("This is the only user " + userId + " left for the account "+ user.getAccountId()+ ", we will disable account as well");
      List<DomainRouterVO> routers=asyncMgr.getExecutorContext().getRouterDao().listBy(user.getAccountId());
      if (routers.size() > 0) {
        scheduleOperationAfterAllRouterOperations(managementServer,user.getAccountId(),routers);
      }
 else {
        if (s_logger.isInfoEnabled())         s_logger.info("Account " + user.getAccountId() + " does not have DomR to serialize with, disable it directly");
        if (managementServer.disableAccount(user.getAccountId())) {
          asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_SUCCEEDED,0,"success");
        }
 else {
          asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"failed");
        }
      }
    }
  }
 else {
    if (s_logger.isInfoEnabled())     s_logger.info("Unable to disable user " + userId);
    asyncMgr.completeAsyncJob(getJob().getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"Unable to disable user " + userId);
  }
}
