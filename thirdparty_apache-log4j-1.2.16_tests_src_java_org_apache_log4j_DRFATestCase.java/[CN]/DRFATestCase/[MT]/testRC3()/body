{
  RollingCalendar rc=new RollingCalendar();
  rc.setType(DailyRollingFileAppender.TOP_OF_MINUTE);
  int[] S={0,1,5,10,21,30,59};
  int[] M={0,1,5,10,21,30,59};
  Calendar c=Calendar.getInstance();
  int[] M31={2,9,0,4,6,7,11};
  for (int i=0; i < M31.length; i++) {
    System.out.println("Month = " + (M31[i] + 1));
    for (int d=1; d <= 31; d++) {
      for (int h=0; h < 23; h++) {
        for (int m=0; m < M.length; m++) {
          for (int s=0; s < S.length; s++) {
            c.clear();
            c.set(Calendar.YEAR,20);
            c.set(Calendar.MONTH,Calendar.JANUARY + M31[i]);
            c.set(Calendar.DAY_OF_MONTH,d);
            c.set(Calendar.HOUR_OF_DAY,h);
            c.set(Calendar.MINUTE,M[m]);
            c.set(Calendar.SECOND,S[s]);
            c.set(Calendar.MILLISECOND,88);
            c.add(Calendar.MILLISECOND,1);
            boolean dltState0=c.getTimeZone().inDaylightTime(c.getTime());
            c.setTime(rc.getNextCheckDate(c.getTime()));
            c.add(Calendar.MILLISECOND,0);
            boolean dltState1=c.getTimeZone().inDaylightTime(c.getTime());
            assertEquals(c.get(Calendar.MILLISECOND),0);
            assertEquals(c.get(Calendar.SECOND),0);
            assertEquals(c.get(Calendar.MINUTE),(M[m] + 1) % 60);
            if (M[m] == 59) {
              if (dltState0 == dltState1) {
                assertEquals(c.get(Calendar.HOUR_OF_DAY),(h + 1) % 24);
              }
              if (h == 23) {
                assertEquals(c.get(Calendar.DAY_OF_MONTH),(d + 1) % 32);
                if (d == 31) {
                  assertEquals(c.get(Calendar.MONTH),(Calendar.JANUARY + M31[i] + 1) % 12);
                }
 else {
                  assertEquals(c.get(Calendar.MONTH),Calendar.JANUARY + M31[i]);
                }
              }
 else {
                assertEquals(c.get(Calendar.DAY_OF_MONTH),d);
              }
            }
 else {
              if (c.get(Calendar.HOUR_OF_DAY) != h) {
                c.add(Calendar.HOUR_OF_DAY,+1);
                boolean dltState2=c.getTimeZone().inDaylightTime(c.getTime());
                if (dltState1 == dltState2) {
                  fail("No switch");
                }
              }
              assertEquals(c.get(Calendar.DAY_OF_MONTH),d);
              assertEquals(c.get(Calendar.MONTH),Calendar.JANUARY + M31[i]);
            }
          }
        }
      }
    }
  }
}
