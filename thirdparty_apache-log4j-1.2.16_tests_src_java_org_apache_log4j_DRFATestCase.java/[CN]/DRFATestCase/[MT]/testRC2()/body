{
  RollingCalendar rc=new RollingCalendar();
  rc.setType(DailyRollingFileAppender.TOP_OF_HOUR);
  Calendar c=Calendar.getInstance();
  int[] M31={0,2,4,6,7,9,11};
  for (int i=0; i < M31.length; i++) {
    System.out.println("Month = " + (M31[i] + 1));
    for (int d=1; d <= 31; d++) {
      for (int h=0; h < 23; h++) {
        for (int m=0; m <= 59; m++) {
          c.clear();
          c.set(Calendar.YEAR,20);
          c.set(Calendar.MONTH,Calendar.JANUARY + M31[i]);
          c.set(Calendar.DAY_OF_MONTH,d);
          c.set(Calendar.HOUR_OF_DAY,h);
          c.set(Calendar.MINUTE,m);
          c.set(Calendar.SECOND,12);
          c.set(Calendar.MILLISECOND,88);
          boolean dltState0=c.getTimeZone().inDaylightTime(c.getTime());
          c.setTime(rc.getNextCheckDate(c.getTime()));
          boolean dltState1=c.getTimeZone().inDaylightTime(c.getTime());
          assertEquals(c.get(Calendar.MILLISECOND),0);
          assertEquals(c.get(Calendar.SECOND),0);
          assertEquals(c.get(Calendar.MINUTE),0);
          if (dltState0 == dltState1) {
            assertEquals(c.get(Calendar.HOUR_OF_DAY),(h + 1) % 24);
          }
 else {
            if (dltState0) {
              assertEquals(c.get(Calendar.HOUR_OF_DAY),h);
            }
 else {
            }
          }
          if (h == 23) {
            assertEquals(c.get(Calendar.DAY_OF_MONTH),(d + 1) % 32);
            if (d == 31) {
              assertEquals(c.get(Calendar.MONTH),(Calendar.JANUARY + M31[i] + 1) % 12);
            }
 else {
              assertEquals(c.get(Calendar.MONTH),Calendar.JANUARY + M31[i]);
            }
          }
 else {
            assertEquals(c.get(Calendar.DAY_OF_MONTH),d);
            assertEquals(c.get(Calendar.MONTH),Calendar.JANUARY + M31[i]);
          }
        }
      }
    }
  }
}
