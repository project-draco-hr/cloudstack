{
  if (getSyncSource() == null) {
    Gson gson=GsonHelper.getBuilder().create();
    AsyncJobManager asyncMgr=getAsyncJobMgr();
    AsyncJobVO job=getJob();
    UpdateLoadBalancerParam param=gson.fromJson(job.getCmdInfo(),UpdateLoadBalancerParam.class);
    asyncMgr.syncAsyncJobExecution(job.getId(),"LoadBalancer",param.getLoadBalancerId());
    return true;
  }
 else {
    Gson gson=GsonHelper.getBuilder().create();
    AsyncJobManager asyncMgr=getAsyncJobMgr();
    AsyncJobVO job=getJob();
    UpdateLoadBalancerParam param=gson.fromJson(job.getCmdInfo(),UpdateLoadBalancerParam.class);
    ManagementServer ms=asyncMgr.getExecutorContext().getManagementServer();
    LoadBalancerVO loadBalancer=ms.findLoadBalancerById(param.getLoadBalancerId());
    try {
      loadBalancer=ms.updateLoadBalancerRule(loadBalancer,param.getName(),param.getDescription());
      loadBalancer=ms.updateLoadBalancerRule(param.getUserId(),loadBalancer,param.getPrivatePort(),param.getAlgorithm());
      getAsyncJobMgr().completeAsyncJob(job.getId(),AsyncJobResult.STATUS_SUCCEEDED,0,composeResultObject(ms,loadBalancer));
    }
 catch (    InvalidParameterValueException ex) {
      getAsyncJobMgr().completeAsyncJob(job.getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.PARAM_ERROR,ex.getMessage());
    }
catch (    Exception ex) {
      s_logger.error("Unhandled exception updating load balancer rule",ex);
      getAsyncJobMgr().completeAsyncJob(job.getId(),AsyncJobResult.STATUS_FAILED,BaseCmd.INTERNAL_ERROR,"Internal error updating load balancer rule " + loadBalancer.getName());
    }
    return true;
  }
}
