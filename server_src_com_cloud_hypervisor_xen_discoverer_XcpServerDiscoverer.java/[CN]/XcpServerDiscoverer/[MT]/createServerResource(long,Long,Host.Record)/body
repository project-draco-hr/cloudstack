{
  String prodBrand=record.softwareVersion.get("product_brand").trim();
  String prodVersion=record.softwareVersion.get("product_version").trim();
  if (prodBrand.equals("XCP") && (prodVersion.equals("1.0.0") || prodVersion.equals("1.1.0") || prodVersion.equals("5.6.100")|| prodVersion.startsWith("1.5")))   return new XcpServerResource();
  if (prodBrand.equals("XenServer") && prodVersion.equals("5.6.0"))   return new XenServer56Resource();
  if (prodBrand.equals("XenServer") && prodVersion.startsWith("6.0"))   return new XenServer600Resource();
  if (prodBrand.equals("XenServer") && prodVersion.equals("5.6.100")) {
    String prodVersionTextShort=record.softwareVersion.get("product_version_text_short").trim();
    if ("5.6 SP2".equals(prodVersionTextShort)) {
      return new XenServer56SP2Resource();
    }
 else     if ("5.6 FP1".equals(prodVersionTextShort)) {
      return new XenServer56FP1Resource();
    }
  }
  String msg="Only support XCP 1.0.0, 1.1.0, 1.5.0; XenServer 5.6,  XenServer 5.6 FP1, XenServer 5.6 SP2, Xenserver 6.0 but this one is " + prodBrand + " "+ prodVersion;
  _alertMgr.sendAlert(AlertManager.ALERT_TYPE_HOST,dcId,podId,msg,msg);
  s_logger.debug(msg);
  throw new RuntimeException(msg);
}
