{
  Connection hostConn=null;
  Connection poolConn=null;
  Session hostSession=null;
  URL hostUrl=null;
  try {
    poolConn=_connPool.masterConnect(masterIp,username,password);
    Set<Pool> pools=Pool.getAll(poolConn);
    Pool pool=pools.iterator().next();
    String poolUUID=pool.getUuid(poolConn);
    Set<Host> hosts=Host.getAll(poolConn);
    for (    Host host : hosts) {
      if (host.getAddress(poolConn).equals(_host.ip)) {
        return true;
      }
    }
    hostUrl=new URL("http://" + _host.ip);
    hostConn=new Connection(hostUrl,100);
    hostSession=Session.loginWithPassword(hostConn,_username,_password,APIVersion.latest().toString());
    Pool.join(hostConn,masterIp,username,password);
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("Joined the pool at " + masterIp);
    }
    try {
      Thread.sleep(10000);
    }
 catch (    InterruptedException e) {
    }
    Connection c=new Connection(hostUrl,100);
    int i;
    for (i=0; i < 15; i++) {
      try {
        Session.loginWithPassword(c,_username,_password,APIVersion.latest().toString());
        s_logger.debug(_host.ip + " is still master, waiting for the conversion to the slave");
        Session.logout(c);
        c.dispose();
      }
 catch (      Types.HostIsSlave e) {
        try {
          Session.logout(c);
          c.dispose();
        }
 catch (        XmlRpcException e1) {
          s_logger.debug("Unable to logout of test connection due to " + e1.getMessage());
        }
catch (        XenAPIException e1) {
          s_logger.debug("Unable to logout of test connection due to " + e1.getMessage());
        }
        break;
      }
catch (      XmlRpcException e) {
        s_logger.debug("XmlRpcException: Still waiting for the conversion to the master");
      }
catch (      Exception e) {
        s_logger.debug("Exception: Still waiting for the conversion to the master");
      }
      try {
        Thread.sleep(2000);
      }
 catch (      InterruptedException e) {
      }
    }
    if (i >= 15) {
      throw new CloudRuntimeException(_host.ip + " didn't change to slave after waiting 30 secondary");
    }
    _host.pool=poolUUID;
    return true;
  }
 catch (  MalformedURLException e) {
    throw new CloudRuntimeException("Problem with url " + _host.ip);
  }
catch (  XenAPIException e) {
    String msg="Unable to allow host " + _host.uuid + " to join pool "+ masterIp+ " due to "+ e.toString();
    s_logger.warn(msg,e);
    throw new RuntimeException(msg);
  }
catch (  XmlRpcException e) {
    String msg="Unable to allow host " + _host.uuid + " to join pool "+ masterIp+ " due to "+ e.getMessage();
    s_logger.warn(msg,e);
    throw new RuntimeException(msg);
  }
 finally {
    if (poolConn != null) {
      try {
        Session.logout(poolConn);
      }
 catch (      Exception e) {
      }
      poolConn.dispose();
    }
    if (hostSession != null) {
      try {
        Session.logout(hostConn);
      }
 catch (      Exception e) {
      }
    }
  }
}
