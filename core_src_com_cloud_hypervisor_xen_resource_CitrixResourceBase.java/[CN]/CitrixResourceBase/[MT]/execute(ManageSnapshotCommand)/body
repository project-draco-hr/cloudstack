{
  Connection conn=getConnection();
  long snapshotId=cmd.getSnapshotId();
  String snapshotName=cmd.getSnapshotName();
  boolean success=false;
  String cmdSwitch=cmd.getCommandSwitch();
  String snapshotOp="Unsupported snapshot command." + cmdSwitch;
  if (cmdSwitch.equals(ManageSnapshotCommand.CREATE_SNAPSHOT)) {
    snapshotOp="create";
  }
 else   if (cmdSwitch.equals(ManageSnapshotCommand.DESTROY_SNAPSHOT)) {
    snapshotOp="destroy";
  }
  String details="ManageSnapshotCommand operation: " + snapshotOp + " Failed for snapshotId: "+ snapshotId;
  String snapshotUUID=null;
  try {
    if (cmdSwitch.equals(ManageSnapshotCommand.CREATE_SNAPSHOT)) {
      String volumeUUID=cmd.getVolumePath();
      VDI volume=VDI.getByUuid(conn,volumeUUID);
      VDI snapshot=volume.snapshot(conn,new HashMap<String,String>());
      if (snapshotName != null) {
        snapshot.setNameLabel(conn,snapshotName);
      }
      snapshotUUID=snapshot.getUuid(conn);
      String preSnapshotUUID=cmd.getSnapshotPath();
      if (preSnapshotUUID != null) {
        SR sr=volume.getSR(conn);
        String srUUID=sr.getUuid(conn);
        String type=sr.getType(conn);
        Boolean isISCSI=IsISCSI(type);
        String snapshotParentUUID=getVhdParent(conn,srUUID,snapshotUUID,isISCSI);
        String preSnapshotParentUUID=getVhdParent(conn,srUUID,preSnapshotUUID,isISCSI);
        if (snapshotParentUUID != null && snapshotParentUUID.equals(preSnapshotParentUUID)) {
          snapshot.destroy(conn);
          snapshotUUID=preSnapshotUUID;
        }
      }
      success=true;
      details=null;
    }
 else     if (cmd.getCommandSwitch().equals(ManageSnapshotCommand.DESTROY_SNAPSHOT)) {
      snapshotUUID=cmd.getSnapshotPath();
      VDI snapshot=getVDIbyUuid(conn,snapshotUUID);
      snapshot.destroy(conn);
      snapshotUUID=null;
      success=true;
      details=null;
    }
  }
 catch (  XenAPIException e) {
    details+=", reason: " + e.toString();
    s_logger.warn(details,e);
  }
catch (  Exception e) {
    details+=", reason: " + e.toString();
    s_logger.warn(details,e);
  }
  return new ManageSnapshotAnswer(cmd,snapshotId,snapshotUUID,success,details);
}
