{
  String stats="";
  try {
    if (flag == 1)     stats=getHostStatsRawXML();
    if (flag == 2)     stats=getVmStatsRawXML();
  }
 catch (  Exception e1) {
    s_logger.warn("Error whilst collecting raw stats from plugin:" + e1);
    return null;
  }
  if (stats == null)   return null;
  StringReader statsReader=new StringReader(stats);
  InputSource statsSource=new InputSource(statsReader);
  Document doc=null;
  try {
    doc=DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(statsSource);
  }
 catch (  Exception e) {
    s_logger.warn("Exception caught whilst processing the document via document factory:" + e);
    return null;
  }
  if (doc == null) {
    s_logger.warn("Null document found after tryinh to parse the stats source");
    return null;
  }
  NodeList firstLevelChildren=doc.getChildNodes();
  NodeList secondLevelChildren=(firstLevelChildren.item(0)).getChildNodes();
  Node metaNode=secondLevelChildren.item(0);
  Node dataNode=secondLevelChildren.item(1);
  Integer numRows=0;
  Integer numColumns=0;
  Node legend=null;
  NodeList metaNodeChildren=metaNode.getChildNodes();
  for (int i=0; i < metaNodeChildren.getLength(); i++) {
    Node n=metaNodeChildren.item(i);
    if (n.getNodeName().equals("rows")) {
      numRows=Integer.valueOf(getXMLNodeValue(n));
    }
 else     if (n.getNodeName().equals("columns")) {
      numColumns=Integer.valueOf(getXMLNodeValue(n));
    }
 else     if (n.getNodeName().equals("legend")) {
      legend=n;
    }
  }
  return new Object[]{numRows,numColumns,legend,dataNode};
}
