{
  String backupSnapshotUuid=null;
  if (prevBackupUuid == null) {
    prevBackupUuid="";
  }
  String backupUuid=UUID.randomUUID().toString();
  String results=callHostPluginAsync(conn,"vmopsSnapshot","backupSnapshot",wait,"primaryStorageSRUuid",primaryStorageSRUuid,"dcId",dcId.toString(),"accountId",accountId.toString(),"volumeId",volumeId.toString(),"secondaryStorageMountPath",secondaryStorageMountPath,"snapshotUuid",snapshotUuid,"prevBackupUuid",prevBackupUuid,"backupUuid",backupUuid,"isISCSI",isISCSI.toString());
  String errMsg=null;
  if (results == null || results.isEmpty()) {
    errMsg="Could not copy backupUuid: " + backupSnapshotUuid + " of volumeId: "+ volumeId+ " from primary storage "+ primaryStorageSRUuid+ " to secondary storage "+ secondaryStorageMountPath+ " due to null";
  }
 else {
    String[] tmp=results.split("#");
    String status=tmp[0];
    backupSnapshotUuid=tmp[1];
    if (status != null && status.equalsIgnoreCase("1") && backupSnapshotUuid != null) {
      s_logger.debug("Successfully copied backupUuid: " + backupSnapshotUuid + " of volumeId: "+ volumeId+ " to secondary storage");
      return backupSnapshotUuid;
    }
 else {
      errMsg="Could not copy backupUuid: " + backupSnapshotUuid + " of volumeId: "+ volumeId+ " from primary storage "+ primaryStorageSRUuid+ " to secondary storage "+ secondaryStorageMountPath+ " due to "+ tmp[1];
    }
  }
  s_logger.warn(errMsg);
  return null;
}
