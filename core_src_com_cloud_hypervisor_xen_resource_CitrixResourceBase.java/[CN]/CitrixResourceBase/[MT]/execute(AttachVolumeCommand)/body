{
  boolean attach=cmd.getAttach();
  String vmName=cmd.getVmName();
  Long deviceId=cmd.getDeviceId();
  String errorMsg;
  if (attach) {
    errorMsg="Failed to attach volume";
  }
 else {
    errorMsg="Failed to detach volume";
  }
  Connection conn=getConnection();
  try {
    VDI vdi=mount(cmd.getPooltype(),cmd.getVolumeFolder(),cmd.getVolumePath());
    VM vm=getVM(conn,vmName);
    boolean isHVM;
    if (vm.getPVBootloader(conn).equalsIgnoreCase("")) {
      isHVM=true;
    }
 else {
      isHVM=false;
    }
    VMGuestMetrics vgm=vm.getGuestMetrics(conn);
    boolean pvDrvInstalled=false;
    if (!isRefNull(vgm) && vgm.getPVDriversUpToDate(conn)) {
      pvDrvInstalled=true;
    }
    if (isHVM && !pvDrvInstalled) {
      s_logger.warn(errorMsg + ": You attempted an operation on a VM which requires PV drivers to be installed but the drivers were not detected");
      return new AttachVolumeAnswer(cmd,"You attempted an operation that requires PV drivers to be installed on the VM. Please install them by inserting xen-pv-drv.iso.");
    }
    if (attach) {
      String diskNumber=null;
      if (deviceId != null) {
        if (deviceId.longValue() == 3) {
          String msg="Device 3 is reserved for CD-ROM, choose other device";
          return new AttachVolumeAnswer(cmd,msg);
        }
        if (isDeviceUsed(vm,deviceId)) {
          String msg="Device " + deviceId + " is used in VM "+ vmName;
          return new AttachVolumeAnswer(cmd,msg);
        }
        diskNumber=deviceId.toString();
      }
 else {
        diskNumber=getUnusedDeviceNum(vm);
      }
      VBD.Record vbdr=new VBD.Record();
      vbdr.VM=vm;
      vbdr.VDI=vdi;
      vbdr.bootable=false;
      vbdr.userdevice=diskNumber;
      vbdr.mode=Types.VbdMode.RW;
      vbdr.type=Types.VbdType.DISK;
      vbdr.unpluggable=true;
      VBD vbd=VBD.create(conn,vbdr);
      vbd.plug(conn);
      vdi.setNameLabel(conn,vmName + "-DATA");
      return new AttachVolumeAnswer(cmd,Long.parseLong(diskNumber));
    }
 else {
      Set<VBD> vbds=vdi.getVBDs(conn);
      for (      VBD vbd : vbds) {
        VBD.Record vbdr=vbd.getRecord(conn);
        if (vbdr.currentlyAttached) {
          vbd.unplug(conn);
        }
        vbd.destroy(conn);
      }
      vdi.setNameLabel(conn,"detached");
      umount(vdi);
      return new AttachVolumeAnswer(cmd);
    }
  }
 catch (  XenAPIException e) {
    String msg=errorMsg + " for uuid: " + cmd.getVolumePath()+ "  due to "+ e.toString();
    s_logger.warn(msg,e);
    return new AttachVolumeAnswer(cmd,msg);
  }
catch (  Exception e) {
    String msg=errorMsg + " for uuid: " + cmd.getVolumePath()+ "  due to "+ e.getMessage();
    s_logger.warn(msg,e);
    return new AttachVolumeAnswer(cmd,msg);
  }
}
