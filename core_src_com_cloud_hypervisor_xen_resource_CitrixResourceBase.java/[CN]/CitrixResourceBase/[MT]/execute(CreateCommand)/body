{
  Connection conn=getConnection();
  StorageFilerTO pool=cmd.getPool();
  DiskProfile dskch=cmd.getDiskCharacteristics();
  VDI vdi=null;
  try {
    SR poolSr=getStorageRepository(conn,pool);
    s_logger.debug("### STORAGE CREATE - Template URL:" + cmd.getTemplateUrl());
    if (cmd.getTemplateUrl() != null) {
      VDI tmpltvdi=null;
      tmpltvdi=getVDIbyUuid(conn,cmd.getTemplateUrl());
      s_logger.debug("### STORAGE CREATE - ABOUT TO CLONE VDI:" + tmpltvdi.getUuid(conn));
      vdi=tmpltvdi.createClone(conn,new HashMap<String,String>());
      s_logger.debug("### STORAGE CREATE - CLoned VDI:" + vdi.getUuid(conn));
      vdi.setNameLabel(conn,dskch.getName());
    }
 else {
      VDI.Record vdir=new VDI.Record();
      vdir.nameLabel=dskch.getName();
      vdir.SR=poolSr;
      vdir.type=Types.VdiType.USER;
      vdir.virtualSize=dskch.getSize();
      s_logger.debug("### STORAGE CREATE - Creating VDI with size:" + dskch.getSize());
      vdi=VDI.create(conn,vdir);
      s_logger.debug("### STORAGE CREATE - VDI created:" + vdi.getUuid(conn));
    }
    VDI.Record vdir;
    vdir=vdi.getRecord(conn);
    s_logger.debug("Succesfully created VDI for " + cmd + ".  Uuid = "+ vdir.uuid);
    VolumeTO vol=new VolumeTO(cmd.getVolumeId(),dskch.getType(),pool.getType(),pool.getUuid(),vdir.nameLabel,pool.getPath(),vdir.uuid,vdir.virtualSize,null);
    return new CreateAnswer(cmd,vol);
  }
 catch (  Exception e) {
    s_logger.warn("Unable to create volume; Pool=" + pool + "; Disk: "+ dskch,e);
    return new CreateAnswer(cmd,e);
  }
}
