{
  StorageFilerTO pool=cmd.getPool();
  DiskProfile dskch=cmd.getDiskCharacteristics();
  VDI vdi=null;
  Connection conn=getConnection();
  try {
    SR poolSr=getStorageRepository(conn,pool);
    if (cmd.getTemplateUrl() != null) {
      VDI tmpltvdi=null;
      tmpltvdi=getVDIbyUuid(cmd.getTemplateUrl());
      vdi=tmpltvdi.createClone(conn,new HashMap<String,String>());
      vdi.setNameLabel(conn,dskch.getName());
    }
 else {
      VDI.Record vdir=new VDI.Record();
      vdir.nameLabel=dskch.getName();
      vdir.SR=poolSr;
      vdir.type=Types.VdiType.USER;
      if (cmd.getSize() != 0)       vdir.virtualSize=(cmd.getSize() * 1024 * 1024* 1L);
 else       vdir.virtualSize=dskch.getSize();
      vdi=VDI.create(conn,vdir);
    }
    VDI.Record vdir;
    vdir=vdi.getRecord(conn);
    s_logger.debug("Succesfully created VDI for " + cmd + ".  Uuid = "+ vdir.uuid);
    VolumeTO vol=new VolumeTO(cmd.getVolumeId(),dskch.getType(),Storage.StorageResourceType.STORAGE_POOL,pool.getType(),vdir.nameLabel,pool.getPath(),vdir.uuid,vdir.virtualSize);
    return new CreateAnswer(cmd,vol);
  }
 catch (  Exception e) {
    s_logger.warn("Unable to create volume; Pool=" + pool + "; Disk: "+ dskch,e);
    return new CreateAnswer(cmd,e);
  }
}
