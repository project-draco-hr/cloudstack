{
  try {
    Host myself=Host.getByUuid(conn,_host.uuid);
    Set<HostCpu> hcs=myself.getHostCPUs(conn);
    _host.cpus=hcs.size();
    for (    final HostCpu hc : hcs) {
      _host.speed=hc.getSpeed(conn).intValue();
      break;
    }
    XsLocalNetwork privateNic=getManagementNetwork(conn);
    _privateNetworkName=privateNic.getNetworkRecord(conn).nameLabel;
    _host.privatePif=privateNic.getPifRecord(conn).uuid;
    _host.privateNetwork=privateNic.getNetworkRecord(conn).uuid;
    _host.systemvmisouuid=null;
    XsLocalNetwork guestNic=null;
    if (_guestNetworkName != null && !_guestNetworkName.equals(_privateNetworkName)) {
      guestNic=getNetworkByName(conn,_guestNetworkName);
      if (guestNic == null) {
        s_logger.warn("Unable to find guest network " + _guestNetworkName);
        throw new IllegalArgumentException("Unable to find guest network " + _guestNetworkName + " for host "+ _host.ip);
      }
    }
 else {
      guestNic=privateNic;
      _guestNetworkName=_privateNetworkName;
    }
    _host.guestNetwork=guestNic.getNetworkRecord(conn).uuid;
    _host.guestPif=guestNic.getPifRecord(conn).uuid;
    XsLocalNetwork publicNic=null;
    if (_publicNetworkName != null && !_publicNetworkName.equals(_guestNetworkName)) {
      publicNic=getNetworkByName(conn,_publicNetworkName);
      if (publicNic == null) {
        s_logger.warn("Unable to find public network " + _publicNetworkName + " for host "+ _host.ip);
        throw new IllegalArgumentException("Unable to find public network " + _publicNetworkName + " for host "+ _host.ip);
      }
    }
 else {
      publicNic=guestNic;
      _publicNetworkName=_guestNetworkName;
    }
    _host.publicPif=publicNic.getPifRecord(conn).uuid;
    _host.publicNetwork=publicNic.getNetworkRecord(conn).uuid;
    XsLocalNetwork storageNic1=null;
    if (_storageNetworkName1 != null && !_storageNetworkName1.equals(_guestNetworkName)) {
      storageNic1=getNetworkByName(conn,_storageNetworkName1);
    }
    if (storageNic1 == null) {
      storageNic1=guestNic;
      _storageNetworkName1=_guestNetworkName;
    }
    _host.storageNetwork1=storageNic1.getNetworkRecord(conn).uuid;
    _host.storagePif1=storageNic1.getPifRecord(conn).uuid;
    XsLocalNetwork storageNic2=null;
    if (_storageNetworkName2 != null && !_storageNetworkName2.equals(_guestNetworkName)) {
      storageNic2=getNetworkByName(conn,_storageNetworkName2);
    }
    if (storageNic2 == null) {
      storageNic2=guestNic;
      _storageNetworkName2=_guestNetworkName;
    }
    _host.storageNetwork2=storageNic2.getNetworkRecord(conn).uuid;
    _host.storagePif2=storageNic2.getPifRecord(conn).uuid;
    s_logger.info("Private Network is " + _privateNetworkName + " for host "+ _host.ip);
    s_logger.info("Guest Network is " + _guestNetworkName + " for host "+ _host.ip);
    s_logger.info("Public Network is " + _publicNetworkName + " for host "+ _host.ip);
    s_logger.info("Storage Network 1 is " + _storageNetworkName1 + " for host "+ _host.ip);
    s_logger.info("Storage Network 2 is " + _storageNetworkName2 + " for host "+ _host.ip);
    return true;
  }
 catch (  XenAPIException e) {
    s_logger.warn("Unable to get host information for " + _host.ip,e);
    return false;
  }
catch (  XmlRpcException e) {
    s_logger.warn("Unable to get host information for " + _host.ip,e);
    return false;
  }
}
