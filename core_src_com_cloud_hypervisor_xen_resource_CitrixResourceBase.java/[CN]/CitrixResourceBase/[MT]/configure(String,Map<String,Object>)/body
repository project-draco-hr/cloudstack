{
  _name=name;
  _host.uuid=(String)params.get("guid");
  try {
    _dcId=Long.parseLong((String)params.get("zone"));
  }
 catch (  NumberFormatException e) {
    throw new ConfigurationException("Unable to get the zone " + params.get("zone"));
  }
  _name=_host.uuid;
  _host.ip=(String)params.get("ipaddress");
  _host.pool=(String)params.get("pool");
  _username=(String)params.get("username");
  _password=(String)params.get("password");
  _pod=(String)params.get("pod");
  _cluster=(String)params.get("cluster");
  _privateNetworkName=(String)params.get("private.network.device");
  _publicNetworkName=(String)params.get("public.network.device");
  _guestNetworkName=(String)params.get("guest.network.device");
  _linkLocalPrivateNetworkName=(String)params.get("private.linkLocal.device");
  if (_linkLocalPrivateNetworkName == null) {
    _linkLocalPrivateNetworkName="cloud_link_local_network";
  }
  _storageNetworkName1=(String)params.get("storage.network.device1");
  _storageNetworkName2=(String)params.get("storage.network.device2");
  String value=(String)params.get("wait");
  _wait=NumbersUtil.parseInt(value,1800);
  if (_pod == null) {
    throw new ConfigurationException("Unable to get the pod");
  }
  if (_host.ip == null) {
    throw new ConfigurationException("Unable to get the host address");
  }
  if (_username == null) {
    throw new ConfigurationException("Unable to get the username");
  }
  if (_password == null) {
    throw new ConfigurationException("Unable to get the password");
  }
  if (_host.uuid == null) {
    throw new ConfigurationException("Unable to get the uuid");
  }
  _storage=(StorageLayer)params.get(StorageLayer.InstanceConfigKey);
  if (_storage == null) {
    value=(String)params.get(StorageLayer.ClassConfigKey);
    if (value == null) {
      value="com.cloud.storage.JavaStorageLayer";
    }
    try {
      Class<?> clazz=Class.forName(value);
      _storage=(StorageLayer)ComponentLocator.inject(clazz);
      _storage.configure("StorageLayer",params);
    }
 catch (    ClassNotFoundException e) {
      throw new ConfigurationException("Unable to find class " + value);
    }
  }
  return true;
}
