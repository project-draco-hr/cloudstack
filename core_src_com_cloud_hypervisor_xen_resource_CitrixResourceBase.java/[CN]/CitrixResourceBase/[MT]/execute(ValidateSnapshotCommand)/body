{
  String primaryStoragePoolNameLabel=cmd.getPrimaryStoragePoolNameLabel();
  String volumeUuid=cmd.getVolumeUuid();
  String firstBackupUuid=cmd.getFirstBackupUuid();
  String previousSnapshotUuid=cmd.getPreviousSnapshotUuid();
  String templateUuid=cmd.getTemplateUuid();
  String details="Could not validate previous snapshot backup UUID " + "because the primary Storage SR could not be created from the name label: " + primaryStoragePoolNameLabel;
  boolean success=false;
  String expectedSnapshotBackupUuid=null;
  String actualSnapshotBackupUuid=null;
  String actualSnapshotUuid=null;
  Boolean isISCSI=false;
  String primaryStorageSRUuid=null;
  Connection conn=getConnection();
  try {
    SR primaryStorageSR=getSRByNameLabelandHost(primaryStoragePoolNameLabel);
    if (primaryStorageSR != null) {
      primaryStorageSRUuid=primaryStorageSR.getUuid(conn);
      isISCSI=SRType.LVMOISCSI.equals(primaryStorageSR.getType(conn));
    }
  }
 catch (  BadServerResponse e) {
    details+=", reason: " + e.getMessage();
    s_logger.error(details,e);
  }
catch (  XenAPIException e) {
    details+=", reason: " + e.getMessage();
    s_logger.error(details,e);
  }
catch (  XmlRpcException e) {
    details+=", reason: " + e.getMessage();
    s_logger.error(details,e);
  }
  if (primaryStorageSRUuid != null) {
    if (templateUuid == null) {
      templateUuid="";
    }
    if (firstBackupUuid == null) {
      firstBackupUuid="";
    }
    if (previousSnapshotUuid == null) {
      previousSnapshotUuid="";
    }
    String result=callHostPlugin("vmopsSnapshot","validateSnapshot","primaryStorageSRUuid",primaryStorageSRUuid,"volumeUuid",volumeUuid,"firstBackupUuid",firstBackupUuid,"previousSnapshotUuid",previousSnapshotUuid,"templateUuid",templateUuid,"isISCSI",isISCSI.toString());
    if (result == null || result.isEmpty()) {
      details="Validating snapshot backup for volume with UUID: " + volumeUuid + " failed because there was an exception in the plugin";
    }
 else {
      String[] uuids=result.split("#",-1);
      if (uuids.length >= 3) {
        expectedSnapshotBackupUuid=uuids[1];
        actualSnapshotBackupUuid=uuids[2];
      }
      if (uuids.length >= 4) {
        actualSnapshotUuid=uuids[3];
      }
 else {
        actualSnapshotUuid="";
      }
      if (uuids[0].equals("1")) {
        success=true;
        details=null;
      }
 else {
        details="Previous snapshot backup on the primary storage is invalid. " + "Expected: " + expectedSnapshotBackupUuid + " Actual: "+ actualSnapshotBackupUuid;
      }
      s_logger.debug("ValidatePreviousSnapshotBackup returned " + " success: " + success + " details: "+ details+ " expectedSnapshotBackupUuid: "+ expectedSnapshotBackupUuid+ " actualSnapshotBackupUuid: "+ actualSnapshotBackupUuid+ " actualSnapshotUuid: "+ actualSnapshotUuid);
    }
  }
  return new ValidateSnapshotAnswer(cmd,success,details,expectedSnapshotBackupUuid,actualSnapshotBackupUuid,actualSnapshotUuid);
}
