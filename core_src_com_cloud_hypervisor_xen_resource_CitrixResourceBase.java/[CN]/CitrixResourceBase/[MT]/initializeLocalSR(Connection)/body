{
  SR lvmsr=getLocalLVMSR(conn);
  if (lvmsr == null) {
    return null;
  }
  try {
    String lvmuuid=lvmsr.getUuid(conn);
    long cap=lvmsr.getPhysicalSize(conn);
    if (cap < 0) {
      return null;
    }
    long avail=cap - lvmsr.getPhysicalUtilisation(conn);
    lvmsr.setNameLabel(conn,lvmuuid);
    String name="Cloud Stack Local Storage Pool for " + _host.uuid;
    lvmsr.setNameDescription(conn,name);
    Host host=Host.getByUuid(conn,_host.uuid);
    String address=host.getAddress(conn);
    StoragePoolInfo pInfo=new StoragePoolInfo(lvmuuid,address,SRType.LVM.toString(),SRType.LVM.toString(),StoragePoolType.LVM,cap,avail);
    StartupStorageCommand cmd=new StartupStorageCommand();
    cmd.setPoolInfo(pInfo);
    cmd.setGuid(_host.uuid);
    cmd.setResourceType(Storage.StorageResourceType.STORAGE_POOL);
    return cmd;
  }
 catch (  XenAPIException e) {
    String msg="build startupstoragecommand err in host:" + _host.uuid + e.toString();
    s_logger.warn(msg);
  }
catch (  XmlRpcException e) {
    String msg="build startupstoragecommand err in host:" + _host.uuid + e.getMessage();
    s_logger.warn(msg);
  }
  return null;
}
