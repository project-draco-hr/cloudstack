{
  Connection conn=getConnection();
  if (s_logger.isTraceEnabled()) {
    s_logger.trace("Sending network rules command to " + _host.ip);
  }
  if (!_canBridgeFirewall) {
    s_logger.warn("Host " + _host.ip + " cannot do bridge firewalling");
    return new SecurityGroupRuleAnswer(cmd,false,"Host " + _host.ip + " cannot do bridge firewalling",SecurityGroupRuleAnswer.FailureReason.CANNOT_BRIDGE_FIREWALL);
  }
  String result=callHostPlugin(conn,"vmops","network_rules","vmName",cmd.getVmName(),"vmIP",cmd.getGuestIp(),"vmMAC",cmd.getGuestMac(),"type",cmd.getRuleType(),"vmID",Long.toString(cmd.getVmId()),"signature",cmd.getSignature(),"seqno",Long.toString(cmd.getSeqNum()),"deflated","true","rules",cmd.compressStringifiedRules());
  if (result == null || result.isEmpty() || !Boolean.parseBoolean(result)) {
    s_logger.warn("Failed to program network rules for vm " + cmd.getVmName());
    return new SecurityGroupRuleAnswer(cmd,false,"programming network rules failed");
  }
 else {
    s_logger.info("Programmed network rules for vm " + cmd.getVmName() + " guestIp="+ cmd.getGuestIp()+ ", numrules="+ cmd.getRuleSet().length);
    return new SecurityGroupRuleAnswer(cmd);
  }
}
