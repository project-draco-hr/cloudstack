{
  Set<SR> srs;
  try {
    srs=SR.getByNameLabel(conn,pool.getUuid());
  }
 catch (  XenAPIException e) {
    throw new CloudRuntimeException("Unable to get SR " + pool.getUuid() + " due to "+ e.toString(),e);
  }
catch (  Exception e) {
    throw new CloudRuntimeException("Unable to get SR " + pool.getUuid() + " due to "+ e.getMessage(),e);
  }
  if (srs.size() > 1) {
    throw new CloudRuntimeException("More than one storage repository was found for pool with uuid: " + pool.getUuid());
  }
 else   if (srs.size() == 1) {
    SR sr=srs.iterator().next();
    if (s_logger.isDebugEnabled()) {
      s_logger.debug("SR retrieved for " + pool.getId() + " is mapped to "+ sr.toString());
    }
    if (checkSR(sr)) {
      return sr;
    }
    throw new CloudRuntimeException("SR check failed for storage pool: " + pool.getUuid() + "on host:"+ _host.uuid);
  }
 else {
    if (pool.getType() == StoragePoolType.NetworkFilesystem)     return getNfsSR(pool);
 else     if (pool.getType() == StoragePoolType.IscsiLUN)     return getIscsiSR(pool);
 else     throw new CloudRuntimeException("The pool type: " + pool.getType().name() + " is not supported.");
  }
}
