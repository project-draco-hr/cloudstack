{
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Checking if network name setup is done on the resource");
  }
  List<PhysicalNetworkSetupInfo> infoList=cmd.getPhysicalNetworkInfoList();
  try {
    boolean errorout=false;
    String msg="";
    for (    PhysicalNetworkSetupInfo info : infoList) {
      if (!isNetworkSetupByName(info.getGuestNetworkName())) {
        msg="For Physical Network id:" + info.getPhysicalNetworkId() + ", Guest Network is not configured on the backend by name "+ info.getGuestNetworkName();
        errorout=true;
        break;
      }
      if (!isNetworkSetupByName(info.getPrivateNetworkName())) {
        msg="For Physical Network id:" + info.getPhysicalNetworkId() + ", Private Network is not configured on the backend by name "+ info.getGuestNetworkName();
        errorout=true;
        break;
      }
      if (!isNetworkSetupByName(info.getPublicNetworkName())) {
        msg="For Physical Network id:" + info.getPhysicalNetworkId() + ", Public Network is not configured on the backend by name "+ info.getGuestNetworkName();
        errorout=true;
        break;
      }
      if (!isNetworkSetupByName(info.getStorageNetworkName())) {
        msg="For Physical Network id:" + info.getPhysicalNetworkId() + ", Storage Network is not configured on the backend by name "+ info.getGuestNetworkName();
        errorout=true;
        break;
      }
    }
    if (errorout) {
      s_logger.error(msg);
      return new CheckNetworkAnswer(cmd,false,msg);
    }
 else {
      return new CheckNetworkAnswer(cmd,true,"Network Setup check by names is done");
    }
  }
 catch (  XenAPIException e) {
    String msg="CheckNetworkCommand failed with XenAPIException:" + e.toString() + " host:"+ _host.uuid;
    s_logger.warn(msg,e);
    return new CheckNetworkAnswer(cmd,false,msg);
  }
catch (  Exception e) {
    String msg="CheckNetworkCommand failed with Exception:" + e.getMessage() + " host:"+ _host.uuid;
    s_logger.warn(msg,e);
    return new CheckNetworkAnswer(cmd,false,msg);
  }
}
