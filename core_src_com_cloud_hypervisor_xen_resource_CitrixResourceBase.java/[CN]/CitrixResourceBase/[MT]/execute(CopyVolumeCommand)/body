{
  Connection conn=getConnection();
  String volumeUUID=cmd.getVolumePath();
  StorageFilerTO poolTO=cmd.getPool();
  String secondaryStorageURL=cmd.getSecondaryStorageURL();
  boolean toSecondaryStorage=cmd.toSecondaryStorage();
  try {
    URI uri=new URI(secondaryStorageURL);
    String remoteVolumesMountPath=uri.getHost() + ":" + uri.getPath()+ "/volumes/";
    String volumeFolder=String.valueOf(cmd.getVolumeId()) + "/";
    String mountpoint=remoteVolumesMountPath + volumeFolder;
    SR primaryStoragePool=getStorageRepository(conn,poolTO);
    String srUuid=primaryStoragePool.getUuid(conn);
    if (toSecondaryStorage) {
      if (!createSecondaryStorageFolder(conn,remoteVolumesMountPath,volumeFolder)) {
        throw new InternalErrorException("Failed to create the volume folder.");
      }
      VDI vdi=VDI.getByUuid(conn,volumeUUID);
      String pUuid=getVhdParent(conn,srUuid,vdi.getUuid(conn),IsISCSI(primaryStoragePool.getType(conn)));
      if (pUuid != null) {
        SR secondaryStorage=null;
        try {
          secondaryStorage=createNfsSRbyURI(conn,new URI(secondaryStorageURL + "/volumes/" + volumeFolder),false);
          VDI srcVolume=getVDIbyUuid(conn,volumeUUID);
          VDI destVolume=cloudVDIcopy(conn,srcVolume,secondaryStorage);
          String destVolumeUUID=destVolume.getUuid(conn);
          return new CopyVolumeAnswer(cmd,true,null,null,destVolumeUUID);
        }
  finally {
          removeSR(conn,secondaryStorage);
        }
      }
 else {
        String uuid=copy_vhd_to_secondarystorage(conn,mountpoint,volumeUUID,srUuid);
        return new CopyVolumeAnswer(cmd,true,null,null,uuid);
      }
    }
 else {
      try {
        String volumePath=mountpoint + "/" + volumeUUID+ ".vhd";
        String uuid=copy_vhd_from_secondarystorage(conn,volumePath,srUuid);
        return new CopyVolumeAnswer(cmd,true,null,srUuid,uuid);
      }
  finally {
        deleteSecondaryStorageFolder(conn,remoteVolumesMountPath,volumeFolder);
      }
    }
  }
 catch (  Exception e) {
    String msg="Catch Exception " + e.getClass().getName() + " due to "+ e.toString();
    s_logger.warn(msg,e);
    return new CopyVolumeAnswer(cmd,false,msg,null,null);
  }
}
