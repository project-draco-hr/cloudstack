{
  final String vmName=cmd.getVmName();
  final DomainRouter router=cmd.getRouter();
  try {
    String tag=router.getVnet();
    Network network=null;
    if ("untagged".equalsIgnoreCase(tag)) {
      Connection conn=getConnection();
      network=Network.getByUuid(conn,_host.guestNetwork);
    }
 else {
      network=enableVlanNetwork(Long.parseLong(tag),_host.guestPif);
    }
    if (network == null) {
      throw new InternalErrorException("Failed to enable VLAN network with tag: " + tag);
    }
    String bootArgs=cmd.getBootArgs();
    String result=startSystemVM(vmName,router.getVlanId(),network,cmd.getVolumes(),bootArgs,router.getGuestMacAddress(),router.getPrivateIpAddress(),router.getPrivateMacAddress(),router.getPublicMacAddress(),3922,router.getRamSize(),cmd.getGuestOSDescription(),cmd.getNetworkRateMbps());
    if (result == null) {
      networkUsage(router.getPrivateIpAddress(),"create",null);
      return new StartRouterAnswer(cmd);
    }
    return new StartRouterAnswer(cmd,result);
  }
 catch (  Exception e) {
    String msg="Exception caught while starting router vm " + vmName + " due to "+ e.getMessage();
    s_logger.warn(msg,e);
    return new StartRouterAnswer(cmd,msg);
  }
}
