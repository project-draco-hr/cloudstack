{
  Connection conn=getConnection();
  String primaryStorageNameLabel=cmd.getPrimaryStoragePoolNameLabel();
  Long dcId=cmd.getDataCenterId();
  Long accountId=cmd.getAccountId();
  Long volumeId=cmd.getVolumeId();
  String secondaryStorageUrl=cmd.getSecondaryStorageUrl();
  String snapshotUuid=cmd.getSnapshotUuid();
  String prevBackupUuid=cmd.getPrevBackupUuid();
  String prevSnapshotUuid=cmd.getPrevSnapshotUuid();
  int wait=cmd.getWait();
  String details=null;
  boolean success=false;
  String snapshotBackupUuid=null;
  boolean fullbackup=true;
  try {
    SR primaryStorageSR=getSRByNameLabelandHost(conn,primaryStorageNameLabel);
    if (primaryStorageSR == null) {
      throw new InternalErrorException("Could not backup snapshot because the primary Storage SR could not be created from the name label: " + primaryStorageNameLabel);
    }
    String psUuid=primaryStorageSR.getUuid(conn);
    Boolean isISCSI=IsISCSI(primaryStorageSR.getType(conn));
    URI uri=new URI(secondaryStorageUrl);
    String secondaryStorageMountPath=uri.getHost() + ":" + uri.getPath();
    VDI snapshotVdi=getVDIbyUuid(conn,snapshotUuid);
    String snapshotPaUuid=null;
    if (prevBackupUuid != null) {
      try {
        snapshotPaUuid=getVhdParent(conn,psUuid,snapshotUuid,isISCSI);
        if (snapshotPaUuid != null) {
          String snashotPaPaPaUuid=getVhdParent(conn,psUuid,snapshotPaUuid,isISCSI);
          String prevSnashotPaUuid=getVhdParent(conn,psUuid,prevSnapshotUuid,isISCSI);
          if (snashotPaPaPaUuid != null && prevSnashotPaUuid != null && prevSnashotPaUuid.equals(snashotPaPaPaUuid)) {
            fullbackup=false;
          }
        }
      }
 catch (      Exception e) {
      }
    }
    if (fullbackup) {
      String folder="snapshots/" + accountId + "/"+ volumeId;
      if (!createSecondaryStorageFolder(conn,secondaryStorageMountPath,folder)) {
        details=" Filed to create folder " + folder + " in secondary storage";
        s_logger.warn(details);
        return new BackupSnapshotAnswer(cmd,false,details,null,false);
      }
      String snapshotMountpoint=secondaryStorageUrl + "/" + folder;
      SR snapshotSr=null;
      try {
        snapshotSr=createNfsSRbyURI(conn,new URI(snapshotMountpoint),false);
        VDI backedVdi=cloudVDIcopy(conn,snapshotVdi,snapshotSr,wait);
        snapshotBackupUuid=backedVdi.getUuid(conn);
        if (cmd.getSwift() != null) {
          try {
            swiftBackupSnapshot(conn,cmd.getSwift(),snapshotSr.getUuid(conn),snapshotBackupUuid,"S-" + volumeId.toString(),false,wait);
          }
  finally {
            deleteSnapshotBackup(conn,dcId,accountId,volumeId,secondaryStorageMountPath,snapshotBackupUuid);
          }
        }
        snapshotBackupUuid=snapshotBackupUuid + ".vhd";
        success=true;
      }
  finally {
        if (snapshotSr != null) {
          removeSR(conn,snapshotSr);
        }
      }
    }
 else {
      String primaryStorageSRUuid=primaryStorageSR.getUuid(conn);
      if (cmd.getSwift() != null) {
        swiftBackupSnapshot(conn,cmd.getSwift(),primaryStorageSRUuid,snapshotPaUuid,"S-" + volumeId.toString(),isISCSI,wait);
        if (isISCSI) {
          snapshotBackupUuid="VHD-" + snapshotPaUuid;
        }
 else {
          snapshotBackupUuid=snapshotPaUuid + ".vhd";
        }
        success=true;
      }
 else {
        snapshotBackupUuid=backupSnapshot(conn,primaryStorageSRUuid,dcId,accountId,volumeId,secondaryStorageMountPath,snapshotUuid,prevBackupUuid,isISCSI,wait);
        success=(snapshotBackupUuid != null);
      }
    }
    String volumeUuid=cmd.getVolumePath();
    destroySnapshotOnPrimaryStorageExceptThis(conn,volumeUuid,snapshotUuid);
    if (success) {
      details="Successfully backedUp the snapshotUuid: " + snapshotUuid + " to secondary storage.";
    }
  }
 catch (  XenAPIException e) {
    details="BackupSnapshot Failed due to " + e.toString();
    s_logger.warn(details,e);
  }
catch (  Exception e) {
    details="BackupSnapshot Failed due to " + e.getMessage();
    s_logger.warn(details,e);
  }
  return new BackupSnapshotAnswer(cmd,success,details,snapshotBackupUuid,fullbackup);
}
