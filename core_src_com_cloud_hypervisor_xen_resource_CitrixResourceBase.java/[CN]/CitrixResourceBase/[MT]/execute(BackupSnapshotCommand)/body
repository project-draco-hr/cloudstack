{
  String primaryStorageNameLabel=cmd.getPrimaryStoragePoolNameLabel();
  Long dcId=cmd.getDataCenterId();
  Long accountId=cmd.getAccountId();
  Long volumeId=cmd.getVolumeId();
  String secondaryStoragePoolURL=cmd.getSecondaryStoragePoolURL();
  String snapshotUuid=cmd.getSnapshotUuid();
  String prevSnapshotUuid=cmd.getPrevSnapshotUuid();
  String prevBackupUuid=cmd.getPrevBackupUuid();
  String details=null;
  boolean success=false;
  String snapshotBackupUuid=null;
  try {
    Connection conn=getConnection();
    SR primaryStorageSR=getSRByNameLabelandHost(primaryStorageNameLabel);
    if (primaryStorageSR == null) {
      throw new InternalErrorException("Could not backup snapshot because the primary Storage SR could not be created from the name label: " + primaryStorageNameLabel);
    }
    String primaryStorageSRUuid=primaryStorageSR.getUuid(conn);
    Boolean isISCSI=SRType.LVMOISCSI.equals(primaryStorageSR.getType(conn));
    URI uri=new URI(secondaryStoragePoolURL);
    String secondaryStorageMountPath=uri.getHost() + ":" + uri.getPath();
    if (prevBackupUuid == null) {
      String folder="snapshots/" + accountId + "/"+ volumeId;
      if (!createSecondaryStorageFolder(secondaryStorageMountPath,folder)) {
        details=" Filed to create folder " + folder + " in secondary storage";
        s_logger.warn(details);
        return new BackupSnapshotAnswer(cmd,success,details,snapshotBackupUuid);
      }
      String snapshotMountpoint=secondaryStoragePoolURL + "/" + folder;
      SR snapshotSr=null;
      try {
        snapshotSr=createNfsSRbyURI(new URI(snapshotMountpoint),false);
        VDI snapshotVdi=getVDIbyUuid(snapshotUuid);
        VDI backedVdi=snapshotVdi.copy(conn,snapshotSr);
        snapshotBackupUuid=backedVdi.getUuid(conn);
        success=true;
      }
  finally {
        if (snapshotSr != null) {
          removeSR(snapshotSr);
        }
      }
    }
 else {
      snapshotBackupUuid=backupSnapshot(primaryStorageSRUuid,dcId,accountId,volumeId,secondaryStorageMountPath,snapshotUuid,prevSnapshotUuid,prevBackupUuid,isISCSI);
      success=(snapshotBackupUuid != null);
    }
    if (success) {
      details="Successfully backedUp the snapshotUuid: " + snapshotUuid + " to secondary storage.";
      if (prevSnapshotUuid != null) {
        String volumeUuid=cmd.getVolumePath();
        destroySnapshotOnPrimaryStorageExceptThis(volumeUuid,snapshotUuid);
      }
    }
  }
 catch (  XenAPIException e) {
    details="BackupSnapshot Failed due to " + e.toString();
    s_logger.warn(details,e);
  }
catch (  Exception e) {
    details="BackupSnapshot Failed due to " + e.getMessage();
    s_logger.warn(details,e);
  }
  return new BackupSnapshotAnswer(cmd,success,details,snapshotBackupUuid);
}
