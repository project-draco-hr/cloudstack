def generate(self, cmd):
    self.cmd = cmd
    self.cmdsName.append(self.cmd.name)
    self.code += '\n'
    self.code += ('"""%s"""\n' % self.cmd.desc)
    self.code += 'from baseCmd import *\n'
    self.code += 'from baseResponse import *\n'
    self.code += ('class %sCmd (baseCmd):\n' % self.cmd.name)
    self.code += (self.space + 'def __init__(self):\n')
    self.code += ((self.space + self.space) + ('self.isAsync = "%s"\n' % self.cmd.async))
    for req in self.cmd.request:
        if (req.desc is not None):
            self.code += ((self.space + self.space) + ('"""%s"""\n' % req.desc))
        if (req.required == 'true'):
            self.code += ((self.space + self.space) + '"""Required"""\n')
        self.code += ((self.space + self.space) + ('self.%s = None\n' % req.name))
        if (req.required == 'true'):
            self.required.append(req.name)
    self.code += ((self.space + self.space) + 'self.required = [')
    for require in self.required:
        self.code += (('"' + require) + '",')
    self.code += ']\n'
    self.required = []
    'generate response code'
    subItems = {}
    self.code += '\n'
    self.code += ('class %sResponse (baseResponse):\n' % self.cmd.name)
    self.code += (self.space + 'def __init__(self):\n')
    for res in self.cmd.response:
        if (res.desc is not None):
            self.code += ((self.space + self.space) + ('"""%s"""\n' % res.desc))
        if (len(res.subProperties) > 0):
            self.code += ((self.space + self.space) + ('self.%s = []\n' % res.name))
            self.generateSubClass(res.name, res.subProperties)
        else:
            self.code += ((self.space + self.space) + ('self.%s = None\n' % res.name))
    self.code += '\n'
    for subclass in self.subclass:
        self.code += (subclass + '\n')
    fp = open((self.outputFolder + ('/cloudstackAPI/%s.py' % self.cmd.name)), 'w')
    fp.write(self.code)
    fp.close()
    self.code = ''
    self.subclass = []
