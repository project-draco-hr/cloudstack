{
  DataStoreEndPointSelector dseps=_ds.getEndPointSelector();
  List<DataStoreEndPoint> eps=dseps.getEndPoints(StorageEvent.DownloadTemplateToPrimary);
  int tries=Math.min(eps.size(),_installTries);
  VMTemplateStoragePoolVO templateStoragePoolRef=_templatePoolDao.acquireInLockTable(tp.getTemplatePoolRefId(),_storagePoolMaxWaitSeconds);
  if (templateStoragePoolRef == null) {
    throw new CloudRuntimeException("Unable to acquire lock on VMTemplateStoragePool: " + tp.getTemplatePoolRefId());
  }
  try {
    for (int retry=0; retry < tries; retry++) {
      Collections.shuffle(eps);
      DataStoreEndPoint ep=eps.get(0);
      try {
        tp=_driver.install(tp,ep);
        templateStoragePoolRef.setDownloadPercent(100);
        templateStoragePoolRef.setDownloadState(Status.DOWNLOADED);
        templateStoragePoolRef.setLocalDownloadPath(tp.getLocalPath());
        templateStoragePoolRef.setInstallPath(tp.getLocalPath());
        templateStoragePoolRef.setTemplateSize(tp.getSize());
        _templatePoolDao.update(templateStoragePoolRef.getId(),templateStoragePoolRef);
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Template " + tp.getTemplateId() + " is installed via "+ ep.getHostId());
        }
        return get(tp.getTemplateId());
      }
 catch (      CloudRuntimeException e) {
        if (s_logger.isDebugEnabled()) {
          s_logger.debug("Template " + tp.getTemplateId() + " download to pool "+ _ds.getId()+ " failed due to "+ e.toString());
        }
      }
    }
  }
  finally {
    _templatePoolDao.releaseFromLockTable(tp.getTemplatePoolRefId());
  }
  if (s_logger.isDebugEnabled()) {
    s_logger.debug("Template " + tp.getTemplateId() + " is not found on and can not be downloaded to pool "+ _ds.getId());
  }
  return null;
}
