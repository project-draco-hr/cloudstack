@attr('simulator_only', tags=['advanced'], required_hardware='false')
def test_listSnapshot_as_rootadmin_listall_true(self):
    '\n\tTest listing of Snapshots by passing listall="true" parameter as admin\n\tValidate that it returns all the Snapshots\n\t'
    self.apiclient.connection.apiKey = self.user_a_apikey
    self.apiclient.connection.securityKey = self.user_a_secretkey
    snapshotList = Snapshot.list(self.apiclient, listall='true')
    self.debug(('List as ROOT Admin - listall=true %s' % snapshotList))
    self.assertEqual((len(snapshotList) >= 11), True, 'Number of items in list response check failed!!')
    if (self.checkForExistenceOfValue(snapshotList, self.vm_d1_snapshot.id), (self.checkForExistenceOfValue(snapshotList, self.vm_d1a_snapshot.id) and self.checkForExistenceOfValue(snapshotList, self.vm_d1b_snapshot.id) and self.checkForExistenceOfValue(snapshotList, self.vm_d11_snapshot.id) and self.checkForExistenceOfValue(snapshotList, self.vm_d11a_snapshot.id) and self.checkForExistenceOfValue(snapshotList, self.vm_d11b_snapshot.id) and self.checkForExistenceOfValue(snapshotList, self.vm_d12a_snapshot.id) and self.checkForExistenceOfValue(snapshotList, self.vm_d12b_snapshot.id) and self.checkForExistenceOfValue(snapshotList, self.vm_d111a_snapshot.id) and self.checkForExistenceOfValue(snapshotList, self.vm_d2_snapshot.id) and self.checkForExistenceOfValue(snapshotList, self.vm_a_snapshot.id))):
        accountAccess = True
    else:
        accountAccess = False
    self.assertEqual(accountAccess, True, 'Account access check failed!!')
