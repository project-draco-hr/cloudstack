@attr(tags=['advanced'], required_hardware='false')
def test_extendPhysicalNetworkVlan(self):
    '\n        Test to update a physical network and extend its vlan\n        '
    phy_networks = PhysicalNetwork.list(self.apiClient)
    self.assertNotEqual(len(phy_networks), 0, msg='There are no physical networks in the zone')
    phy_network = None
    for network in phy_networks:
        if hasattr(network, 'vlan'):
            phy_network = network
            break
    self.assert_((phy_network is not None), msg='No network with vlan found')
    self.network = phy_network
    self.networkid = phy_network.id
    self.existing_vlan = phy_network.vlan
    vlan1 = ((self.existing_vlan + ',') + self.vlan['partial_range'][0])
    updatePhysicalNetworkResponse = self.network.update(self.apiClient, id=self.networkid, vlan=vlan1)
    self.assert_((updatePhysicalNetworkResponse is not None), msg=("couldn't extend the physical network with vlan %s" % vlan1))
    self.assert_(isinstance(self.network, PhysicalNetwork))
    vlan2 = ((vlan1 + ',') + self.vlan['partial_range'][1])
    updatePhysicalNetworkResponse2 = self.network.update(self.apiClient, id=self.networkid, vlan=vlan2)
    self.assert_((updatePhysicalNetworkResponse2 is not None), msg=("couldn't extend the physical network with vlan %s" % vlan2))
    self.assert_(isinstance(self.network, PhysicalNetwork))
    vlanranges = updatePhysicalNetworkResponse2.vlan
    self.assert_((vlanranges is not None), 'No VLAN ranges found on the deployment')
