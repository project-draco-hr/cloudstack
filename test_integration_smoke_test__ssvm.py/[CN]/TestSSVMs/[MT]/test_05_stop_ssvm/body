def test_05_stop_ssvm(self):
    'Test stop SSVM\n        '
    list_ssvm_response = list_ssvms(self.apiclient, systemvmtype='secondarystoragevm', state='Running', zoneid=self.zone.id)
    self.assertEqual(isinstance(list_ssvm_response, list), True, 'Check list response returns a valid list')
    ssvm = list_ssvm_response[0]
    hosts = list_hosts(self.apiclient, id=ssvm.hostid)
    self.assertEqual(isinstance(hosts, list), True, 'Check list response returns a valid list')
    host = hosts[0]
    self.debug(('Stopping SSVM: %s' % ssvm.id))
    cmd = stopSystemVm.stopSystemVmCmd()
    cmd.id = ssvm.id
    self.apiclient.stopSystemVm(cmd)
    time.sleep(self.services['sleep'])
    timeout = self.services['timeout']
    while True:
        list_ssvm_response = list_ssvms(self.apiclient, id=ssvm.id)
        if isinstance(list_ssvm_response, list):
            if (list_ssvm_response[0].state == 'Running'):
                break
        elif (timeout == 0):
            raise Exception('List SSVM call failed!')
        time.sleep(self.services['sleep'])
        timeout = (timeout - 1)
    self.assertEqual(isinstance(list_ssvm_response, list), True, 'Check list response returns a valid list')
    ssvm_response = list_ssvm_response[0]
    self.debug(('SSVM state after debug: %s' % ssvm_response.state))
    self.assertEqual(ssvm_response.state, 'Running', 'Check whether SSVM is running or not')
    self.test_01_list_sec_storage_vm()
    self.test_03_ssvm_internals()
    return
