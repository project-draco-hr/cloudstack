def test_03_ssvm_internals(self):
    'Test SSVM Internals'
    list_ssvm_response = list_ssvms(self.apiclient, systemvmtype='secondarystoragevm', state='Running', zoneid=self.zone.id)
    self.assertEqual(isinstance(list_ssvm_response, list), True, 'Check list response returns a valid list')
    ssvm = list_ssvm_response[0]
    hosts = list_hosts(self.apiclient, id=ssvm.hostid)
    self.assertEqual(isinstance(hosts, list), True, 'Check list response returns a valid list')
    host = hosts[0]
    self.debug('Running SSVM check script')
    result = get_process_status(host.ipaddress, self.services['host']['publicport'], self.services['host']['username'], self.services['host']['password'], ssvm.linklocalip, '/usr/local/cloud/systemvm/ssvm-check.sh |grep -e ERROR -e WARNING -e FAIL')
    res = str(result)
    self.debug(('SSVM script output: %s' % res))
    self.assertEqual(res.count('ERROR'), 1, 'Check for Errors in tests')
    self.assertEqual(res.count('WARNING'), 1, 'Check for warnings in tests')
    result = get_process_status(host.ipaddress, self.services['host']['publicport'], self.services['host']['username'], self.services['host']['password'], ssvm.linklocalip, 'service cloud status')
    res = str(result)
    self.debug(('Cloud Process status: %s' % res))
    self.assertEqual(res.count('is running'), 1, 'Check cloud service is running or not')
    return
